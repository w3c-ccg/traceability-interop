{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2fe6678c-015b-422e-92af-74ea59f0bce5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6285259f-f08a-460f-911f-e1f32e637e16",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "90e1e8ef-adc2-48ab-8bc6-34e6b643f7fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2d726d21-11af-4e63-9b77-c71d4772e8f6"
                }
              }
            ]
          },
          {
            "id": "20e4757e-80ea-4879-bf2f-34bcf34a5d96",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fa40cf53-5bfa-44a3-b52c-7605616d1046",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "35feec59-d900-4668-a0e4-3df02e1c6bf9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fdcddcbc-79dc-4558-abd2-340a42dc1c67",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ae9847bf-f0b1-48bb-85f2-e755f71e2f3a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51debbac-cb23-4c33-8a20-921612f34371",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2bd3e1e-7fc2-4345-8b2d-9f7827bf388e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c9cca7a-4fd1-4821-a665-cca3eedf13c4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "291bd61c-0849-4808-948b-20b19caf042b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c28e79c2-e2c4-4976-b894-0174ce0beb06"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b7a9dfa1-aa0a-4198-a2a0-af99e8fc44c3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24f694b2-c359-41e4-8339-2e38045e734b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e7c9908-74e4-426c-96ce-5a1518066c06",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6b77c57a-622c-4a4c-afa3-8c385015d16a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "06561f27-fc31-48f0-a32d-fc4ce590a5ff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4423c2ac-2c0c-4ae5-84a9-a4c93bc870d1"
            }
          }
        ]
      },
      {
        "id": "985e3d6f-e4d2-4ac1-8cc3-b07794776863",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8e2ceaa8-78f5-4074-a35c-0b22a911f928",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a6e65cd0-b303-4771-8336-2afd424663ef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "50889e8f-0018-4da7-91a6-da0ea50ec660",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5b0981-a61e-46e5-918a-85d3ba03547c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5af4b179-5631-4a50-b2c7-915c23f2b853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a2af79-4f2d-4850-9023-4300631db37d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d623172-f19d-41ee-bae7-5ecb78bebd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d327f19-d550-4e43-a11a-453e35e02b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2dba393-0461-435a-be65-6f3f87b872c4",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa11635-96e9-4724-993e-5c8c2370392e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21231e23-1326-4762-94a0-b263573490ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e29d436d-f468-4309-8b18-f3808efea823",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "284b96bb-d17b-4686-a119-5756859f44fe",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3becc8df-1a05-423b-bce8-c0a2bd36561d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71a7f960-e938-46f6-bec8-b6849434be55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ed0fd2-1c06-4cb4-a02d-322776d14e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2904dc7-3b1c-4c77-81f4-31e7a304accb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46fe7d1-c91f-4aaf-bdd8-14354dc3df21",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6f6c51-d617-4a99-9bbb-3bfc79c884dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9105bd7e-7063-4ef4-baf9-bbddc91208dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b7f3eca-06ed-4d80-92af-f733e78c8b76",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "c2bc46e2-ee80-4b8b-a429-0eea1131fd0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3d56a7f2-5fdd-46bb-ab62-aa3d99ac0c04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "264b73d9-cc1c-49cd-881e-7c29dffded88",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a9543331-6888-4a40-9891-937b43cbd6d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "00db17bc-d6a4-41ce-b3b5-cc9ba11916ee"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34515a34-653c-4a82-9e3c-38b5cee2bd86",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "37568109-6e6c-4390-b385-705d5c05acf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2f1457a-9462-4164-b70c-8476784d3abd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eb3f1f40-1c28-4503-9386-b8f30ba6f64c"
            }
          }
        ]
      },
      {
        "id": "0fcdc9a7-0724-4dd0-aca4-c42ee0400fc2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "19ec75d6-f5fa-494d-b23b-06f9e6ff8216",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81263464-5c23-4085-aa65-068c801a6674",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f29dc6b4-882b-4d4d-bb2a-2dd26f7734de",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f0f615-c48a-4fa1-b878-e619b53f1805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12e68f5-e4c5-4005-bf73-7d0839500db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5119a3-9214-4052-a77f-d112a7124a79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c63322b8-140f-4c63-8172-fe8f5857be0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67bb1eb-b81f-4e79-a3ae-f6a0099d5c3f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be83ca8-61d6-46c6-b3fe-1596e73380b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a15a87cf-0ac2-4c24-988e-8fcfb761373d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3003aba9-8796-4e4a-bfc7-6823fc112493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b032b598-a77e-48e0-ac69-57befed2c904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695cad65-095b-4d4f-86df-464c1ed8e898",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a5b6486-d736-41f5-963b-d5411818b031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4bb1a3-bcd5-4d1b-82ad-c612159f5217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55303506-0702-48cc-8b68-4a915dec3f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42319676-90ab-4459-9c8d-126a0e8c419f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848932be-8a91-40df-a2fe-0c8bdeaea06d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7089f52b-44bb-4c0b-9282-542aece523a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db327ccc-7d32-4f71-8e5a-2858097f907d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d081b26-7516-4f75-8ca5-87db07aa7678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39e6fa98-b298-451d-aae2-3254d23ea634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80ad2fc-4ca7-4d5f-8d23-10f17488d3b1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b609627e-fa92-4728-b43d-35f89e223a81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c778713-7a05-4802-982a-177fbee05680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6d0437-3f77-4031-905f-bd56a2d31d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1554219f-9c02-4f58-8461-af243fcf11d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da033774-28fd-41fa-a8bf-af8ba33820d0",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34aee19b-f911-4b46-b2bc-d9ae8c9dfd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c1c47e5-9471-477d-9e74-c6a348dcb032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d82a0b-8b78-44d8-a919-04ddf5c048a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "072291c3-2479-4133-87ad-fb9ac9840595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05ee431-edf7-4c5f-ac62-0205cdfcf823",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df38f96b-3bba-4dd4-891d-caf5577a1431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af3a03e-656f-4b30-9f7a-d5c5687b2e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741f18aa-b1a6-473b-bc27-1d2e454fa5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86b54914-40c2-40d3-83c7-556e32156c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4570fc1-232b-45c6-9eba-efccc2b86a9b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2208be5b-21d0-48d0-94cb-2fed8de1b1ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0540a781-266d-466d-a767-af1c15308c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e5593a-17d0-4493-adf6-f51ad421c479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46a78f8c-16de-4d8a-be0d-4426371c42ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0584427-8313-4be7-ac26-e24d4abc48f1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc43925-5920-4ff3-9282-19bba84f62ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3292b16-18b6-42a2-8290-3931ba5d5788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3559acb4-a0b3-4fa3-aa82-a9ded40d7181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca78a0ea-03f5-4e97-8d0f-c11217e6f887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1539b33-a949-4d28-947b-46bc595cc3af",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4962a-31f7-42c0-9518-e61721328e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b49128-bd9f-4714-8a55-36747b86f765"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31968ece-6af6-4053-b718-3f4e94291b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a87d4eb-1bb8-4a41-ab9f-0fb0daca98c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e05464-54a2-44a4-8d2e-a8e0d1b125ec",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49384edc-f59c-45af-9723-65318aa65126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3e0a69-0739-4417-8e71-2cbc343cd42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699e3dbc-77f0-4ad9-8671-7e5169b0957a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "311a64bc-44fd-42e9-b19a-98153c5fa744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "377a5f6a-3595-4288-9d3c-2e35304fc9bd",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea8535c-48cd-4192-b040-9879184b9d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e939ae7d-b95c-42ce-9edf-51eafb345da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b59e3df-e6be-4155-bb90-44f9e6012303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be1c9dd-95fa-4f17-99ab-ca2150eca885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea9cf98-1cd2-4a34-9658-e7525c9f39c8",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3741e0-449a-4e8d-ac5c-33c5080a7fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e275cb6-8a08-4000-8556-277b6654959e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "186cb1f4-1aec-45b5-80be-b27471ddd830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8af2784-185d-4fbf-b143-0db6615a57f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4da1f50-ea65-4e7a-a499-464d12f595dc",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02905def-43a7-4afe-9fa6-7d13a365310f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8779a3e1-b5f0-425c-a273-40472a707aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae9e429-dfbb-4b6a-bdf6-8173634adbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b88d24-3c1b-4e32-afaa-9c083ad342e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9381147d-ec8d-419f-aeb6-e22722c68c20",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7ed646f-6163-4d32-b0f1-2042556cadee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b36deb9-00cf-498c-96a7-ee3a51d4828d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfdd198-1884-4e30-8839-bd2e2f8b8896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "136bd5c0-2db7-4c71-8b75-600bd2a647a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aca28dd-9dae-45d5-8a7d-5142d3262c56",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4d04de-d171-4c6a-a614-20347d20d064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be7b86e8-7a7e-404a-8bf0-bf49cd86ab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd59f51-0bf5-4756-be37-e720baf71599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a2d53f2-6ba8-4a11-bb7a-4763db4d07eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba85e0b8-ff1c-4aeb-96a6-b9dfb0020d22",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34d6f2d-0e08-46d4-b333-bfa4bf9d6ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b832df54-c0cf-4f36-8cb4-f6813af119ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268a80fc-3512-4b4c-932a-2efa6b918755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eb8c480-ff05-4e88-bfac-6275faa48ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a44f63-3822-44df-8244-b14412eac4e9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbca46c9-6fcf-4637-b8e7-8754d8d56d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca958889-44ca-4f66-8f1f-76148c3cf8f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "671ede98-c3b5-4933-b55a-81b3fc7be5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "42880684-6ecf-486c-a46b-5b30d3bc40bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5190d7c-2875-41bd-a587-c50b8afa8d4a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0128f6-005c-4dc6-b57f-558eb41c5c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30a3935f-4bf7-4bc9-a2bc-791643bcef30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8532ebe0-a0fc-44b7-8dae-1612de872cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47344663-98ac-465e-b1c3-1017025d5b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d56ac9-bf23-49dc-a6f9-6fda948a528d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304d2180-83f7-4287-bf7c-6456c39b36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5709bd-dcba-455e-8027-dc956ce4af07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05fe904-86e5-4185-bbcf-05ab7d773ef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac6f6b85-3096-49e5-a3a4-d4a28a91c77d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f361e41d-dd2f-4ed5-9b1c-5bde930e0fb9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5da64aeb-5489-4adf-82c1-3a5359e268b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ca8b68-931b-406b-8f96-b522e1748be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7684138-3b54-460d-a210-8173a839987e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94aecfad-438a-47d4-ac02-e85b531f9726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edbc40d-fc72-4ef0-8567-20a273ced50b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e2aee5e-d523-4207-8e4a-3d1decfb1dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63cb9d0d-df93-41b6-a732-77936df7b309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de452260-ac9f-4337-a566-98ce119d17ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4867a22e-1d71-4ed4-9950-501552e61169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e7b173-ae42-4d5a-b4c7-ada6f6d63f3a",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17958dc9-724d-4681-b1ff-dacc9d85ff81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853e02db-e89c-4231-b48b-2d42e2d76b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c51899-f8f7-4c3b-ba38-70fd6d4ba98a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c80e3f-79ac-45fb-8f73-d99ca5a544a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1b63d3-16ca-458a-a5a0-61dadb097479",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a033192-6281-450a-864e-4711864ad136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c41a5139-8ff6-4a11-a3c3-d443b25855c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0943a0f0-8325-4afe-a8f4-473187fe8290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "754cd07c-04bb-4862-939e-41ebf30da3ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1708ef20-6dfd-401e-b4db-a5191ec1c07e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "336de6e2-cc04-4126-9b7e-41a86451a604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11efe44d-b181-4b19-8c27-192b93581838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf4be9d-69d7-4534-87a6-6faa956449cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0a3f346-51b0-4dbe-b76f-f2d8f191361c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cbcbdcf-8c76-433c-9e30-07aacc246185",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07ae1c84-6b86-4369-a0ec-e87c4ccd34de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b65eeaa-decd-43b5-b0cd-e97c07a7ac1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711bf957-22ed-4c02-bc18-f6b126dc2756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "003946a3-08c6-4f6c-a60b-86c1d7c3a932"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f486642b-2b5e-4d38-8fdf-cf2a779fdb15",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b081d01d-4770-42de-b7be-fce81c66737c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c517c4-98a4-45ca-b301-e8fe6663463d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f18105-78c5-4671-94ff-3d203d1d58ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae3777a-31e5-4ff6-b7ec-13034b6a2503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0660b48-d983-4603-8fda-8687fc9ed2f4",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ceec9b-a682-4644-8c9d-55f24a219a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12901597-c004-4066-9844-d51305f9bfac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "443a4e13-96a2-41ee-bcd3-05888825271d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3746ad2-440a-4911-98c5-82b060cde840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bac4a4d-8417-420e-899e-d8c6cf5772d5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a409dc81-0920-47b9-9a59-31f274401ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb1093c-3246-44f6-ab0e-c2636cfcb9c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d78c6c-b43e-4e70-9579-763656248901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8496aa0-21d3-4a05-b045-1a9b88595645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7e47fe9-dd1f-4954-ab05-e67ec9ababe6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02cc2b-9c4b-4c64-b9b6-acc72e4d49ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305e3f25-4387-46ae-b19f-b5042e662fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca795afa-aa31-474a-b711-683eaaee40ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d674fda-e07d-40bd-b3b2-04d2af0e0aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c81e0f8-caaf-4eec-bdf0-9046f9d00d1d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac0eadb-a821-4be9-a67f-81ab78b2384d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48ded8ba-8d96-44dd-8846-352b29bb2c03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae3c18e-efb0-494a-9ae7-2f19f6607d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a06093e-862a-432f-b949-31bc862f7aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de708a56-8cde-4367-af0c-79d9619a55ba",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a64ff10c-924e-4fde-ab45-8abd78ea9da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed604e02-3ca2-42f9-8fac-81d7ab78d9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de9e2e3-68f7-4a0d-b087-ee7277e1f468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "18773842-2003-48ef-a53c-5bca9288bbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7fa297-81f5-4543-bdf7-e2e731a30600",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bf20ec-ef65-481c-91f7-ac73b6bae4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e26547-4632-4b92-a81b-31ce12c90aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbda1426-ffc5-41fc-935d-8e46e889fd2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "945cec19-4964-4c10-8997-9c205660adcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fab8d7-b30c-42c7-832f-c00c888e2c3c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ab952a-8dd7-4a49-877d-d464d9694fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b529a59e-e344-4c01-ac02-e47a8d643798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffad81a-a057-469c-9027-6357e59c13b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "232cd42c-f8be-4d2e-8e25-bc40b3115e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eed81f9-d64a-4406-bc0c-d697d20723e4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0a89b9-a720-4bdd-a6d4-2e02774982ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f4ad5c-f4d6-4cf3-bb29-99a3b4ba0d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cbbce87-2228-44e0-9bc7-f96d40608603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9d8041b6-9535-4c69-a6c3-86394dc9ff36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a82bb6da-b2d3-49ac-b280-610b28c7cfcb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6aff536-2809-496a-9e9e-9e1076614617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32588a36-dd89-47ba-b8cd-ed4f3535f994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e888d-09aa-49d9-89c3-6f33a40006f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7fda768c-bd76-4514-93c4-ac39e749776c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7abb0e-4152-46d8-ba7d-98f295137794",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817f9d21-6f0f-42aa-8cb6-944707bae25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d30db703-fb30-4fb8-8f63-991d3a9f4eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd5093cf-25d2-4e83-b79a-3cc86b875887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f757dd2c-9266-48da-9833-c6300c42fe01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d52f4b-1a8e-4812-ba7e-6a3d0c5daa99",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc69710-8dfc-4fb2-a6a0-b2987098ea1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c4bcb3-e0ef-409e-af7a-2175e0bcfc69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbf86d4-180b-47b2-a976-9dd0ee088f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "16b688d5-ad63-4ede-8c4f-aad907b759eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b5c473-bff9-4516-9b65-c02d6d8b0432",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08ae3ee-5637-4ff7-ad8f-e526be462af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e41cd20-07de-4ce0-adec-579108b56c35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f61080d-b845-46e7-8d46-ef7b81f55dba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8228d7-3917-4354-a3b4-04bb34c483d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "000d861f-c0ff-4155-b4a1-cd7bcbe9b24c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a89f841-df4d-4d96-8bd7-926121b21da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d128cfb-d17b-447a-8dd1-4518451ce5a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "336c251b-7ff7-416d-92a1-b767b4b07cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcb09e5-a754-477f-82c4-b0318658bad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc535de-9d28-4162-a267-7b1098e01edc",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958a76d5-4d7b-4698-a234-696a410c2bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842ff49d-3537-46e9-90f2-bd7458dc5869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc237de-7b4b-4e92-ab6e-e195062d9195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "aef24d43-41d2-4af3-abef-2d887ca86567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5031b59e-20a9-449b-aab6-81e54b825e2b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2098b9-3756-4b6b-a8ed-0bc62f748392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95912634-ff42-4468-a1c6-ec1080c175cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379c9813-f40a-492b-91ff-01975bced49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0f2db9dd-6b2d-4b90-a940-c7b39984b8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9afffa88-e115-4753-849d-4e844a15f7eb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8d8330-86f8-4cf8-a300-e335adc1a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ea2415-efa7-43f9-8758-7b991b058abe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "045791d3-8691-4323-a41d-95f1b3069056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bc3247c-8d79-4b48-a70e-99bbb35ea757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6994f9c-dae7-4d83-b8ed-c9336c1bf5f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f30ae2-d327-4880-afee-671f3ad46d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa24a3bd-31f6-445f-a311-292879131c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a787c6b-93ad-4ab5-bb3f-9923f2881bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "65935bdf-c0a8-4405-b85b-c442c7850d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26626cd-c296-4b75-9106-a07a2ac57863",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817c55d6-c081-40ca-87ed-ccf075f0bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d47c6d0-036f-4186-96be-d182c66f9721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6e84bc-d959-463a-b1c2-1e46160fcd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "01042f14-707f-4d9b-b299-1fd302f902f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca2606cc-485a-40b1-bb0e-e30ff6856db7",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f16439-1c5a-4334-856b-d51d7977ff33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376f557c-371c-4436-aaa3-187c04597b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2cdda17-41fc-40fc-b8f7-e50aacbd0d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3effbf2-5ba8-4833-8009-ac717908b1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b572d0bb-8ccc-4cb8-99cd-9739d237ea4c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8732a0eb-6808-4c78-864f-e08f2b0382fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f027967-da8c-4c27-a14a-9eb506e53c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c5c3d76-2cd4-4cbf-973f-74e6a387d168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49a5533b-21b8-4f7c-b1e6-98aae1450cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd74cc2e-1546-4458-88c1-7fbbbecd2c4f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b6abc77-1e4d-420b-be65-29cb6528712b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0ac7ee-7000-4483-a75c-0e31fbfff234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809f73e8-f55d-4a15-956a-0e811abdd9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1bf3e6-d1ad-4a9c-8006-827cf61434db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acf77a8-7d41-426f-97be-2a029a1c186a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "372fb0d5-4d3d-4735-84a3-91b9a06bf31a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2247136-861b-4dbd-8fd9-c0ed265bd9a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43cd3cad-9f68-4c59-bb79-89cd68863614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5774589-25bd-4d26-bb3f-0558b6a3dcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9155d17e-140a-48a8-ae13-6246a32a02da",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5406ec0e-0606-4b17-951f-e4fb9299da63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428f757-67a6-4ed9-a20c-e88469b5ed42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1e1563-4a8e-4891-8535-c2fe1ffbc0f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9077ccf-3490-4741-bf2a-b5f1382ca631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed66276b-6e4a-4346-bdeb-a58d78061fa6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9752a21b-150b-44c6-a485-8e3a50b54480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f7f19a-d7dd-429b-aea4-d072075736de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b278d91c-e9b8-4448-8a4f-a5c0ef84f2ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ac587-c5d2-496c-b5ea-84f90c61949b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4acb1c9a-ae15-485a-a91a-93cce13a7749",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76505654-d98f-4018-9ec5-4f2dbeb61078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e51c1fcc-d09d-436f-ad19-15e6e6a2c8d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c907221-966d-4872-940f-91a7fb39eda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8482716-312d-4f14-ad53-25ce6e62ccfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fccf7d-f3df-4654-ab01-942e94faf867",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a514afe6-ece3-4eef-8ff6-3dbb0b61f41f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b71cd389-5975-4839-a99c-440dbc1d3e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94168655-d026-4313-b0ce-2e021580976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92fc2763-7a7c-472b-a0ea-0a708842d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3c8b64-1d4b-4f5c-a7b6-1df84a0b1d33",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522da513-0332-43e6-b7d9-a4bf9d42581d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f50f92-86e5-4c22-8f40-1abdb5861f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cc3c9a-7868-4708-9146-8488df3466c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "853c4794-6435-453b-94c2-e55d5956b58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f44234-1d59-401e-8914-1aa0698e3ddc",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d2fc32-9ea4-4286-85f4-78879679c80c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfef6cf9-097f-45ed-9ec2-5cd4a3134ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f947d754-3ad8-4191-8a09-e89fbfc1db1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "772fb3e9-ef42-4201-878a-83bd51e71a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e872cc22-2031-4a4b-a481-243a3f8d0d14",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a508c-e892-4cd8-8927-ea933935e6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adc4601e-504b-406a-80c3-c48e11876609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c524bc-3c8a-4b3c-9fe9-e38aead2da72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "43724c03-a821-4606-98d5-da833c919649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070e308a-272b-4c38-bec6-af6d1f4dfcf5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9dbcf-ca2d-4f57-bc1d-45b525b3e9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8dfe40-122d-4702-aa32-4c0633d1afc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d77aae-009e-4f1a-b0cd-efbd75b35c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4afd30f6-64ef-494c-8842-3835012236f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4107a329-221e-4465-a2ff-e15f7598b8ba",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f3c819-7427-47ea-b6b0-4f5bc874bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bf70ddd-844d-4e5a-932e-d7fb53649cdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247cc0e4-ae73-415a-a0bd-9af249d0d8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8c65243-0893-4255-9dc7-32efbf0a6cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd7197c-8377-4c45-887b-b703798ad7d1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1097ff-40e4-448c-bb33-ae18a64b9240",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95edd972-7988-4ce3-a25a-f87ff4e0c955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40ae010-f893-4c10-abb8-ef925fad661a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3234959f-7f62-4fcf-a5bf-9a9876e40cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b52f75ac-f24d-4200-aeb9-b0ffdb640afe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c8a140-e1e5-4ab6-b57d-93c38b369270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb58885-b2ba-44e8-9b49-b55c2bd9394d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b1654c-62a7-4697-b0fd-81a1d0179281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "287004b6-1668-4208-a04f-1490f8c9bea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ccbffc6-e12a-4e02-8e98-d31bcb208ce3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf0dd88-4be2-4dd5-98d0-63a66ca79c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d877330e-21cb-4c35-b875-fd009ce485d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96071ff2-6038-45ee-ac7d-03701c775bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "008a232d-e59b-4fe7-b80a-3267d7d181ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72d87bc-2343-41e2-afa3-3ef3088efe70",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce233a7b-e2e8-4c7e-a16c-bfc7f25c7718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50fb2965-217f-4f8d-b5ca-0e1f74cbb602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597c6a1f-453e-49ee-b757-61fa0a0d6159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a78915d-63e4-4d37-96be-3bab20105cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439a916a-31bf-4185-92ed-1a5fe78c6be9",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a716695f-0964-4ced-a76b-291036d32ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74223deb-300a-4857-888b-7886dae89161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8989bbe-296c-4930-ae44-44d807fec18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58497971-06cf-43a1-8216-95c90c4ea499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffc64a2-0322-459a-95d0-fe2f1b7ef382",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f05eba-5171-4d4e-8424-db3986093ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb54dd43-b168-423e-be2f-197dd3093b63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d7dedc-9d7b-445b-86a5-f686c8afbd6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97a06618-1c3e-4815-83bb-24f93df1501d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0ebefe-a65a-4c92-9ff9-302c33015608",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e963c0-8116-49a6-a2b9-29505e81c0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35126206-6550-46f4-ba52-b870dc967fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a005624-3a0e-4c7b-b6c8-212767196065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39e51f7f-2995-4e42-af42-57af80f3abad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a9b3b-e2a3-43e1-9d3c-5cc59c6b031f",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa10a3f4-f2d1-4fde-aa1d-e1ce9c4fe62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5b732fb-29de-466b-ad2a-7e678e8c16fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7df974-b943-4b72-bacc-753196158453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "69d0db8a-9290-4776-8f0d-b94f04b97b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8c15cd-e915-45ea-88a6-e79727ddf841",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbba688b-2419-4414-b5be-16ec55c1faf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed9f885-c73a-4de0-8e00-d2526dc427f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31104ea2-8d10-4c22-9856-1aa5efe4ea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bf8539-6fc2-478d-b881-d96a07148e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84504c9e-0c26-4721-b565-2005d9923349",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1240b817-0171-452b-af75-79470bf1ef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7851cf6b-559d-4be8-af7c-b6e58b39ac03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "285723ce-003e-4435-b6a3-73a413d34b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d867bf4f-b8e7-492d-b143-ea9b638160c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f1d41a-2f32-43b6-b076-03771a6b7530",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66486e3d-f9ae-4f41-8194-de97c4e55ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf7692b5-b8df-4523-8e6c-ff03c7e745b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53cd0ed-6d6d-4883-bb9c-70e6179abb2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb353f90-9266-4f68-997a-2f968a759e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfb4f65-4b7d-49de-bf25-fc172c5b2bf7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c9bc383-21ed-4e76-854f-b5faded707d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc8d9457-3f7b-4f79-997f-a54049376a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ba161c-2427-4c54-8fd4-398b49748a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0539c5b9-4a8b-409f-83dc-6d59747201db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c349b5ff-8845-4624-b6ba-f3b6b1a5a496",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7116d068-b3fe-4915-a680-35ddab8600ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775897d9-1f23-4435-a3b5-63cd68a911d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99538552-8ef5-46d7-94cc-733764db6912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1b6948-d7bb-44c7-8f22-304facb87dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824b923d-1593-4add-8cb3-87e08a19e284",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925cecde-eedb-4775-9e83-79d1585b8fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c668391-d344-4989-9a24-ec8d429e642f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c5ec23-f38c-4129-a742-796ea012509e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e45e09b-3848-4931-80ef-6b76f1438a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23eacdaf-cb0c-406d-8a50-38d17e6e053b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f661602a-70fd-4f43-8cb6-3da8cb11db1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19a49a87-523b-4424-8c64-5589565430a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098dfeaf-1df5-4495-9f4a-8e256843e8d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02409f96-dd9c-4b88-95e2-bc64ea28e333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4445f262-478f-4b0a-8624-13c3c6a559a2",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f5cbaa-63e6-433f-b941-9f466ae03f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79925f66-5d3a-43e8-8ab2-22606fa77ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572302d4-ce03-47f6-ba90-f9f3fd886ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "664ac74b-17ed-4364-ad74-3a4951b7c33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59abf98-32ce-438f-a09a-392dfcd159cb",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0beb79-c472-4d71-a153-4c1baf6658e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbc3fa5a-a9b6-461e-8e33-659c7dc49cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "226656cc-f065-47a7-a80e-443bee3ab4ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d1bfe12-cd2e-4aed-a535-7d3ef1dd2c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd87148-9b6e-48fc-addc-72fe01a5e581",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3cf10e-f3e3-4142-9ada-8d8ef46861ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ea2547e-15c2-4cc5-9d9c-094a0f793c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f98932b7-8227-4c82-8799-9a4f5de05855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7286b80d-dfcc-4e3b-973b-27c1e555da5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5f325a3-df1a-473c-9b34-64c72364a049",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c75c7f0-7269-4578-bea2-9f758f37f60a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b056edea-0f0e-463f-9548-193596b38ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "049c9206-46c7-4ac3-a1ae-67088b6db9f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48e4c911-00b5-4819-b5c4-faf5b92047b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f9798f-049b-413a-9d99-f13f8f2dbfc1",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbbcb5d-37e1-40bd-aa57-d8af59258e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5bf5a8-211b-4434-ad19-34bab4e4d19f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b0740c9-bf46-43e4-9c12-7da635849397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd21abc0-93d2-4845-8669-2c12632b563f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd1ee65-d98b-4d91-aa3c-426a2d007fea",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d14bb01-a1f3-48a2-98ce-04c6e85db350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4f9fda-4d82-4601-8b42-1efb4c12a432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e559c98-1148-4f00-8150-4e8a91451d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41caa283-f87d-48de-b029-dbcbd4b4a625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952fcbf0-ee9c-4782-a2f1-c60d8be6c74a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bee0d5-90fd-4bf6-8153-0fda73cbcaf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b41e5ca-8a53-4446-ba8a-bc42ed3ef47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a61d39-aabd-4594-8a8a-2aa34305e16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bdedca0-9db8-48fc-9d82-b29bf56f8ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87916de2-932a-49c2-a497-4870d4ca9194",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4041cde5-7e8c-4539-9293-5984fc8a81db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b25125-5492-4dbb-89ba-e6dc8e97b1ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c00dc3-64d0-4bbf-aa8f-17658eaebf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9525b2e-22db-47d2-a61c-3b0891f9418b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0413c0d7-3cc1-4178-879c-faecc20da875",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0008b04b-a5c4-4a77-b0ff-bb2b478deee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5fc55fe-3b77-4673-a898-f277d81b9c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717d2222-1053-40d3-987d-e2976520628a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "76abaa57-4a5a-4681-ad52-cd76ba6eff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adaf35ed-565a-417f-9a72-0ca2fac8abd1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4cd77ab-ae8f-4aac-81dd-3933b97c983f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42d7d962-46ef-4f3a-9527-005c6a7a8911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bca394-cc77-4aa5-9174-6e4bf54d8356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4780bc9c-49d3-49b7-8a93-6cd68d34b2fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a00baf-2b1c-4db4-b312-11559fd5c6d7",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f9bf7e-8041-473a-aa66-2758debcc190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "370c38e0-8240-479a-9eda-1f0e8e5a3deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3ca3701-7d18-4fdf-b047-a5af320d91ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2820202b-2be7-4cb3-ba90-14c11071b39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77dc673-3c9b-4a63-8304-136ed1f17888",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5675b3b-a0a3-4ac0-b92d-87fb5dacbd51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a1ce251-21ac-474b-9142-b76e7bbcef49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39afb098-1479-47dd-820f-5749876f7581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e33468ef-6542-40a3-86fe-2c8a552012ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690b7f5e-c8fa-4711-b611-27b759e01562",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38edefac-18bb-45fe-8bff-43abd2d0c684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e554e4a-0014-4d56-adc2-db5a66706d7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9da44807-7d61-47ae-81c5-be8cb2d5005a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "de1afe44-37ff-493b-a6d5-adbab4505c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17151540-777b-4eb3-aa0f-26f93b945e5b",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116cac20-9e44-4246-8119-35561d68e131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4abee6a-a867-43e2-b873-88f24c76d211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b13a53-8fea-4d7b-9f0d-07be1ac693d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e773922-0f91-4024-95bf-7c72a8593436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c9f8eb3-c444-4efd-8c22-053942a75295",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9f7628-7825-48c1-956f-556afb9bf4a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed29e88-d09a-4d8f-b6c4-01b5715d93e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a9cf6f-5aa1-41e5-b415-2cf965284475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f349fe-5435-43cf-8519-ac8a82a14c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7e2b97-106d-4b20-91c0-f8b7d6018a5a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba572fd2-6947-4386-b409-6d7e6b59a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48bfaf18-a822-4524-8719-0a020b8ac916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5107f12-049f-4348-88c1-cbb3bf0d65d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1822b9dc-9a1f-42a1-b291-d331800b17c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef051ab-a6ea-4fba-b936-c525ab0c875b",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f1ac8a-08aa-44c3-b9ad-23d4c0010dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eb009ab-7bed-4cfa-aa12-a7565d0d180b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0464f-fb6e-4804-a8d6-8ab8ba83d916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6de4c478-598c-4751-bd6e-204c4c84c4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19af08b-fddf-4e8b-9caf-a7829128e796",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9abbce-f6da-487e-97cd-8a688124da88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad62a3f-b3ac-4071-9c69-199aeaaa3f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add3f211-0681-4f60-acf5-0113df3a66be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "73320de5-a813-44b1-9966-7d2566a186a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5b54b5-8cc1-4768-8e78-0e7832142cb5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78cd668a-9ddb-41cb-9635-a85d53efe768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5803fb9d-6068-4d83-9b04-98fd871856e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0771f04-2103-4c23-a7b6-9fd933a24bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "272663c2-d99f-436d-b633-4ed761356613"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "baf3b49d-9590-4b7c-8e65-5664e8137e1f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5337ad5c-b2fe-4771-abaf-360043762bbc",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11b8c97b-36e3-49e7-8d6e-993f0ebf41ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0cb4a72-0652-4840-83a2-8150af618f67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa4273d-a0b1-459c-aa28-9c71aca87ad3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6766b40-5fff-4bd9-9dab-66fae0346ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c42a58c-d6cd-4c2a-a2d0-fa5418414b22",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85175d8b-2753-4d0a-8e00-d4255b2ed632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ad69a12-0738-4d56-8df2-3b45e73b3fb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aae78d-7c41-46d6-b632-0822f2e61b67",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad6de5e2-aaae-4747-8a7a-63bfa19c53aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f244fe2-2c62-4a3b-b3cd-4d35f3f004aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "748e4c5e-986a-4bd2-9a6c-c3d35bae10c6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a1e9708b-8428-4897-9041-3e8783d18dde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1fefa84-a4e7-4606-8c0c-61d6d6fa5871"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ed60d80b-c562-41e1-b0c8-53b08528a47e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b483f7c-43e2-4cf3-b920-6b5e1a46f0a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "02f7cfa4-e21d-4612-9db7-635af800e476",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f4664d2c-580d-4a71-9008-fec94a5341c7"
                }
              }
            ]
          },
          {
            "id": "a7ef9d5a-e11b-4545-99df-ae46dfa38c39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f41baee-f58a-41ca-968c-bc4cf788c97d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07d827e9-a9ba-4783-96a7-c03e303d0914",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "293a2bce-0331-4e99-b306-6316786c801f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2028fcf5-236a-469a-a6cc-fd547f32c0a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7f3eae0-168e-4ba1-ab56-1873f3e254c2"
                    }
                  }
                ]
              },
              {
                "id": "89a90cdc-91c7-4d56-80de-d1463e8b9696",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d79047c7-3229-4bb1-a665-80ef8f6b26ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6b0e18-5817-42f2-b493-aa798d92f852"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d9f0646-3ae1-4e77-95d1-0007656a1929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c846a04a-6114-49af-bd5c-5ea99b4b52dc"
                    }
                  }
                ]
              },
              {
                "id": "9498c372-6664-47e8-b7ef-b578ca7be327",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "beaf98f4-6e5a-4a36-b974-27598aa3a916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14e1b4bd-ee80-42d4-b1d7-185316bf453e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "58dc6c1b-eaa8-4019-b51c-6096f7b7be8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f69adf83-e4a1-49c7-938b-b8ab44203b77"
                    }
                  }
                ]
              },
              {
                "id": "afcde318-8120-43d0-84b1-c0facf32fee7",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29129c04-d46e-4cf4-86f5-f8787e435232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "05076428-82b2-4a12-9b63-be10aa45f551"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "171ee8e0-348e-4fc4-b2a9-e5f60a088b34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b8272bde-0e69-4ddd-8abc-98f52e250e26"
                    }
                  }
                ]
              },
              {
                "id": "d376ddf2-9167-468d-a3d3-c6908954eabc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "584d191a-bf16-4e67-b0ed-e13579695d18",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0da8dc8-c4ac-4144-b0d1-5c9c04bb6ebf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2b103cb-a23c-46c6-bca8-3b93ae2f4d2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "70433429-ea19-471d-b110-8033607930fd"
                    }
                  }
                ]
              },
              {
                "id": "26a5a094-a13d-4555-a9f0-97cb9d5a9aaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f2a6aecd-fbd3-4a31-ac4a-95fa43d23f5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd4523fc-3f5e-4eb2-bee1-4f7d8627671a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b4d6b1f-8038-4d51-9c5b-b455bbe3f7ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a07e8be8-fb7f-4204-99a7-7b149aabb547"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ca82489-2bf3-4146-8459-452d9579a086",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73dc2c7b-4979-4d06-9504-f15d4dd2a0c7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "41c5ae4d-c590-4e5a-b976-4c9e78787323",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78f90ee3-0c30-43bc-9da5-061475edcb3b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5baa177e-6695-4ab5-8460-e6c0da3ed7ba",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "76f67ac1-ea60-476d-82a6-5f374786142b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b5b0290-329f-426a-922a-3985fb0b2b18",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "916587d1-53a4-436a-aed4-c1a22b8fad46"
            }
          }
        ]
      },
      {
        "id": "1889bb04-53bf-436d-aff6-2f8d585168f8",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "fc1297aa-413e-4902-82ac-a167a936fc18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4e3c8be6-4771-40f6-88d7-c52e464033f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b56d27c-e967-4db7-b5b0-9ca6f5836722",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4901c3a9-a8b6-424c-b809-c5e508649512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9225f8e-851f-490a-8400-5edc97d46911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9696b06-3856-4d19-9d13-9fcdfb32f044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d60194fb-cf48-40fa-b407-2b2b892dd26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05377d47-9dea-408c-a42f-87edd54b7ec8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cc1924-2245-42e2-88d1-4eecef71520a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7b67075-f938-4f6e-a34b-8a6ae231cc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c440de-74f0-4211-98ea-2df91cb3aed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4c75a3-14ee-4ef6-8816-55ee9c9450bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151839c3-8424-4db3-a8f2-16a1ed573b32",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c84c92-af85-464c-980d-1db14bcf34a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07769266-5b5c-4118-ab60-ba61bfd0dbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e673da-c68a-437c-8ba8-46c5023b1c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb11a2a5-509d-47e9-8abd-9432a180a102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ba5179-bff9-428b-a1df-7a41495bbb8c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade9aebf-1d81-4a16-b008-2f55881df905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b375e4-4966-40e8-a989-0b3feb0410fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d1d183-fff7-4e3f-90ef-8a3bd0201280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "577fb4fe-85ff-4e87-a74e-034aa73ac2c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4a5119b-dd03-4967-a131-12b2b4581e6b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06b574b-9893-4ed9-bc03-9754bbce79ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "879fac6d-5352-41bc-b210-2a6717e28200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d3680c-f817-435c-ab03-8998153d59f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd046f9d-ee8c-4504-a181-3b9e944ac312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e801c2d-afb3-405c-8b48-908bf0d1087c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f28131-07d6-4ff5-941a-79acbda557e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d17e718-8e11-4195-b0a7-276cb991d073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715ca3fb-45fd-4eb8-b548-7c96b5fe5b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bdcd658-9233-4f8f-b770-11f0bb06460d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e7a0fd-5982-47b6-92fe-720d88f5942e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7a9274-794b-41c2-ac03-4fa8cc683c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56584b6-2aa0-498c-bf42-b7096161162b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d001ed2-7909-4357-ac7b-c36aea849ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e18a0c97-08ea-4243-8520-2cf47c7b15c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf28f03-bd21-4411-9123-e8d01ba4eba7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a35cfd-2988-4453-9e72-d0481e1590c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aba3a76-08ab-4425-b745-6529e0919f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2049833f-cf5b-4461-8bbb-1eb420d284e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6b1686-ea2b-4ed2-84e8-ddafa3c435d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fec52bd6-5d60-4363-b465-97ea5668c2a6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b172b4a7-a661-4c83-9052-71c36cc6247b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a1e7f8c-e087-4e47-8d8a-b28112962f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c00a015b-47de-437b-a4e5-686abb8add16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf7dc70-3b77-4d83-a9b4-a3d82838571c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e77a93-7d97-48e4-8999-192c5ea1cd75",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef987c5-713d-4672-b08e-08b431451853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39c40ba-94a3-49cf-8901-4b8cd28aebef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51d1425-4026-430e-a6ae-4856607fb1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe58831-b538-4077-b33b-350c6eaed993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08931aae-90bb-40f9-92c9-733f5ae4b2c4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c13c2b2d-a4ce-4619-ad42-73f8ceaa3dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f00487c-25d3-44dd-8abd-31e60cdea9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9130911-4ea8-4fd6-a027-ca16b86bd6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "93e5fd59-4ffc-4bd5-a48a-90b0c9b0160c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d735f9-5883-48a0-aa93-9eb5bbcdfbde",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aba84a-8d68-495b-90a2-eabd12d48166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f72acfed-68a6-4648-951e-6fb59b356f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b999fe01-a838-4b05-bec0-92263a116d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75d5c7a7-b456-4743-89ef-71b82274a99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a17fec-4569-4f22-9540-aa1ae520868c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d095b9d-6b27-4e81-beca-dcaca199f8f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda4530f-aa8f-4344-b2c9-808efb1dcbb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3153c6-f246-4d5a-a67e-358423dbadf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "251b651e-d022-4b0d-b304-8e23d49a8841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba6188e9-ea54-4b90-aba2-1a125b76933d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cfe4bd-788d-4bc3-9d77-8b7f5899d364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db4fc923-e103-4530-b862-d87a19c3547d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5274a1-df31-499d-9927-83fa5484b60b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "709e1003-ca9f-4426-9c60-77b3f08e8308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b28757-dc36-4859-b39c-d44593064425",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c38283-34b1-4b90-a219-72b5c0cb96f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5897b0-5621-4949-abf1-be658ad54471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8131116c-fcb0-4ee7-91a4-1e48cd772da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c83850-4ea7-4145-84f8-0ee7d1b582c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93ed494-5802-4804-a944-cbd89d5d9c94",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ebabad-acd4-4240-8073-861bcf4ec059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33bed5be-0d3b-43e6-a949-c8060c9cbe39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e469afb8-7b75-483d-91b8-946b9605d80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0e0039-d410-4e4a-989a-674a749e2f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1090b689-398a-48e8-a14b-4a02bc9d114d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9016b4cf-3504-43a2-8f61-acce87f8afed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cec3507-0696-433b-8dd4-a28057305903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae0f5fa-3d92-4956-b9d3-68463d2b5ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "573dc2c2-3ac9-404f-9f20-f3fd151ca906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "182d43f6-79a2-4f55-aa1e-1877922ce2a4",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88fd28d3-682d-444d-b6cd-b22ef4f6f4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0045ad02-7343-467b-9faa-aae201fa0d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7886036a-9eb7-4b84-94fc-5292835d87eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9944c5c3-361b-4577-84a8-0f956980f4d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0e3b9b-9710-4486-a4aa-f8cefc707c8c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6ae1c1-a587-4c01-bf86-d29b5814743d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcd218ab-2e55-4991-9bbd-9f92f7d6eddd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7be1ed-d4af-46da-88ef-6c636dc93cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9d3a5a-ccec-4df9-acad-b1dad185c124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32a2289b-af43-46ab-a0df-17fdd35b312a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406f162a-92f1-4057-ac36-71d63be5acef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0339bd6c-c2f7-4248-a676-35e321b968d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7238e311-e3cd-4dba-aad4-95d107b05ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61035c50-74a0-48b1-8176-30569aa00f62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526f41e6-2bf6-47b9-852b-a446c65432fb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "415eaff8-6a3d-4967-833a-623711221648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412f9e5c-2578-4ec0-9c11-9613e209c600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c617431b-05ae-466f-83d1-ea41b3d627a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98c41c7e-b700-412e-b336-d62519c73714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "010d7c22-673f-435f-a9d0-dd666f492286",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0562325f-9418-41a0-9463-d31c371546d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6efc3522-c39f-42da-bda5-2e82f2c93ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540a4d9c-7b91-444c-b951-93331e766d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c451ff1-d42e-4c48-8823-02f34a89d1b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18384da0-9e09-4248-860f-60bd64ac1cfe",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a131af5-f12c-457c-b0a1-7225b93375ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2648d202-3835-4896-9341-aa0e615ce872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f18b3d-f1d6-43f6-bf3c-fd077b7ccf45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ed5bda-b65f-4189-a933-ae1676057acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4ef1ca-e1ae-4251-ba6f-a046422f9673",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3def7c6-d640-47ed-8c82-b6a57a48e53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5353ce52-2076-49b8-b41a-27e8525dee16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941cbc72-f2ff-49b8-b459-7257f8f6d2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0028f4b8-c602-4900-9f06-ec2460f629d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed5ab02-15cf-4a16-a534-d7bf64cac69f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f93375-3b6f-487b-879d-9ae6ae4c9608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa49d1b-4287-4b63-96ca-d976f0ec1418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21afbcd-ae10-4876-81d5-741a150e1414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b933f3aa-4d1e-4375-99d8-57fe5bfeaebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e2080e-5eaf-401f-9066-d482094e4cda",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef9df32-2a67-4f9b-a7a4-42d44ea1612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b8e5b21-cf15-4bb1-a287-fc3aeb5654d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c33223-6acb-4a15-b674-8afabf4b8b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9f6f6a8-3b61-4608-9128-b47b1416dc1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21391157-5c95-48f3-bc87-333b2c95180f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7769dca1-d3f5-413b-a985-3fc328db463d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d19ea85-48a0-4d5a-930f-3078b9f775db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0257cae1-198a-4d52-a7f7-9598ba6da305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "257ad15d-b6b1-4c1d-8e6a-7b12d074b54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696a621f-64aa-4763-bca8-369e41c15f72",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb00164-4c4b-47c9-a8f6-99092a0fd747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6185099-c9ad-487f-9ac1-9f12adf51191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4aa95b0-9f76-40c5-87d6-57faf61a6a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d013f59f-e0fb-4318-90e0-29adb879682e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c756d9eb-22b2-4f39-b95e-4e3472d1ab14",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c7c61a8-e321-42d2-ba08-dd753de0a956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f307ec-159d-45a6-b52f-f17bf542070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3269c154-2f21-477c-97a3-6532853d8e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b4b80a9-c514-4873-8a8f-c6a7b9ea15f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c8a84d-7f4e-4deb-95de-13e80c53e234",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb83543-d672-48dd-aa84-d8d97957f4e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ffb2d62-1790-4093-998a-9ca4512ab843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec82f38-cd93-424d-bc3f-17b14b5e7402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d24826d-22fa-4f98-a6c6-204372cacea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c488360e-f8b4-4d5d-be10-118a5f3f24cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "075ef60d-acfd-4c63-bf22-a72615e5d0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9da0500-7b67-4362-ae86-9f4d8e495b43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "726fa878-92f9-40dc-b03f-eb060f4b0026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4a22e3e-52e2-47f5-9f4a-d11732d7bda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac8c71f4-32cd-4494-86c4-2de4033309f1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ff6db7-e6bb-45fb-ae5c-1662a72b0b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8f9c3d-53ca-4d5b-b794-05f26cd92323"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5fc278-e59d-4b71-98c7-b117f16f7af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06f62078-95e3-4cef-9995-419f1bd7d752"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0d5f10-171b-4614-88d1-0ecda899a351",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b697aa6f-542b-4615-8508-fd4ba03f2a8b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124b32df-3e8a-4d85-87c8-f02cee19cf91",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e55ed60d-0fcb-4a37-9d8c-3c34aa8ec41f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf33f19-bb0a-4ee5-aaec-aeab553c2391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33a3826f-2609-4419-8f72-76a37df6ce39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916440f9-bfc9-4d27-8466-e646d3f5987e",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a08a1159-5179-4ac9-905e-e96f45d7293d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7204e99c-699a-4953-baf5-03ce43bc2d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b06c4d2-5375-4158-8db3-d68e5e6607cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3693a2f-0971-484b-b843-38f563e14e4d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05b9fcc3-f6e9-49b9-b23d-158b160817ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b67c8d9-d926-4a02-bb70-2555fbdf321d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "41d032e3-2398-40a2-b2ba-f402556aa9b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3796566e-eb28-4aff-93e2-e53d93b3030c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eb336381-dc25-4c28-b257-80640b7d873e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3b22edf0-84bb-4862-b00e-0b1972e6e8bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d73a0d32-1cef-4c47-bf43-525926a939e6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "912eb5ed-f6da-424f-a815-197ce6c89d31"
            }
          }
        ]
      },
      {
        "id": "04d02ee9-38cf-4575-b608-04ebb9c80152",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0ec8e07a-7d43-4803-be93-3ecfe3350843",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9b9959e-785f-4fee-b2dc-29bb5d7d7f36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e716dd1-d53a-49ad-a479-e32914b2ba12",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc94799-2f80-4671-ba62-75e3460c63d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e19cbd-173b-4c2a-a8fd-c81cbe64f6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec73c38-9a4d-4bb7-b010-baeae19c5e00",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1ce816-67e7-4373-9fdd-764521726f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9a7e8b-dedb-4ca3-bd3b-5b8e85fef3a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816ea1fb-56c6-4aeb-bf5d-ab9ea591ea5f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7813a74c-862d-4d57-b29c-7c9bc771ed69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08b03a3-a266-407d-bd8a-aa7a0eb1830d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1b4751-09d3-4c63-aac5-537cd919f275",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "438a4f0c-82a4-448c-80de-a074ed7d6395",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24037926-ad21-4b45-8946-8a7b7d39c647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "193c62ec-6aed-4d30-bf9e-0264950cc746",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c702fe0-badf-40c6-b1a5-13c88f7db708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4fb970-6eaa-47fb-94e4-4623e5824079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af39d57d-1119-40bc-87a7-5874d7f259bf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3578da-0668-4c4f-91ab-f6038ba98793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6764ec1-0782-43ae-9318-c786b30bc239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f5310ba-4515-4a0d-9328-e1d569960334",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7bd516-3d4c-4974-90c8-9e74debbec31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d58a726e-b9a6-4809-b7fc-d84b4bb00a0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c96daa-4b09-4da6-b5c8-e222d48059db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca67615c-5ac4-458a-b057-a94c12788ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63875fa-7ff3-4acf-937f-6f46767427b4",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7821402a-5526-4241-b9b5-4543206d3e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfbfb29f-5c98-41f9-a89b-a28ce0096c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79566f07-b994-4f53-bd4d-3e131b750292",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e1c32e-187c-478b-a4c7-92655a4e31d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fad3944-7763-4ffd-8798-b7e1b919d524",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b7b62f-70db-4eff-96ce-e75a5048a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a92a371-25c1-410b-9d7b-21b31c6d5e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43bc8c-2165-4d30-84e9-05fe2dadd9d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423e5948-5cca-4c2a-aac7-232c543a8edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e4c72e7-49df-436c-b545-b0fbc5639994",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362f368e-e8ec-4c51-91bf-8a842ad15a2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5379ad63-697a-491f-89be-9987577ca68f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c736c65-59a0-400d-8294-d6fd5ce0087f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f0f836c-fc83-4e63-bae2-e80ca36dfa78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fdf0a53-64cb-445d-a687-7497526e5652",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29725d51-ba36-4e1e-9eed-8dd80cb8de53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62a07e89-3852-4375-b731-342ec0fea1ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c233be-0b01-4dbf-afb9-08c5a8227318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d30c6ed-1d7f-4bc7-8fc4-09f42641665e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ffb7715-7098-4f5d-aa84-7b30c616a692",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ba3ba9-8d9e-42e7-b2a4-258d98e3ed15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "044ceccb-17b5-4062-bc6d-c8999f64dae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9747604-81c4-4cee-8ddb-b42d73162b8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2796f4d-2b2f-4be2-8bb6-c8d1283bb65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d1f677-cd7b-4ba8-8fcb-06ce57c544a5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0837ea41-2c1c-43b7-952f-e3aa3b165c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69f72d11-a054-4f29-aa1e-6bd21ff19c8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9c1112-2896-408a-90ca-d0c5b2b1bca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2f4d6e8-cb4c-4736-b1ff-a999e58d4cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc3994a-8695-4b03-8b90-511d5d7c0edd",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6915449-c272-489c-a93b-cdf06d19acb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "886cb208-2659-46cf-94eb-c83af6ddae0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d71d4e-290a-456d-bf50-b136cd1ca87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0ca0f2-2c54-44b0-9c2b-b882d31fa531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518f5713-47d3-457f-90d6-12212a7b34ce",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d14fe557-5684-4e6a-b240-c5ed7f70c029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af37e0dc-c0cc-4eea-a45e-34b513b35a0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279a0d44-781b-4fe8-b6d9-83b3041c2993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8c5170-e768-4f95-a703-f0d7f3fd5c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a98638c-b8da-45d8-bfe8-c12b7a14005a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2a1c76a-0c36-41ee-aa21-f955ff6287d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1336d094-1d1d-49be-a82e-4536c8d32b6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6374059-384f-4921-bcaa-09c82700111a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadc91a5-2fd9-43c8-8c84-3a451894b13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33dc337-54a4-43af-a633-bc5fbc8ba29e",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af80ff28-fab5-4f6d-b229-5ec0d051e574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce5d16d-830c-4c87-a6b0-c97a107a9e57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9084df6d-67d3-4223-9004-2424297f51a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30933fe7-f77e-41a9-b5c4-4881581efc4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f147391-59af-42cb-a89e-adc12dc474fa",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c724c7-de71-47b1-ac0c-3c8dda407b0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c7bc093-e2fd-48ec-abc1-c62147599e5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31c0b192-2f36-401f-9645-5800081075b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009ebf8f-8cf0-4f13-b2c4-395c82d63bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7613bfb3-6b0f-4ddb-904a-d3201e67374c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac52654-7a3c-4f6f-9c6b-0cd99f3a95de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aaa837ed-5cb4-4b1f-b6df-87f996860514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "915dcb91-b078-4e1e-82b3-d881e4833a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd40ff8a-9208-45cc-a74c-e9c187fb1886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed9e390-cea1-4f4c-ab96-d7274ad4d69b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720f24b1-a2f9-489c-b28c-1db35f5bc664",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289f256e-b488-4c75-a8e2-8f5cbcdf24c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce2030c-59c6-44ca-8fe8-2d0e46d1dab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9f5fb8-b42d-4430-bd16-d1d00b2c7583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ef8c3d-affd-4367-875c-047de98c57c8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0c3855-0b4d-4a6b-94d8-fa0d3be031d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f65ab5e1-1774-478b-828c-25dd53693bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e5f0c5-ae48-4fdd-9b82-79003b1fd402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0182fa6-177e-4139-bc39-90f5769753ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef7b3a4-ede0-4310-b3bb-cf511521a4c9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0e9bd1-6ce2-4790-b58b-2761b05692c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae117ed6-cd32-421f-8357-b5e14e161b8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d42165-0063-4a99-84a1-22b6538e22c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4520e72c-5c94-4fce-beac-6c4db8400094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04ce131-6e13-4c9f-b2aa-7a2dcb66f0a8",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb1eb3f-46f4-4ce4-ba34-58d8c31f711b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3d6e20-9379-4ab1-8854-b32ac4752da4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d0be419-3630-4f0d-b559-4563ead884f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b89642-28c8-46a6-b5da-c03b4ce00a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd8dce6-a8d5-4fea-bdd9-1fffbc96fd1a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fbb8af4-1fff-4351-b037-8630f1535393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "408df22a-f8be-4358-a840-321c5956f6ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfffde44-7c00-4c2b-91d7-cfa71b31099b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5efe688a-09a8-4360-802f-0b212113bef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01218de5-0f0e-4cf8-b58f-ab43bf78bc9e",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af05d03a-c2b9-493d-b5d7-c05bc7ca98f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97547410-8183-4808-acf3-bfb237bfca96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412758f8-d91c-4c79-b62f-e43d14741a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a2296b3-8a83-4ce6-9ded-7c7e0bb7c892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9d74f4-4043-4422-a850-c8abbfc2c7fa",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c15c0e-e313-4649-a88d-b3ec235c1ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29ae5a63-06c4-4e33-8b9e-ec4cd3c27d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4744ea-61f7-4d49-9472-5c84b5f6e507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40560b6d-5f5b-4424-af47-b932dc09bba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22d9b49-600c-4168-8cc1-da89cba7f253",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13572364-f386-49f9-983a-eb0cda934d23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e53acf5-988b-498f-a1d9-40bafb550bcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c6375-c41e-474f-b086-f6fd3d571956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b24bbd-8088-4d73-87a3-b766c6be4c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99018f4b-757a-4aec-a816-5118ebfc76e4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbce8274-8779-4180-96ca-7b7e23227bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f797fee-eb8c-423e-85fe-385e4dc5e161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "227d45f0-0e14-4859-b826-8d409f463fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48950346-6c86-4561-a08c-2b120acf3904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2b1fd7d-b6bf-4467-8894-bd29974c38f2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff67c98-e6cc-41a2-83fc-ddba5fb50f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "230a702a-e715-4c50-9d7f-b177641bb62f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533eeedc-3c1b-4ebc-9b8c-ac0fa95eca79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ee6a2f-cfb3-436f-b137-26dc95b5c6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abfa113-0c94-4c2b-8e12-88877b0c714e",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ceab3c6-3a70-496d-8a1b-c92f9e21826d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b159c5a-866a-4d81-9a00-de8d5279544b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79ba3e4-8e03-4d6e-9530-d51906f45fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d89104b-a2f0-441e-bc5f-443970bc6886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba1a1c9-6422-4ea4-b2dc-f8d075dd5462",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7554b8-38a4-467d-b466-99b24adf03a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e53dab2-f24e-4e8c-8cbd-870216fd1db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e0b9f2-9c02-42d9-88a5-47dc21754c87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2fcd885-56e3-45b3-aaee-d691ba2f43e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db35815-38aa-4a28-a448-bfadf4b9b968",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c15fbb93-f8d5-46cf-a34d-c5e61a0bffc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a979df93-1f50-49a9-90a7-68b991fb8350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c84d98-e8bd-4e87-9e2e-516fe59562d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686744ce-9100-4806-a42a-7b0c725543fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cdb2c02-d9b7-4913-b6bb-929f19ea5c31",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef52dd74-74a2-472c-9438-d2290c211971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a0b8563-bdae-4761-b428-96e4979efebe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad081ef-ac64-4407-a12b-c5979426d06e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca1e212-27c5-4e5c-b14c-a28beee2edd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a968f6b4-2364-4221-b7e0-9e1fb0b48362",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24b11a8-6766-4254-8d36-20aee8367899",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b80f6a55-e090-477d-a9e6-93d14d0c5c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd719c89-d922-4fe0-afbd-7f6fadcc729a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46562981-2f2c-4d90-bf7d-a8eab928002c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85547a66-91f2-4cda-bd98-a8ef6623ff68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec5f2060-0111-4f1c-9205-636ed8518453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeb0a51-27ff-41ea-9ea4-5528f8770aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5491627f-e3a8-436d-ad3d-1a7b701fb3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e4f7d04-0995-4941-ad0c-054668c95a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f421eccb-19f0-4654-9eae-f74b8d694ebe",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924f42c9-1a84-45d8-a778-70a2c9002f6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee4f4e3-668e-4260-8b45-8d2b3f663a09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94017906-56f6-4a68-a5be-bb66bb0b42fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b8d71b-d1f6-4d73-a646-3b22476dfc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd1178e-be2a-40e7-8735-af4bc1e5615e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab3dcd-32e0-4553-a1b8-74ee9efb04ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb1fa4ca-2133-4324-a299-0b077f62ac0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd1d768-5a49-4c51-8809-d324f98efe9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f190cca-4fe6-40e9-be6e-85edc824e77c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f4c94b-b2b8-44a5-8173-06b1758048be",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e89534-1a27-478b-8cfa-d81e34800aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81516f3e-5978-47fd-8b51-e2c4a6edc946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e499fa77-4116-4705-86a1-e15c2a01be2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01075950-3d96-484a-8432-209e8c90c27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8e9b76-e02f-4175-95a0-431ff74bbf81",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ceaded-26bb-4c7f-8a02-95465332181a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862906a1-103b-4149-8a06-84f98b54dec0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00307980-4b8f-4cf1-b5e8-ba07e676a50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b53f95-b53e-45b5-8c29-5340da63f0b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2134a87f-5538-48d3-a868-e42fc8bcdeaa",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ad6dbe-0b88-441b-8131-7afc0c08f126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73a4a9b-1ff1-4f49-a097-e09424f22fdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3267913b-489f-4883-b68d-a0377540b8ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540de5c4-2dea-4b64-a452-3e673ae31158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe81c61e-4db5-41ea-a922-e1cce9617e28",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517e8ece-c922-4617-ac77-34ff4d7168cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fe78a6f-c46d-4943-8b22-138c1ba9f787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "039a0c79-5be0-4993-addb-5476686c9e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64f9c50a-5b0a-4d1c-92a5-913a44a348bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df51762-4921-418b-b382-c5e45c0820de",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6e4636-3934-4d3d-9a87-865511857ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e4be0df-edb0-4e7e-bd43-51ec5b3bf0e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83620f88-4e52-48aa-bfd7-495fc366530e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a3dd91-18c1-4dfc-ae64-a6deedde5740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce729972-867b-482f-9e9a-ab5e10f48c90",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2490ed3e-483a-4a25-a31b-7393b0797c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c10547-544d-4abe-a7b7-4db93055c3a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c046a30-e654-49f4-87f6-86e41768f6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb6fec5-32db-45f2-b141-89516ea68e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbf6e42-d2dd-4d1f-bff8-b597d1703ca1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31afb6af-0dfe-4d2e-a2ed-0b9aa48f61ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097556ed-6936-4d02-bb18-5ad2b94fcaff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad707b19-4d68-4a5e-80a3-cafb67ed89a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cad5f2a-d101-4caf-bb0b-491161ca4e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958789ef-694a-490c-a96e-643b9f0e17b4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0f95a9-ea17-4c24-be2b-d0a616df76ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7d3dbd-b440-4497-b031-af4b30fe65aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b303c340-d4b1-4788-98dd-670ccd103229",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27a50df1-99b1-40ac-9ea3-ae040f05be2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7b59a4-d7ef-4963-9e71-feee846d50e1",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f34599-c67f-4ba9-9160-eaffed20929a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ad6ddb0-5fd6-47f9-a625-2e7b491bc221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5891b23-0574-4a5d-b45a-57536b9998d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f2cad35-08f1-4cf1-a8e8-35c1df79115e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9db0c5-3ac8-4c0f-8795-7bdbb00d4820",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54af31fe-2698-496e-bc57-152f98026957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cbdc14d-9bab-4acb-a3d8-79c0deb05c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1b069b-0c94-4624-81f5-8f228913a963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e289220c-3800-46ff-9311-2ad3cb42873d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bf526d-6308-45a9-b6f9-86c27ffc0ef2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0aa696-0f9f-45b9-ba04-9f1025652f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b64726-1cad-4ed0-9881-a7834aaa9ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d493e9-a462-4ba5-8af0-b7ec2a3675b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89be8764-5b97-424a-a954-aa83c54d9e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1997a6fe-77ea-4b9e-9d3f-545d058e4788",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70531e31-3ad6-44b1-97f8-f10fc0f6efad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5d19ea-f336-4163-be34-aa93bda6d0a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76fbd39-4e33-41a8-92da-95c17b7e8578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f219db97-f636-4830-b228-032dea975659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac6dd94-19b0-4e15-84d4-23ecd2636d20",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1675191-cfc4-4636-990f-b522ef11dd9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8a3ebe-8aa1-4c5a-b42e-b792027ef778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0590d31-75ce-4751-9131-e65a6349ec87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "120361ef-c70e-429e-be5f-0abb5cf3fab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9927f9c6-a4f0-4928-8e0b-2ab22f68e507",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980554e2-7ec7-4950-99b5-aa509b28a637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba7a9c1-8306-4bdd-8be3-4e78d8a02354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ea1ec6-45b1-4399-8a61-6040ce16f3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a24a241c-d545-40db-8d41-a59a377c6698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a34b87a-688d-408e-b7c1-bea400f8f06a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaa609e-2bed-4160-8c60-ccd39f28579a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2979bf0a-4faa-4297-8521-bbef79be9b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05e181b-28c9-49b6-81ac-3cde0cf47cb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82f69d7-8cbb-445b-a4bb-4e346aba6938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5deabe07-1a29-49e8-9360-95086fb4993d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39900543-355e-4409-b54d-e86964bc9177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77105b8e-0cf7-4e59-9551-8942c78b929a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a76ad5b-08ce-4c45-b987-fc4a18b7ada0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5681a28-765e-4e6b-9c39-14ef242713ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d543d25-835a-460d-ab46-6d073531c854",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b4675c-01b7-4e9b-ac0b-4a5107f08d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fab32b65-5cb2-4f19-989e-d35fc42907c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aba3e84-cac1-4f9a-be8d-8049ea3d5482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be36803a-83e1-4251-aa8f-e5ffd5d6e25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894186d1-0112-449b-b3b5-9f4c9e8e3cb5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e0bcd6e-7b9e-435f-8a46-459193625b56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1991bf3-02ec-437f-a96b-76d9d1037ed7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "052bfec8-ef06-4dca-b136-655aae0155a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94aca313-e4f1-4333-89a0-99748aa4482d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11ab3fd-e45a-459e-b6b6-e82c333f3e33",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68383210-4a50-4de3-ae91-6083aa1361c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008f7ef0-a22b-4677-b52b-64805dbf4cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e2046d2-aafb-4f07-b49a-6268eee1a511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d928d43-53d4-40d7-abef-1a614a8f5db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6481fd57-813a-49d4-b2a8-a136b7314171",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18f909d-a17c-45b3-9630-36d47da3e49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f560fcf-795a-4b8c-bc22-93d4358d9848"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73146b29-a132-43f1-b7ea-0525752a2fd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db935e3b-984d-438f-89b1-f592c562cb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3e9e14-a07e-4212-9e2b-16aebab0fa80",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf97a01-e400-4f05-af31-824002e723be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d828f71-e184-4d2a-bedf-90ab5068efc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ceb079-ee51-4ad5-8300-a89e0bd0db8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d88faf-9807-4677-b430-f6a781f4e47a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67da86be-12ae-437e-816d-e3cd2b82cc7e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "578cdccc-d82f-49b2-b458-ff7bf5a187cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303d855a-a3bc-423b-90af-250c822b54e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920e1202-6071-4398-91a3-b81aa3f38d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78080feb-fb89-4811-bc1f-a81dbbfcfc11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e6819e-7bb9-404d-8bcf-572dc57ad0c2",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fc85e2-4a82-40c4-befd-411cacb2f811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5588a35c-df52-4d59-91bd-e1ffaf5ca4d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13bd0ac0-6e75-4d16-9dd5-7a13651cace4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d29fb7-3f87-461f-b7f4-4e40943858ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6212e12f-90b7-4f96-88be-6ce5c3bc5ebe",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6760c49-5041-4aed-96d2-724c69a01fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff5e7145-ffed-4ee1-9a80-96422f63e5b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a96c35-87ae-4a7d-bac1-67ac8917f038",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837f2cfb-a838-4204-9ea4-2ebc3d1c8a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3700ddea-f1d2-4357-8479-9ff8249f452b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e5063d-cf6c-45af-959f-2ca068ef301d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9064f4b1-35e1-47bb-96d3-81b8a1da4b3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f811dcf-406e-4c08-8693-f2ca645818b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f71ba3-1556-4dbe-aa6d-fce625ece766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9951dad0-0b49-45f8-9c31-7f60bc7f5ae1",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc3a122-ea70-4cb3-9f75-7f58b9cedb0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd128e5c-c1a8-4f93-9fb4-bbde7e121467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e33b0c75-9008-4164-a176-e24be4e0f352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6401ed6c-a954-4504-89e3-387baa79bd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7557cec1-bde9-4822-b2da-302c208b1c84",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9316bb3e-fce9-4dce-8282-0d89137d1210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52fee7cc-95bf-4acc-aab1-88490bbf6ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75d7a19-2000-4f0a-83a1-979935118a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb57b78-653a-4853-bec0-1ef3e2e5d7a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa33dde-0b65-417b-bf75-fd182b0fd669",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59896676-2e87-440d-b5be-b11248154fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3d76427-daaf-4e0a-bce2-1b535119fadf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddcbe10-fe77-4695-b178-337bc14d4f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae3d0a27-b953-4a10-808b-190b04ed2740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "678d4b33-59b0-4af7-823d-317eb9bc885b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6cceb1c-3890-4e81-b40a-04ae15c26c84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1219271d-1d0b-45ae-bfb0-9669979e1c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d357a82-5238-4949-a9fe-0aa1b6181275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e164871f-7273-453b-a1b0-34ab31b1f739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3068a134-64a1-47d1-be8b-7c301b4abd2d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e24d7d3-1fdc-49b5-bae5-a399bd0d7789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "528a3b2b-c35e-4471-afa2-d11fcde52a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36adf0ca-d74d-4eee-b46e-5bde189b5b8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bf328c-5513-49da-8bce-f1f88fa60fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc8f47a-04c7-4b0c-8580-ad6f62742d29",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f753771a-f288-4ab1-94e8-8a6a4dbaf35f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21afc26-c2cf-441a-b748-2b8c066cfcaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80539a66-1217-468f-bad1-61d938f184dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fecae59-656b-4319-877f-8bb3e3d15edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78990dff-a851-41f8-b929-c62f6a81634f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce20fa3-27d9-463c-ab9a-9307722431e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5908d478-af5d-444c-8605-104d194f1f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa51a9a-04b0-4e62-8f7b-9e246da6fac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2214629-5f42-486a-84df-3f2666e36990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaea26d-d960-43e1-bdb5-d3dfe5c253ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1ee4ec-0d42-41ea-976d-96a9bd09ffc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "084a3b73-d736-4a11-b762-e0599043c3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2ea8ae-5e6a-4b6c-9b94-9436c4c21fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff37f2c-6772-49d2-990d-300d13a89f0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a724b393-91c3-4cd3-869b-dd5d425bf800",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc1fd3f-a786-444e-8f46-ab7dae5cc14c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874d9077-c34a-4cbd-ba51-ddc44b0635b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ea936fa-dd33-435b-a1c4-d761e888d553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b363b796-4f99-4eab-b519-25938e6ca571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ea0dbc-7145-4d45-b6f8-46fea18ac9dc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edcfa0e-0d79-4385-80c1-3bcc9186ff08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ab4a3d3-c243-484e-8a29-0ee9caad6b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0075e60-ad0e-44d4-acba-a36399fe8642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e59ac5ff-124c-446f-9695-9d944e211cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3241e8b5-9ff5-45e5-88c2-e4e171720fe3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09fc074-4e41-4ec9-898d-26e74a7a30c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "238353a7-f5b7-42e3-9c31-bdd3a75be195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c5486e-6636-4cfd-a05d-b7dc5f120720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93827262-f9ca-46e3-ad8e-972eba49ff15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f160a82-9f39-4f9b-a77b-285e372ff6fe",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a0ca3d-44dd-4bc1-9c6a-5fad3e9179f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db7d9f95-7e97-4e70-91c8-6c496dfc1975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9aafa99-eaa9-456f-85ab-55b4e36c4e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a6b988-2d77-4d86-8174-5cc21800c350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0fcc84d-5ca8-4838-9371-e1c04a9a08a8",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd2f48b-db7a-41a6-b3eb-38158b49c1e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58dffeb9-b714-4ad4-a00f-5dfe77b08ef0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f571271-fc44-4cc1-ad8f-6401c2da1d89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1db07e89-9505-4707-95f7-aeb7f2b2fcd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9f6b71-7c4b-41f5-b5ef-1e80ff679a73",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87e48fa-8eab-43f8-a35a-2a29708022b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1448a1af-e171-4a44-a284-4706fb2b3fff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef44fbb-7f9d-452d-ab13-d870c5c87fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efe3c93e-795c-4735-9151-eeaaf62ba7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c878e20-fe61-407b-8b8c-52bd7e3e8dc5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8b7f39-b965-46c5-a75d-3f25560892c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aba2dda0-02cd-429a-bbd8-0e5281cfd941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d891efc-e63c-460c-8659-085ed6608be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06192090-25c9-4595-afc1-f019e59ce469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85955070-4626-4b10-bd63-6b48f5bc692a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd519539-4c6c-4e98-9b3a-76392521798b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412e7d49-647d-4da1-8f40-23112ff903ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9154e1-212e-4605-8cb1-8474917d8b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287da2f1-cc44-490e-af5f-9652aba8be74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5eab3d-2d11-4e00-a964-83b9f7e88f83",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b5a3bd-95cd-4c93-88aa-7f473d4547bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc633b93-fd22-4dad-b3e7-4ee2fc70e391"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ccc139-71ff-428c-946c-3c5a52df2e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4e2841f-3f7d-49ea-a56d-9cb227c560da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9732e9-b5fb-43ec-a325-b58e31fd3d44",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a0fd27d-7ba9-43a7-b571-517ecbd9184b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a601a33-07eb-4db5-8554-bbfddcdc5045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2627f0e-800a-4ce7-881e-ecea21ac08f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee1136e-f28e-434a-80e0-a93700b7e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c331871a-9dbf-4d64-bec5-55b865898eb7",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506ee1d9-9204-4277-b1d3-7d8a0733873a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1272e8a9-cc7e-481c-ae4a-2f491cd5e8a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c677e193-10d5-46b8-83cf-b8a2bacf4a2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedb5cd2-dcf8-4db4-9e69-f2a8c2b6e3ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3714d1-2650-4b81-911e-3cfd5b30d847",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6248c520-559f-4d21-b9e7-7beaedff04a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a528c27-f868-4929-ae73-826e2dde0c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1638e17e-aa16-46dd-a98b-d78fbec07467",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e401f6-db7e-4980-a37f-70a5c27548ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b222299-b11a-465c-b319-ca4ee54cb23f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3633054a-828a-4194-88fb-b335c3b8ef05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf78d3dc-3469-4a4b-bfe6-a411ff719de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060fdc66-1be2-4882-a8b4-55675b1c4a4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d92d53-32d9-4ef5-86b3-aad9b1603f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e68a1f-2cd8-4dfa-af7a-e0701a117d36",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535afec2-9742-4b5b-9aa3-280ba8639c4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5fd5246-8910-446b-8f8d-61b32c9a8e52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9366de54-75be-4842-91f2-0f94604a6ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "909914d0-7ef1-4ab3-853e-0f8e8cd5b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1083d525-458f-4eeb-8cc9-d22c3c55397c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba60b1-e665-4240-ba0b-41ebe8f434f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe974451-ff22-44d3-bf78-40d1bd5c180e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b09985-3622-4791-bfa1-ccb2266dba5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0649b41b-f003-4202-9368-6919b466274d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cd8dda-de0a-49b7-8867-102eef907b44",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a7ed60-2499-45b7-80a7-c5bd914b3fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f629bf6a-0ccd-4659-8fc6-942a93c1e0e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f250a8-b9d1-4f82-9878-9d25c59f5a61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688d6623-7d7a-47d1-a61f-e5e977be599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2adef7-daeb-41c7-99a1-1462c402d84c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96a6163-0626-49c1-90d6-fc486efb9ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2573f02f-4eab-445a-a473-e313396b754c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "082a8138-8bb7-414c-bf7c-753db273b06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66b4c8ad-3562-4815-9602-0af5d231880f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d589d3-acc8-43b7-9087-c8b0526baac6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a812429-c2bd-4eb9-8013-02802d9171ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37c6daa8-3863-405a-b523-814ffb5e1c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a215ad-60e0-4dd9-a3fa-72622175796b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0167ec-0e11-4106-952c-304cfa6553c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac6452-461f-4181-acbe-7ca5ea078283",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fb9303f-610e-4dc8-bc96-f8fd11a1f69b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e365fb7-1f94-4558-9449-0c4c0c82d3ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac05fa3b-d2a8-4c0d-a830-a9289b59e76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d617893-1126-495a-bc89-01c55282044a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6ec499-f0a8-4348-b78d-5efd4e2d90e8",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddab0a5-ee5f-4037-bab8-633a0b82f79a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e639888a-4180-40e7-b2d4-f108d33074e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5835b1ea-5dba-407d-8c12-3fb23365038f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d627176-54cd-48a7-b947-75f65e48dffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24865933-c67c-4978-80d0-88dd88cbae89",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95068d0f-1ce7-4b45-b69f-f698a26caf06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb848e0-4d39-4f90-80f2-469b153f20e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29315989-bb02-4657-9343-bd03f77fef28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cf5c18-86b4-4e9b-913c-1fb95d67cf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a326fa40-9635-41e1-a3b1-3507aef1c99e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f1b8be-7c8c-4a83-a883-1888eb2cc898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9d00f28-5dd2-420b-9bbc-76c6b88e01b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb93e373-e8a7-448e-a86b-752e9cfa6969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bd12b32-2a76-4c3b-a07e-ddc71de1e1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99576850-7303-4888-9d45-84b05ab75d16",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6013852-b3e5-4352-adf1-48f9f215b15a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "449ec72c-858f-47d3-97e9-3a9774703875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b014f787-0684-47b1-aac7-5072f25622ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8579e5aa-4a67-49af-adba-3e2fa42c654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631c92c9-b031-406a-be1b-0a802ac284e6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8eb4e9-e704-4895-b806-c02b02e368d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "122cb9c3-c862-4b0b-97aa-5284bda1da68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d4b82e-a1a2-48db-b3f4-98fc74a5afec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55267137-275f-47e5-bfd2-9012231c2142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3b2cab-793b-40e9-916a-ba93f39c35cb",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25776cf2-3fc3-4a2b-88a7-b3fa9627b2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2536d6d-ea98-4428-9a2f-25714522fa93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86094a1d-07cb-4791-bfc3-2eca3c2d3592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c1066f-015a-4a00-a722-b05c9ce92b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6675fe-ad44-49b4-8d38-5ce8b393f07d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0c4d68-3df6-404d-a5a1-973529fc8469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a96fcb5-59cf-4386-87e9-e121adcbaeb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9dd0204-0941-4ab3-9e21-18f4bb9af9d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "838717df-f8b2-4d8c-8ff0-7e87bfc39ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3584aa16-6852-42ef-a557-75468136ae44",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35b82de-06b4-45f5-b6a3-5721629e6f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44108b50-bc6a-4e99-938a-b8d0fcfee640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba81eb0-e3ec-4513-861c-a8b6d3e5b5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e14dad4-587a-4888-b6a9-10353c164f86"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c84c9c60-3a6b-40fa-a7e6-63489ed513f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "51aeb569-ba02-4c4b-a5f7-aef5e3d912cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe17ab1b-dfd1-465c-873b-889695d9ee19",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c6303cf5-7f0f-4364-97fe-8902f54690ac"
                    }
                  }
                ]
              },
              {
                "id": "2d7dd2cd-ab5f-4392-ae90-15d2bf99633b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fb4f2058-3d9e-4091-a71b-56d4ead90177",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7e4837b-14d1-42ab-9757-6a5b8100afe3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "90355438-bf9e-4fed-8f42-31cfc58e6019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33bf9973-39a4-476e-94b1-ab2fb7487cce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d89d3f2a-5ab7-44f7-ab61-6fe1c45aa44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e16d47-85e4-4f01-b2df-d38f16bd19f0",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d86a620-bdc2-4da6-bd0b-ad3016676252",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5c0f5cf9-aa5e-4973-9422-8558b5e94783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fdd4c2-0427-4e63-8439-2c4990a6421e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "730a60ff-9922-43f4-a892-54f51c8376a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f469d5c8-a030-424b-b982-960ce635a089",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54524493-87f6-42eb-9f35-d5fa6af42433"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b574f6c5-f4f1-4f07-a257-c66cda4c7581",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f09a1b1e-4507-43ba-babb-955db2a2a8d6"
                    }
                  }
                ]
              },
              {
                "id": "df1fbb88-1025-494f-b479-d4f74ff633a3",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5670f5d4-eccc-45e3-8945-ac7828d199b6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc0ce27-5e4a-40ec-8ce2-d64cd4872b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "c1ec439b-8f69-48b4-acdb-73ca2e768670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c77d3-517c-449f-8ddc-8df48c281a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bb614a7-f172-40eb-b327-9cf543693ea2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9f3c89d6-d77e-409c-a071-3c5389ee42b5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "08fcd7ba-8918-4ce0-b1cb-6b4fedaf01cc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2a1530b-d089-498e-909a-c3c167ca9e6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e000585c-078b-4a82-a033-8b4c4e5e585c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6396c19e-be7b-4883-95ee-03caa5461a67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "421799b9-2bb6-4246-822f-85ddb8187a66"
                    }
                  }
                ]
              },
              {
                "id": "9a145fcc-bb60-4c20-bef9-131225266ff1",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "454d7a90-ca74-48ac-b383-2b6c684f34b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6bcb3d57-aa30-4b22-af3e-fe91619e5423"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "267d5d43-c733-4cf3-afde-5c564c60ed4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9fbd44b1-0a31-47c8-bebc-f21a25553559"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e65358e6-3572-473a-9c55-f8080892e437",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "799a1b59-8592-4a74-bdcf-a4cdb1fe89cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d7f5a1fa-616d-4e9f-87e2-354c86e15d9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0d274943-9a33-460b-9010-9593133d4f8d"
            }
          }
        ]
      },
      {
        "id": "d2ed869d-7b10-485b-a421-5c6835a7efa0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fe615a3c-1ddd-4069-98ff-966fd79bc549",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81d61a4a-4ed6-4999-b506-76af9fb49547",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b95670-f6ea-406a-9219-119a5d973dea",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9f57a321-762d-4704-817a-806dea5b2dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04d3bfc-f77d-4d9c-951f-242fbddb09cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "897a15a2-8608-451f-bbfa-4146cc02c504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad1fbe9-697c-4770-8162-ac7553ee607c",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba20b90c-7809-44ac-b20a-6aa86141018e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c42627e1-ec66-4e60-b8c9-bb9b084da75e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b5fe7a-84a0-4f20-8e05-3f017fe48a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef96ab72-cab9-484f-be5e-32b78e802b19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecbf6035-ea32-44a0-a920-d1ee6cce93be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34a9edd9-df2a-405a-bc06-95316e424fb3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28879d60-ccb0-4c56-a705-e1ad4c667f15",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d46dc595-271c-4c59-99d7-344a11076223"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09044be3-62a5-4f71-8901-b23547a0002b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "57d3ae99-398a-424b-aeb0-0923b1a5a829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9714e2c6-3a27-4f50-834e-de50cb94da3a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a776e4a2-aaf5-4e8b-8d3d-3fa0e3dff1aa"
            }
          }
        ]
      },
      {
        "id": "e164e884-b752-4f66-8c2b-aaaaf0f7b620",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "b1c6542b-eded-4ef0-b8c7-f693437a22ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36b12122-3681-4498-9a3d-1690b900bd82",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d899d9fe-a933-4958-a332-49c68c75d9cb",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efa3c14-0a35-4aaf-93cb-63157f755cb5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1be5e7b-a37e-40b4-89e0-1c154996b353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0644151-3d93-428c-9011-f20a11ca0526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cc622f5-4967-4f79-9334-597dbd35fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd141c1-d1ad-446e-b00b-f83458f45c73",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1660030-a232-4086-8d9b-9f080e7db3fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fd755350-7651-4f5c-97fc-f91a858af305"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce247684-cbdf-4e20-8350-337783753be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f6d7640-b9f6-4bb7-a1e9-804cdb386c09"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02abe0db-7246-479b-b793-76651903bc9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fee8b722-79cd-4261-a8d1-896cad41168d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d276f569-4e97-4b40-a641-4f8d47482805",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d1832f7-789c-420f-bc51-122cb83ae2b6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "026303c6-9033-4b9f-b7c0-440c759aa85b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5253a3ca-dd97-4f1f-8d90-4bdcbdfb8db0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "443f3720-8aae-4598-8ebb-3166c8f45883",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "501dbed7-ee61-4e06-b82d-b6243696741b"
            }
          }
        ]
      },
      {
        "id": "fd8d25db-892b-4987-88d5-ec8370ed2af6",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bcdda215-eaa9-45eb-90ed-1ced838ffb71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57be33e6-6f1f-4288-9901-cdcf49e66817",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2e9e43fa-975f-434d-b68e-926fb57bcbfa",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ff4a50-df5c-4ff0-847e-f9aa8cc86724",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "132a1cd0-3b2b-47e8-af06-125ad656d941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c37994-4a81-4b6b-9b4c-239ec2b7f3e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4f14f16-ce8c-4c0c-8876-1a7e64382488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7648c5e3-8ff9-4637-aa70-df00715956b0",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16af3863-deb3-4739-a084-d891ef48674b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc622ca-08d1-4a9e-815f-91f580c81df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d73bd3-e55f-4a4b-902d-453005ad3820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87dfa6e6-00ca-4a57-b7f1-61609b4bc925"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5967b34b-c278-42ee-b83d-416e22490e48",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a390083a-8483-4c9c-b9c6-1f2e2fb4fd71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79abd9f1-20b4-4c0d-8fa8-2fdd9a7827f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a19f8961-7dc5-4e84-9a55-f8394b35f75c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3609cc8-c4a8-4544-87ed-b1c8e3da8dda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a8a20015-de62-4cc0-8ab2-e492b8d43a52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ae52ef1d-3d07-4b8e-abac-1a02cd882085",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ad47387-9a79-4337-a2a7-e544ce4ebf7e"
            }
          }
        ]
      },
      {
        "id": "bb17f7e2-487c-486c-86e4-df1e57060da5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f22684a3-c33b-4c45-bdc9-4347eeea0947",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "393086e6-b5e0-440d-b81c-956564f4f425",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a7880b4b-f21a-4276-83a9-8aba9d2dd7f7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d142fb9b-14b3-449d-8e9b-bb8651152d5a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bf4f240-b685-41d7-8197-f94cefc2d746",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 63.96923076923077,
      "responseMin": 20,
      "responseMax": 370,
      "responseSd": 34.23739261764012,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679618258920,
      "completed": 1679618286201
    },
    "executions": [
      {
        "id": "6285259f-f08a-460f-911f-e1f32e637e16",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c9b575e3-47dd-49f9-95d2-3ab03e7ee01a",
          "httpRequestId": "dcc33a1c-741b-494c-9d9a-fc2c4152f23e"
        },
        "item": {
          "id": "6285259f-f08a-460f-911f-e1f32e637e16",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "46b921ce-aa30-4969-83ca-444ac6d2529f",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 0
        }
      },
      {
        "id": "20e4757e-80ea-4879-bf2f-34bcf34a5d96",
        "cursor": {
          "ref": "57cb11f8-c2f4-4b64-b1b1-b0326294475d",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "aee6a435-656c-4000-bd28-7ced04298f78"
        },
        "item": {
          "id": "20e4757e-80ea-4879-bf2f-34bcf34a5d96",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "692084e6-11a1-471e-9f38-38e7d9bac581",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "51debbac-cb23-4c33-8a20-921612f34371",
        "cursor": {
          "ref": "c15fe995-ef87-48ee-bfca-d69a1f4e527e",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "871b7895-5e99-4038-9c45-043ebe99c0dc"
        },
        "item": {
          "id": "51debbac-cb23-4c33-8a20-921612f34371",
          "name": "did_json"
        },
        "response": {
          "id": "1f15dc1a-7121-45b5-a158-b6f6e928a221",
          "status": "OK",
          "code": 200,
          "responseTime": 370,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50889e8f-0018-4da7-91a6-da0ea50ec660",
        "cursor": {
          "ref": "5d163b73-80a9-4d45-a4d5-a63e57008be2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c753760d-4d5c-42cf-8596-c14ef09a6c2a"
        },
        "item": {
          "id": "50889e8f-0018-4da7-91a6-da0ea50ec660",
          "name": "did:invalid"
        },
        "response": {
          "id": "51775de8-43dd-437b-8dd9-e736b557cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50889e8f-0018-4da7-91a6-da0ea50ec660",
        "cursor": {
          "ref": "5d163b73-80a9-4d45-a4d5-a63e57008be2",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "c753760d-4d5c-42cf-8596-c14ef09a6c2a"
        },
        "item": {
          "id": "50889e8f-0018-4da7-91a6-da0ea50ec660",
          "name": "did:invalid"
        },
        "response": {
          "id": "51775de8-43dd-437b-8dd9-e736b557cf14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a2af79-4f2d-4850-9023-4300631db37d",
        "cursor": {
          "ref": "75242520-6100-4953-97bb-81c80e06af26",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8423fad3-4e77-4a45-b004-915b941fc49e"
        },
        "item": {
          "id": "39a2af79-4f2d-4850-9023-4300631db37d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f005180a-543b-40c4-856c-eb5f9f77aaad",
          "status": "Not Found",
          "code": 404,
          "responseTime": 98,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2dba393-0461-435a-be65-6f3f87b872c4",
        "cursor": {
          "ref": "e8afd0f4-2560-4798-8175-bae0181a11f7",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13a8ea7f-6df1-4393-a5b9-32b7dfdcf474"
        },
        "item": {
          "id": "e2dba393-0461-435a-be65-6f3f87b872c4",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e09b573f-c88f-43c0-93da-2042f8062fae",
          "status": "Not Found",
          "code": 404,
          "responseTime": 57,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "284b96bb-d17b-4686-a119-5756859f44fe",
        "cursor": {
          "ref": "4606eff5-87dc-45be-926f-e5b8ac3c46f4",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1fa8274-45f1-4e0a-8611-54614316b4bf"
        },
        "item": {
          "id": "284b96bb-d17b-4686-a119-5756859f44fe",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "c654e289-764e-4b05-8436-502eda036329",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fe7d1-c91f-4aaf-bdd8-14354dc3df21",
        "cursor": {
          "ref": "47b87283-9fc2-4587-b3ca-c078f425623c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a99406bf-af7f-4015-90d6-4fca21753bb8"
        },
        "item": {
          "id": "e46fe7d1-c91f-4aaf-bdd8-14354dc3df21",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "09770ee9-3da9-4226-8e5d-4c02605370b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 57,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fe7d1-c91f-4aaf-bdd8-14354dc3df21",
        "cursor": {
          "ref": "47b87283-9fc2-4587-b3ca-c078f425623c",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "a99406bf-af7f-4015-90d6-4fca21753bb8"
        },
        "item": {
          "id": "e46fe7d1-c91f-4aaf-bdd8-14354dc3df21",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "09770ee9-3da9-4226-8e5d-4c02605370b1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 57,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264b73d9-cc1c-49cd-881e-7c29dffded88",
        "cursor": {
          "ref": "eaee7ebf-48f7-4a09-b5a3-00679b4334a4",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ae28adad-dbe1-463e-8154-6fbecb84945e"
        },
        "item": {
          "id": "264b73d9-cc1c-49cd-881e-7c29dffded88",
          "name": "identifiers"
        },
        "response": {
          "id": "673bf1c1-a33f-47aa-8723-85edc9c56897",
          "status": "OK",
          "code": 200,
          "responseTime": 97,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29dc6b4-882b-4d4d-bb2a-2dd26f7734de",
        "cursor": {
          "ref": "79769568-a5e8-4db9-8a47-9486ffd88498",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b6339998-4a75-4c2d-a573-9f0eee5710d9"
        },
        "item": {
          "id": "f29dc6b4-882b-4d4d-bb2a-2dd26f7734de",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dd96cbe-386b-4f40-a1e4-b4ad45b244c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29dc6b4-882b-4d4d-bb2a-2dd26f7734de",
        "cursor": {
          "ref": "79769568-a5e8-4db9-8a47-9486ffd88498",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b6339998-4a75-4c2d-a573-9f0eee5710d9"
        },
        "item": {
          "id": "f29dc6b4-882b-4d4d-bb2a-2dd26f7734de",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4dd96cbe-386b-4f40-a1e4-b4ad45b244c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67bb1eb-b81f-4e79-a3ae-f6a0099d5c3f",
        "cursor": {
          "ref": "5949a084-49de-4168-9b58-f4d846b327a2",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9de3edcf-6c7c-48de-8a99-bb02ff142293"
        },
        "item": {
          "id": "b67bb1eb-b81f-4e79-a3ae-f6a0099d5c3f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ab325ad2-52a5-40cc-9595-b7f20b06dc7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695cad65-095b-4d4f-86df-464c1ed8e898",
        "cursor": {
          "ref": "b01efd4b-a4f3-49b4-8519-7ce64f52b0d1",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af556eed-6363-4f27-abfa-e69f5b12d0ed"
        },
        "item": {
          "id": "695cad65-095b-4d4f-86df-464c1ed8e898",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "f3a4e3a5-1722-4374-bbfb-c55934c24bd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848932be-8a91-40df-a2fe-0c8bdeaea06d",
        "cursor": {
          "ref": "e04b4ec2-b337-4f3f-b14e-54e77820c02d",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "803aa09f-8735-4776-8269-1e8bf72ddfd4"
        },
        "item": {
          "id": "848932be-8a91-40df-a2fe-0c8bdeaea06d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bcc44b6a-e3b7-47bb-82b9-2d50193733e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80ad2fc-4ca7-4d5f-8d23-10f17488d3b1",
        "cursor": {
          "ref": "391347df-5bc4-4237-b29c-1b4070cb7c29",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6158a066-cf17-4039-bb9c-43033a60baa5"
        },
        "item": {
          "id": "a80ad2fc-4ca7-4d5f-8d23-10f17488d3b1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5be0dfa6-1533-4234-ac5c-bc4ee9b37c21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da033774-28fd-41fa-a8bf-af8ba33820d0",
        "cursor": {
          "ref": "d66ace8f-4e07-429a-801a-d235e94129b4",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "683c5ec7-c551-4ee8-883b-e8b97b41d1fa"
        },
        "item": {
          "id": "da033774-28fd-41fa-a8bf-af8ba33820d0",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2ca1bcfb-32a2-4561-b2d4-4e96e6a2d665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05ee431-edf7-4c5f-ac62-0205cdfcf823",
        "cursor": {
          "ref": "01e064b3-2757-4d52-8a36-58d1d0ac1ce6",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "32777530-e3b0-4fa4-a1a9-b2877086f447"
        },
        "item": {
          "id": "a05ee431-edf7-4c5f-ac62-0205cdfcf823",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "89e4f407-abff-46c2-842c-db514c3148f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4570fc1-232b-45c6-9eba-efccc2b86a9b",
        "cursor": {
          "ref": "972f9d9c-2f87-447f-97ca-bd434e3612d2",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c3fbc901-4e9c-4450-9de5-f9a25211d0a8"
        },
        "item": {
          "id": "d4570fc1-232b-45c6-9eba-efccc2b86a9b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4b589f77-034f-4982-b558-0efaa9b29112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0584427-8313-4be7-ac26-e24d4abc48f1",
        "cursor": {
          "ref": "783eddbb-b270-490f-a70f-6e2ffafd92f7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c17c0742-6c4b-47a5-a029-828ac7252e3f"
        },
        "item": {
          "id": "b0584427-8313-4be7-ac26-e24d4abc48f1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "7a3d1beb-a61a-4b33-aa90-1eaf0573e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1539b33-a949-4d28-947b-46bc595cc3af",
        "cursor": {
          "ref": "2ac0c4b5-1f3d-4c1a-ab9c-b85a3a50e038",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f7e28c06-82aa-49f4-a8bb-388cf90cec00"
        },
        "item": {
          "id": "f1539b33-a949-4d28-947b-46bc595cc3af",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4106ca05-da77-4b1e-b02e-a64f2d4326d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e05464-54a2-44a4-8d2e-a8e0d1b125ec",
        "cursor": {
          "ref": "bce0403a-c70e-49b2-84f5-d6ff0826a41f",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "b470963e-6917-43a9-ad31-6cdf2d467f89"
        },
        "item": {
          "id": "36e05464-54a2-44a4-8d2e-a8e0d1b125ec",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "16062f7b-e36e-483d-ac1e-e5fee66fab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "377a5f6a-3595-4288-9d3c-2e35304fc9bd",
        "cursor": {
          "ref": "7ad74893-ae82-4ce8-8ce0-80fa7281cbd4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "420fdefc-28e0-478b-b6c1-eb0950cc7010"
        },
        "item": {
          "id": "377a5f6a-3595-4288-9d3c-2e35304fc9bd",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aa1b192d-fe51-4ba5-8cae-2faa36dae9d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea9cf98-1cd2-4a34-9658-e7525c9f39c8",
        "cursor": {
          "ref": "8c220a0d-ad2d-4d63-886d-9cb7827f6adf",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "09e7e215-950f-47f2-8028-bbfe287de09c"
        },
        "item": {
          "id": "2ea9cf98-1cd2-4a34-9658-e7525c9f39c8",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b932719d-296a-4b4e-98f0-93102957a1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4da1f50-ea65-4e7a-a499-464d12f595dc",
        "cursor": {
          "ref": "ee0f0155-7f2b-4aea-9d9d-bb36e65e4f90",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "75a51e21-86d3-4ad8-865c-cdf60566b72d"
        },
        "item": {
          "id": "e4da1f50-ea65-4e7a-a499-464d12f595dc",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e8b892d4-647a-40cb-a86a-df67a097c548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9381147d-ec8d-419f-aeb6-e22722c68c20",
        "cursor": {
          "ref": "3b101aac-d0b9-4acb-b362-a47897500740",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "88208aea-4440-42cd-8fca-b38651552f34"
        },
        "item": {
          "id": "9381147d-ec8d-419f-aeb6-e22722c68c20",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ba6ddf00-53f8-45b3-aba4-d991f985534c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aca28dd-9dae-45d5-8a7d-5142d3262c56",
        "cursor": {
          "ref": "58835176-8e8a-4df2-b710-de1065919745",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "01972166-9e51-4bb2-b406-290bf641d7d5"
        },
        "item": {
          "id": "6aca28dd-9dae-45d5-8a7d-5142d3262c56",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "780d8274-9d8e-4676-ab57-e681a316500a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba85e0b8-ff1c-4aeb-96a6-b9dfb0020d22",
        "cursor": {
          "ref": "6e93c517-e0a4-45d4-85ca-26d5f1116f14",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c19c49e5-c67a-451d-8457-464ae5ef3e66"
        },
        "item": {
          "id": "ba85e0b8-ff1c-4aeb-96a6-b9dfb0020d22",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "49041c85-eec7-4eb4-b285-70a1868ea5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a44f63-3822-44df-8244-b14412eac4e9",
        "cursor": {
          "ref": "796a0806-2f32-4344-900c-3b80cf45d143",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ede28f84-30e2-4302-8d63-06cfa82fdee6"
        },
        "item": {
          "id": "e2a44f63-3822-44df-8244-b14412eac4e9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b513867b-6d47-4ea2-ae97-0d1492ee1cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5190d7c-2875-41bd-a587-c50b8afa8d4a",
        "cursor": {
          "ref": "b6c854cf-89d0-4813-89bd-4a26d80df038",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9f528bf9-a42f-4466-9839-5f15f8c63959"
        },
        "item": {
          "id": "d5190d7c-2875-41bd-a587-c50b8afa8d4a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4fa7a47a-f2bb-410f-8c6b-d333918fc225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d56ac9-bf23-49dc-a6f9-6fda948a528d",
        "cursor": {
          "ref": "a1d93b9d-4e18-44c7-a53c-6225c1b97463",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5ae465e1-d683-4642-a65f-3deef8bf9056"
        },
        "item": {
          "id": "05d56ac9-bf23-49dc-a6f9-6fda948a528d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c68779c4-9548-4f6b-90e1-a3e91f165396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f361e41d-dd2f-4ed5-9b1c-5bde930e0fb9",
        "cursor": {
          "ref": "80847300-8178-4bbc-95c6-269155120103",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "b8308922-92df-4603-98ea-22268cac14b1"
        },
        "item": {
          "id": "f361e41d-dd2f-4ed5-9b1c-5bde930e0fb9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5988e936-c0af-40b5-9bf4-96c2e46927b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edbc40d-fc72-4ef0-8567-20a273ced50b",
        "cursor": {
          "ref": "d9e8bf72-521c-46aa-8e1f-34557e4eec8b",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "39fc73de-4f76-4327-ae79-fb4342621913"
        },
        "item": {
          "id": "0edbc40d-fc72-4ef0-8567-20a273ced50b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a7b92e10-728f-42e2-be0a-e66923f0f9e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e7b173-ae42-4d5a-b4c7-ada6f6d63f3a",
        "cursor": {
          "ref": "a1754821-d9e8-4094-81a0-dc9cea29e960",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9a567d74-b921-4500-a1c4-ff639304eec4"
        },
        "item": {
          "id": "88e7b173-ae42-4d5a-b4c7-ada6f6d63f3a",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "22e15d56-6738-4065-be2e-f172d7aaefc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1b63d3-16ca-458a-a5a0-61dadb097479",
        "cursor": {
          "ref": "07e970c4-c7dd-4349-9515-216d785abdb0",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1110db2a-21fd-4a2e-ae9a-8a77a1b842a7"
        },
        "item": {
          "id": "1b1b63d3-16ca-458a-a5a0-61dadb097479",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c6b10862-eb0e-447e-816f-553513cb6451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1708ef20-6dfd-401e-b4db-a5191ec1c07e",
        "cursor": {
          "ref": "0515517d-207b-4103-b8e2-fac940daad33",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "21ca5839-02a6-4c41-af2d-d211e71e901b"
        },
        "item": {
          "id": "1708ef20-6dfd-401e-b4db-a5191ec1c07e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "3823e968-d391-4634-a785-d7712c3322e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cbcbdcf-8c76-433c-9e30-07aacc246185",
        "cursor": {
          "ref": "af577904-a4de-4eff-bbfd-ac69b612f90a",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "57ddf0a3-03e6-4a6d-9766-352cda851388"
        },
        "item": {
          "id": "9cbcbdcf-8c76-433c-9e30-07aacc246185",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0d8fbdaa-7826-4d61-a17e-49662588b4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f486642b-2b5e-4d38-8fdf-cf2a779fdb15",
        "cursor": {
          "ref": "20a7195e-8a27-4b28-a1ca-baf52758975c",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e28fa185-be5d-4305-b8ba-6c3a035e007d"
        },
        "item": {
          "id": "f486642b-2b5e-4d38-8fdf-cf2a779fdb15",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "05de763d-56e4-4cac-ab0d-56f4fc3d9692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0660b48-d983-4603-8fda-8687fc9ed2f4",
        "cursor": {
          "ref": "804f1a29-405e-4b94-9cdd-d738b8285ed8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "3f74efeb-b6d3-4e67-a565-79c382c32c09"
        },
        "item": {
          "id": "d0660b48-d983-4603-8fda-8687fc9ed2f4",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "59db401a-3464-43fb-bd9a-ccb827f115fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bac4a4d-8417-420e-899e-d8c6cf5772d5",
        "cursor": {
          "ref": "caa04d69-e25e-4105-8483-a5515e47ea6c",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9b8f6064-b769-4108-8c57-b4e3aee03cfc"
        },
        "item": {
          "id": "5bac4a4d-8417-420e-899e-d8c6cf5772d5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "72815caf-6dfb-4149-9f2c-b8f7ef5afdcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7e47fe9-dd1f-4954-ab05-e67ec9ababe6",
        "cursor": {
          "ref": "e32a22e9-e213-494e-993d-c2ce251d8d43",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3f71377a-c73a-4504-b480-30e36c933e89"
        },
        "item": {
          "id": "b7e47fe9-dd1f-4954-ab05-e67ec9ababe6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "90dec51a-cca2-44d9-a70c-6ac4863232c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c81e0f8-caaf-4eec-bdf0-9046f9d00d1d",
        "cursor": {
          "ref": "d15bc76a-f3e9-4e56-9a1a-f2b0f2e1940b",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "df9f99f2-5aa4-41c0-acbb-e66bd947f0aa"
        },
        "item": {
          "id": "2c81e0f8-caaf-4eec-bdf0-9046f9d00d1d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6ebe4242-afb1-45f9-be82-8b59811acb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de708a56-8cde-4367-af0c-79d9619a55ba",
        "cursor": {
          "ref": "7ac36cf5-854a-42fb-a5d0-a60fac7ffbe8",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "50cc2689-d628-4926-a580-4f9ec6992ea3"
        },
        "item": {
          "id": "de708a56-8cde-4367-af0c-79d9619a55ba",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ce38cbf4-9da5-45dd-bfb7-48f73076bfae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7fa297-81f5-4543-bdf7-e2e731a30600",
        "cursor": {
          "ref": "a8b06de6-5790-43b4-90f3-c1779c9ee4e0",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "4a4e7dc3-d92e-4b79-8619-8ce92647eb75"
        },
        "item": {
          "id": "4f7fa297-81f5-4543-bdf7-e2e731a30600",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "78f04a2c-0b45-4199-9069-a32a8c3db9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fab8d7-b30c-42c7-832f-c00c888e2c3c",
        "cursor": {
          "ref": "7ba15b07-f210-479b-b81d-e98908557215",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "963e3d02-ba9a-40cf-b0f0-a87dbf855672"
        },
        "item": {
          "id": "36fab8d7-b30c-42c7-832f-c00c888e2c3c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d16e0f17-ced2-4a05-8c43-eda046815b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eed81f9-d64a-4406-bc0c-d697d20723e4",
        "cursor": {
          "ref": "415088ee-7f6e-4226-9f14-7838e9729098",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f3ba55d2-2217-441f-8183-aa06e21cdc55"
        },
        "item": {
          "id": "3eed81f9-d64a-4406-bc0c-d697d20723e4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f70fd22d-a992-4f2c-a47d-28954c614793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a82bb6da-b2d3-49ac-b280-610b28c7cfcb",
        "cursor": {
          "ref": "c1ffa379-4c75-47aa-8148-869b5b977190",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "5a68ebbe-3b2e-49a3-89f1-92ad2cc29f32"
        },
        "item": {
          "id": "a82bb6da-b2d3-49ac-b280-610b28c7cfcb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21c5bae6-2c85-406e-8356-68969d3d8edb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 65,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7abb0e-4152-46d8-ba7d-98f295137794",
        "cursor": {
          "ref": "65801b65-2c7e-43f0-9e81-02f20de0a56e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "33519d4b-8dc0-48b3-8e49-334662a47da9"
        },
        "item": {
          "id": "8e7abb0e-4152-46d8-ba7d-98f295137794",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3092678c-d6f6-4b31-aa41-f1c19159b909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d52f4b-1a8e-4812-ba7e-6a3d0c5daa99",
        "cursor": {
          "ref": "f04e61be-b349-4449-95cb-b0bdbcb817da",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "6fe9abb7-79cf-4d28-ad0e-3bdbe4162795"
        },
        "item": {
          "id": "28d52f4b-1a8e-4812-ba7e-6a3d0c5daa99",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "75edbc0c-2877-4eaf-82bc-4966adc3032a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b5c473-bff9-4516-9b65-c02d6d8b0432",
        "cursor": {
          "ref": "509ffc68-37a3-4d4b-924d-e05b3e6d404d",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9528e49c-9604-47ef-8eee-c45ce966f411"
        },
        "item": {
          "id": "10b5c473-bff9-4516-9b65-c02d6d8b0432",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2d3be202-edad-443f-91c6-6f236d5f1bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "000d861f-c0ff-4155-b4a1-cd7bcbe9b24c",
        "cursor": {
          "ref": "5039a2e1-ec94-449a-af95-1a63fd0bf34f",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "85550c7c-9bc9-4297-a0fa-4e131a919c28"
        },
        "item": {
          "id": "000d861f-c0ff-4155-b4a1-cd7bcbe9b24c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "df63530e-79af-4d4f-830b-2cc63f1a3424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc535de-9d28-4162-a267-7b1098e01edc",
        "cursor": {
          "ref": "1299a383-72af-4c1a-bace-150416f43a41",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "c353663c-3875-43ac-821c-40a96597e781"
        },
        "item": {
          "id": "4bc535de-9d28-4162-a267-7b1098e01edc",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "4e64d7c4-f8f6-4ec4-9a23-e71d38ad5ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5031b59e-20a9-449b-aab6-81e54b825e2b",
        "cursor": {
          "ref": "b8f322cd-30c7-4d17-b42c-f482df720673",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "00842499-07b7-4509-b74a-57f19f728efb"
        },
        "item": {
          "id": "5031b59e-20a9-449b-aab6-81e54b825e2b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3f3faed8-dca7-4c29-acb7-e7e6c62e3342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9afffa88-e115-4753-849d-4e844a15f7eb",
        "cursor": {
          "ref": "7713ed21-954e-4634-86f8-341e271cad2b",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aab8f968-f0d8-4f1c-82b8-a06d81f6d92c"
        },
        "item": {
          "id": "9afffa88-e115-4753-849d-4e844a15f7eb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6d6e2365-4b15-4987-9e51-09b18d220c56",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 64,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6994f9c-dae7-4d83-b8ed-c9336c1bf5f1",
        "cursor": {
          "ref": "99c764ec-9ec0-4b08-ba61-831ef35b3832",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "04c1f50e-fd6a-47b6-aa7e-98e42ade796b"
        },
        "item": {
          "id": "b6994f9c-dae7-4d83-b8ed-c9336c1bf5f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "37ca06ea-d58b-4eb3-b0c2-1ccf1bdb8822",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26626cd-c296-4b75-9106-a07a2ac57863",
        "cursor": {
          "ref": "6d981be5-863b-42fc-a635-ef3f0e8fd1fb",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "cf0cecc4-9cf0-4b61-9da8-b18ca78b09a9"
        },
        "item": {
          "id": "b26626cd-c296-4b75-9106-a07a2ac57863",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "88039c16-2642-4456-b497-b0ac26204195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca2606cc-485a-40b1-bb0e-e30ff6856db7",
        "cursor": {
          "ref": "a45efc76-8a3b-43d9-821e-8e60307d384e",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "451db349-53ad-4a03-806c-f8bb03585eac"
        },
        "item": {
          "id": "ca2606cc-485a-40b1-bb0e-e30ff6856db7",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fd3c1e91-9edf-45c6-9d1f-b2d5bb8ff685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b572d0bb-8ccc-4cb8-99cd-9739d237ea4c",
        "cursor": {
          "ref": "19f31e24-d2a3-4260-8572-2a0ca7efe39d",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "fee6a925-112f-4eda-97fb-a3869ef56b70"
        },
        "item": {
          "id": "b572d0bb-8ccc-4cb8-99cd-9739d237ea4c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8cec2947-6c63-462f-8154-be2d36a02c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd74cc2e-1546-4458-88c1-7fbbbecd2c4f",
        "cursor": {
          "ref": "315c6320-33aa-46f4-b182-117c094b692e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f5b4ad19-babc-4103-af60-839bd6123ba8"
        },
        "item": {
          "id": "fd74cc2e-1546-4458-88c1-7fbbbecd2c4f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "922964d3-afcd-48f6-9d49-f3c1f244d71d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acf77a8-7d41-426f-97be-2a029a1c186a",
        "cursor": {
          "ref": "16ef1a04-8687-4f7a-b27e-32f23624d4d4",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d1201cf1-0d4c-49fe-9b66-765beef4bdd1"
        },
        "item": {
          "id": "4acf77a8-7d41-426f-97be-2a029a1c186a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fa0961fb-3918-4301-9848-42ba1fa11366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9155d17e-140a-48a8-ae13-6246a32a02da",
        "cursor": {
          "ref": "053cbec3-aa66-4c90-8e2c-a99434cd6e23",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5ba5c780-54f5-4ba7-bb29-dad99021b6ea"
        },
        "item": {
          "id": "9155d17e-140a-48a8-ae13-6246a32a02da",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8bd29df8-9941-4470-af5c-2d281ed30981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed66276b-6e4a-4346-bdeb-a58d78061fa6",
        "cursor": {
          "ref": "8ea99f9f-ee7a-497a-97da-ca5132ca4d4e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1b30a9cf-17bd-462f-979d-0fbe9bd4cd07"
        },
        "item": {
          "id": "ed66276b-6e4a-4346-bdeb-a58d78061fa6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "932065fe-3c65-4cd7-8660-89f3aa9e7047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4acb1c9a-ae15-485a-a91a-93cce13a7749",
        "cursor": {
          "ref": "ef80f94c-e824-4193-ae19-925aaea2f1b4",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0ae1bca2-d59b-4718-89b4-02031cbafe1e"
        },
        "item": {
          "id": "4acb1c9a-ae15-485a-a91a-93cce13a7749",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "81811809-f34a-41ca-baf0-743a071fdb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fccf7d-f3df-4654-ab01-942e94faf867",
        "cursor": {
          "ref": "082e6cc6-adf7-41ba-9d68-3e13841d412e",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "81491409-a055-417d-a8d5-0e0756abe545"
        },
        "item": {
          "id": "d5fccf7d-f3df-4654-ab01-942e94faf867",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ba3a9a33-0604-4750-9f61-62bb0f742696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3c8b64-1d4b-4f5c-a7b6-1df84a0b1d33",
        "cursor": {
          "ref": "70477524-df47-4383-8ef3-88765a5a08c4",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8f12c61a-f4a0-43ba-b326-98871c56e5e3"
        },
        "item": {
          "id": "3d3c8b64-1d4b-4f5c-a7b6-1df84a0b1d33",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "1d90ef46-d5e3-4356-9212-320c4ca0eea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f44234-1d59-401e-8914-1aa0698e3ddc",
        "cursor": {
          "ref": "49257d7b-cc4a-4249-8360-54c1bff61d1f",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8b68b53f-12e5-41c3-bc5e-fc7444c4a03e"
        },
        "item": {
          "id": "73f44234-1d59-401e-8914-1aa0698e3ddc",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9118643e-8bd2-4f3b-96a1-d3a1faad85f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e872cc22-2031-4a4b-a481-243a3f8d0d14",
        "cursor": {
          "ref": "04074472-aad5-4c93-a500-32e535cdb7f0",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "ff63753b-bf00-41a1-8b70-576b5bbb3080"
        },
        "item": {
          "id": "e872cc22-2031-4a4b-a481-243a3f8d0d14",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "6af934b7-6030-4ffe-bac2-66bc545cfbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070e308a-272b-4c38-bec6-af6d1f4dfcf5",
        "cursor": {
          "ref": "fefea4df-9d48-4c15-a204-06dbd12717ae",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4c4c9653-815c-4a23-8fb5-7e443ff2d8c8"
        },
        "item": {
          "id": "070e308a-272b-4c38-bec6-af6d1f4dfcf5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e2621f0c-4a5b-4795-9f55-5e9b28e50887",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4107a329-221e-4465-a2ff-e15f7598b8ba",
        "cursor": {
          "ref": "349604d7-eec8-4866-ae14-5f508683edc7",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9d3673f5-c171-4e2f-97ae-43eeee9045fb"
        },
        "item": {
          "id": "4107a329-221e-4465-a2ff-e15f7598b8ba",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "530b6daa-b42c-480a-a8e5-975214de3808",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd7197c-8377-4c45-887b-b703798ad7d1",
        "cursor": {
          "ref": "8f9d44cb-a9e6-40e4-ab36-1336b2ef0445",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "82cc1caa-3910-4a26-b753-b540782989fa"
        },
        "item": {
          "id": "8bd7197c-8377-4c45-887b-b703798ad7d1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "f35f5876-3622-47bb-aac5-696482d9fd06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52f75ac-f24d-4200-aeb9-b0ffdb640afe",
        "cursor": {
          "ref": "4490da41-b095-460b-be84-348e23a914ad",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3752dfbb-904c-460f-a163-4c1153790106"
        },
        "item": {
          "id": "b52f75ac-f24d-4200-aeb9-b0ffdb640afe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5a014b2d-0204-4f9f-ba03-89ef11fba04f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccbffc6-e12a-4e02-8e98-d31bcb208ce3",
        "cursor": {
          "ref": "0caa8dc5-7f6b-4886-8654-ee86a4dcc0f4",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "90c4b5e7-3348-49fc-8dbb-501dab90aaf0"
        },
        "item": {
          "id": "8ccbffc6-e12a-4e02-8e98-d31bcb208ce3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c88c2f50-365f-4f3c-986e-65f02bbb4bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72d87bc-2343-41e2-afa3-3ef3088efe70",
        "cursor": {
          "ref": "7bc005fc-01af-4ed3-ae45-22c28a656ca0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a50573ea-ab5c-4a02-aec8-d8637aca7520"
        },
        "item": {
          "id": "a72d87bc-2343-41e2-afa3-3ef3088efe70",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "1008b0be-5bd6-49f0-bd19-67d37176d4f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439a916a-31bf-4185-92ed-1a5fe78c6be9",
        "cursor": {
          "ref": "2d88ce10-324c-495d-a3bc-f0eee9ebeb2f",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f693ec3f-acb0-43ca-93f5-3dde063b7db0"
        },
        "item": {
          "id": "439a916a-31bf-4185-92ed-1a5fe78c6be9",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bf6a5eeb-de2c-479d-b1b6-f5d067660320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffc64a2-0322-459a-95d0-fe2f1b7ef382",
        "cursor": {
          "ref": "0ecfa624-6692-4df7-8280-3e20a89633ee",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b122c406-11db-4938-9949-c5fbe6472c4a"
        },
        "item": {
          "id": "6ffc64a2-0322-459a-95d0-fe2f1b7ef382",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9cfaf1da-b2e7-4121-b423-aec2e8c05516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0ebefe-a65a-4c92-9ff9-302c33015608",
        "cursor": {
          "ref": "9cc964f6-3705-4765-95ec-327275a58e54",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "54fee841-f64c-4b3c-916e-308825706acf"
        },
        "item": {
          "id": "4a0ebefe-a65a-4c92-9ff9-302c33015608",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1da1a30b-061e-46df-a2db-94eca9dc0b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a9b3b-e2a3-43e1-9d3c-5cc59c6b031f",
        "cursor": {
          "ref": "53fabf2b-9625-4dc0-8700-4498c69477e8",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "4a93ed45-ce40-41b1-a912-76389583392e"
        },
        "item": {
          "id": "371a9b3b-e2a3-43e1-9d3c-5cc59c6b031f",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "94a78220-0480-4600-b381-a1e71b342db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8c15cd-e915-45ea-88a6-e79727ddf841",
        "cursor": {
          "ref": "17cb1aaa-8ef9-44d6-bfb6-137918a199a3",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a5de7f0f-d7c9-4242-88ca-135fd823c41d"
        },
        "item": {
          "id": "df8c15cd-e915-45ea-88a6-e79727ddf841",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5ab21717-9fca-414e-8376-26029f9b883f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84504c9e-0c26-4721-b565-2005d9923349",
        "cursor": {
          "ref": "6dfb85dc-716c-48ed-8fbc-d0b814cc9a99",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f89486ed-7c3f-452b-ab23-57ea35c3e5a6"
        },
        "item": {
          "id": "84504c9e-0c26-4721-b565-2005d9923349",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "dbeab0d5-80d1-48a9-8021-1427cc1e432e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f1d41a-2f32-43b6-b076-03771a6b7530",
        "cursor": {
          "ref": "aa057657-a7ba-46aa-bf80-7c56ff2f79df",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b4147922-d6a3-41cf-a3f6-2fef98970e63"
        },
        "item": {
          "id": "94f1d41a-2f32-43b6-b076-03771a6b7530",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a179f758-365a-4fc9-be1d-a1529ddbf9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfb4f65-4b7d-49de-bf25-fc172c5b2bf7",
        "cursor": {
          "ref": "81ce34ed-184a-4c8d-bc17-68004283bbef",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ab2d502d-1fd5-4eca-88a2-d768c15b7afc"
        },
        "item": {
          "id": "abfb4f65-4b7d-49de-bf25-fc172c5b2bf7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e9f84f29-b0c6-498f-8f27-285abe638ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c349b5ff-8845-4624-b6ba-f3b6b1a5a496",
        "cursor": {
          "ref": "423f174e-1f61-486e-9f3d-4aef798e0155",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d5a95742-ee5a-459e-9fb4-cd8b135915f1"
        },
        "item": {
          "id": "c349b5ff-8845-4624-b6ba-f3b6b1a5a496",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0d2c428e-ac70-4b2f-a492-756e15636077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824b923d-1593-4add-8cb3-87e08a19e284",
        "cursor": {
          "ref": "970a7aa3-31ee-4cb5-8555-55cb74cfe5ca",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ccd06965-8bc7-4a5d-8d09-8e4efbb40dbf"
        },
        "item": {
          "id": "824b923d-1593-4add-8cb3-87e08a19e284",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e7d17180-1eed-44b8-8d89-572c0d96129e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23eacdaf-cb0c-406d-8a50-38d17e6e053b",
        "cursor": {
          "ref": "4646d156-a4b7-48fa-b98e-dfee13d5ff3c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "96d025c2-601b-43ea-b8ba-f8bc3986e7ef"
        },
        "item": {
          "id": "23eacdaf-cb0c-406d-8a50-38d17e6e053b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1ed2c962-d454-4114-bd2c-a27f9096e036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4445f262-478f-4b0a-8624-13c3c6a559a2",
        "cursor": {
          "ref": "4fa77102-1992-4fa4-80f2-616b252bcb09",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "9c1f5727-fbdf-45ea-8e76-65416eb7d4e0"
        },
        "item": {
          "id": "4445f262-478f-4b0a-8624-13c3c6a559a2",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "0fdf4345-5377-4546-add6-e41ad3955943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59abf98-32ce-438f-a09a-392dfcd159cb",
        "cursor": {
          "ref": "3991969c-0797-4016-8412-c25b91632830",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c27618c1-7b2b-429f-866d-7ac7f5bc59bb"
        },
        "item": {
          "id": "d59abf98-32ce-438f-a09a-392dfcd159cb",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6c7b2f9d-df06-4e13-b387-ff3164fb0bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd87148-9b6e-48fc-addc-72fe01a5e581",
        "cursor": {
          "ref": "6ce0aa8e-1e45-4f4d-8d43-73f5a664d581",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7e006c01-aa9d-485b-92ed-3a6b956ab676"
        },
        "item": {
          "id": "3bd87148-9b6e-48fc-addc-72fe01a5e581",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2a56b47b-471a-435a-b98d-1117ef0aa0f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5f325a3-df1a-473c-9b34-64c72364a049",
        "cursor": {
          "ref": "04e125ce-7818-430a-97ab-246589e0b58c",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "20e25300-b226-45c3-a2ba-e46455e1fe72"
        },
        "item": {
          "id": "b5f325a3-df1a-473c-9b34-64c72364a049",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f42695bd-61ce-4cd9-94a4-7ed69573113e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f9798f-049b-413a-9d99-f13f8f2dbfc1",
        "cursor": {
          "ref": "7ab65068-6c4b-483f-ab14-f8fe9efe5886",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ff2d9d2d-afec-42bd-8916-14f07ffad572"
        },
        "item": {
          "id": "c9f9798f-049b-413a-9d99-f13f8f2dbfc1",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "414c59e0-e32d-45d4-b663-64b119cfe047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd1ee65-d98b-4d91-aa3c-426a2d007fea",
        "cursor": {
          "ref": "3d722407-9a4c-4f99-947e-1c890daed286",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "07f4fcd5-b3bf-4883-b8dd-a26706d881d9"
        },
        "item": {
          "id": "2cd1ee65-d98b-4d91-aa3c-426a2d007fea",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d172c739-eef3-4a3b-8193-0f86f44b083f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952fcbf0-ee9c-4782-a2f1-c60d8be6c74a",
        "cursor": {
          "ref": "6fbbb2c0-7541-49d7-89d5-f709ce593c99",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a97ba432-5f15-4700-907b-eb1afc880118"
        },
        "item": {
          "id": "952fcbf0-ee9c-4782-a2f1-c60d8be6c74a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7b15674c-9307-49e9-99a6-0a85c1ce981e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87916de2-932a-49c2-a497-4870d4ca9194",
        "cursor": {
          "ref": "f4ad4041-8ef8-464c-92b3-0865192bb38d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "bbd0a944-067a-4a34-b3cc-7038bc396c2e"
        },
        "item": {
          "id": "87916de2-932a-49c2-a497-4870d4ca9194",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ace70b7d-f84b-4ebb-82be-07356ab69b04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0413c0d7-3cc1-4178-879c-faecc20da875",
        "cursor": {
          "ref": "37e13128-3c6b-4e22-8db9-005c80b3cf92",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "da365785-67a8-49e3-9a4b-fb56b77817b3"
        },
        "item": {
          "id": "0413c0d7-3cc1-4178-879c-faecc20da875",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ea0242c2-f585-487e-a514-017604177d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adaf35ed-565a-417f-9a72-0ca2fac8abd1",
        "cursor": {
          "ref": "d1f9f1c4-522f-4500-b0bf-5ea9aebd70c4",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6e6f7d57-77e6-4571-b1ba-c57253bd6e25"
        },
        "item": {
          "id": "adaf35ed-565a-417f-9a72-0ca2fac8abd1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "91545bf1-ba10-44e7-a3fb-f0f32be3d5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a00baf-2b1c-4db4-b312-11559fd5c6d7",
        "cursor": {
          "ref": "23fc65b4-912f-4df5-8c5f-4b2e044e2b6d",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1ec2b9bf-920b-4b7e-94cc-5b143db96299"
        },
        "item": {
          "id": "61a00baf-2b1c-4db4-b312-11559fd5c6d7",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "662c2ec9-d49f-45a8-a807-89afcf239531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77dc673-3c9b-4a63-8304-136ed1f17888",
        "cursor": {
          "ref": "df81c179-2c8f-42a6-a06c-96b9cf0e8e9f",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c7e0a01e-3d7b-4e93-8b64-75dd006e8d80"
        },
        "item": {
          "id": "f77dc673-3c9b-4a63-8304-136ed1f17888",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0c3e7433-d751-4dee-9aba-3068bf930260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b7f5e-c8fa-4711-b611-27b759e01562",
        "cursor": {
          "ref": "6ef1635e-b0b8-4d5f-8ac8-39865dfc6e81",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "b7f6396a-1b0d-429b-8748-cec231b72bcf"
        },
        "item": {
          "id": "690b7f5e-c8fa-4711-b611-27b759e01562",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "90740e20-e5d2-427f-b223-dec1dca34ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17151540-777b-4eb3-aa0f-26f93b945e5b",
        "cursor": {
          "ref": "a1a31faf-d198-410a-91ca-918a51d511b7",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3bf77ed8-9e2d-4e5a-b9e8-875fc2927b0b"
        },
        "item": {
          "id": "17151540-777b-4eb3-aa0f-26f93b945e5b",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0b39bf9d-4c75-4bda-bb00-5795cb56a0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c9f8eb3-c444-4efd-8c22-053942a75295",
        "cursor": {
          "ref": "c2d6b789-a7e6-447d-b10f-eea63e3331b9",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3c1ae091-88b7-4ac3-a4c2-e31ce6bddb72"
        },
        "item": {
          "id": "8c9f8eb3-c444-4efd-8c22-053942a75295",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e94ebd63-3fb6-4c1d-a8a3-83eac83ad4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7e2b97-106d-4b20-91c0-f8b7d6018a5a",
        "cursor": {
          "ref": "6cd26d5d-9e88-4086-9aab-fb4a57797618",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "58657da0-0abf-4291-bbef-52d867829ae6"
        },
        "item": {
          "id": "4c7e2b97-106d-4b20-91c0-f8b7d6018a5a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5f2493f0-bedd-48b2-b428-fd12e9382934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef051ab-a6ea-4fba-b936-c525ab0c875b",
        "cursor": {
          "ref": "ee7caac7-6649-4b74-a8be-278e1731d789",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2dca4953-27d1-4adb-9d5f-f080edafc97f"
        },
        "item": {
          "id": "5ef051ab-a6ea-4fba-b936-c525ab0c875b",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b9e57aeb-5489-41d3-96df-464a5347a80b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19af08b-fddf-4e8b-9caf-a7829128e796",
        "cursor": {
          "ref": "9a140d2f-61c1-45b3-8c45-af8776c5c3cf",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "8c6eb97a-8d44-419e-a8d0-962d590b9649"
        },
        "item": {
          "id": "c19af08b-fddf-4e8b-9caf-a7829128e796",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "64c37b6c-b2cf-4bea-a806-3b1a3edc1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5b54b5-8cc1-4768-8e78-0e7832142cb5",
        "cursor": {
          "ref": "ed7042d3-a415-4330-aae8-271c77a0d83a",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d01f6681-ab69-4325-80ae-6362cb71eef1"
        },
        "item": {
          "id": "fc5b54b5-8cc1-4768-8e78-0e7832142cb5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "dcbfd5d6-f819-4211-9dde-c43f175017af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5337ad5c-b2fe-4771-abaf-360043762bbc",
        "cursor": {
          "ref": "dfca661f-a073-41fe-9cf7-0f59e9a6d06e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c4a5dcf0-7c2b-46bd-bce6-2f4de28e3098"
        },
        "item": {
          "id": "5337ad5c-b2fe-4771-abaf-360043762bbc",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b6b326f6-3a7c-4f38-b5f0-5d16743691ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c42a58c-d6cd-4c2a-a2d0-fa5418414b22",
        "cursor": {
          "ref": "8a41cee9-5877-4222-aaf8-55fa4e690460",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "10117b83-bee2-4772-b56c-7910e39718aa"
        },
        "item": {
          "id": "2c42a58c-d6cd-4c2a-a2d0-fa5418414b22",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "9373aa5a-280a-4bc8-aaa1-9a7b6f62fd3a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 187,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f41baee-f58a-41ca-968c-bc4cf788c97d",
        "cursor": {
          "ref": "fd0001e6-fea6-4a6f-9b82-c84ca17e5820",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "8fb87cd7-8fc4-4712-a5a1-891998cdb20f"
        },
        "item": {
          "id": "3f41baee-f58a-41ca-968c-bc4cf788c97d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc1bff7a-c26e-45af-8a3e-0b21080fa0b6",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a90cdc-91c7-4d56-80de-d1463e8b9696",
        "cursor": {
          "ref": "5e2058f4-3f3d-4691-80f3-7e28e492ebfc",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c12d3252-a308-4509-8f2b-25be052c8788"
        },
        "item": {
          "id": "89a90cdc-91c7-4d56-80de-d1463e8b9696",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e7759c54-a263-41cb-8b77-477fa220c835",
          "status": "Created",
          "code": 201,
          "responseTime": 77,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9498c372-6664-47e8-b7ef-b578ca7be327",
        "cursor": {
          "ref": "124a11ca-399c-4aa2-9cf0-33ba41e8ca37",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "796433c2-24c2-4a8e-acfa-59d551738110"
        },
        "item": {
          "id": "9498c372-6664-47e8-b7ef-b578ca7be327",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "baf286c6-2cc5-4fdb-8d0d-4c036841f2ce",
          "status": "Created",
          "code": 201,
          "responseTime": 76,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "afcde318-8120-43d0-84b1-c0facf32fee7",
        "cursor": {
          "ref": "05fccd5d-a07a-4286-bdc6-0c817b5fb466",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "39f9e694-a124-4d0b-ad8a-57123c698383"
        },
        "item": {
          "id": "afcde318-8120-43d0-84b1-c0facf32fee7",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4d0684a2-0f9c-426f-91b4-9a7166e6631c",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d376ddf2-9167-468d-a3d3-c6908954eabc",
        "cursor": {
          "ref": "215bf41c-a617-4a4a-a76f-835c5ecf973c",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e715e667-4d78-4649-9f79-e5e26be31d6a"
        },
        "item": {
          "id": "d376ddf2-9167-468d-a3d3-c6908954eabc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "139922f2-7f7c-4854-82e1-34fc4848ef37",
          "status": "Created",
          "code": 201,
          "responseTime": 75,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a5a094-a13d-4555-a9f0-97cb9d5a9aaa",
        "cursor": {
          "ref": "b4cba4ef-f658-42ef-bef9-d9719209f8d3",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3857b1f4-7859-4c5d-b0c1-0a21920fb637"
        },
        "item": {
          "id": "26a5a094-a13d-4555-a9f0-97cb9d5a9aaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c008fa1b-8c36-4f96-af75-5096431900a5",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56d27c-e967-4db7-b5b0-9ca6f5836722",
        "cursor": {
          "ref": "68aa2491-29e7-4639-b547-30cbaa07794c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "983a9ab6-6cca-46a7-b3de-55bad2235715"
        },
        "item": {
          "id": "4b56d27c-e967-4db7-b5b0-9ca6f5836722",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bca679fd-0f65-465f-a61a-21c074f12f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b56d27c-e967-4db7-b5b0-9ca6f5836722",
        "cursor": {
          "ref": "68aa2491-29e7-4639-b547-30cbaa07794c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "983a9ab6-6cca-46a7-b3de-55bad2235715"
        },
        "item": {
          "id": "4b56d27c-e967-4db7-b5b0-9ca6f5836722",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bca679fd-0f65-465f-a61a-21c074f12f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05377d47-9dea-408c-a42f-87edd54b7ec8",
        "cursor": {
          "ref": "a3bf925d-4c12-46b3-aff0-1fa3540da81c",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d032bf00-4006-41df-8b58-b42d59d324d2"
        },
        "item": {
          "id": "05377d47-9dea-408c-a42f-87edd54b7ec8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4c074e23-e830-4232-be39-115df039bcc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151839c3-8424-4db3-a8f2-16a1ed573b32",
        "cursor": {
          "ref": "a0451eb8-4a39-459c-b2c0-1015a044ee64",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "427987e3-060c-4baf-a406-e5dcbcb00dbb"
        },
        "item": {
          "id": "151839c3-8424-4db3-a8f2-16a1ed573b32",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9a1c89c5-bd84-4f53-9810-b2da7de5a680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ba5179-bff9-428b-a1df-7a41495bbb8c",
        "cursor": {
          "ref": "bb752d62-9097-42eb-aa2d-e3af5c1cc8fb",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b76d704f-89c2-48ee-aa30-5c2c8710e18c"
        },
        "item": {
          "id": "43ba5179-bff9-428b-a1df-7a41495bbb8c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "651f22e8-8db8-4489-b6e6-17d938970a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4a5119b-dd03-4967-a131-12b2b4581e6b",
        "cursor": {
          "ref": "a33b413b-e105-4a52-8029-0e36c8e7d05e",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1dea5b32-9db2-4661-a315-30748f2ee12a"
        },
        "item": {
          "id": "d4a5119b-dd03-4967-a131-12b2b4581e6b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ec730908-cde0-4af9-88eb-a39ae12a5145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e801c2d-afb3-405c-8b48-908bf0d1087c",
        "cursor": {
          "ref": "a49d16c0-77e6-4745-8b20-f5ee7c1afc8e",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9d607396-ec22-45b1-ae99-36f22f55aa0e"
        },
        "item": {
          "id": "8e801c2d-afb3-405c-8b48-908bf0d1087c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8b4c3ffe-2797-4fe6-8e78-9f2b2b57bd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e7a0fd-5982-47b6-92fe-720d88f5942e",
        "cursor": {
          "ref": "d84fb948-5acd-4c3a-87bc-2253d1e8d452",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f0b28c97-552b-4aed-ba06-3e168ea6ab74"
        },
        "item": {
          "id": "d3e7a0fd-5982-47b6-92fe-720d88f5942e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "403409b6-d1af-42b4-a013-64bb002b1c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf28f03-bd21-4411-9123-e8d01ba4eba7",
        "cursor": {
          "ref": "efb58890-b425-45db-9aa8-031578f2ed40",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6820ce2b-09e8-475d-8906-f7c6613f8770"
        },
        "item": {
          "id": "faf28f03-bd21-4411-9123-e8d01ba4eba7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7c07f8f6-6b4b-4543-ab97-ccafd30666b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fec52bd6-5d60-4363-b465-97ea5668c2a6",
        "cursor": {
          "ref": "de488b52-0e02-45ec-99ba-0d92d9f5a098",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e8473c90-12ef-4895-a916-e41817a66aa1"
        },
        "item": {
          "id": "fec52bd6-5d60-4363-b465-97ea5668c2a6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e75e2325-1c1a-4767-8195-54e5378e23d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e77a93-7d97-48e4-8999-192c5ea1cd75",
        "cursor": {
          "ref": "c2d9b74f-a6bc-4d1a-be7d-2d3685118754",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e9c4e10d-0db9-468e-9951-ef3242b69358"
        },
        "item": {
          "id": "05e77a93-7d97-48e4-8999-192c5ea1cd75",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2260da7d-b37d-4526-b4a9-5da4c8895fb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08931aae-90bb-40f9-92c9-733f5ae4b2c4",
        "cursor": {
          "ref": "ddf32b43-72df-4694-a303-8b39ba61ac04",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d7e9462d-ec71-43a8-8d35-2c91e49fce7e"
        },
        "item": {
          "id": "08931aae-90bb-40f9-92c9-733f5ae4b2c4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3f1ce774-2193-4090-b26d-d0775a1213ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d735f9-5883-48a0-aa93-9eb5bbcdfbde",
        "cursor": {
          "ref": "1dc3944c-3053-4354-9c61-29b47f7afca0",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "1760b857-da8b-4d12-8ebf-82cf76a0baa0"
        },
        "item": {
          "id": "a5d735f9-5883-48a0-aa93-9eb5bbcdfbde",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9c46bb5c-1bdd-47d3-8f1e-c9c0edf61329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a17fec-4569-4f22-9540-aa1ae520868c",
        "cursor": {
          "ref": "9341190e-b6a6-46b1-ba02-380d621b7637",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "39d9cba2-4731-41ca-aa96-3650e1d8e98e"
        },
        "item": {
          "id": "f4a17fec-4569-4f22-9540-aa1ae520868c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "46fd6e7b-ec6a-48a1-b864-8ca1dabac526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba6188e9-ea54-4b90-aba2-1a125b76933d",
        "cursor": {
          "ref": "4f5e1f74-6888-4b7d-9fbf-16d647e57047",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "be52dc2a-cf86-463f-a7f0-9b4a8ac7b1b4"
        },
        "item": {
          "id": "ba6188e9-ea54-4b90-aba2-1a125b76933d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "e4e5583f-ecdc-49a1-b16a-0564b94b74a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b28757-dc36-4859-b39c-d44593064425",
        "cursor": {
          "ref": "889cb51b-e044-49db-866b-3ceb48943a57",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "86f7c193-0018-40c1-9c53-88e021754d25"
        },
        "item": {
          "id": "48b28757-dc36-4859-b39c-d44593064425",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2f4e5ce3-ca26-436e-a577-51935d10622f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93ed494-5802-4804-a944-cbd89d5d9c94",
        "cursor": {
          "ref": "8c342e9b-3e0b-4a36-93f2-e64e4fab9c46",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "52104c3b-b4b6-4fd2-8949-faafcbd890ec"
        },
        "item": {
          "id": "f93ed494-5802-4804-a944-cbd89d5d9c94",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b7c3be3b-c522-469e-af4e-108a3c6dcc53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1090b689-398a-48e8-a14b-4a02bc9d114d",
        "cursor": {
          "ref": "567de11a-d498-484b-80a3-ef39d746c82b",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8d4d84ee-4f24-49f8-8489-3b03d7971957"
        },
        "item": {
          "id": "1090b689-398a-48e8-a14b-4a02bc9d114d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "726a0241-08de-4b4c-9f02-4683eb694b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "182d43f6-79a2-4f55-aa1e-1877922ce2a4",
        "cursor": {
          "ref": "b11ad78c-6980-4290-a3df-7ae208c68fd4",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5749cb6a-b388-445f-ab91-1bafa86b978f"
        },
        "item": {
          "id": "182d43f6-79a2-4f55-aa1e-1877922ce2a4",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e7452107-af9c-4b50-afbd-e18ac79e2452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0e3b9b-9710-4486-a4aa-f8cefc707c8c",
        "cursor": {
          "ref": "7a0e396b-fb40-4ab8-9d4f-d052372776d2",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "574c386f-947f-474d-9380-f43df4b923bb"
        },
        "item": {
          "id": "da0e3b9b-9710-4486-a4aa-f8cefc707c8c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "9c921b30-fddc-436f-b06a-21e226e9906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32a2289b-af43-46ab-a0df-17fdd35b312a",
        "cursor": {
          "ref": "15b4a0a2-0adc-4044-ad4b-578120315086",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "ecf427df-c149-4c06-b667-60b5930547a3"
        },
        "item": {
          "id": "32a2289b-af43-46ab-a0df-17fdd35b312a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "eee80e70-bcdc-4130-99a3-75279a216be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526f41e6-2bf6-47b9-852b-a446c65432fb",
        "cursor": {
          "ref": "35ef258a-bc64-4af9-b3a1-22fe896202be",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a374e811-b86d-4590-a82e-fdcb074a15d7"
        },
        "item": {
          "id": "526f41e6-2bf6-47b9-852b-a446c65432fb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "11871a3d-b2b8-4fa1-b5e1-ea4275771a79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "010d7c22-673f-435f-a9d0-dd666f492286",
        "cursor": {
          "ref": "c11623c3-66dc-4d04-9389-377a1cb99b56",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a606ba5-247f-4d8f-a69b-0a4304bd04ca"
        },
        "item": {
          "id": "010d7c22-673f-435f-a9d0-dd666f492286",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a988f695-0b52-4d10-bc8a-0181fcbe05f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18384da0-9e09-4248-860f-60bd64ac1cfe",
        "cursor": {
          "ref": "93880b73-4473-4fb4-8338-69cda4e961ec",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ab0ecc5f-aab1-41c6-ab56-706e761ef645"
        },
        "item": {
          "id": "18384da0-9e09-4248-860f-60bd64ac1cfe",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3cb3d7ba-343d-4cfc-b617-a77af9aaa3e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4ef1ca-e1ae-4251-ba6f-a046422f9673",
        "cursor": {
          "ref": "ac3e9632-d95d-4ca7-b609-ba4507343977",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b75fdf73-b069-4fa9-8c20-a4f6632c6706"
        },
        "item": {
          "id": "1f4ef1ca-e1ae-4251-ba6f-a046422f9673",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7aedfa83-c1da-4641-841a-1636866779f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed5ab02-15cf-4a16-a534-d7bf64cac69f",
        "cursor": {
          "ref": "e59b33a7-36ed-4bd1-8baa-61a10b5d731c",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e5953f4c-9e11-4f1b-a64f-1cf60a2b0287"
        },
        "item": {
          "id": "3ed5ab02-15cf-4a16-a534-d7bf64cac69f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf2d022f-14bf-4710-b9fc-f22669a822df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e2080e-5eaf-401f-9066-d482094e4cda",
        "cursor": {
          "ref": "9335add0-35ef-486d-8ece-6e0a0108d202",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "67ee853d-aba5-436e-876a-b5fbdf076119"
        },
        "item": {
          "id": "43e2080e-5eaf-401f-9066-d482094e4cda",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4e3dcb4f-8335-40ff-b289-ae432c2b8e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21391157-5c95-48f3-bc87-333b2c95180f",
        "cursor": {
          "ref": "040d4603-f097-45f1-b20d-90ce30e66f49",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aa208e2e-d7ca-443f-846b-1e9fc74f9c3c"
        },
        "item": {
          "id": "21391157-5c95-48f3-bc87-333b2c95180f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "91a09ad3-742c-4032-abfd-a7cf8b974416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696a621f-64aa-4763-bca8-369e41c15f72",
        "cursor": {
          "ref": "8dfa4d03-cd31-4def-a6d2-7e55a012d237",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "feeb0e33-3ba4-4559-b545-718f9cef31ee"
        },
        "item": {
          "id": "696a621f-64aa-4763-bca8-369e41c15f72",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b59c5915-2858-41a4-ab78-328bb049a8d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c756d9eb-22b2-4f39-b95e-4e3472d1ab14",
        "cursor": {
          "ref": "e847e9b9-8d4d-401e-9b2d-ab6cc87ed8d0",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "52a34fae-5e74-41de-b520-6f6adc5ec971"
        },
        "item": {
          "id": "c756d9eb-22b2-4f39-b95e-4e3472d1ab14",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b77542be-aab9-4066-afc6-d593fb4d89a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c8a84d-7f4e-4deb-95de-13e80c53e234",
        "cursor": {
          "ref": "333fb73c-ee2e-4811-9b12-efa206c13e50",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d55fab3e-86e2-4c07-9495-6cfd0ad5f850"
        },
        "item": {
          "id": "d1c8a84d-7f4e-4deb-95de-13e80c53e234",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7daba46-3486-4caf-bd7c-4fe99ef37731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c488360e-f8b4-4d5d-be10-118a5f3f24cc",
        "cursor": {
          "ref": "39c20d5c-8ffe-4809-8246-d0083819d9e7",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "6f149397-f36d-476d-8d94-8de379abb46a"
        },
        "item": {
          "id": "c488360e-f8b4-4d5d-be10-118a5f3f24cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "663f707e-2bc7-4242-96d0-8f92cd626bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac8c71f4-32cd-4494-86c4-2de4033309f1",
        "cursor": {
          "ref": "19cbbded-abf5-4f30-98f6-93ae560ed922",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "500139dc-f5b6-4fac-9543-eed0c0c48a1e"
        },
        "item": {
          "id": "ac8c71f4-32cd-4494-86c4-2de4033309f1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "0bf4e34c-8820-4c42-9d74-093ba976b18b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b697aa6f-542b-4615-8508-fd4ba03f2a8b",
        "cursor": {
          "ref": "4fe3b730-4aef-48f9-b4e6-0f355dd62d09",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c3668638-f40b-468d-9342-86fc62f5a8b4"
        },
        "item": {
          "id": "b697aa6f-542b-4615-8508-fd4ba03f2a8b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "23a4a86a-3d6b-4898-8ab4-fa944b40a802",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916440f9-bfc9-4d27-8466-e646d3f5987e",
        "cursor": {
          "ref": "03a6d9d4-3aab-4162-912d-707e651aaba6",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "466fe4f9-1a92-4a57-99e4-e19bfe988b40"
        },
        "item": {
          "id": "916440f9-bfc9-4d27-8466-e646d3f5987e",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "e7fa9bd4-9f35-44b3-bfe2-8986b666139a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 56,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e716dd1-d53a-49ad-a479-e32914b2ba12",
        "cursor": {
          "ref": "e3a74b58-3478-446b-a292-a592ba478c7f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "685083d0-b405-46b3-a04f-296954dcdc41"
        },
        "item": {
          "id": "9e716dd1-d53a-49ad-a479-e32914b2ba12",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "46e2d999-a9ab-4a50-83b4-231b2a915bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e716dd1-d53a-49ad-a479-e32914b2ba12",
        "cursor": {
          "ref": "e3a74b58-3478-446b-a292-a592ba478c7f",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "685083d0-b405-46b3-a04f-296954dcdc41"
        },
        "item": {
          "id": "9e716dd1-d53a-49ad-a479-e32914b2ba12",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "46e2d999-a9ab-4a50-83b4-231b2a915bfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec73c38-9a4d-4bb7-b010-baeae19c5e00",
        "cursor": {
          "ref": "1484d786-9efa-4c79-b3e7-dc3e40e4d6f8",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b143d727-5478-4d21-a8a1-786a125e82bb"
        },
        "item": {
          "id": "bec73c38-9a4d-4bb7-b010-baeae19c5e00",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "aecfc7ee-bfca-4ca1-9ddd-605e8cbe1339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816ea1fb-56c6-4aeb-bf5d-ab9ea591ea5f",
        "cursor": {
          "ref": "00574698-f7c6-419f-980c-b9301b1fe185",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1125e28c-71d9-4077-ba77-daaee4532806"
        },
        "item": {
          "id": "816ea1fb-56c6-4aeb-bf5d-ab9ea591ea5f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8c5e6690-135a-4dde-864f-b2edbac1cd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1b4751-09d3-4c63-aac5-537cd919f275",
        "cursor": {
          "ref": "ff490e64-0455-4481-846c-fe24ab979f62",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "c14a62c8-2420-479c-b8ea-82d66740a42e"
        },
        "item": {
          "id": "ed1b4751-09d3-4c63-aac5-537cd919f275",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ec426836-78cc-435b-bb6a-2724f6075ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "193c62ec-6aed-4d30-bf9e-0264950cc746",
        "cursor": {
          "ref": "93e64bf2-411c-419d-90f2-5c88c2f9958d",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "69084a7c-6d2d-4d24-a29b-46456f0a2eb2"
        },
        "item": {
          "id": "193c62ec-6aed-4d30-bf9e-0264950cc746",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a7465950-bb49-4d06-a6e5-7f9f02a7ff8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af39d57d-1119-40bc-87a7-5874d7f259bf",
        "cursor": {
          "ref": "45e7ff56-f649-438c-9881-a4314feddbfe",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "351fecc1-5e04-41ed-90ad-aa01060629ec"
        },
        "item": {
          "id": "af39d57d-1119-40bc-87a7-5874d7f259bf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "998852dd-ec7a-4314-a77e-f03cfa0e7e21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f5310ba-4515-4a0d-9328-e1d569960334",
        "cursor": {
          "ref": "c7d334bc-2102-4946-8ce3-f64ba2a73e38",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bb62a9fe-f525-4089-bb8b-59dd3741a04c"
        },
        "item": {
          "id": "8f5310ba-4515-4a0d-9328-e1d569960334",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e41686f7-d968-42f0-b133-11facfc6176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63875fa-7ff3-4acf-937f-6f46767427b4",
        "cursor": {
          "ref": "3fab9e22-8e99-46f4-951b-a52917c59481",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7522603f-aa36-4989-a537-c5d33340ca3e"
        },
        "item": {
          "id": "e63875fa-7ff3-4acf-937f-6f46767427b4",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "76a0d34a-0e20-4b90-b424-6f9e908af2f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fad3944-7763-4ffd-8798-b7e1b919d524",
        "cursor": {
          "ref": "4ce4543d-6ab5-4954-913a-b7c212822e9c",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fffedc50-a37a-413f-a4dd-0d436672d448"
        },
        "item": {
          "id": "7fad3944-7763-4ffd-8798-b7e1b919d524",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9d08f7d8-f973-4761-858f-d29f2115099c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e4c72e7-49df-436c-b545-b0fbc5639994",
        "cursor": {
          "ref": "be1aef74-a9d7-4a86-b660-7c4753b5517c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d4563006-438e-4193-8ef8-6b8c5af7c797"
        },
        "item": {
          "id": "2e4c72e7-49df-436c-b545-b0fbc5639994",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f0267919-da6a-45d0-b363-308017876079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fdf0a53-64cb-445d-a687-7497526e5652",
        "cursor": {
          "ref": "c1f3c5f3-0e5e-475d-8364-b8e8db18e053",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "fa909f57-23ef-4e04-a0bd-a21549a592d4"
        },
        "item": {
          "id": "9fdf0a53-64cb-445d-a687-7497526e5652",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5af6d497-3fea-445d-a588-deb51de77c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ffb7715-7098-4f5d-aa84-7b30c616a692",
        "cursor": {
          "ref": "5fee0328-9a0c-4196-b610-8ff4d807f40e",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "81439788-0e9c-44e1-9220-044dc0d402b0"
        },
        "item": {
          "id": "2ffb7715-7098-4f5d-aa84-7b30c616a692",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "07f1d819-2ebc-48b7-abf9-38db93820a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d1f677-cd7b-4ba8-8fcb-06ce57c544a5",
        "cursor": {
          "ref": "d66ddb9e-8e55-40b9-bfbc-2cef77a2f7c7",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "548687c0-7340-4932-9ed1-00451de061b2"
        },
        "item": {
          "id": "c3d1f677-cd7b-4ba8-8fcb-06ce57c544a5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ef4f08ab-ee26-41c5-b3f8-e9bfdc53905c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc3994a-8695-4b03-8b90-511d5d7c0edd",
        "cursor": {
          "ref": "e1a0949f-d98e-4d28-b104-57850349b640",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "91f665af-ca54-4a0f-bf4e-755952032c3d"
        },
        "item": {
          "id": "2dc3994a-8695-4b03-8b90-511d5d7c0edd",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "93153bcb-9513-4401-b8f4-f0e37982919a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518f5713-47d3-457f-90d6-12212a7b34ce",
        "cursor": {
          "ref": "a5af78ac-8c50-49b5-9b78-ebf77828467c",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ec90cdd2-9b8b-4774-936c-b795a167ebc7"
        },
        "item": {
          "id": "518f5713-47d3-457f-90d6-12212a7b34ce",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "2b1ca2b9-a4be-4ff5-94eb-012eb288eec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a98638c-b8da-45d8-bfe8-c12b7a14005a",
        "cursor": {
          "ref": "b10a8f44-582f-4c4b-b213-fe9e7b59018b",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c50a6513-b728-4997-9ed2-379fdae24872"
        },
        "item": {
          "id": "4a98638c-b8da-45d8-bfe8-c12b7a14005a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ba70860-a11b-40a5-9373-8f72260dca8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33dc337-54a4-43af-a633-bc5fbc8ba29e",
        "cursor": {
          "ref": "35d8c6b2-a392-4146-b05a-d85a893081f0",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ce9bab84-e1c1-4eb9-8591-b9a18aaf6c59"
        },
        "item": {
          "id": "a33dc337-54a4-43af-a633-bc5fbc8ba29e",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "efdd2399-cd8f-476f-b950-339c3a132484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f147391-59af-42cb-a89e-adc12dc474fa",
        "cursor": {
          "ref": "aa49cc82-f09d-4b03-98d5-00464a0d8da7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7020206b-48bf-4db9-829e-5a73662f89e7"
        },
        "item": {
          "id": "6f147391-59af-42cb-a89e-adc12dc474fa",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "38418183-561c-4c6d-b7dc-0898065068b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7613bfb3-6b0f-4ddb-904a-d3201e67374c",
        "cursor": {
          "ref": "a711010f-5ac4-436d-9ae3-685568438b84",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0e1acdf0-42ab-4fbd-810e-d888f05748cd"
        },
        "item": {
          "id": "7613bfb3-6b0f-4ddb-904a-d3201e67374c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a0f87445-2109-4c41-a592-7d2c738f566e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed9e390-cea1-4f4c-ab96-d7274ad4d69b",
        "cursor": {
          "ref": "9980fd5e-22cd-4cc3-b1fd-b50525399a63",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "89fd3ab6-5293-461d-944a-795f648780ca"
        },
        "item": {
          "id": "7ed9e390-cea1-4f4c-ab96-d7274ad4d69b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf3bb3b8-4043-4448-9338-2f59aaca84f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ef8c3d-affd-4367-875c-047de98c57c8",
        "cursor": {
          "ref": "f40ffea2-3391-4401-a9d6-333e8348cecf",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bf619a76-da6d-4e03-9a0f-2931e53dadfd"
        },
        "item": {
          "id": "37ef8c3d-affd-4367-875c-047de98c57c8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ded660f2-1124-449a-940c-0bd5376db0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef7b3a4-ede0-4310-b3bb-cf511521a4c9",
        "cursor": {
          "ref": "49a0580c-4d86-419b-b1c1-11e294a3518d",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3d29d34f-c382-49d7-85b5-fc6be366f8f7"
        },
        "item": {
          "id": "4ef7b3a4-ede0-4310-b3bb-cf511521a4c9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e61a86b9-59da-4af3-9171-2fe06b4a31ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04ce131-6e13-4c9f-b2aa-7a2dcb66f0a8",
        "cursor": {
          "ref": "1d164d66-e501-454e-b50b-51ef2e79200a",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e5580092-1532-4fc6-9b6a-32968cd110f5"
        },
        "item": {
          "id": "a04ce131-6e13-4c9f-b2aa-7a2dcb66f0a8",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "56df4abc-d98d-499e-9838-3fe9179f15a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd8dce6-a8d5-4fea-bdd9-1fffbc96fd1a",
        "cursor": {
          "ref": "0fdc8dec-d892-4027-99c7-b8e5c7bcc414",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ddd191ee-df1f-492f-a944-1cbfa718bee3"
        },
        "item": {
          "id": "cbd8dce6-a8d5-4fea-bdd9-1fffbc96fd1a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "adc75710-804e-4d83-a6ad-98f48e71d077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01218de5-0f0e-4cf8-b58f-ab43bf78bc9e",
        "cursor": {
          "ref": "0f0e0e52-3b74-4bf2-8d5c-f2d03f6233d6",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4b6fdd4e-37e6-478a-bdda-b926b3edb23a"
        },
        "item": {
          "id": "01218de5-0f0e-4cf8-b58f-ab43bf78bc9e",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "73ffefc5-1428-4772-8a0a-0449e66840d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9d74f4-4043-4422-a850-c8abbfc2c7fa",
        "cursor": {
          "ref": "5ebc6a2c-bf57-4ef5-aa14-fb2ad0595eb6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "30a0c5d6-5539-4330-9537-9d1848eafb76"
        },
        "item": {
          "id": "4a9d74f4-4043-4422-a850-c8abbfc2c7fa",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "0203ef40-20f2-4ef0-95c1-c81bf9cf4318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22d9b49-600c-4168-8cc1-da89cba7f253",
        "cursor": {
          "ref": "8880f7ac-cb36-4259-ac34-12e6ba777efb",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e997f7f5-7ff9-46de-8acd-7eb3df60f028"
        },
        "item": {
          "id": "d22d9b49-600c-4168-8cc1-da89cba7f253",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ca82ffc9-8ed1-4acb-88c9-558d0a027213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99018f4b-757a-4aec-a816-5118ebfc76e4",
        "cursor": {
          "ref": "d89e873e-76ec-4ad4-a094-156f26f0fb50",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "915e5972-0b95-4ca7-8419-5262b74defdc"
        },
        "item": {
          "id": "99018f4b-757a-4aec-a816-5118ebfc76e4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c75187e2-6aa7-4262-84ba-6646ea2baace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2b1fd7d-b6bf-4467-8894-bd29974c38f2",
        "cursor": {
          "ref": "49e87cc8-8d32-44aa-86eb-b818c528ea02",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "51af2cc7-3fc6-44b3-a453-027389d6dfb6"
        },
        "item": {
          "id": "f2b1fd7d-b6bf-4467-8894-bd29974c38f2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7d07e569-6b4a-4cdc-850b-89e70130ebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abfa113-0c94-4c2b-8e12-88877b0c714e",
        "cursor": {
          "ref": "f6a5aac1-afc7-41b6-a54d-1eb9b1737f49",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8b6504e1-bc6a-4956-9257-d2cd679a9b30"
        },
        "item": {
          "id": "1abfa113-0c94-4c2b-8e12-88877b0c714e",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3850af1d-19ec-410f-894c-c3b38f354378",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba1a1c9-6422-4ea4-b2dc-f8d075dd5462",
        "cursor": {
          "ref": "e8b868e6-c2a9-4f98-b385-d03833477885",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "37c00255-a130-40b0-9889-8ebd57480aa7"
        },
        "item": {
          "id": "cba1a1c9-6422-4ea4-b2dc-f8d075dd5462",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "e80f77e1-f47a-4f1c-8164-9df95a1926a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db35815-38aa-4a28-a448-bfadf4b9b968",
        "cursor": {
          "ref": "8f16b2f7-598f-404f-be10-ac622200b350",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96dc8d54-5124-4903-9e32-bc16f85fef73"
        },
        "item": {
          "id": "2db35815-38aa-4a28-a448-bfadf4b9b968",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ecf85752-346d-42aa-9e08-8d5a1fc7b33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cdb2c02-d9b7-4913-b6bb-929f19ea5c31",
        "cursor": {
          "ref": "e583933b-b48c-4fb8-863e-31b4205b8d77",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "14f50de6-d610-4c03-b6a7-b7c9644db5b6"
        },
        "item": {
          "id": "3cdb2c02-d9b7-4913-b6bb-929f19ea5c31",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "099521c0-7185-46a3-b5b7-abc7ea2ae15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a968f6b4-2364-4221-b7e0-9e1fb0b48362",
        "cursor": {
          "ref": "e5dc09cd-cfec-499c-970f-fa711cace2bf",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "490db3dc-30f5-4323-992b-80734da24856"
        },
        "item": {
          "id": "a968f6b4-2364-4221-b7e0-9e1fb0b48362",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "347af059-970d-46ed-a824-18dff9d2151e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85547a66-91f2-4cda-bd98-a8ef6623ff68",
        "cursor": {
          "ref": "2fdc6110-a948-47f4-95b5-3b581a16e2fb",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8defad89-a29b-46b5-80d0-bd312406d765"
        },
        "item": {
          "id": "85547a66-91f2-4cda-bd98-a8ef6623ff68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9bdee515-3c9e-476f-b4ab-83a187793e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f421eccb-19f0-4654-9eae-f74b8d694ebe",
        "cursor": {
          "ref": "f1b13543-71de-4c46-9399-97094225e352",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "50362f7a-b306-4cbc-a589-2e3ba3ab2871"
        },
        "item": {
          "id": "f421eccb-19f0-4654-9eae-f74b8d694ebe",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9ded5645-7667-4652-a189-294038a15e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd1178e-be2a-40e7-8735-af4bc1e5615e",
        "cursor": {
          "ref": "06833022-48bd-49ad-9161-71c3aab5921f",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "97af083a-6395-4d8f-b1c7-afcdbe18b8ea"
        },
        "item": {
          "id": "1fd1178e-be2a-40e7-8735-af4bc1e5615e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f51c8610-edd3-4a7e-b42f-a866d791e4e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f4c94b-b2b8-44a5-8173-06b1758048be",
        "cursor": {
          "ref": "33dc6cc5-488a-4a18-8709-832e05cfae84",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "aa003289-d576-418b-b0b8-e5ac436b9813"
        },
        "item": {
          "id": "55f4c94b-b2b8-44a5-8173-06b1758048be",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "190bfc41-2d40-4287-9093-4cb495fbe558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8e9b76-e02f-4175-95a0-431ff74bbf81",
        "cursor": {
          "ref": "bdd2f13b-e919-4a73-acec-a6d47d922bec",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f14d5ac8-8a09-4d7d-9523-53dc18aab49f"
        },
        "item": {
          "id": "1b8e9b76-e02f-4175-95a0-431ff74bbf81",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ae7dc1a5-2109-473d-ae25-08a374fa35e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2134a87f-5538-48d3-a868-e42fc8bcdeaa",
        "cursor": {
          "ref": "02f25235-beb4-464d-9124-305c982b4c18",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "1969e1cd-ae4f-4734-bf50-5a9dcc93cf3f"
        },
        "item": {
          "id": "2134a87f-5538-48d3-a868-e42fc8bcdeaa",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "567a0018-559b-40e2-bf81-36b3b0fa51ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe81c61e-4db5-41ea-a922-e1cce9617e28",
        "cursor": {
          "ref": "4411aa8e-4373-48d8-9eb1-76777f6448c7",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c730f5fb-ea20-4c96-a1f0-6dd930ce9649"
        },
        "item": {
          "id": "fe81c61e-4db5-41ea-a922-e1cce9617e28",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cb462838-41a5-4d48-8373-965b8a2be37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df51762-4921-418b-b382-c5e45c0820de",
        "cursor": {
          "ref": "fbc0374c-0d87-4f59-831e-c8bdd7fa7a24",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9eb9ca90-7870-4e20-ac36-fe4b55fe6397"
        },
        "item": {
          "id": "0df51762-4921-418b-b382-c5e45c0820de",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "53ed86f7-5e50-487a-8273-1a74127336b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce729972-867b-482f-9e9a-ab5e10f48c90",
        "cursor": {
          "ref": "c530cc6d-1a01-488e-8a7f-6193493797c8",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8f6951f2-4fca-4031-b40b-3ac8749dbea3"
        },
        "item": {
          "id": "ce729972-867b-482f-9e9a-ab5e10f48c90",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3fd67244-5b7a-4064-ae2d-815f787629e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbf6e42-d2dd-4d1f-bff8-b597d1703ca1",
        "cursor": {
          "ref": "ed9541ab-beaf-481e-9ec6-1f730c4f055e",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "da73339c-b1c0-430e-8da7-d8ba2d2a686a"
        },
        "item": {
          "id": "4cbf6e42-d2dd-4d1f-bff8-b597d1703ca1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ad00d043-963a-4428-b6ac-ce945c4cfb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958789ef-694a-490c-a96e-643b9f0e17b4",
        "cursor": {
          "ref": "f112af0d-9130-4f08-b1ae-fb351abb8763",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42aa7ac3-0cfc-4783-bdbf-3992693df701"
        },
        "item": {
          "id": "958789ef-694a-490c-a96e-643b9f0e17b4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "120a6d32-b020-4ad6-bb5e-9962d657890d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7b59a4-d7ef-4963-9e71-feee846d50e1",
        "cursor": {
          "ref": "d54ffa2b-6313-43cd-a08f-51bb1d771552",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d831ecde-67e5-4e5d-9d7c-a68012ea0743"
        },
        "item": {
          "id": "ca7b59a4-d7ef-4963-9e71-feee846d50e1",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "af856381-1fa3-4e3b-aa0c-a456767c3188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9db0c5-3ac8-4c0f-8795-7bdbb00d4820",
        "cursor": {
          "ref": "65b4f82c-0482-4bf4-8873-04c191c3917f",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8d74cdfb-3cbd-4fc6-bdab-e5bf07a1d0f9"
        },
        "item": {
          "id": "4e9db0c5-3ac8-4c0f-8795-7bdbb00d4820",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5516d2d8-7266-4d73-b783-d1a1118d1013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bf526d-6308-45a9-b6f9-86c27ffc0ef2",
        "cursor": {
          "ref": "2fff38ef-3b99-45cb-8b70-c87795a259e1",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "8237ad7f-e41f-4ec9-a51c-1dac7720160e"
        },
        "item": {
          "id": "00bf526d-6308-45a9-b6f9-86c27ffc0ef2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "fef2d21e-f766-436b-8e59-f8a64c193164",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1997a6fe-77ea-4b9e-9d3f-545d058e4788",
        "cursor": {
          "ref": "c8c78c04-ee51-4764-816f-b7e02e81a4b9",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a960cde3-afc3-4007-ba5a-a9bee8410ebf"
        },
        "item": {
          "id": "1997a6fe-77ea-4b9e-9d3f-545d058e4788",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5315a833-2dfa-4373-a344-591971687571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac6dd94-19b0-4e15-84d4-23ecd2636d20",
        "cursor": {
          "ref": "845a1f54-1c44-4c8b-ae29-2ebd98cac305",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9d65c312-486a-400e-8fd5-6a93cb2182bb"
        },
        "item": {
          "id": "7ac6dd94-19b0-4e15-84d4-23ecd2636d20",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "297eeb66-470a-4841-beb1-bdd96bcf3c84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9927f9c6-a4f0-4928-8e0b-2ab22f68e507",
        "cursor": {
          "ref": "3fb2fead-811e-47ee-920d-212ff4a04e93",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fe5b5fa6-48d0-4d4f-ae78-78dd137ec39d"
        },
        "item": {
          "id": "9927f9c6-a4f0-4928-8e0b-2ab22f68e507",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "de2dc202-8be6-4e5d-bcc3-1e3172b38856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a34b87a-688d-408e-b7c1-bea400f8f06a",
        "cursor": {
          "ref": "45ad318f-d094-4b96-9c96-9e1ea068735f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a7c25201-c740-4127-8d5f-364d4a6fcea9"
        },
        "item": {
          "id": "1a34b87a-688d-408e-b7c1-bea400f8f06a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "816163ed-2234-4c03-ba88-61bceedcd585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5deabe07-1a29-49e8-9360-95086fb4993d",
        "cursor": {
          "ref": "f24bad9c-568b-44fc-a9c9-a284f029bea6",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1a924179-dbfe-4d12-99db-fc97ed8759ba"
        },
        "item": {
          "id": "5deabe07-1a29-49e8-9360-95086fb4993d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "dade0cf3-8fc5-45a8-9cfa-77433db6ff49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d543d25-835a-460d-ab46-6d073531c854",
        "cursor": {
          "ref": "3cd0337c-9ea8-400e-a91e-135e6f64ea5c",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c10f019f-4ea8-452e-9d4d-a8d12df7eed5"
        },
        "item": {
          "id": "1d543d25-835a-460d-ab46-6d073531c854",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c497620c-6c5c-4fa9-b345-a23b528a38ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894186d1-0112-449b-b3b5-9f4c9e8e3cb5",
        "cursor": {
          "ref": "d8fde724-4ed5-4ae6-b10a-9d529ae20939",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9cede818-797e-4f3b-96f2-d60fe3b6e5ae"
        },
        "item": {
          "id": "894186d1-0112-449b-b3b5-9f4c9e8e3cb5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1ff1c883-ca2f-46e4-9292-85f0f7170568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11ab3fd-e45a-459e-b6b6-e82c333f3e33",
        "cursor": {
          "ref": "2693064f-fde2-4c90-8525-c8a678b599ea",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4d4ee067-22c1-47e8-8c4b-0c254f4df052"
        },
        "item": {
          "id": "d11ab3fd-e45a-459e-b6b6-e82c333f3e33",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "85a2b5a7-d369-4cb6-939e-125dec3d0ccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6481fd57-813a-49d4-b2a8-a136b7314171",
        "cursor": {
          "ref": "fbd18940-063e-4615-b749-f278e869427a",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "817973b5-8c82-4533-8ae1-c5caf40e8e69"
        },
        "item": {
          "id": "6481fd57-813a-49d4-b2a8-a136b7314171",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f719da93-9ea7-4e8e-9363-40b0ac6a5b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3e9e14-a07e-4212-9e2b-16aebab0fa80",
        "cursor": {
          "ref": "14342057-3b3f-49d9-afb4-48ab7ac8bfeb",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e4f0581b-fd10-4d5f-902b-36b1e8370a6a"
        },
        "item": {
          "id": "1a3e9e14-a07e-4212-9e2b-16aebab0fa80",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cd49d4e2-1828-495b-ae0c-1c964bd4435e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67da86be-12ae-437e-816d-e3cd2b82cc7e",
        "cursor": {
          "ref": "48c4fbb7-e6f1-4bca-9864-28abbf39f812",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c4ef7485-4241-4ec0-baa4-83a216b665d1"
        },
        "item": {
          "id": "67da86be-12ae-437e-816d-e3cd2b82cc7e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3f1114e9-f992-4bc2-9147-bb73e934fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e6819e-7bb9-404d-8bcf-572dc57ad0c2",
        "cursor": {
          "ref": "ba4d3091-21d9-40c9-9d25-be7c2d7b5ed9",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "e1755a99-a2ec-4213-ad1d-891a8a7f9341"
        },
        "item": {
          "id": "54e6819e-7bb9-404d-8bcf-572dc57ad0c2",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "09f6d942-d412-4458-a8a5-4fcd79030255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 174,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6212e12f-90b7-4f96-88be-6ce5c3bc5ebe",
        "cursor": {
          "ref": "945681f5-d89b-4ffc-a537-f9b519d66e2b",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8cc7a868-1dd1-4693-9fb3-2427269819b7"
        },
        "item": {
          "id": "6212e12f-90b7-4f96-88be-6ce5c3bc5ebe",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "93518081-9b57-4f2a-865d-5c0b14902e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3700ddea-f1d2-4357-8479-9ff8249f452b",
        "cursor": {
          "ref": "e6e9d596-717b-44e1-8b7e-7af27384d599",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ed94648c-5785-40dd-abfd-c371dee15518"
        },
        "item": {
          "id": "3700ddea-f1d2-4357-8479-9ff8249f452b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "69430bc6-74a4-4e5a-a097-f962ffdb1287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9951dad0-0b49-45f8-9c31-7f60bc7f5ae1",
        "cursor": {
          "ref": "928fa66d-1c5a-4c2e-8126-446e0bd9ad72",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "aef3aed2-cfe0-46b3-bbcc-2d774832fe0f"
        },
        "item": {
          "id": "9951dad0-0b49-45f8-9c31-7f60bc7f5ae1",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "89c31e39-8e2e-409b-b68d-49c737381072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7557cec1-bde9-4822-b2da-302c208b1c84",
        "cursor": {
          "ref": "c3abb4cb-47e4-48b8-8f6e-d43e7cb99ec7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cfc25061-856c-47dc-8c01-2bf9f621b133"
        },
        "item": {
          "id": "7557cec1-bde9-4822-b2da-302c208b1c84",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "4e7e7458-058f-48c1-a1f6-dc16fab77ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa33dde-0b65-417b-bf75-fd182b0fd669",
        "cursor": {
          "ref": "c5d4f171-9b45-4d16-9aee-c9befa6b1769",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "38e2ec04-cffd-47ce-ad70-63e8219462d3"
        },
        "item": {
          "id": "2fa33dde-0b65-417b-bf75-fd182b0fd669",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "8319890b-1dde-4792-be36-21875569f643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "678d4b33-59b0-4af7-823d-317eb9bc885b",
        "cursor": {
          "ref": "927ce6a8-64d6-401c-a2fa-f74943c7308d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "38a2444d-3d1b-420c-a561-9a9433174d40"
        },
        "item": {
          "id": "678d4b33-59b0-4af7-823d-317eb9bc885b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cdb97eef-9f8f-4433-97f2-81d61807b65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3068a134-64a1-47d1-be8b-7c301b4abd2d",
        "cursor": {
          "ref": "500c24be-d7d2-4a61-8fa9-9f1d8e7d6e26",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4a476c46-4fe7-44e0-8997-866d7dbaefd5"
        },
        "item": {
          "id": "3068a134-64a1-47d1-be8b-7c301b4abd2d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6422f9ab-9f8e-44b4-b52e-7ecfe6460aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc8f47a-04c7-4b0c-8580-ad6f62742d29",
        "cursor": {
          "ref": "da7ba20d-c6b4-463e-a61b-2060970e7eea",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "7f730fb3-e220-4c80-9739-02351c2a2722"
        },
        "item": {
          "id": "9cc8f47a-04c7-4b0c-8580-ad6f62742d29",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fbfed027-34ea-44b7-b981-a9418c6cdb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78990dff-a851-41f8-b929-c62f6a81634f",
        "cursor": {
          "ref": "eba12bff-4964-4724-b941-8dd659dfca33",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "91f112cb-d161-48f1-87ea-0fc4a618802f"
        },
        "item": {
          "id": "78990dff-a851-41f8-b929-c62f6a81634f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eeeb612b-503a-489e-bf71-db841d413222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaea26d-d960-43e1-bdb5-d3dfe5c253ef",
        "cursor": {
          "ref": "57ed69db-1aae-4608-a05f-d1cf4c6c8f63",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8780e03c-3f7c-49cc-996e-1af188a6ff54"
        },
        "item": {
          "id": "dcaea26d-d960-43e1-bdb5-d3dfe5c253ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3c78be8c-4b32-447c-8826-e00a485ae0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a724b393-91c3-4cd3-869b-dd5d425bf800",
        "cursor": {
          "ref": "4f061018-d960-475e-a883-792e2c207e2f",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7cc01199-aeb3-418f-8847-f9d09b090d60"
        },
        "item": {
          "id": "a724b393-91c3-4cd3-869b-dd5d425bf800",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "58113e46-9d4c-4d74-985e-a73cbcaca437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ea0dbc-7145-4d45-b6f8-46fea18ac9dc",
        "cursor": {
          "ref": "80459f6b-a14d-4009-801a-6db60e25bbf1",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "c0b8f64e-efce-4a0e-b3a6-72202c582665"
        },
        "item": {
          "id": "e5ea0dbc-7145-4d45-b6f8-46fea18ac9dc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0531222e-584d-4019-9417-0d7d8999bc21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3241e8b5-9ff5-45e5-88c2-e4e171720fe3",
        "cursor": {
          "ref": "9c7c4149-9ae9-47c1-b2d1-a98221511cb9",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d4fd520f-e51e-44fa-bed3-dcdec0f305f6"
        },
        "item": {
          "id": "3241e8b5-9ff5-45e5-88c2-e4e171720fe3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0d0d279c-d245-42b2-bef3-8dca6d9247a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f160a82-9f39-4f9b-a77b-285e372ff6fe",
        "cursor": {
          "ref": "e386ccb7-4fcc-4905-a361-20f7b3963b27",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "02a460ee-368f-48d3-a0d5-5b4e35f611de"
        },
        "item": {
          "id": "6f160a82-9f39-4f9b-a77b-285e372ff6fe",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9017c42c-f65c-4248-ac55-8ea75a462141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0fcc84d-5ca8-4838-9371-e1c04a9a08a8",
        "cursor": {
          "ref": "99dc7278-5aee-4389-8322-0e0a17a60c0e",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "51c3ed90-3383-4e33-8802-9f3615dd5f6a"
        },
        "item": {
          "id": "b0fcc84d-5ca8-4838-9371-e1c04a9a08a8",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d5e013e2-afbd-4d30-ba12-b69d7025740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9f6b71-7c4b-41f5-b5ef-1e80ff679a73",
        "cursor": {
          "ref": "1aaa1ef9-2dab-4594-bd97-d98dd56448cb",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8c37996f-060c-42d0-9359-7c9710cc9be6"
        },
        "item": {
          "id": "ec9f6b71-7c4b-41f5-b5ef-1e80ff679a73",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8b5d4783-1516-452e-84b5-ad4f9ef8378f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c878e20-fe61-407b-8b8c-52bd7e3e8dc5",
        "cursor": {
          "ref": "40ed3774-0812-4426-aac6-a3fb1737fe25",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "cd8abc7e-ff87-46b7-952a-5e46bf9f136d"
        },
        "item": {
          "id": "9c878e20-fe61-407b-8b8c-52bd7e3e8dc5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "49e5b988-5638-4853-90e3-09b463fe8731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85955070-4626-4b10-bd63-6b48f5bc692a",
        "cursor": {
          "ref": "a41c6121-cd7a-4081-afae-fa7bea77ec1c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c5f60fa4-a919-4e9c-9a45-ba885f838402"
        },
        "item": {
          "id": "85955070-4626-4b10-bd63-6b48f5bc692a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb10b861-a186-418e-ae8f-10ad95ee57b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5eab3d-2d11-4e00-a964-83b9f7e88f83",
        "cursor": {
          "ref": "c7618388-ef9b-466a-8de0-91497a52c30c",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9f21ed1-b001-46c9-9196-f600f524c44e"
        },
        "item": {
          "id": "9e5eab3d-2d11-4e00-a964-83b9f7e88f83",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1101ea9a-dc52-4f13-8d12-c036034b0840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9732e9-b5fb-43ec-a325-b58e31fd3d44",
        "cursor": {
          "ref": "72443950-d1c9-4dba-a70c-08d980839aed",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "cef9c4b2-b83c-42d0-b26e-c9ede391345e"
        },
        "item": {
          "id": "4e9732e9-b5fb-43ec-a325-b58e31fd3d44",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4db95354-1eed-4772-8f62-c7ac4e9031dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c331871a-9dbf-4d64-bec5-55b865898eb7",
        "cursor": {
          "ref": "1f68744e-f328-49c1-9f44-6a3bfd0c4866",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f78794cc-8299-4f62-a9ce-7c17aeaa9339"
        },
        "item": {
          "id": "c331871a-9dbf-4d64-bec5-55b865898eb7",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "316f595f-ac1f-49c4-a003-8d4d24fb7315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3714d1-2650-4b81-911e-3cfd5b30d847",
        "cursor": {
          "ref": "dbb3cfac-8639-4b22-a456-8309c6ec3419",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5cd4a85a-ef51-464a-811e-4ffa7c81b3ca"
        },
        "item": {
          "id": "3c3714d1-2650-4b81-911e-3cfd5b30d847",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "cc402903-69c1-4e7a-a997-8b0df6ad059d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b222299-b11a-465c-b319-ca4ee54cb23f",
        "cursor": {
          "ref": "78c53faf-6060-475d-9edd-3bd54188aba2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "9e0d34d9-920e-4b52-9872-388ddb38996d"
        },
        "item": {
          "id": "1b222299-b11a-465c-b319-ca4ee54cb23f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "059caa09-89d8-4dee-81c7-67ead967111d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e68a1f-2cd8-4dfa-af7a-e0701a117d36",
        "cursor": {
          "ref": "7fe00e77-8ff1-4313-8618-1cd3b40151ff",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "19b2fe12-0a54-4d12-96e9-16409927e374"
        },
        "item": {
          "id": "65e68a1f-2cd8-4dfa-af7a-e0701a117d36",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f250ed2b-8421-432e-807c-ef7972a5f50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1083d525-458f-4eeb-8cc9-d22c3c55397c",
        "cursor": {
          "ref": "4866c743-5f84-4b80-b4b6-a801e534e288",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e616c951-a32c-46e6-9faf-56aab0bec772"
        },
        "item": {
          "id": "1083d525-458f-4eeb-8cc9-d22c3c55397c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ba85d228-73ef-4aad-be93-c80496b013d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cd8dda-de0a-49b7-8867-102eef907b44",
        "cursor": {
          "ref": "8e95a700-e580-4a5a-8a55-42f1989e5202",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "d3d7dd56-db78-453c-8bb9-fa6b89cd7af1"
        },
        "item": {
          "id": "b8cd8dda-de0a-49b7-8867-102eef907b44",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4674514a-503c-4de4-a863-9b4b516a53d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2adef7-daeb-41c7-99a1-1462c402d84c",
        "cursor": {
          "ref": "420b6d26-6f1d-4a29-bdb0-dc6caad28889",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4a15b090-c795-49e9-a372-19bc554f1a47"
        },
        "item": {
          "id": "ed2adef7-daeb-41c7-99a1-1462c402d84c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "46513146-486f-44c4-9010-8abbd5fb6a20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d589d3-acc8-43b7-9087-c8b0526baac6",
        "cursor": {
          "ref": "0b2fd3f2-9a04-4f5c-b532-0cf70b28de99",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "228ebc9e-1bf1-4fe8-bffa-8651d3320c17"
        },
        "item": {
          "id": "08d589d3-acc8-43b7-9087-c8b0526baac6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "7b580290-1a49-47b1-bda0-78edfa473d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac6452-461f-4181-acbe-7ca5ea078283",
        "cursor": {
          "ref": "26344941-5524-46b6-a335-d16598e500e4",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "72b9c53a-3763-4cce-8694-730dfdec665d"
        },
        "item": {
          "id": "8dac6452-461f-4181-acbe-7ca5ea078283",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5000195a-d3d9-4b5e-a6a6-07388e7b21c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6ec499-f0a8-4348-b78d-5efd4e2d90e8",
        "cursor": {
          "ref": "41fcb5af-64a2-4e60-a180-19d1b6ae4c94",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4057f915-e797-4007-ac6f-907b5391ef04"
        },
        "item": {
          "id": "fb6ec499-f0a8-4348-b78d-5efd4e2d90e8",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "999c85d0-10b2-404a-87fa-1b21b27530c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24865933-c67c-4978-80d0-88dd88cbae89",
        "cursor": {
          "ref": "5684c9c8-a333-4fc4-a729-a5d28b26d8a8",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30f82fde-23dd-448b-adbf-3d775dcdca28"
        },
        "item": {
          "id": "24865933-c67c-4978-80d0-88dd88cbae89",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c843e921-f774-460c-a596-837d3fbf20a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a326fa40-9635-41e1-a3b1-3507aef1c99e",
        "cursor": {
          "ref": "e040cb8d-bd7c-4cd0-aea2-557e087be8d1",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fe88bcf2-d614-4c00-bf02-3bdaa46b036d"
        },
        "item": {
          "id": "a326fa40-9635-41e1-a3b1-3507aef1c99e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b89a987c-38e8-42fb-8abd-43c7cd320418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99576850-7303-4888-9d45-84b05ab75d16",
        "cursor": {
          "ref": "72cc695e-673e-4752-a662-1020c9ec3027",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ee267d47-9bea-4b37-8d84-0a6845a17aa8"
        },
        "item": {
          "id": "99576850-7303-4888-9d45-84b05ab75d16",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "21bc67e6-612b-4532-ac6b-aaeeab36a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631c92c9-b031-406a-be1b-0a802ac284e6",
        "cursor": {
          "ref": "67f094bf-c364-4fa6-a90a-bf0b29a21651",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "18259b28-2ed9-4e14-8a52-4795b952855a"
        },
        "item": {
          "id": "631c92c9-b031-406a-be1b-0a802ac284e6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "b93789f6-ce35-4476-8add-7adb1fb3bb6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3b2cab-793b-40e9-916a-ba93f39c35cb",
        "cursor": {
          "ref": "e7bd5077-8109-40e4-a682-7d5020d70ee2",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5f7ec159-d553-4f92-ac74-8ca6e4746893"
        },
        "item": {
          "id": "1a3b2cab-793b-40e9-916a-ba93f39c35cb",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "38b4d895-72e0-48d7-a67e-9e726bb84d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6675fe-ad44-49b4-8d38-5ce8b393f07d",
        "cursor": {
          "ref": "4d7d4217-471e-4f0e-bfd3-de192f2f2dcf",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "7e47b17d-a985-4886-8d65-f1044e64a163"
        },
        "item": {
          "id": "db6675fe-ad44-49b4-8d38-5ce8b393f07d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c03d664c-95f0-4b2f-b434-0af180365341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3584aa16-6852-42ef-a557-75468136ae44",
        "cursor": {
          "ref": "7cf0bfb8-a1e8-43f1-9f87-e14d1079d4ae",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e93f0612-e410-4666-952b-583869531874"
        },
        "item": {
          "id": "3584aa16-6852-42ef-a557-75468136ae44",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e3fd034b-0ea2-401e-bce2-d3adb3e7573c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4f2058-3d9e-4091-a71b-56d4ead90177",
        "cursor": {
          "ref": "5624c7b6-5981-4c82-ab1d-0e57b28044e9",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e98af725-7dde-4ef6-a29f-6e118dd05a24"
        },
        "item": {
          "id": "fb4f2058-3d9e-4091-a71b-56d4ead90177",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4ae28ed4-e378-4822-a7b1-ccc92752d1b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e16d47-85e4-4f01-b2df-d38f16bd19f0",
        "cursor": {
          "ref": "9260aee7-a254-44af-a24c-286d21c1f86a",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "ab14b21b-e104-4737-9fe8-06c49f25e04c"
        },
        "item": {
          "id": "31e16d47-85e4-4f01-b2df-d38f16bd19f0",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "97fa4d5c-6dba-4da8-b5f1-762df9163e17",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 56,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5670f5d4-eccc-45e3-8945-ac7828d199b6",
        "cursor": {
          "ref": "a8768acf-a4eb-4034-a2e4-a1cf876c518e",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ed47d4a4-6889-4e28-81cd-8393d924aa5d"
        },
        "item": {
          "id": "5670f5d4-eccc-45e3-8945-ac7828d199b6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "7f2c7c0d-c033-48cc-ac3f-9107257c8c51",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "08fcd7ba-8918-4ce0-b1cb-6b4fedaf01cc",
        "cursor": {
          "ref": "6f92263b-4ce1-4965-a765-d87ade90db1e",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c99c292b-a18c-4bdc-ad5a-4e9dde4c7332"
        },
        "item": {
          "id": "08fcd7ba-8918-4ce0-b1cb-6b4fedaf01cc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "08d5787e-1e6b-41c1-909c-2566f347b410",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a145fcc-bb60-4c20-bef9-131225266ff1",
        "cursor": {
          "ref": "51db8636-ad4d-48cf-878c-496b47b82619",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "be18bac2-fc02-4377-af9a-bc77b46ae539"
        },
        "item": {
          "id": "9a145fcc-bb60-4c20-bef9-131225266ff1",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "23b5451f-d1ab-4e34-a77f-66591fa2fd78",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
        "cursor": {
          "ref": "e55df7f2-3d63-4054-9636-5cbe09d8241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "96473eb9-99e4-4009-85d8-c0ea94ee4df9"
        },
        "item": {
          "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a0036a6-b4ed-466c-bdb7-9ca108dd4760",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
        "cursor": {
          "ref": "e55df7f2-3d63-4054-9636-5cbe09d8241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "96473eb9-99e4-4009-85d8-c0ea94ee4df9"
        },
        "item": {
          "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a0036a6-b4ed-466c-bdb7-9ca108dd4760",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
        "cursor": {
          "ref": "e55df7f2-3d63-4054-9636-5cbe09d8241f",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "96473eb9-99e4-4009-85d8-c0ea94ee4df9"
        },
        "item": {
          "id": "c5a2d74e-5218-48e8-b0bb-26b2f172802f",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8a0036a6-b4ed-466c-bdb7-9ca108dd4760",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad1fbe9-697c-4770-8162-ac7553ee607c",
        "cursor": {
          "ref": "7acac42c-1405-477a-b853-214fb9121e6b",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "36bb996b-a838-4d51-b6f0-89558f495550"
        },
        "item": {
          "id": "cad1fbe9-697c-4770-8162-ac7553ee607c",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "36760928-4b15-407a-98b2-d408a414651f",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 55,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d899d9fe-a933-4958-a332-49c68c75d9cb",
        "cursor": {
          "ref": "6f197e31-84a2-4ed3-96e1-ddff24654b2a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8c4dce58-ac32-407e-9b5a-6c80c88b6b52"
        },
        "item": {
          "id": "d899d9fe-a933-4958-a332-49c68c75d9cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be875c27-a0b4-4d2d-84cb-ae9ca1bb23f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d899d9fe-a933-4958-a332-49c68c75d9cb",
        "cursor": {
          "ref": "6f197e31-84a2-4ed3-96e1-ddff24654b2a",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8c4dce58-ac32-407e-9b5a-6c80c88b6b52"
        },
        "item": {
          "id": "d899d9fe-a933-4958-a332-49c68c75d9cb",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "be875c27-a0b4-4d2d-84cb-ae9ca1bb23f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd141c1-d1ad-446e-b00b-f83458f45c73",
        "cursor": {
          "ref": "e2f9b3d4-df99-4e7e-bcca-e276f819f061",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8d42f10b-64d7-4ebe-956b-9e280498d6fd"
        },
        "item": {
          "id": "3bd141c1-d1ad-446e-b00b-f83458f45c73",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "0f528fb6-3ae4-40ec-973b-93ca71ba181c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 56,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e43fa-975f-434d-b68e-926fb57bcbfa",
        "cursor": {
          "ref": "c6c33708-8e0c-41e4-9aac-933781faddc4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "584a6d63-d441-4fa8-bf2d-2034f04f8023"
        },
        "item": {
          "id": "2e9e43fa-975f-434d-b68e-926fb57bcbfa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ba0c1b51-b820-41a7-a6d8-503fff59568f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9e43fa-975f-434d-b68e-926fb57bcbfa",
        "cursor": {
          "ref": "c6c33708-8e0c-41e4-9aac-933781faddc4",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "584a6d63-d441-4fa8-bf2d-2034f04f8023"
        },
        "item": {
          "id": "2e9e43fa-975f-434d-b68e-926fb57bcbfa",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ba0c1b51-b820-41a7-a6d8-503fff59568f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7648c5e3-8ff9-4637-aa70-df00715956b0",
        "cursor": {
          "ref": "06e2fd27-4f44-46bd-bfc0-901d98e98694",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0d5d7655-655f-4cf1-aa61-3e8ef09e9d87"
        },
        "item": {
          "id": "7648c5e3-8ff9-4637-aa70-df00715956b0",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a9fe7293-e91f-471d-9af3-98250eccc36c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 56,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}