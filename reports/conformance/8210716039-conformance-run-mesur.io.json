{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b6daed10-df4b-4167-810c-95484e9c1481",
        "name": "Clear Cache",
        "item": [
          {
            "id": "7392d11f-adcb-4770-b497-c1aacc562a72",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43771879-f717-44de-9973-2ef62bb4e975",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1748156e-e509-40f3-b2fd-3a67784f1a37"
                }
              }
            ]
          },
          {
            "id": "ec952822-1130-4400-aa8a-786557e3ddc8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc93ce78-11c5-4916-8d01-a9050cf4a4dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b9925cc8-6497-41b3-944c-4825a40bfd2b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "85532303-9ada-473d-a62e-b107509e95a9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b0f9b76f-e82e-42e1-857f-b467792d8474",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cead55b6-b69d-4a13-b7bb-a8be49c5dff9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "490b7ab3-ba1b-4e70-96de-78a10d7ba314",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa26562a-c2d9-493c-8b29-e51af5c2bb77"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "153c947e-3f1e-4721-8d0c-8beb64b699b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b115a421-3ea4-4720-94b5-c9b431961960"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4bca7c2-ae2d-49e5-a6ee-22ada21749bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7c6b682-b611-472e-9f06-f456a81fa2ba"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "04db2545-4cc5-41ea-8ccf-3c46a19b59b2",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6a27a615-4b19-46b2-b912-e5b4b20dc682"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d922cf02-32e8-48e3-acac-07c9531a9b85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e414e3be-163c-42fa-8a6b-10572461547d"
            }
          }
        ]
      },
      {
        "id": "367aa9fc-ad80-43d6-8e20-a8a5f23ef28d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ad4b018a-9598-4d81-9a62-d4af076d7704",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02ab039a-3b39-4c5c-96b3-056cdcd9ada4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c72be82-386f-40e8-b2f0-04849dfefdc4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3eb7c0-3bc4-4945-8570-f3edcaa40f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "486eb7e9-5d32-4850-880d-0e8f1ae2737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ecbc7f-2cd0-49c6-ad9a-6fa139a57904",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd194635-ad3e-4dd0-9aa7-61b88f2d3623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "140f4253-75df-4696-8a30-6b2c68192000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9622499b-ede6-4ee2-b22b-06a54f4fe741",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d454a66f-4d66-4119-b44d-eb2f2975e336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f60ffb52-d2b6-4467-ae74-811d2e7bf961"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d00742f9-26d3-43df-9ad7-fdf5e11c851e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aaaae2a4-8ce1-485c-ad76-9a2f9083d8bd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e04cf8-d61b-4755-8047-c1f811a916d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c113c7b-6143-47ec-a2ee-5c436b599f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276983f6-71af-4d70-b22a-cdb7480a87d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3adbcbe-3594-438f-8e9f-1d0934b37a25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6f7dfad4-7abd-49c7-af18-c31fa6f4d0d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e081eea2-8aa1-4b98-9366-95d4c4084c9b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e0819e5-07c6-4b5c-a642-a81932e81daa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8d9193ec-f6e6-4d64-ad1f-f08e61b093cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c62a6b83-d8c0-4444-a20e-ce1d0613d3e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f70233e1-1d66-48cf-a38f-10bd98854aba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "427683e2-6f2b-4de8-9a58-9ae4bff7fcb2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58385c15-3fe4-4f78-975f-132b1e37074f"
            }
          }
        ]
      },
      {
        "id": "4a2d2504-d0eb-4189-98e2-a376c273cc64",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c3adbe02-b4b0-4440-a532-d50523d6b9c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16ed097f-bf36-4ed2-9432-589b36eb5b32",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "209a776b-4065-44dd-900e-2a19ff76cf61",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7394a1f3-2b54-4ad3-a3d4-ca1a8a10e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f3d85e-bded-4d36-ba1c-96e39a7687ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c467806-7044-4fd1-9a1d-1a95b20b457c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7c664ae-058f-4753-9d9a-8c2d3316b298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28dea7-5a54-4867-a4d2-d151cc505242",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221c5e4e-7fa3-46e4-a846-e0e8a1b54455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2d8306-b42b-4b04-bd62-0145afd7e51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a73f7e-498f-4897-a259-8a6662e0ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7b18c3e-44c8-4d3f-b321-9b4ee799144c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dfbe8b-231b-49dc-8501-6ad11de6096f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73ca4bf-4631-43b6-95f5-3ad949ed5d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cb37c02-873c-49a9-ac2e-d90bbaf537ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "931ae304-d961-41ad-8a71-a1230182f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c1cc5ed-3251-47d9-aad1-9b1cbb2433d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726400aa-043f-49ec-b2ec-75ecb405951a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce35f519-c405-4751-92b7-a12a6e0be806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adb20e34-8bef-4440-bfbb-228d0db2ac91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c071f732-d739-4708-a937-8c94944194b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6bcad22-f379-4c16-8c11-ae4b40ff14be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c42bbe51-6e9b-40b8-9467-b440a21439b9",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaef97b-bed0-4791-8fac-2b2d8b334a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0986570e-54ec-4a5d-b0dc-75a780ddf7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbda027-a73c-4ed5-9466-ec1ceb9718ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e89cdda8-2b22-49f7-8c9e-577301da0819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4858a28d-6bc9-4263-9dc6-c631c42e7065",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f264f1-3b1b-47b0-9ee8-8159142df06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5d06c4-c1df-4551-9a83-bd935b48260d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218a82ef-3372-4791-aaad-b109d8a997ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d13420f8-e5eb-4a43-857f-0a939f00ba51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "151e2a07-cfbc-4f2d-a866-514fb5e5b8b9",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f0356e6-f23b-4bc3-9205-1edbcbc73491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd0a5a2-49a5-4381-a7ac-9f328a47ec8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d07e84-308f-4a0b-8473-b108962eaefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56268ea0-b16e-4713-a8c0-53d32f1612df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2423e119-69ec-4296-951f-07e1fc94bda5",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "218f73bb-5373-4a85-a6d7-e31b824bfbe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da29e5d-831a-4140-ae4c-811a72b73d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2f0dc2-d4ac-41a5-aadf-6a301baedd9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a53dca9c-606c-48d3-b0f3-311ed81d953e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa2c4cd-09d9-458c-8fca-f4309cf2be32",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4034438-6c84-4066-be2d-6b5a285f0ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b07ff7f6-2e86-4de8-bdfa-a58e261d2214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b1ed48-c8f0-4710-b382-79a45be8cb7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "55a8a996-d236-4bce-a4d8-75caf5c508a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4857b42-8c63-4b87-941f-29332adc2365",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91302a44-95c7-468c-aee0-d1667d7630fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac67c0f-bffe-4b0f-bbdb-790cac4ff695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad99f9c-60ad-4bdd-9ec6-55e6600c5511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2a5ee0e-1a21-4592-a91c-18518c9de423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212d3637-f50d-48f3-bfd4-8472539350d9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d302c236-d579-4cdc-99ae-4ec3bcdc25c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "265eed7f-c9a1-464c-86e2-6de01129a9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d28065d-e769-4961-b583-2a8cd5c62f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "65ebc73d-14b3-4edb-8e58-a07cda20ec8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53583b7c-1c2d-4b3c-8dcc-85ce3519e2c8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2126edbc-eaf6-4960-804c-c723a1d3fc4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250e4328-918e-4eee-abf7-c234def48c6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1c3ecf-1d1d-4682-875e-fdddd6ed7e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5a61379-39eb-4aac-84c7-185a09484f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fd64c4-ca98-412d-b4f7-713502bd3f88",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c7c102-6f01-4b42-bfd0-ffe2257e849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad95359d-cb64-492a-828d-9799005c6f47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d2fd6e-d78e-41e1-86cb-8edb384d1a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8355cb7-dfa0-4f3a-accb-e4ca848f7fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3151b6bf-9c32-47bb-ba99-5e624baa9bd3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cca2381-b5fe-4cf1-b84e-798acf01e137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a10ec3-bf6a-4830-bf13-6c91c8b9966a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c7a93ea-f292-48ce-87d8-d9d4824a7838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18d50991-698b-4eff-85dd-10ec06cd9249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf20cc4b-e33b-4ceb-9856-c1be614c3a4e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206776a1-9dec-4afe-9603-97a4c64dc25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85ecde36-fb6f-485d-8af7-1428731ee085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c59dbb6-f842-4c82-b290-be0a52b07d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7ca2e45-1bcc-4018-b2af-e62e4a4c3ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58350fb-1683-42c7-a363-82e811b25441",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99766499-9b20-47c7-bd4e-209295ab8c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ba0998-daaf-4b1e-8687-82abf7a86edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa02a25-c0d1-4d26-bd7a-31666fda5810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31fb231-1b82-471d-b36d-10819d5fa110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f80010dc-47fd-4e04-9123-a66b7c3881dc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd07394-c2dc-41fe-8312-42f11bc73551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4001c635-701f-4234-afb9-989852865fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f406879-5611-409b-b324-5782938576b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3456b8cc-fd05-4d1d-b378-0394c0ceda83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3332b95c-2efe-4363-9a6c-aaceee459728",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62280c57-0d80-4781-9abf-4800c2f91348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4bb01b-8f18-4580-9ac1-282a9ae229df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe835a8-3bb1-47d8-ae9a-837ebe94b66c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "743d2385-61c6-42a5-a702-270bec3c4076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85728a9d-2a6e-4c71-89d4-ffcaa8088156",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "339acd32-921a-4e22-867d-e68107b93541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92227150-7f18-43c7-9ae0-73bd1e99ccd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3458f8b-ab43-4261-bbd3-29ea8e16c1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c89307e-44c1-4c71-b6b3-3763facdc416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a78c480-eaa2-46e4-bd89-5a149e1611e0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a679ce6-3e22-4761-a2e1-b2601ef50f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1770b3c-29c5-4beb-a7e7-699b346ed8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140c9e68-166e-478a-9fa0-7caadf363599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b14410-4363-4962-84cf-c76a4b0b9298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1da5b3-9327-43e4-b677-2c76d9666e77",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94658b22-a72c-40f6-9c66-bac561361f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51fd35e8-dd2e-4db5-a121-6df9d47afc34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2d43de-5374-4a3e-acda-81984dcabae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1f6816-514f-4c92-9fb9-a5c92632b154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321fdfa8-2347-4121-b811-1e9496b2c294",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29095b8-4290-4b20-b728-1c7fa5472a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8ff6f7-9fa7-4320-a939-a3aa16fc2943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9f5073-4814-4aee-8c5e-8137ff19c295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6c3b180-d1d5-4240-92a2-16be1f2ded34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81824acb-feb7-490b-b8eb-4aadaa75deb4",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5619aa18-6f0d-45dc-b34f-3a56b2eb14d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc3824d-db83-4067-83f8-65e95d250c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6d1dcf-1238-4f12-9fdf-484697fdb7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "677de7c5-c69e-4774-84aa-694807808eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "515740c3-ce28-457e-9441-6c7566877320",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6af47d6-e165-4176-9928-e7bdb59af999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989bafd4-4bb7-4b5f-9e05-3d5200e92dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f836a0-8a48-44ec-82fb-e822de27837c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "67c4495b-95c3-4103-9c69-7c0b98b4ca92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1ab9af-26ae-4c75-80b2-94946086978c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5cb36fb-4fa0-4268-bd26-1b5e276f43a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952744be-dd71-491c-971a-0de96ff3b1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511bde50-7054-4f03-99e2-af9b172231ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04abe5cb-0bfb-4412-8e24-226b539d8f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39560ac1-843e-4ee3-8497-4cf3f2e49bd0",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16aac389-320f-4d19-8a7d-9181214a3f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd9b4aa-9de1-45f7-90c8-7685da2a502c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a808d7-6702-4113-ab2c-f018bd3fefcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7816aba-3b96-47d6-9999-5b277cb1623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1c5638-62dd-4c8e-bf17-e2d1cc6c0703",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01870722-4113-499b-a8d6-9fe22d94fd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18111008-a3b9-46c7-b185-3768a501f1e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2cc99b-ae30-4be4-98a0-8f0dbda73044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5d88f4-6ebe-42fe-a4f8-562eab3757a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d407c6b7-64c9-4817-b56f-230c8502f9b1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f25d38-44ce-447a-9440-e952e7cca87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f03db9-ef29-463d-8735-bd592842d60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee647b8-3295-4e92-9056-57e8881a3961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcdfab07-642c-4e9f-b7c5-c0be518a1701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89081d11-eb8a-42f9-9cec-9927ea2263b0",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88490a1-38b9-4c0d-9e3d-1881270c1596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90aa6463-fb35-4a5a-a28e-37cb1f7e777d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d1a2ce-2ada-4a32-8174-f3d0a9e92be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "31d3ed83-5fa0-4922-9099-08926a5ce888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "988c1088-07ef-46d1-bdeb-3e000c4f40f1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0bbb64-518c-4fc9-880d-452fbd5ed9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bda933f-d903-4b4c-a5e0-9b0933ae8a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26ffd21-e285-4a99-a843-4cc22a4538eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "59146187-a14f-47ea-a1ff-050483191afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8727ac53-a8aa-4811-acba-62d3acd53d01",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8280631-8a9e-44d7-8bf9-ac587c2380fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcc2a0e-618e-400d-a948-69e9555def0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbdbccf-79a6-43fe-9a18-8ac3e9be2ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "60ae6aa0-c450-4e65-a204-18cd9629ea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2568c4-e328-4002-a72a-96bddd5f84f8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b9de1f-0969-45ed-8500-878428f20cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec433f84-c4c0-4071-a9f0-8713cd0bf947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7b8dd4a-75de-44d4-b8f5-ddf731bc5345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa95eb2-a0f6-4f69-a8d7-af3c91d10238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024c04c8-1728-4fd6-b514-8691bb738984",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88d2c62f-f148-4cb2-b6a3-68e9f98369da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac63bc4-72cd-4fb0-8dac-389ccd9d0951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09c2824-4406-470d-a06a-b72eb2886d64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3697202-91be-4064-84f4-c450d2cb2fac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2de221d3-1449-4017-b89e-5dffb841f877",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca4f19e-2b48-4540-a7ef-cb3ebe378df1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cecab6c-33fd-43cd-99d9-03cdffdcce8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d93ff4e0-43c2-4732-9d49-453f7512c24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fc409d1-9c45-4fa5-81a3-213871680a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66cb68a-e6a7-4eb6-b425-ccda90aa6f56",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8972c6-25df-4584-9396-dda5cdf48656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f3b2ceb-7931-476c-9282-23ad87936a5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf1fe23-ec5b-48ce-9fd5-b5b73a6c7691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b66ae46c-2b02-44bf-826e-3f3d27ab61bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed58908f-b049-4a9a-8304-ee075a1416f2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e3bf99-3edd-4d73-9f4d-3b33a64a627b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "63f8a70d-e6d5-4df5-a0da-b0b0a3ad1680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e42c983-43c0-4790-b7ba-14c4e541b497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ec3ab65-91ab-4226-baef-8d335d9114e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4bc8f6-9f7c-49ec-a7ee-fc8715f0d286",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5973c3-a375-4898-b857-65031c0237d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b194c0af-6817-42c5-98a6-8b80cbee85a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ca4e9-37ae-435d-943a-35efc375a871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "66aba5a0-a1ff-47e7-940b-4fe2a25611ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61aa2c0b-6ed3-44ca-ab7c-028a8eebd864",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe3ca8-f3f0-4d36-a58d-faf56ab7c737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35bdd378-31f2-461e-97db-6ff49915651c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f5ad78-3236-464a-8198-cd8bfcb0ea0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a204f3f2-7213-474a-ab64-808682d6d05d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c52f9e0-e59b-49a9-b81e-f7a445021e80",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92296b9-5bfe-4a51-9c5d-7902c6cddc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "514f3979-344a-4c39-af9f-1c84de100040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850307b6-e04d-4efe-9b5c-20771791dc27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba2e68ff-e230-4121-af9f-9e6ceb0da162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff213e8-3edf-457c-a66b-01b5579a1214",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba4dcb-2aa3-4e79-b818-af3b81d2736b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e7d206-b6f8-4cf8-8a7b-ebf3e4d7e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6577e29d-6938-4455-8391-c15e85c988ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5605a9fb-9ea6-4f8e-bade-da454e0bcd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e4c372-160e-43b8-9291-b8a830b42be0",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4998ce49-4d7e-4b35-9a82-cf85b9be020a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56d1147-3cfe-4a2a-b061-320b59ef0014"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f5cb05a-ad40-400a-a2ff-8e754286197b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1b748e-f2ba-4de3-9c19-7686dfbfbfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f204864-a426-4c94-ae37-6eafb63fd3dc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf061d98-585a-4e68-a7e8-9a9c1f3a3101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570976ad-ae5d-406a-9baa-dff6e93cebb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31155096-3c68-4ed4-a388-7130ef059bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e75543-7644-4ba2-a5b5-a40ab43a0cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a0add4-2134-41a4-8c6f-0e798d4632dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faad64ac-f105-40f9-9b06-e980b771c667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608acc12-b431-461f-82c5-aec6d11a18de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe859c0-ac1d-4fa8-bc0d-4c21249700c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ae9d5da-8219-41e2-a34f-2bfd73f674f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fb5d89-6e95-4ee4-bb4f-66c97a8fd1ba",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87b5a31-c7d3-4049-b40d-c45b355f54a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107dcc12-b8a4-4a00-9175-e4572f4a10b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "570b5a10-0a08-48f6-a496-613ffa63904f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d84d1857-a9dd-40a6-adc6-910bdf5cfb91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430ad0a9-c564-49c5-a8e6-8cf554ccb6f1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97112070-967a-4c71-b142-51cec3415306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e7408e-66a8-44de-8b81-c693730a9d19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7418769-82b0-4fba-a22a-e2b6e92c82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af9d6a9-ec06-43bf-a7a2-0cfa5dd57b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7903d6c-f743-4457-8b3c-568be1c3d577",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04646852-08bb-4d7f-82b1-794440eb83d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "966e6163-c75f-489f-957e-5d42da13b373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26ec1b11-5acc-449c-8238-7255d9d2c692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf0f143f-5ccc-4fdf-88c2-3fefa4a841ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69f0e29d-8760-402b-a240-eb0427ab19d1",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a211af64-1391-43cd-82d0-aedec8cb894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "339c90db-821c-40e6-9e28-155fcb304ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a46d4de-eab6-4468-9a58-fe50eed8f4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e07251d-2918-48f6-b97a-6573dee8df26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfab5df-2b58-4a37-ab79-03b5f8bd3d54",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6daa5c01-0e58-4845-8693-439b3a7a2156",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b6833bf-1fc0-41fb-b3ed-d2a21fa2a815"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5abed3d-8f8e-4c96-bc96-f44f4013eabc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "149fbdef-2b35-47cf-b27d-88574f7be7d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb80447a-5257-4b4f-ba79-1eda1179a73c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c85582-791f-4a7e-8849-c11012278714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051e223f-d009-457c-9302-18a580367eee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4a3837-d8b6-4b0f-974d-b42067f11073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7f8058-d1bf-46de-b606-eb7894d9c0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a640f07-1cce-4e2d-a85f-cb25c75a0649",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c3045f-62c7-4568-9bb3-d8478d21abbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9285634-59c1-419a-a4bb-ec0c1b9eb921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edafc186-130e-4093-9f28-58b0b7d2a2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80a3fe8e-8d7a-4914-b0e5-16523dd19201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea83e699-917e-4fcf-9e62-c860062da1bb",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6c0bbd-a379-43dd-8454-2ec14292d69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76535736-0cb2-4a7a-b53c-46133e98bec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf9cf73-cc92-4920-9b11-91dc1b83a7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28dc4e1-aef2-4ed4-b24e-c3991e202b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2455d7b-75ff-45e3-998a-a94c8bd3544c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3649dd7-0c60-42fa-bf98-447bdcdc169e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d1e5dc-2ed3-4158-98d9-c4701b0a6589"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1e10a64-a815-4ef9-b1ef-e4366ec43090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "736b7d08-ce2d-42cf-89e8-8f7a98fce42f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "173ab96b-e48f-491f-8400-d6881f305b98",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36200e1d-9b34-4e3c-b5cc-9585013955c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60af71f2-ca22-45a6-9056-3125875481a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733537c7-14a7-4e0e-8843-2b87646b6139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39f0de55-3a67-4581-a25d-61cda8a4a132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c6414e-f6b4-4784-8c99-18c7f0f8549b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6e1001-5623-4292-ba0f-52b351cffa79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dc5595b-be23-419b-9e54-61ae1fc096ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc75443-ac52-4df5-8828-212304cbd344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b6fa2f2-9428-4596-8269-0ef256ee888d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64fc578-6ba5-4a20-902d-e09185188979",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8bb8e1f-1154-47f5-8a87-8b0775420ee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abcc09f4-da9c-4746-8e7d-3b326fa5ddf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e350f8-ba27-4bce-9ca7-51ba04ba43b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "327b8c53-0aee-4241-8b7f-a9edba616097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "725499db-7451-4405-97bc-f139318ba810",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0855bb0-7127-4060-b150-57d7239cba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d5855a-6aa2-470a-a981-20b24fecf3ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04425ba-df40-4057-a7f6-e85efa5b5ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "30a8f4c3-b419-4eb8-bd3e-40e778101e5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d185068-cad4-463b-b3d1-647069b6e238",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb263bbe-8082-415b-bc58-a61d45244586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b7db6c-4d2c-4feb-aa08-3812b863b1df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a204ba7-aebd-45bd-b510-39cfe39c53dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc76e48-3f11-4c75-8399-d0bd818371c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60039fc-c388-4d55-882c-8e2ba2b1a70e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f959df5f-44b4-4ad2-873a-221820f882a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa210422-3254-4962-96b5-7b79df66a367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a278e4-a0f0-4794-832c-b9bc7876ed7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4314a60-a13f-4a2e-89e3-b72e7606d538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cec7710-4f89-4424-b3c0-09cb013dd25e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249ddbed-70ab-4446-8fda-b9820958ad9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4a2cd1-ee4c-4865-aedb-a880f7ad1806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c7ff89-b0e8-44ab-9add-30e0fb110877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "18e492cd-ba7f-48d6-8fa4-6268b0703e31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac325cc6-8a88-44f0-8d40-e4b4afee718d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb2f95f-704e-46ff-b50b-b45ebaf94a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9a71db-b5e0-4fe7-8f1e-f6f4fc06bc88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b70334-0a0c-4252-a701-3f3bbb50655a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab14eff0-a96e-467f-907b-940130be7acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7f0267-6bc3-42cf-b2c8-fd488008eff7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697b36f3-d758-4fcc-b9d7-aba5f2df3218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a33d82-ade4-4ed2-be49-55fb0149c383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c4cf68-da65-451a-af0d-99d9fc925179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4243a1cf-80d1-4722-87cd-0dabfea14edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42fd9e6c-dd9e-4ba8-ad91-8ce71a96ae22",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e49092-bd4f-429c-95c2-99f10c8a0b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2828b2a7-e52c-4882-b8c8-7c627fdc7a4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d66cb3-aa03-415b-8eab-729616361140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "28ef30b0-ca89-41e2-995a-5b6a2e6b9651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "332c047c-fdf6-44ba-a8d6-e8619fa5e429",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54856f97-f2b6-450c-91d7-100626580a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fef095-5a68-4981-a838-b3eef3a22787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "591339de-a3fc-458e-b164-c1ebb21c8cc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "648dadba-d91e-4621-becc-b628aa800299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934192e1-e39c-42bc-ac49-917b12356ce8",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bfec94-5200-4f7f-b7bf-a50f757285e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d544097-cb06-491e-9493-7aaf05c0d553"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa6fbf24-557c-4c9c-b909-bf4583d3b118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "65c11394-5d1d-42ad-8f7f-68eea94949a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97fd33d-1940-4d0c-ab45-dbb754ea5a00",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7d53ee4-ca21-4fb3-9a21-3bc6788ff099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d579ce0-d657-44fa-a36a-6302ca11308c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f718f76d-cd65-4054-abb9-2683761763d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a115792b-aadc-484d-890a-b991ab6fd35a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47be086c-69a7-474d-8585-f3c5c0a2a4dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d2cd01-200b-4649-a1a6-f8f8ed921644",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c48db8-69a1-4c2f-8c2a-fcb2e9adadb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde388b1-7546-4699-9af7-9b3601c7af92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "57cadffc-90f9-4788-a2f2-3462e5f25b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13e74c2-ff0f-40dd-8ea9-281b9db16ebf",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4822f779-6d52-41da-83bc-34d70915de70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc48aceb-0407-4db1-a9fe-4b8eba523f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36491a9c-34ab-4719-afeb-0c8bbcca034e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c68c6653-2fa3-4fba-9512-64f14d566d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61726a5c-8172-4f89-8ec7-2a553ec36d9b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec239d8-1868-432a-a66b-56129bb95ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371a7cd5-f308-4f41-bb9c-8c1b7ae9129f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0327c8ea-2588-495f-86c5-11b4d8fe47a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5a046da-9d99-4873-a183-34df4d1b525a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8f6daa-6d38-4e03-94b8-317c9e95e19f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfd3661-2ebf-40c6-8c53-be1868508000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75a75f8-65a3-4521-8193-48c80c2bdfea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495bc8b9-d5e6-4c55-93e9-f88ce8242b1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3acc394-6cb8-45fe-a049-39821275d756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be19931a-c7a5-4fa6-add5-fa14f8eb8d65",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4621e6c8-9c41-480b-8085-8bbe2b2b627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4878225-5ed0-4950-ba99-aa7ae3897e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475752f2-4541-4ae0-8494-e44b01bf20ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1182471-e63a-47bb-8c30-dba21c958412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b1dff2-8a8d-46f1-b67b-26a2656ef28a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f49ed165-2e41-4353-a345-592389769bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942f38d8-815a-4ba4-a801-b832158d6aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab130237-2684-4b0d-beba-1c050b39f7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "93213b97-20e9-4e19-9ead-11e6e49e819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "050bd788-830d-4af9-b154-97e6003185f2",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fc1086-5beb-4aa9-9cca-48eddd655858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df427d87-aac5-4515-8dab-04524a871f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df7ee731-c70c-46ef-b2a2-b43456105ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "995d82b0-06b0-4570-9a6a-2e30dedad275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8897627-f03a-4e55-ab40-971f176a4ebc",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a29fb12-dd93-40de-91a8-cd5a6a224415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644a0164-81d9-4d35-b800-fc69e9f2e4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e71794b-8636-4ef4-8ac1-5f162f6cc7b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5914a247-2f42-44ce-a7fd-c048f48ed0fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e70c03-c748-4f46-a617-874577562815",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c604eb7-7215-4c66-a4d1-21b9d27b9715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "876b949d-3149-4e8a-89da-23dc99b45ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0174549-bb90-4cc9-9442-fc54a4fe84a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb8f8032-7c71-4829-8267-7ef8a87a5e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdef763d-e9e7-47a8-9d02-c168191984db",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecdd9aa-bf35-4132-b200-5f6ec5a3ea43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7847ce-b98b-4476-b85b-b0cd5fbd7ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866dc5d3-06d2-47ab-a887-dd3673bce3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bea87b-8b81-4fe3-974b-e04e738460ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1a81057-f55f-43bf-b943-1c9006e8d101",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446666c5-de65-400c-96e5-223cd15ce036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e454f4c1-c487-4e2c-bd01-76ef6a77a84f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1361f79c-5efc-43e5-86c4-c7a19c3799a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7afd6b-2f04-4a73-9b43-9fd9c7b1cd9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f718497c-5520-41c9-a616-34bbb63fd1b8",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633ef671-5988-488a-949f-dd30953b4e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c616064-eead-4591-b14a-c05c2f24b07c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdf45c8-6153-4b49-98c6-59d7d503d74c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f073169-6dc0-4ed7-af30-8f8afce0bee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92780b6d-3d0c-454c-8730-6333668fede7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f653dae-1bca-4514-9d29-2687bccd0b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25a78eda-f0be-44df-80d2-61454b423fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e930f379-5bff-4f35-90fe-241342a9c597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9281fd39-10d9-4bf0-a21c-3a4eea2ed1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84ea03f2-d218-48d6-ab5f-920b1a0c9919",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7979638e-7286-45d6-8f78-ea9af5b81c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8f76d5b-aa0e-43d2-bfea-a948fd98a6c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e2fbea-4b81-4cce-bb9b-12ce5a58565a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d03f251b-96c2-4509-89c8-7de513a90f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743df97f-a94b-436d-86a5-5d62d6b625a6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe58beed-67a0-4995-adc8-c1e99d72614d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8a7bc5-8e3a-43f3-ad31-4048c4afe16f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94f0ae6-5826-4e70-9805-83b0c8f1770b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "962062f7-7579-4575-997d-1429a43121fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00c40b1-05a6-4b23-89e7-ea848ce197e4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb30c2c-cfec-4af8-9c0f-4061b4cfc154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ad2b07-d615-4f43-b460-9eabfe575fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e71313f4-e8fc-4062-a7e5-85590f32dc70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af648aa-6658-41f4-bac2-af0576f52aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72835da7-95bf-48ad-aa67-10084a95b126",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4909bd07-1972-4121-9466-c87134f9b0d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cfd7d7-0c53-4c85-94ef-2a3b36950c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f24a61f-4d0f-4f6c-9316-c89e1a07869e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e7d03f-1b31-4f6e-b2c1-5962f125c998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34faa59c-e244-45cf-bf61-663e5116fb0c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679a46ee-0313-4dff-99f7-c3bd3e4621f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d3773c-7205-4371-a0c6-d83f6c637508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25eb6655-ed97-406e-9844-55fd94e840d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d950bca-b5d3-4b68-9abc-8d28298efb37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c1f284e-2b96-47bd-b6f1-cb62faab45dd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1f32a0-cb53-4de9-921c-6fbeac2761aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd85406-ce8d-4c6f-87c8-828e0737ba88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784b8ef7-86f6-4cfc-9686-bb9ead2544b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d35bcb7-48da-448f-997a-57870660b8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8485cb0-0334-4b56-87b0-63945c6fe5b1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e4b944-5653-4cbc-97d3-9798e5cb32fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a848694-f28e-4b35-b9aa-77a8153b09fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d35b11-9cf1-48ee-8100-283d716dcdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95e2fa84-ff23-4b30-9ce5-1c3d34961726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ce1ac8-c54f-40e2-a48e-2c7bcc0bb6a7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2b443c-0a4b-4978-8461-1d30e96ad4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7ec4317-4813-4160-88d3-79dcdfc90177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b289cb6-a805-4db9-9aea-8f2855182c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "80ec86ea-e935-4ca3-9b61-dc0b520680d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1992453-5b9f-4fc1-ac90-7df62a21b7c9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "184ad0cf-14e3-4da9-8b09-061ee708aad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b828674-fc24-4c3a-b489-5bdbba462b1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aad0365-4a45-4efe-a904-67d641fdef63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "512749bc-3ee4-4013-a467-ce17ebd80d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5702c3-6f60-44f4-b578-87e96cb08f19",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0dd4e8-26b6-4a76-8a17-ab93d5e784f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5851a961-e504-46f4-81b4-5e05767a37ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c30428-74aa-4a4b-b937-854b5f924524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf5ca6a-b640-4c32-9e3c-0c7fe6e6b2a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97acf30f-be28-49ba-b960-f717653b1e81",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a1576a-a76d-467b-ae28-c025e4683714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c162fa31-ac86-4841-80eb-6a5888a1ac55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3f03a8-5576-4ba0-9c5a-b86f5901b2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8beb1f-7de2-476b-b969-3bcbf83808c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af64b6a9-bf8c-436d-a3c0-3c3d82fc8656",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a11ace-fddf-497c-aa8d-0515af1eec57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e649d17d-ee72-43ff-a5f9-97cb6dc22fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "075010a8-0aba-4763-a241-43a9a5e4a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "87364d64-cec2-429b-9ca8-d0690ddc07f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e79ca2-8bce-4bf9-9547-3b54d9357c2b",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c445ae-62f3-48f6-9c12-a84fbad88935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463d1c1a-2f8d-418a-99d4-70080d4f8221"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3857616-f1ab-49ef-a4e9-01d35281e78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bdf5a35-2a36-4d82-8168-639f9721a9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a80cb04-bb5d-45bc-9f4f-206e66aabec8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bba2dbca-69f9-4964-b0a4-82eebdfc6f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7a0f3cd6-fb0e-4cec-b13d-868f9607d70c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c20a22e-75af-4866-986e-b4366ac51bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0fba5663-a7fb-42e1-8273-44fd65860721"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4fc66be7-44d2-41df-b0f4-f0e39a09ea0f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "64e3d96c-5947-4911-8343-b59d607d9e40",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d73b5f-abc6-4a67-a591-f875a3793db0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7f51d67-dd7e-4db6-b30c-e78633e34971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0291d072-a6f7-454e-ba09-226aa0fa0010",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c482f050-2e7d-4096-b434-549ba472dd6f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8827d6bc-5051-4b37-b3f3-08fa25e4e594",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac77588c-7e81-4f9d-a7c3-76f06d0adb3b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2466a6bd-9701-4e08-8c69-833141ab36e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25937c00-3cb5-46f4-9ee7-65ce841e208d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bee06a08-2446-4289-9c4e-7dc48128ba37",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff46f24e-2aae-4ca7-a307-e79274bfc1a7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11a4fd9c-4a28-4a7f-a1d5-143466af46f5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34301ebf-7005-49a5-92db-b77e656b5e42"
                }
              }
            ]
          },
          {
            "id": "7215890b-e6e9-4e03-891a-dd2e80095443",
            "name": "Positive Testing",
            "item": [
              {
                "id": "192e6a05-a0c0-4255-8cf3-6b9f3340f40a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9fd7ed56-9ad2-489a-9d57-04178819794e",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b625daac-8c8c-4418-b736-933a3898266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dc93c45a-a729-4d0a-bc1f-145ae279c370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a20445c6-8d1d-47e2-b80e-575f30d9d408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f45dd00-e136-45a7-a86e-8c612f5e31ec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9407555-51c1-4c5e-980a-69941e4b3e78",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91cd9099-ae04-43c0-a529-12c2a81fbc8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72a90cc8-72e7-4b1f-97c9-cf145948dbb2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b5dcee7f-4def-443d-9fb6-b121ab6a4616",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0c94babc-3613-4994-b62d-b2ca577b1e69"
                    }
                  }
                ]
              },
              {
                "id": "52a727e7-9432-40b8-89cc-de40fb1e7383",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb0c646d-3aac-40df-a803-dfa8bfd9247e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f2bf403-e106-4b9b-9ff6-61e2b07e2aef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e18c033-e155-4f2c-bc69-e732ec7115c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "53da8e0c-d2a2-4a15-99e4-f978cec4e5c9"
                    }
                  }
                ]
              },
              {
                "id": "f15ecdf9-b6b3-4c48-b994-a9cd8ffde48f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0d86ff7-fded-4fe0-a4fe-d3b5c023f94d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae67f1c9-0497-44c4-9d5e-48d0bb5efafb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77e96e4a-430c-4b23-98cb-22b6901bd5c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e89093e3-926f-4da1-8d75-818795d23f0b"
                    }
                  }
                ]
              },
              {
                "id": "9ef40e24-c32c-4c51-b047-5492f11107d8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f84473a0-f5f7-4c78-a272-5b4bd90a807f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb8e595b-41bd-4658-abd4-0f7ac3f6a0cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf561919-755e-448d-b711-d1b1edea7a79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d487362f-737e-4d35-827e-3e5566ef26e4"
                    }
                  }
                ]
              },
              {
                "id": "734e794a-e551-439b-b7ff-4aa3c4a3959c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ba064cf-caff-473b-bb6f-50d734e69561",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0c8c5d1-b5b2-4af8-ac35-8467063d2791"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "38963a8f-3da4-4ba6-b26a-6d6e63ad3086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "06f4a4aa-07b5-40cd-8f5c-c406d87917fe"
                    }
                  }
                ]
              },
              {
                "id": "7185ca03-b488-4f77-99bc-5c640c5f46d4",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8426b09-61a6-49fc-8c5a-9304af738879",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f3ec70b-c1a0-4b28-a4df-af8db2e12620"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9bca803-8f83-44f6-9b0e-3cb7cde54d6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8543912f-f215-4bdf-9c30-cbccd115160d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9047cbc7-abf8-4046-8ab4-1dfed0400311",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9df9e0ec-4265-4357-b003-eda4c3673530"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9b8ac0fe-2f04-4851-9fbf-c4bc7c992480",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e9d4ca7-3470-48a0-bbae-02c29da6f303"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee838851-b5e6-47a8-97ab-b5e79154fafb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7c4bc630-cf9a-4a3a-8690-9959dd79605e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb152e66-831f-46d1-a85e-95f32c46e726",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4219046c-6b38-43d6-8eac-e33790da1e17"
            }
          }
        ]
      },
      {
        "id": "bb3afc55-b5e1-4d82-be3a-7d0ef359a3d3",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e18c47c8-10f7-41f0-8695-d42f8691acf2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a1aafd5-f500-4c12-9414-0bcbed9f5394",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fa96b5aa-ccfc-48d9-99b0-e484fd704398",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888d02d8-ba10-4b22-9a04-b5ed22a0141a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436f4490-8931-466e-8260-940f7c7d6b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725093b5-ad96-4e1b-94a2-e184afa86b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb6b269-1e0c-4f26-aa9e-58711ccb3c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee539e78-6449-4578-b53b-1185b654c544",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2ec8ac-c4b8-4ce5-b184-9a572c19dbf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74957fba-61d4-44ea-b030-b74297eef70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74016714-df94-435a-b9cd-91f5474b9222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcb2b8ee-44de-45a2-8149-709e26205b80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d4e90-159f-41d1-9470-fce54a2095cb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25db9c77-8f06-4484-9c9c-528b128e13c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4810148-f72f-42fe-8334-5414fd093d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7677a2fc-c1fb-4f43-9a62-5c40abba9b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7397180e-59f0-4191-9146-91610efd5e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b078708-75d4-449f-84fc-5426d099c577",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6af65d0-2d51-43c6-8c6e-be46780c48ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01341c92-945b-4a30-852d-da55de43053c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201986d1-7dc6-4e81-b70f-8cadabb720d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e00638f-4d31-41a9-875a-1e8c09cddf93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a308b36-77b6-4f06-b1f0-1f8423f96b30",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fc40206-4c6d-4b44-9cd7-ef34fad589c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a202f867-3702-43fa-b6da-faa687928ac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070823ef-3b7a-41d3-ad78-e2d1433f0b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09b90b6d-480b-4242-a8b4-d7b531b5ebdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70936dd9-efbd-45bb-b4ee-b1b4f26502e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bcc788-3915-4d86-b254-4556f4577936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8820b7ad-fb93-4aad-af58-62f759109d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ffa019-d68d-46aa-a8cf-686d636a152e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "380c361c-ebdc-442a-96b8-da140ac4a926"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f96f8d32-7d1a-43b6-bd48-1c01e73d4b5e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60af400e-7a8d-4db0-b9f5-0e20325ccf03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05ed0c9-a8b8-4726-bcaa-10ffefa8e052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b73ade-4823-4c01-9bc7-1d2c1955de74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0897813c-eaed-4adf-9c5e-1c42bf90ac92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e167066d-0ab1-4541-bb24-19365ff927b4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf39198a-43b0-4f44-8cd8-137cf38b3ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283ca0e3-38a4-4183-be56-0cc461825152"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf074b9a-8b97-410a-b88a-fd7b65f94d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af749eb6-afe1-4aa6-8d0e-4ab139d9f051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd587cf-dbcf-4db1-abe7-a7cd86a020bb",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7f6d49-9f39-44c0-ad3e-faa2bcc62c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10008983-8512-4a62-8d55-9316ebb8d3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992fe293-ceba-4318-92c0-0b45468422eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7034737c-bf15-4844-9d54-68087cf91d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3abd4b0-6c79-4fc1-8183-13c63aa47b71",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a50812-d352-4918-943c-3f33fe5e57cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f277732-0f6b-4fa5-b52e-1d8be1052cbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497fa6e9-0ac6-4328-84a9-80152ad55f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09c311e8-f91d-4bb7-8da1-d64086d9bc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf12d416-d86f-4059-b37e-2362b5529732",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d1ca40-70a8-46fa-8181-e2f6ad00cc95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30eade68-de41-4744-9ac6-5ba98886fca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5273e01c-766b-4a50-b36c-acc460685798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ee0be5-332c-444f-b81e-b528c5d1c657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80b5a5d-5cbc-4e5c-aa28-9697a3936736",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5c21abf-7598-4dc7-a296-98bc2167b6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a533724-0032-4fae-8a6d-28ee6d2b65f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1183f1a5-8eb2-4a0d-80c1-930828b555c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b976a91-1f14-4866-98b4-f37288f574bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae44892-1126-4fa4-bfb4-4ef7cdd77f13",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dea1165-6e86-414f-b740-ffd811011087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc4e07a-5dff-4c4e-84b1-ba6d6566885b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "860e44fb-1eb6-4168-a4f3-93d08a5935cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c66774e8-0518-4a62-9321-65d52b7aef68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d89fbfe-f517-4bf6-9377-39de219d8b37",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b281f2bc-5d29-4420-823b-957eaf685a25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b58e7e9-eecd-40c5-9916-a8bf6feaead4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9e60aa-478f-46f8-bc19-0d723054f652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "107189b2-45cf-496d-a8be-93883d53c4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2481cb08-645d-44c4-a8bd-c68c86126692",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e31fb2-2fd1-43ed-a7ef-8f935c169096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41f4651-30b8-416f-8d76-f99b9e1afd1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce502ed-d8c5-4210-9c8e-ea15b4e2a7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "51393e8c-daa3-4e7f-90fb-45fae314ecce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cff05e8-f98a-4a42-b23f-c31628f69daf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0f0559-eafa-4684-99b7-aff8c7339b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284dba99-4602-44ba-899a-1e8fcf4554c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4deefd-f908-48fa-b82c-440a6a6e5d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "852b96d9-3708-4d07-b14d-bca2b919b98e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f523c512-b4fb-4c6f-b8b0-1dce39c7c84d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5603d7e-4448-4a2a-8ff5-3b7bfe432538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a26a32f-1697-4324-97cb-54ad8db8be4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc604241-c1b9-443a-84ac-c50b6261f28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "62315154-9d80-4855-a23b-3273547a2b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a4e285-8af6-442c-9d62-d7610921ab15",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0b1545-b5e9-42ae-89f7-aaf315bd9b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "586b18bf-cd55-483c-a738-a836e8afa5f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44047781-27cf-49d8-a895-6f2cc72f76a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e8b3b2-e54f-49df-afbb-e9ea0f198bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a7d766-4d00-4ffc-8286-4207c4be924a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e752477c-f80b-48ad-b342-bfd6dbb5f780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbccd828-02cf-4627-a9a7-ae39b5b6b615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "501c4156-99bd-4d97-92b1-75035ba7fc91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d568b289-f447-4825-b009-bbaff30a1dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d5e1c6-1715-41f3-83c1-4ff4f195fbfd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cc785a-6986-4f8f-9722-5fd4cc9b36a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eabf9bf-4e69-4056-859d-9a16923a5de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a85a548-0f16-414f-b11e-77edec81a666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82f84a03-64a7-4f22-a885-22ada38825c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ef9c57-564a-4e4c-93aa-4e8d087da821",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1862ce6a-385d-40a3-8c3b-f654853da123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d764ef52-0df0-44fe-b2fd-3f849cca8393"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3de55f0-208a-44aa-8d60-265200ef51bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abf5675b-428f-4f41-a4c1-3dbd6b8033e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d6a260-81a1-4e8c-ba2b-69dd8d74affa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2423cf1-9357-4cd5-810e-54fa560b3ccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b530f7a-b45e-4fc3-a3f4-210f244ee5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2011b38-132c-4a95-9bd4-be7eed2d9044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea21adf-ff0b-4a96-a6dc-5da8bea0b0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa73b8-54cf-497e-ad53-576915c83c4e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dc4d68-e21d-4e67-b1ba-a739aa4da96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88fcdfd1-e809-4351-8fdc-48ea10230941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d978a7f-8418-4567-bf93-f163d259d476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ec50511-9c7c-4f89-9bf6-bae912300b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a1ca42-3dc8-4217-9603-10384ef652ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c753830d-e234-486c-8892-76c27e644527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e0308c-3d2a-4687-b856-d1bd5ff63295"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7c7ae5-a52a-4391-9442-3f8b091a7f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a388be-8f68-46a6-b817-41ed7c1c90d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0645a498-09e8-4091-bb2a-60642da26f02",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "930feaeb-21d3-422e-b1be-41b21ff4c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed32d9e-3c88-42fc-98f3-5230a05ac1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d0e6a01-b4f1-4852-9be5-5c11eeefb64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41556ca-e541-4e49-b160-9ec4df9f2677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5131ee-cd6b-411c-9203-18a0a46e6a0d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba0ff6a-8816-44c8-8a77-6e5f827d75da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02d5548-5635-421a-8f95-6ff9e5a7599e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf60922-ddc4-402b-935b-e95a0d734279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "578ecb91-1ee0-429a-89ce-92c3ee8c85e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "428e0dfc-6672-4d6a-87c0-e42b2198c3ab",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440f1b26-353e-4196-acd9-a8ae6f4053d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04114df-ccf8-487e-a421-909dba065e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804ce43f-2a58-49d1-ae3a-146f225a8132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1143fb4f-35fe-4bbf-8fad-605391fdd3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5706915-1570-4339-ba4a-24ca4bba4d54",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c70b8d09-164a-4741-b1d1-5864102f098d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45f977aa-e678-49f4-99f5-bb6d8f93e010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319bc672-3d68-40e9-93f7-95b45671921a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e7238cf-5a01-4dac-b60c-99833c50316c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dd1cb6-cf0c-4381-8d1a-861426e74913",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29e7de73-8ede-45c6-925a-30d7fc829f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3980b7d1-883a-40e9-bdea-df34f7384ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f150096a-158c-4e24-bc46-a7fcce73a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d768bc39-c1a8-425b-9865-a5d187e79122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1b3464-19ec-4295-a53e-118613d69e9c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23adc9c-4834-4e1c-bd52-15eae74feeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a07ae5-288a-4ffb-b711-1163568424c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c86e391-ded1-40c0-8a72-61e126704f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b93faf-64b2-428e-8d3c-cc13418d5681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5faace-ee45-45a9-9e8c-27793dcbbf41",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca4bb7e9-149c-40ee-89b6-99b4e46a7139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6701e679-6d22-4627-852c-035a1fa6a744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c4c58b-3782-4b67-aaa8-b98e48735323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9fd792-61da-40ec-bf44-ccec6868cbe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08df18f3-98e4-40df-b950-e460c1417228",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0f3667-0ec6-466f-a6bb-d4d95f245e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c32579-8d02-48ad-89c5-eb333797245c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dd4931-8d3d-45ef-98ca-cdac96be77d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca76644-fda1-4686-b0e1-279240b0009a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "446664a8-1705-46bc-bcfa-b9655d3e2551",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d66ad26-a9d6-4002-8aba-5513e1fbf72b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bfb23f4-226e-4d11-b2dd-5b4f399e8ecd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7d3f26-5951-4da5-8fb9-7ebb0387d96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a6daf6-71b6-473c-8da2-72b5d310e190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6253842d-c5ce-405c-a6b2-8a04c63a2fec"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aee01de-04be-4dd3-8efc-69e740b6a069",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1bdff62c-0c0a-4fbe-9a63-921922c7c24a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "835ced42-79ff-4aea-a59f-221fd56d71e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10f41770-705f-4384-afa2-7b0f98c2a0c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "651affe0-244d-4a76-b0be-2cdfb2d31907",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94cd3ad2-9798-40b5-8927-9cc663bb379f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0a8c9d33-151e-4a13-8601-553f91227f63",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f81f4ec-246a-494e-a12a-0ca73aa568cc"
            }
          }
        ]
      },
      {
        "id": "3b975087-bcb1-4b8c-aa15-ea7999faaf0f",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "05de4b81-082d-49ef-a47b-4464124bdcba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "23f6c7b1-dfa8-422a-aaa3-d6792fe4e7f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5d4894d1-143a-4024-b4b4-127a3b9088ed",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a245b-0285-4b09-8559-1c8dbc8b5b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4864091b-6700-4c2b-8d4a-b5399b93e8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8d0bfd-d361-405c-872e-ed3bf9950fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaf308e-dddf-474b-ad84-6d12907ae31d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbdf99f-10bc-479c-97dd-cf9eb59b23c9",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e7610b-9953-4a46-95cd-fbd52425cdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec679804-fcf8-4fa7-8664-0d5227298735"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715bcec-bf1b-49f3-a831-f32b48cd5921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0598eaf8-e114-4a52-839f-ce0df05f98cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c4bf44-e969-4a96-a571-615937bfe484",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79811ba-f44d-4911-b198-611989e6a77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be799a6d-f45b-4a6a-acfc-1c1a7bf3f08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2796dff-a96a-40fe-a2ca-68bab6cfae58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef913456-9bf0-49ba-acd2-ed01b53c7e7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4306859f-aafe-4ce8-b652-7110f053887d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a01b8e3f-0057-4c9a-87b2-db1b0c6717d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8337525e-b972-4de5-9ba6-47b1b2ce5a35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e56568-a607-4f53-b073-f52deb7731da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d632490-bd86-44a1-8a9b-6dff75e06d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27eae1e-5d80-43a3-bd7f-a747a5bb4448",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "983d71c0-a8c3-4e65-9f22-6b62e842b9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4f8db8-5985-428f-afe1-426b6195e52c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3a936c-113e-4907-8a65-48f2439af8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba71e22f-69ac-4aae-9898-e4f9b93498e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffa7794-1a63-424e-80be-1b6ca8e3d01b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c6f980c-14d2-4b6c-99a9-d22d1de23ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5a151b-bb8f-41e3-81a5-72b97f8fd07a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0baaed41-b046-4a8e-8aaf-8dd7994e93a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f096fc71-4ed6-41d9-9da2-f9024af6360b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1948ca-cdd2-4197-9b95-49a623c68ee3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268689a4-db23-4dd9-b27d-8c71973fc7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2af3ed-ec65-48f4-8a69-97c083c52f23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8222ee04-e431-4f07-8896-3bf62bfdebe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "99fc6f20-8d62-4b1a-9612-697881e5b87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ca4afa-61f8-4336-8d9d-976d818a0493",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86dad45-3645-4c6c-916c-97afb641d583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2596986-b506-4fd5-bbdc-74fe14bb4373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355acb8c-9991-4d79-a11a-a34903335361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a253547-b241-440b-a584-a1dc4f9834e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456548d5-7502-4add-ae00-6e388f8c2767",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25b6e2e-4454-4754-8524-8ca8d01f293e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6b1ffa-f8ca-4273-9b36-93789c69863d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e80ac66-4f26-4b05-b34b-6ef907185aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e66c5e5-382b-4cce-baf1-4b77458bef16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a64e76d-7c89-44ed-9ed8-47cf198a2279",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7f2d9c-2853-4875-93b3-a12300543a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9b31f0-6511-4e09-83f3-fb89c27416d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c590a4cd-8d76-4bf0-a673-e9345e67af08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "72298339-2ea4-43ad-b3e4-deb508d19d73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58101958-7e98-4bed-91d4-1514e499f56e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e3fbff-a1b9-43b9-bee7-4da9fc1f9ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "268a750b-659d-4f5e-bb36-eb2b1d663ffb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f3800c-f2d3-4eae-b333-7b7a8dba95a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9ddc21e5-736e-4fc4-a2c0-89b9f74cf88a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59208f94-0bc2-4ea1-83e5-01a053f917e9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3bc80c-e6b9-491e-9e51-bbd6215a831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289fc5db-4ade-4658-9cb3-26e94d624055"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04bddc65-4c37-4d49-b1d0-cdebc1f0559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "16689d36-c84f-45a8-844c-c89c12e660ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1998f8d5-35b6-4666-a665-31028e570fea",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f848a1-6834-4193-93f9-fc1a25e20518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999a7878-68b4-440a-9050-fe195453217f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae35d07a-aabb-44c5-a7ab-9115209db054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "85b232ff-9dc6-4323-a7bf-008111a44cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95031afa-870b-498d-8a6a-15b06fd87341",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f79d707-0479-4f22-a4d7-30342e37f2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fbb0f65-8978-44fa-991c-0268488a55bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d504126-ab53-445a-9758-9bdd41cb5814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f88632b3-f5c4-481d-8aef-4a4f49d5fc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ba3e17-39eb-4f47-9e24-b7d288704319",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1b8a31-5f46-43e8-95b5-f392c55b9cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b703ae-48a5-473b-bfc1-33fd2dda856a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e683edf8-e50d-4b70-8429-c549bbe7c611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bae20d6c-f717-479e-8c42-d3a04133073e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59587254-29fe-4be9-ba5f-8bb06d1c669c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbaa6aae-b2fe-4df6-8a68-b9df304868eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b1e3bc-7932-46b2-8442-da2f05e82372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4228795a-d3f8-4d23-a855-7e98c5a9240e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "26a3b78f-8356-4ffc-9638-b2f85b1b4a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c2544-19ad-4310-a9b6-15856f641370",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b66f2504-6b80-4a14-a89e-7ece2b07566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846f6eab-da1e-4638-91ff-5ce4c94adae8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2f7dd6-7faf-4a22-b356-1244c8dd1f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b04396b0-0eaf-4a20-81f7-971ef382eaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbd791ec-7295-40d6-9a4f-5d8c7cd17dc7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e984192-c051-46c0-a734-464613b20046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46ff5e36-40da-4c88-918d-3a907849d8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3602f9a-8dea-468d-a9b4-7db8ad60c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dafec21d-8937-49c3-aba5-3cbbe1a5c2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07f1a7-3640-451d-9a7e-3ced06a2abb1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a51365d-e9c9-4be0-91c4-d92a249e0b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54845bed-09b2-421d-b747-278acceb47ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a5c416-c673-4347-a5bd-456d772bfd90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df5a399-89db-4503-8f33-e5cf5795e4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be50269b-7571-428d-8ed4-78e7c0cd897b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2b3adf0-bffe-41f3-b8a1-e3ee930e6e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d21f578a-d215-4d6b-8092-24c0c85482da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5dd949-d1f6-4a5b-9cac-34f47d4e17ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ca997a-97ff-4e1a-8a7c-13d08f49c558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b942bbb3-6f86-4bb4-88ec-e93c9dc00c1c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a17ed6-7bc9-4551-8eb2-35d9d157480a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96b1ee14-f2cb-4161-834c-f0a94d90eb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71946454-1f01-42c7-a92f-d4563d5b5849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1df1f9-f54f-4bc7-a483-f187c1f508d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729937e8-ccca-4d39-b564-ec13e67792fa",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5e275c-74cf-45c8-9d8f-d1d6c51fcf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb10c513-cc51-415f-b61f-b6b0ca7e4460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f967e47e-1b0b-4a5a-81cb-74bd978c967b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b8b10605-b049-404f-b11f-c8d4fa57d153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4da5ecd-9d28-4bf8-b172-cf97d90127cb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69628e8-2700-4352-98ca-8d80de2fe674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724f94fb-9c9f-4bed-bfb5-f8a14e6c7bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990b4c15-69f2-44d1-811b-b50641deb679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2be448c7-09d9-4145-b0c9-54ffc8cffe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a09fe4-c0a9-427f-acc2-2e611cc23ebf",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d476a1e-9eb5-4e0b-a0e5-009cd8900e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d97ef70-8832-451a-846a-d3af31591ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d159d3-fa34-4e04-9644-378274b39685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e913bcc-ab07-42c8-b34c-f2704fe5daf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d60c30-0743-4bac-8e46-5de258cd4c83",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b218c57c-cb03-4317-b1cd-ce606dac4b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5244684-3867-43a9-938a-cab630fdc502"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa45a6-29a8-40e4-b089-d95fcb04aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1962ca-3523-4e73-9450-700b9588d169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7a9041-13bc-4836-93e3-98f1ff199cde",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d0fc9bd-a6aa-448f-9f1a-55a95ae96af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2a66771-40e3-4f49-acd3-945236f29e99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4f6e9db-7801-4ca2-9f71-02fd7ab2f35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f287b12-5dd2-42cc-a539-0a67284fd607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ab57d8c-b8fe-4df0-8ce9-bfc1b6db312f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48850358-18ab-4d78-8794-4250d43bab09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79234fef-b7d0-4b12-8a82-e6d5f8da200d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df48035-49b6-4a88-8020-e5284ba812e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "679c3036-b1fa-469b-b72c-503907967be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762c6f66-91c8-4756-a0c6-d80591086ea0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8955f131-ff2d-4f31-83ab-0ead68b2ab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d7b334-afba-4ca3-a6ca-f15056602846"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f05657-08f3-42d3-af91-e2021f1178be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "987450a0-b1a9-4ab4-9381-707eb083dd26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a16b1ba-56f1-420a-ad16-dc365f1577e6",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25fecaf9-b70e-4194-b9b4-215696ccfae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255baf91-54ce-4f95-93f2-9116cfa4b3b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55cd0a8-27ba-4c2c-8b11-113a65b54188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4b3d75-fdad-406d-978f-67a4b65ee9e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df4a1151-52b1-4a64-bb05-269fc1a4bf26",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e41f929-2b41-4454-99cd-b87917b7b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20edeb35-7008-4fcc-9c3b-356ddc2c9ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a5243b-f20d-4df5-867d-4b54a368c9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d152dc-806c-4316-8d65-8c129634033f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58eae8e6-cfb7-48b5-b9da-ecc0be15f00e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9db7180-1916-4a61-a851-5cc7c8fbe193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2624deac-b389-4ea9-bab1-38665b03f648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf7019a-c7da-4614-8a05-23ab6d049c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd844794-4328-4001-86c5-fc56eaca4aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51513972-1616-4380-9daf-7074897b0038",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f601dbda-bc08-4008-a236-db82f7702476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99c40e3a-019e-42d6-80b5-1806350f8f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8b36ed-40a0-45c0-8dff-2283d209f5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fcdd21a-f2fd-4708-b732-e4db7953c032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8312d879-e19e-4c7f-8c8c-1fcb846328eb",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79af8ae4-2c33-4645-9555-5b6f881f1432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7e79ab8-81ee-49fe-979f-5a2a116e9720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7cc35-9b8c-4108-8374-b6af8eb6e1ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddb46b6-ba17-49ac-881a-4de7c0acad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc15cd8-5a14-4c81-998d-7009dade1b18",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94749cd4-56b3-43c4-a8b1-f97b7d735f06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "696f2433-e912-454c-98e8-141034972a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "928fd967-eabb-4667-b8e6-32365fe16219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f0ee5b-a259-42da-84bc-7a900146c797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8ef8a5-74e4-48ea-a23d-bb76773193a8",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed39c2ff-a71d-42ba-bc72-07c3f5586e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5f5ce7-e201-4f6f-8a2e-26ab370050c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3b3a08d-9eb3-4776-a413-77b33cb992f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b161bbc8-3234-4ea8-a396-15929e3210e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "780bab62-5a63-4781-a561-3f95bb29b47b",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87240f3-5477-4cd5-9b27-351f55f2fb79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7e1eee-864d-45cb-a015-0bfae42c8054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3165d941-a333-4ffb-94ac-224f2aecbd4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b955270f-fb35-435b-8819-609d6370f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8d7c0a1-94cf-451d-96d3-cae6bc3c9780",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c8ef17-0a47-475f-81b1-dddf32d7b50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5a7da7-6108-43c6-adf8-521f8b9b2a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e888b00-49d0-4dd4-ae85-bd54d4f35e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0503069-2d67-4a84-91c7-ad46012dec5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "da856e6b-6197-48f4-bd25-82fa2ccffc1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de4dbcef-677e-41ce-95d8-19dad076b4bd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d100406-b95e-43f0-8bc4-37e76bf68da1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7da148-9ea0-46ab-bd84-ce5f39e5cd20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d905e8ec-ab07-4510-8610-f7943784d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e59fb28b-3748-4051-a2fc-72261453959d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f905bfd2-3aeb-4c88-a8bc-2a90c52c6fc3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "efbb964e-8682-4db3-8511-33c3a67fc416"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5fa2aedd-76be-43c9-b6dc-574969746025",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5bd0a2b-d2c6-4658-a62b-136261a6d7e7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "964879c3-05e4-442c-9d02-fbe6726d6a66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "08d2eca1-9ca3-4403-9892-269a1bfc7dbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "367f0bfc-7b92-46ea-9090-e5f86681e257",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bb351bc7-eabd-4550-bee5-8d39e8bf1ee2"
            }
          }
        ]
      },
      {
        "id": "70f3442b-6e8a-439c-8455-8d25584e01d7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ce03e519-3813-4d07-be01-d568f2d04b8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4116f1e-55e4-4fb3-b8df-8c5feb4bb095",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6dddb397-062f-4870-ba0f-baba5ea70fcb",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0890c1a-ec72-46f7-9374-81467bb6af9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b27a09a-f217-48d5-9f7e-d6fd3f8a316d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad6955e-6e2e-4401-9425-fb6264f77540",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682ed33b-c6cc-4e60-933a-4a4ba141a33e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f85128-e46c-4812-aa87-8a9f5c1ccb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bab710-910b-4817-85de-7829fa6997b5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54bf9b45-6555-4ffd-9fa0-25c257599b04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d0428f-828f-4585-82fa-5ee612b78e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "321ce9b7-bf5e-4466-8e68-430d3515a796",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008d814a-a0f6-4ade-b3ac-efc800f3477c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa6f2b4-fe36-4b5e-8aa8-a6987346c21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe223336-0f09-47b1-85e2-facd117049d9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10032704-5f43-409a-8732-1a5414aac744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40fc924c-c9f7-4aba-bcae-403f241550a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1abf108-60d7-4750-8b2c-82b26a3c0795",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16102d6c-8019-4da7-9b39-7d1b84cdaabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54024652-a183-41a8-baf7-b01b6f230cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97f66aba-48e5-48e7-a39e-08cdb0f9b072",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1900c845-65d1-49db-8f9c-910a69330165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97721b10-8104-405b-8fb4-0f6980558a0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82a24b1-b9ca-42f1-bbda-0b736fced5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb769ce7-2120-4a20-9faf-9f9e018a1245"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d8ed00-0f62-406d-ae66-c464c3f23bf9",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304aad86-1410-43b1-bb19-a5093f3bd48d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8301a838-f51a-45c1-be15-81901ad9c436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0530f9a5-4b9f-4b3d-bb47-cb2d9c424b25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975ff4be-ab08-4e7f-8d3d-4c3b0cb165bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb53dbc-5a83-412d-89a1-92c5d22c6fd0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dc6072-9dc3-4037-babe-1fe9e15ec19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71997595-06c3-413e-98c1-4dda2b0b129f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6008bc5-ba91-4111-b6bb-8a80ea3971bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bf8211-0e34-4e47-85e3-15bfc7195dd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a035ee2-4a18-441d-a471-5d44ebcd8afe",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456107c0-7269-45b1-87b0-63360a453b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "681c0c18-a960-4969-ad35-29b67feecdf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65bb5d8-39cc-46a3-a286-717f45bdf90b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b78aea-cd1e-4cd6-b15e-96730b0b5098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "831f30e7-c1dc-472c-8bd6-f0f151df1df5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f504bd70-7dab-4681-a7f8-4006350eb109",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b4383f5-9c22-4922-9fb4-7ffd792afa7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2e511b-e3ad-4c5a-b02e-0df1adbdc269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06b6405-3ec2-4f30-978e-5355160244e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02de3ff5-e90e-4aec-b8d3-3326faf9f58a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e40b873-010b-4008-b5b5-c02e8511eaa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301bb83c-ef98-4e19-a8df-ff4b53aa6237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce6fc5c-83cc-4db7-b321-6b9093ba4a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4f844cc-c729-4381-a167-c60803d38c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48736708-9c89-4b8c-9c2a-49a838d982f8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac2e07e-dcc3-4b54-ab31-1541a8a2e6c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9812231b-5d52-4862-9e80-03e76c190703"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688e4af0-bf8b-46d6-aff4-a135a782ddc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2d18f61-467a-4573-8177-efd19c885334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507bb5f0-630e-4069-b306-ab64edd6b80a",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5107e7df-0a97-4e34-8764-d62344806839",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7468b58-dac5-4b95-a97b-78072a86a67c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82ea516-4acd-48c5-8c12-724404a66f87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "606b95ac-ff32-40a7-81ff-6bec88e9c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e85667-e85e-4948-a55b-092a881be546",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16fc1d6-040c-4c41-a948-84c046e615e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd01e461-c95b-4e9d-8bb7-a890c50a4cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f103f536-04cc-4399-9e7d-637dc04b08c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b883e2-92d3-4f27-96ab-a487b2c07c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eda6c4e-3640-49fa-a97e-1e9db0da966a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c751f88-ee3d-4b1f-960b-bbbae04dd3d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33757a0d-0b79-4e4e-8037-f0064d70ac84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466884c9-f036-47bb-ad52-ba85ddac2798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdef5bfd-a011-48fd-b5be-d139afeb56da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131dacb0-5146-4551-b464-be6f81325793",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd2b58d9-4fcc-4cf8-b2fd-f24abf46a7c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f4b080f-9180-4807-a176-741336cdb985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2785d709-fd48-43ad-a7c6-0e1320ef7079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ed5a15-ee12-4041-af03-45d13362ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4faf01-a2b5-499c-9b6c-a756f1d7782a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34aacc1-05b9-4a3c-90ae-e2098ff4be57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3afdef42-94e7-4188-891e-1226ae8d95c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6826df68-ee31-4cb6-ab91-41049aa01937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7ee5661-eebe-4f3f-8160-5917ac87ed02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a4871-56c6-465f-8343-51ca758e1ea6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd4635f-8a8f-4e89-8a64-28548b731c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a047253-3a29-4437-b2bb-035f573faed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d470e34-e3b9-46f5-aff4-84502fa9dbdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be10fbd0-75d8-4d03-b264-7566d1fc9283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28693ca1-d1e8-416d-acf0-276310f79382",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656d487c-d535-4021-a47b-97469b410f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b889fd95-e124-44e7-99da-6a610f0dbee1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d604107f-79e3-42d1-9699-f8d796db7ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089b2d51-f90d-4065-b8e6-6b906f3fcf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "953c5402-ee56-4c47-9da1-402346cd918c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da5fe29-b75b-4327-a351-9353c0d7b370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0e5a6a-cf0f-44f4-a93f-90b203c9bb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c756e601-96e8-49cc-a591-a83cb799820b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bba302-4787-43b1-a5ea-486dfc6cb2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded4b6be-3afd-4844-8f51-457c990ba7a0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6effb7b4-5be4-4812-bb60-b7598f0d8842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce6a09c-fc49-47e9-9946-7d8b63702043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b734a9c3-568f-4b5f-9b98-4486e9aaf3d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8284bbf7-dc09-4f8c-805f-e79d01349f1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba3957-cf30-455b-89c9-3cff08e71a2e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a0cb03-fc5e-4882-b93c-c7a05f93aea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9b823e-3c3f-491a-818d-07c226207b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afdae3ad-7b5f-46e0-ba78-7656706628a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55037c5a-5587-4b19-8b22-41bf5355939a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a72121a-b305-4f93-b8f8-c64e50fe0dee",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e0a484-341d-486f-b055-69c033d7d610",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68e3a9d0-53d4-4ee0-a18e-3b11ba0f87be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "024e6182-220a-475f-b027-b8e0f06c8d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c71dddc-212a-4ff8-9e83-0f78e3c4ebce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8ce842-09ee-41ff-93dd-db6232d05712",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb94077-68ed-4a05-9204-46b0062b8ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4e7bd8-a5fd-4485-bc89-ae586b2c90dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e76da2b-b7da-415b-b795-3833cce6c38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9bced8d-9876-45a8-b033-18a9981fc083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0be1eba-3c44-412f-8da4-3f350e3e6d07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44d111a7-440e-4146-95c0-0fe3695cd75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0c0727-b2a8-4bb6-9b94-06ec0311d193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6cb24-cc59-4511-94d1-cbafcfe0a9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d167ce46-6313-433b-beff-1775d6a7c928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14cf5cc8-318f-4abb-9569-8c55ed58257c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d9964f-7390-4f3b-bea4-c1795495453c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed6a5c4e-4a61-4fb9-9007-0eeb4c9db243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf59cf1-849d-4ccf-b70d-8a54609831bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401d09bf-c7e9-481e-9adb-f9ae331083a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f33e9e-492a-4c36-bc64-b3c08863ce7c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2798604c-9e35-442c-bda3-431d6271b59f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd31c7b-73c4-49fd-bb59-692df7950835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a308e8-ab8d-4790-a6a1-220acca05d8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82785013-e3ea-4300-b6cc-1b889d5d2846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609f754f-8269-4be6-a55d-74082da7086a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8677fa86-5348-42b0-81d2-8d4685f9f355",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c997be-77c9-405e-86b0-0dc2e4fa53f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0a5e01-e565-4a38-b7b7-b7c2c91412fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36dbedfb-dd0d-4899-a685-9b341a2682c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae58844-62d1-48d9-bf59-ff500bcd1dd0",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "127c8b20-95b2-4c08-9793-6493064233cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3eb6312-ef90-4b51-9203-70e79ee930ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5de0812-7a6c-4066-8c9d-994a03426ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed59caaf-461b-4820-a46f-27ed82e87763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfad67d9-085b-4460-b688-757ffe8750d0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44243ffc-fc9f-4f99-8972-ecbc925da35c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25b069d4-e90e-4706-b179-8bc89c5a799f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb8837c-a3d2-4cb4-a186-3247f126316d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610dfc25-c0b2-46d2-b350-9ff57f5b4b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8368c5c4-c02f-4f94-a249-c2df04dc33cb",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "464bb28f-604c-4a2a-b2b0-eab82786307b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4679771a-dfe1-4d8c-8bf1-4f1a3b278b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3db7bf-5e3f-494c-8474-7e180bd60ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c59c6a8-b89f-4e3b-9a03-91754c537d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b34676c8-3e3e-45f9-847d-102a361b4f5d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408bda7d-ea76-4c05-b3c6-662391ef7075",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dad4760-e3fa-414d-8782-7724ae49d4e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71fc78e1-26ea-4bc8-9ead-42a17ac40bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cca1f7bc-ec9b-47ad-9a37-d535336de28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5738dd69-5ede-4085-907a-227e9eb31bb0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a64b5f1-c3b3-41ac-aa8e-c030979189d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ada430-65a1-43fe-9c20-dc02e984a93b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3394338b-1738-4f41-8f98-610c14c38e30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad208032-692d-4ec5-aab8-3ac9e4c8a827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bff72ca5-254e-4d1a-a38e-73a8a33fbc2a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41e646c-e49e-43f8-a295-0ddbbf45de1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8c8a415-5239-4e01-a2ea-7061ecaea8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77296f6-1269-4572-9fe0-e1c0fb753134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37aff5aa-62c7-4660-bfe4-846aab15d42a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "716338c7-b255-49d2-acd3-74d42147fbdc",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d584f0e-fcc5-49d9-a3f3-fa0e7ea46a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2791aa6b-534f-4b55-9d67-ac54533953ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f75f2e-c90f-4b67-8155-42fa8ab78155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d79122d8-4208-4b76-a6d2-54dd6350d0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd9e17b-5dab-4367-b954-a49488f2b82c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06c03df-07de-4664-9e34-cb58d87f72f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e518c76-6476-4b35-bd33-8719501895ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b306e2f-4fa9-433e-a148-9e024a8e3b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3980a27b-d754-4704-903b-631fbb9929fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c7dddb-3ecd-4723-b78e-690a65aecc23",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409b2538-1eb0-4636-8ef4-afdd2849d91e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9fa6bf-0efd-4e61-a091-3134cb40316f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d5ca40-fef0-4042-8c45-49838b2b819c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b0a3d5-7a41-48ad-930f-a83b691e499a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67fc4aee-a7c7-4949-ac04-3ff650c7c29e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e29725a2-9fba-4301-a7fc-0a9facca671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ac52e1-6e77-4509-858b-b8d139904ec7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d27d9dc3-cb68-4509-a607-bbf31767dbc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fb6df22-ddbf-4074-a450-6b93d656bf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20812dc5-798b-4b14-a755-b0b8d4fbef4a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c176525b-a6d6-4227-bd57-55f5c691c0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539480ca-e0d4-4b7a-8ef0-fe38de71aa00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b904a6e-243b-4868-802a-8b9831262243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a5e9b27-37a9-4962-b0be-41daa64617ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd0ec2f-24b4-409e-928c-86d8e04d969d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76e5f68-34cc-48b6-9279-829734f7e80b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5951cdbb-1f26-4bc6-9629-8539320bf472"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb382373-537a-42ca-9874-b4f08b61c7be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eee9801-d0fe-4e7e-9eb9-6ef7da55128c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36afbfe-9a56-4cd8-a306-5e7600d922f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf825f8b-cd3c-4920-9b45-80461e506b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fdfafb3-bdb4-411c-b6f6-4c7caca48371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042a5540-4b27-4d0a-978e-5508204beeef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56699078-adbf-4a53-9145-48cb69d9d8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c449efe-b2a0-4221-8c60-f048e3d1d69a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88579913-6f6d-44e2-abbf-aa02ec08de2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed8d1556-f3e2-41de-8582-14baa45a3519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e4747c8-7294-42f1-8eb8-6d5329e29c6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24dcd2b6-8f08-4092-b456-87cd2accd421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a3ed3d6-0e0d-4c54-87fb-04868f4a9719",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21b1e42-8754-4653-a102-d778cf652f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e0b275-2434-4706-899a-0da5e14133da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5fbe21-87bb-4239-b4a2-880a2a32e83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "326779c8-51e6-4737-8801-f7c8d9185835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cd98e3-5ebc-435d-adcf-adeccc5f6845",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83b2b32-a192-431a-858d-6e157c6de8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22254b39-a477-417f-97fd-434121c90842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a31919f-3d0a-41fb-a0cd-b9fee0b1c922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb56165-9176-4ec8-b404-756a3608c6cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e46252a-2ab0-4ee8-ac78-041f75eae8e8",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914d4ffb-7c30-4033-b8b7-ab31d53068ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f34f7ac-27d6-4861-9b2a-7afa0cddc7d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "272d19cd-edc5-44b3-b753-92c442bf87bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79eddf85-9895-47ff-af51-ffa578104c08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e8285a-bd09-411d-a5b7-3c96911c9446",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efb031d-e42e-4835-b78c-98b37603cbf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10df208c-ca0c-4088-8039-7ac4bfacbc13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34eea30c-cdc5-48ed-a850-1b9fed1685ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25227fef-913f-4f30-8f13-ecb3e3fdfbbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d1a4d4-7cd8-490a-a9c0-cb1f9dec4ac6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9e2628-fddd-45ea-ac33-a7bef65b01cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0182f174-2368-4583-840a-069f7ecc09f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebdd87e-47c3-4773-99ff-84d0e1538c79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7817d42-d970-4e99-aa64-cc052d1764f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e13dee0-4472-4657-ba9d-191877ba36ac",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0586c726-3d26-4a83-9d1a-7d9a6612ebfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db261eea-9944-4d25-8129-1ec61f89bc89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1fcaaa4-0374-4d8c-b99d-30aef5bbb707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ce06dd-17d0-4f50-9eae-d8c5ea18379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171f4dde-221c-419a-a52e-6510ebe1e55d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e18ae49-f229-4ee5-97f1-35b61913e042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d064be0-cdcc-4b74-b050-5e366d7d9ff9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93221be1-0df2-41f4-91df-8dc686159ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6e37053-34f8-4c75-8027-5ff723cfe1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9deeda03-ae82-472c-98b8-939d103ceb56",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c91307-07b0-4863-bcef-a737626014aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c08a01-2ffa-4867-b542-5f210bdcdc1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a710a63-43e7-4086-ab6a-38fe031fdc47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff24d475-e03a-49b0-a52b-2345deb98b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a4b1b5-3a09-48d2-ac5f-53502d7d6943",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bcff6c-9aef-4c07-b78d-0c3c41be231d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489f6328-377e-49bf-bd60-3a7dda90c46d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8d1ec5-eb2b-4142-92a6-a22878e4bca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd092c21-3514-4a69-801c-e83f91c32c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8696f9-b1b1-440f-8238-8a3ad195bb4e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a70c688-d854-47f7-8341-049710d78121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5228eb-714b-43b3-978d-794e319a02a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6540bc4-cc20-43ce-8801-1c2e7ed087ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae516d23-416c-49cb-b246-e7d155bc2371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259567df-f2b8-4ee0-8c9c-2663d28f38f3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e54c787-b0ad-4f1c-b656-13f3c8095720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913b0a83-30d4-4df2-8884-e8663e8c9452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e9175a-8c46-4d35-923c-ddc13b225206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56949027-e4a2-4171-94dd-c6ab6d64c088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d214b79-8f65-4d4e-b038-619372e09fc4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9632b22c-6d2a-4609-924d-c979f9e7ee0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c5f156-098c-441e-8cbb-958aedd4e2d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e30f99-194c-4fd3-aac3-a77c4219324f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27de6b0-3224-4775-9320-de5ec55be006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "597dae82-9a9f-4eb9-ac90-8746a4186db9",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff8ce72-be23-4cf7-9773-61cfbe870c2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f11279f-5517-4039-b34a-ac62b32db0b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c5929a-e9f0-4c26-9d21-4b65faa07c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d6d7b8-c87f-4297-81bb-838851e02f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bb53f72-9e95-434b-a165-5d7d42b76533",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ab1d41-8153-45b7-8a12-e8b5934362cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f407768f-4ef1-4ebe-be5c-48e0f4b27655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c53f48c-fdc0-4feb-aff7-191f2db240b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca6532ea-525d-4767-9594-348a32e26dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978ead86-2755-441b-a435-92be54d11a3d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00e9d6f-1433-4360-99db-50dbb0d49db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a57d437-7f5a-4d0c-b766-455851cb4b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f877f-e5dc-4059-83de-4858a740aa0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc80077-b6ea-4d7b-8a8e-f40be9b8695f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6add48f8-d7f2-4c12-9c8c-28c37a7ca80e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7699a182-cbe8-46cd-b790-8ac221b2bdcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5896585-7084-4f6e-aaa9-81d63fd174b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55336f01-17fc-4b9f-a5d7-a019aa6f0c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7953ca51-6413-4ef2-b912-297135125756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e573a68b-4a76-4359-b15c-ea939a4492b4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500ce892-1343-4a27-97f2-b9bd67b0a1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f215e0e4-cd33-4599-9f75-f9043b077a87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "330e8d70-b1d1-46f1-bf90-a0601cb94220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f034eaf-127b-447b-b9a0-dd317a516a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f604bb82-37df-4fcb-94f6-807cc1b5e0d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145f0da5-17af-40df-b6c0-e5020223be6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1d10dd-b805-4102-8149-f15057d416a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3944c261-88ad-4ad8-ab18-6396ef65a6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271950f4-e6b0-4a6c-8351-8a56d12a307d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d987261-1ef1-4710-997b-53f7afc0c4ca",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb39ca-6846-4c59-b17b-49ce510d408b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bd47cd-f229-44c2-8b8c-fe5a89a051a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01575c4c-20ea-482a-8322-d2ca6ff6bda1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a740fb-d25b-4fde-b7b5-dfd8d42057e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef278b5d-921a-4455-a83d-5dc1a3a28e8c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bc23a6-ad2a-4778-8af9-7a76e9edd44c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad99491a-d2eb-4c45-b8e7-462f8f117658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6160e9-1570-41ce-94c2-a13da62cd87d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a0a1c4-73f6-4943-865e-e4296f2ef274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85109b15-7b70-4cf0-b2cb-547264a4cc75",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5391d9c8-6f50-4043-b28b-109caa5ea859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "946d40c7-429b-4043-b16d-c5c0a7dac8a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "149c8d7b-3272-4947-8508-ae41a60eacf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb85f8a-0904-4dd5-bc1a-a4b38b571bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ce620-e928-4ded-afee-b25d8f8f6d84",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ac26c5-e9f2-4254-8b17-fd19b56b7257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c34a0518-bc66-4a17-bd30-0eb8a5d700bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c4dddb-c8af-4aa3-bbcb-3899ea3660db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6999925-8140-4b3f-9ee4-0f7244f472fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed7f6a3-905d-4946-84ab-3a21b0772390",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae634a30-7b83-4a99-9c5e-66fef453cc69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d8a988-f13b-4a75-951c-fcd883df4805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ecc2b1-21a0-470e-bb3c-479e9199332d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d070a45-b411-4542-840a-9539417a5c69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5091af9c-e258-4b05-8b03-5aa9b0627149",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f38e50-2473-477b-95c3-9c368b320a4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6baac58-d1ae-4450-b84b-9027667223dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a98ea67-4265-4c67-bcf7-11be37c53743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd3f886-b164-4e5d-a393-e121efc427a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93deb74c-2d24-43f7-ab6f-377b0e6cb63b",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f49ecc-78ae-40e0-a948-063c33c4d6c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e4ab5c2-e065-4afe-bf15-843873be1e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee010cc9-118d-4f0a-b2e5-524f0d265f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d42d7c4-7422-4e36-b831-527ab53a2125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a62b015-a700-4355-b3b9-25699ab388cf",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7166afa1-5268-45b4-80fb-79d7c537e9de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a776eb9e-1960-432b-8682-eceaecba8055"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c000796d-b017-47b3-9556-e5ff374e2adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf3aa1a4-ab48-495a-bcde-229c05008f0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f759cb9-8c96-439c-af1c-f9aa12adc6d6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57003551-c821-4238-8c17-2a92464a9b89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da2f57da-518a-4b4c-a5dd-958f27ac48ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67d4866a-b6d2-49ab-91de-7fd52cb97e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8241f672-5134-48a6-afc5-7204e278dc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3964c1c9-bb21-4fe7-aadd-32c777c999e8",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ceaf3f-439b-49f8-a14c-3a86d769edd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72ad36f3-2bbb-4bf6-b470-f214b417d8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71ec02c-1523-4c92-a6b9-70cc3fdf8fa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54801e2b-c3ae-4624-8fb7-c1343103714f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6cf5995-6e65-4605-874c-e570dd09dc44",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c433d7-d51b-4140-98e6-b50bc07b07ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a68dde28-1750-4d37-8e04-f58fba6a58ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "199acab0-98e1-4c1c-9858-3c63b8ad3d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d903177a-1685-4a19-9446-eec5a514fc10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "858c53c2-5e85-4f71-9f88-221b0acb5c29",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089314e6-e5bf-49a7-a97c-d49268637957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a11f6814-3c90-46f6-bcd8-313fa4ff1257"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39137eb2-54ac-4347-a9df-5a4c0f2d53fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "391b217e-ff25-4ca0-8dd8-985a3047adab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9575a9-6e68-4749-bac2-cae16afb4b96",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002d534a-7412-4f85-9cfb-846c5a14f18e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25ff7efa-a77a-4aa6-85d5-4e70395e3c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5f6864-52d0-4ab4-afb9-b606c2daf2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c105e5-3e1d-46c0-b3cf-de11dce6fcd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca31c4b4-0d23-4704-95fd-ba178ec5fec9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f3c513b-ab03-4e53-a84a-97c594fe3af3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e0366e6-215a-4d04-9ec8-fe86c87e3e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51d502a-82f2-488f-80e9-d2f59dcdf85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e311a62-4ff4-47cc-942a-9bb08b852a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9247ab4-9fa6-4950-a0b0-35c467afb7ce",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac84321f-10eb-470d-a8e3-faa59b90146a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "607ca981-ac96-4725-aae7-96ac7c9ecb26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ecde1d-d53f-4b44-8df3-3e6a2859d95c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7eb2699-b85d-4baa-a80a-88592f8f0197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d88ff13-b787-4fbc-99fd-cf2dd197adc6",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa14ef1d-b3d2-4792-a7c7-5cf3f6b3bb9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460d31d5-196c-47e4-a8a1-ce7cbdb4ab3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da6f01f0-e78f-4328-b637-1e1f6fec6e76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b112fb5-fc97-470e-b976-dd50929ebf59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6a93b1-c332-4c68-899a-8cd4375f4902",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce4dcbe-8339-4631-bb01-021d17f3f057",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfe33712-f611-42a5-9505-1756b5426e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a648d3-e6b0-43da-94d1-a453dd07bdd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcf9f745-2708-4e7a-a10b-a1f08ef0d243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dd5c07c-5505-45c2-b33d-245f8e3a1234",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16001a96-290b-4557-958f-2d86ff637128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8a9973-16e0-4864-b01c-8ec3d5d2dae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7e43a6d-4320-414b-90b9-f473914d910d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e819db7-ad21-4465-bfbb-439510092dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486531cb-105b-4572-a397-8fcae01ecbaf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30104718-1711-43b7-93fe-da6e32e40691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4f64ae-fdc3-4269-8b70-88ffdfb129c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5deb874-236e-4801-b894-2d4577182d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7296e463-071b-429b-82e1-8ee73470d94a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1cc9b2d-0cde-40b5-a58d-c4006455e774",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c69a03-cb5f-4924-830d-6b54a5fc0d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e13854d4-2d80-4bb8-8fae-9e999dbdfe7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d96193e-8adb-490f-932b-2034bd02f9d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aca8bc52-7ef0-4b53-ba3b-d7224f861e43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc921d10-586a-4391-bd3e-7be0fe88aff1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bda580-8733-4cb2-8fe8-a9698becc2ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d979ff1-93c1-46c1-b236-3c6c9638e1a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e95e0c2-0adf-42f6-b927-d1d536ab45f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed3c853-f6b6-417e-9396-490032815494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa96af81-b1ed-4efc-9ee7-20ac013bf513",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008ec498-6bd9-4b62-b146-b0f56f93b986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b34c9d3-e6b8-49c7-a11d-7806a9364b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "283ece96-b774-4421-a561-4d60e771d568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271197d1-6824-4924-a678-3ed2d37c7e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3619e2-1a1f-4c89-a28a-92af9f86384c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4472209a-c3ce-4b5b-91b9-1fd14c0a53a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7561f54e-fcbc-4fe3-91b7-436ac7079d39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55beebb2-1320-45f3-a71e-8c4e61850a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e408a6f-d6d8-4b2e-af54-26755061b1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a89fea-b8a8-40b5-b519-fa771ee9484c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305d4e5c-6626-4916-be0d-165d0f67d1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16c30424-a32d-4be2-9485-5235ba0d706e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c66e30e-9057-4bf6-be3b-5c3f482d0662",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "993a4471-4e68-4438-b119-a13b4be17d5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "074a31a8-0147-4ad4-8427-b7aea63fea8a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0866693-8aba-428d-84a8-f8d07b61dd19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce03b64a-3340-4d36-8cb7-830420549db6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53d978b-f32e-40fe-957d-eeb12b99732c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb659c3-5d3e-473c-a9b4-54b020b7019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e442ab27-785c-4f57-91ea-1c9970ee55c2",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463c9af0-7fcc-46f9-8dc4-1e7304dbd846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f693d2f-319d-4807-8cda-9dcfddf108df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47647512-86c9-43c7-a318-0e5be17b03b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f255fd47-d69a-49f7-b46a-325f40f6af4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11edfe8f-010a-41f5-b7cd-9d5611906bd8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a506616e-db09-4d99-8da9-1de2cbbacc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf935b01-653a-46af-afe3-e8beb1017785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3527aed-5958-46b6-b038-90f00cabbfd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f13b4d5-47fc-41b7-9f9f-e384b20a7491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea557993-d51c-4253-b62d-73090d92cb09",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c8eb90-43cf-491e-b654-5faca1b17e28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "282ad506-9316-41c2-a844-4e205c24d7a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ccacc1-7f10-4850-a8d3-47569a945dc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e954a7-7026-4e72-babe-f275a9319773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30570a69-7b09-4115-bbf9-38cc7c664a8f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a23e93a-7628-4c65-ac13-55235af15a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ef30f4-638c-492a-b8d9-b8938edad6d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a047002f-a59a-4a90-94fa-beda9ff25756",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe5ded92-e421-4eeb-bfdf-f36068dfcfd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a014f9c6-780c-4121-ab7d-8147f8beba56",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09aec18-d068-4c0d-9a88-ff8d5478dfdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7fa34a-2fd3-4b18-9527-e2adb12e1d5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfee74b-5276-4367-a7b2-089c44e024e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8342a3-cd45-44d3-86f5-821fc283b906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c4ce7e-6d8b-47bf-8953-4728ae8c462c",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf160af-c2a9-45e9-bffa-8285d1a98d87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1a3919-057c-4099-b3c1-d9c6e337a24c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb33a089-d2de-4646-9e33-8ecedd38500a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af58390f-c533-4b70-905a-b5baa6acda45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4adf4f6-68be-4883-8d23-24175151b4b0",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01072eb8-775a-42c6-bbaf-dd7b36d04d04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be491d2c-c987-4d7d-baf8-a240e5eadb06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca3af7f-2703-45dd-ab2f-afdf0155304b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3a1273-856e-48a8-b3ce-ee52e49f5151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465f6356-78d3-46e7-a6d1-6496fdcd83d6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930acd87-89eb-40f2-a260-81b07295faa0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b0f6a5a-1cf4-489c-bb64-a9486d2c383e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7421a32e-3c54-4cbe-b941-8cb88b9987b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e94cf66b-631a-445f-a4ed-38226cb01577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d8aff7-951f-4a2f-bdfe-ab5fe10b9d01",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f54ba5-98ba-4ece-b092-7f3dc061c907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88794e8e-e6cf-4f98-94e3-93ee0060bac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d9c380-1e86-4b6e-a8bd-5134bc829549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1204d67-ddaf-4adb-b927-20ab9f90bd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f571bdf9-31ff-4860-990b-13578da499c2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b4762a-7cf0-4627-ac43-24ee298e3e30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47f533d4-a035-452f-9763-7cac8f561f73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bfc243e-4f23-4a8f-8e14-35d6551e4684",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "479a62ff-1f66-4315-ab51-442cc832cedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e8b6d9-98d3-4159-93ab-5489bb545db4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9f3b37-f1e8-4d99-9a5f-0f70556f8696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145aeb0e-4628-4504-85e5-e4441a96b0ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadcd373-81cd-4d12-8481-801c87183e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef34590c-b368-42a8-8d39-050f8ae39a82"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "462ac49e-0af3-43f3-8e95-24126bb84333",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1157078d-9777-4541-b7e2-ec1c9cdb832b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e83b6a05-1d71-46df-a750-0a89b2116de4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2530e8cf-07a0-452f-86f4-aba3a6b0d290"
                    }
                  }
                ]
              },
              {
                "id": "d5882d9d-b354-4107-aadb-67a273358b46",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2f882aeb-0af7-4c08-a8b3-d8ba98efc2f3",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce96f84-9e8c-4061-a74e-c7554f6148bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5c40082e-88df-40cd-92cc-85b23c91d50d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba65048-a1cf-473e-b8ad-7590832a9d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1c270dc-1372-49c6-beae-b4ceb0de01e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac5b47ed-a8ba-43a3-98db-69d3d6b99f94",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a5e0f473-4024-46e5-b80e-f2db25bccfda"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d69509e0-6a4f-49e8-bbc1-b18c8601b8e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff180db5-8c3c-4c52-b059-bb6b59d2cff7"
                    }
                  }
                ]
              },
              {
                "id": "0df006cd-0925-44ef-9516-673d411f3427",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7a809364-85ef-41eb-a755-7849d595553d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50196234-2984-46f5-b12f-6501d8a9d2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8634923e-61fe-40be-b368-cedf90eae59b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d05fe5a-3003-42e2-971c-69c968e58c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269dab15-1650-43b1-bf0e-20b12ad8bbdb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "04c6b671-d593-406a-a0a2-8c4ea9605d13",
            "name": "Positive Testing",
            "item": [
              {
                "id": "16940322-80ca-4b2f-8fc8-99f7b3224690",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15458e6-f869-49df-a9b5-b8071bd1684d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8758e726-2e9f-4b72-9c79-d11199bae308"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f0e263e2-800f-4f2d-96e7-30fec8c23e5f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ce1ad79-c087-4a95-b33d-50a687d5d1ad"
                    }
                  }
                ]
              },
              {
                "id": "c80b3f5f-58ac-49bc-9175-f41e3e970f75",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bdb8965-10fc-473c-8427-a910f88d1695",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bc78cf49-03a7-4b26-b552-42d76abcb22c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11fb1f3f-3632-47fe-a6c1-599aa220d08f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "849f7d3b-a908-4cc0-bd0e-1021213fcbf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94afdf66-af00-4a5c-acb2-c45ac3bf5c6a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "30b3715a-aaaf-461f-a291-09f8b2110c84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e63bcced-3af5-4b50-ad56-dbc244925dbf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59e2aafa-e0cb-49c3-8447-76baaa11d36a"
            }
          }
        ]
      },
      {
        "id": "d10b0305-bb4c-4010-a774-e1b67903b7c6",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "06f1e84e-93b4-4db2-af95-0d93db9470ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "18f27c2b-a0df-41af-9eaf-abdee52949f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4519ee0a-08d6-4faa-91d0-1ff5f42071cc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13514605-81ef-4897-a0b3-2474ae3447c9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c21dc910-706f-416f-990a-a15fa7c2b93e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d11724-c487-4739-9b92-b77907160a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1107eb7-3d14-41bb-9047-358602dd32bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bb1d1f5-4272-4f4f-94e4-122bce2ca72f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4717b167-452f-426f-8356-8a9b249e6c90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfdf13e6-e865-4b0f-919d-f0ef6e9b15c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d02d1840-3b09-41fb-a708-5c711fd197fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ba22742e-36da-4480-8b47-da22f714492a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "80d76589-a5e1-4f55-9be1-ece1b052b7a7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c47f0b26-9f4d-4161-b302-73230e43d464",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a6d27beb-6ba3-4b39-934f-d5e8086eed4f"
            }
          }
        ]
      },
      {
        "id": "4448029d-a9ef-4545-81c3-ff5ef7942947",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "1082ddc1-254c-4c28-968c-c39128e4249c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d79964a3-6be4-44bd-a4ff-6d62e7e07b3c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b9721559-4da3-4330-8542-bd29eef95a40",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8079e86b-2c2e-4a29-94a9-df4ac88e2595",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fbe00e5-ae99-4f0a-95b8-7aa0a8b0719f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d3f476-ecc3-428a-b283-16ec7cd64f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d744e6f1-52b1-4cf2-9ed3-56b1abcac5c7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aaaadad3-42ca-47b5-bda3-536b918c2739",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f89f067-c5ed-48af-a9ee-bc059fbed154"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d9c8ee2-fb68-48a0-9b98-f4d75658230b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d7a0041-34f8-4ec2-9c51-8a87fd6bc78c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f91d4570-bf74-4261-a1df-e059475ea1c3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0c945e3c-9624-4c97-bf0f-ad958bceaed7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8d8d577e-5693-4de5-8308-3e669714f983",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e86195e0-22a9-4d72-8aa2-ca8ab17ec13e"
            }
          }
        ]
      },
      {
        "id": "1d80f1ea-6ab1-4271-9ac2-7cc398966357",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3676aad3-2d1a-4527-9deb-78dfa3759b73",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b719b9be-3201-4c48-a6a5-e524fcb4dbec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09a42d7d-c883-4069-a256-765dabbb2206",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd78651-c208-4ffa-a438-92c41c546809",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ba6bcfd-adb6-448d-b72a-c2b8427206ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "752bfca6-ae8a-4f0d-9e07-d15f9d33f6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a952791-d1bf-472b-b280-1adde0fba2cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "289cf142-26a5-41b4-ae2d-99a2dc882d01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25f2c3cb-3cbb-453c-8a2b-6bb30fad3f18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "abe5f2bc-9d9f-442c-b745-cf512cc14d0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3d7783a-d58e-4fdc-9e34-276bb4442f8e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f842c64-bf78-45b2-98a6-4e4d4e3fc545",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "402aceac-7a60-44b8-875b-68fb638e55a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31aaba38-fe5b-437a-8642-2b84a20dce29",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba4678cf-926c-4f9f-8035-c9755ee3e42a"
            }
          }
        ]
      },
      {
        "id": "bd718d43-9c29-4e35-b114-fc9db7143c56",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bd411a9-9a91-476d-b351-3159e3322615",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0feb116-b852-4d9b-898b-3d16b7fed391",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b3480f4e-d094-4f37-a34d-69913519bef2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99e35943-1b12-45e6-a608-b025e5f25e0c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7f94b843-7ff5-40e7-b572-133ff2dbf87d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 32.83508771929824,
      "responseMin": 18,
      "responseMax": 334,
      "responseSd": 24.315849218933725,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709944366942,
      "completed": 1709944385155
    },
    "executions": [
      {
        "id": "7392d11f-adcb-4770-b497-c1aacc562a72",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "668ab3d7-dc37-49d0-aa7e-320c0f79c898",
          "httpRequestId": "55a7b295-d752-4d0c-8eb3-7308b15c9566"
        },
        "item": {
          "id": "7392d11f-adcb-4770-b497-c1aacc562a72",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "35afbaf3-71ac-4c23-9465-68e78584fd0b",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "ec952822-1130-4400-aa8a-786557e3ddc8",
        "cursor": {
          "ref": "40d03388-fd61-4fe7-9ca8-8a9475b85354",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5f5a922d-42bf-4ba6-9e8e-1ce36ac36ad7"
        },
        "item": {
          "id": "ec952822-1130-4400-aa8a-786557e3ddc8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "aeb7724a-53d9-4547-9dc4-2aca3546d3b8",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "cead55b6-b69d-4a13-b7bb-a8be49c5dff9",
        "cursor": {
          "ref": "f7e061dd-a0ed-4c90-91a0-7adb901642c6",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "184d5144-c865-49c0-a7d2-c22b0d92f347"
        },
        "item": {
          "id": "cead55b6-b69d-4a13-b7bb-a8be49c5dff9",
          "name": "did_json"
        },
        "response": {
          "id": "de02c528-a324-464c-a1cf-c85abcb403aa",
          "status": "OK",
          "code": 200,
          "responseTime": 134,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c72be82-386f-40e8-b2f0-04849dfefdc4",
        "cursor": {
          "ref": "fd676df7-fb33-4142-a7b5-4b685aae4195",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f9bea22-c839-48d5-9614-9441e55d5aa8"
        },
        "item": {
          "id": "9c72be82-386f-40e8-b2f0-04849dfefdc4",
          "name": "did:invalid"
        },
        "response": {
          "id": "77b72687-4ae1-44cd-a1f1-a9a5c724bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c72be82-386f-40e8-b2f0-04849dfefdc4",
        "cursor": {
          "ref": "fd676df7-fb33-4142-a7b5-4b685aae4195",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8f9bea22-c839-48d5-9614-9441e55d5aa8"
        },
        "item": {
          "id": "9c72be82-386f-40e8-b2f0-04849dfefdc4",
          "name": "did:invalid"
        },
        "response": {
          "id": "77b72687-4ae1-44cd-a1f1-a9a5c724bc34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ecbc7f-2cd0-49c6-ad9a-6fa139a57904",
        "cursor": {
          "ref": "afb48652-aa87-490c-b95a-422b6dd5d73a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9290fd2d-ab2a-4a60-a900-480efd4baa70"
        },
        "item": {
          "id": "d4ecbc7f-2cd0-49c6-ad9a-6fa139a57904",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ef336032-2824-4985-a84f-e89e84508f65",
          "status": "Not Found",
          "code": 404,
          "responseTime": 112,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9622499b-ede6-4ee2-b22b-06a54f4fe741",
        "cursor": {
          "ref": "184b34b9-a226-4e44-ab82-4d24634f3f0e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "dba25493-3881-48f8-8f95-9e557013b8e6"
        },
        "item": {
          "id": "9622499b-ede6-4ee2-b22b-06a54f4fe741",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6f414573-cfa0-4edf-a23c-e6a683f76c9d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaae2a4-8ce1-485c-ad76-9a2f9083d8bd",
        "cursor": {
          "ref": "aed9a50a-c745-4439-bb34-19cefd680e16",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5fa8e617-68d6-421c-8d2e-b51ae7c20e23"
        },
        "item": {
          "id": "aaaae2a4-8ce1-485c-ad76-9a2f9083d8bd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5e1f0984-72d0-481f-beee-783ed31b884d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e081eea2-8aa1-4b98-9366-95d4c4084c9b",
        "cursor": {
          "ref": "e3c7c4c2-fb72-4e15-81a5-20483260ece1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "069bd527-62a9-4eef-96e2-824aa9a51388"
        },
        "item": {
          "id": "e081eea2-8aa1-4b98-9366-95d4c4084c9b",
          "name": "identifiers"
        },
        "response": {
          "id": "4e971254-f5bb-44fd-933f-d34750443e56",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209a776b-4065-44dd-900e-2a19ff76cf61",
        "cursor": {
          "ref": "c661b9e8-9f58-49cc-88a7-62fa699dd7fc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "075cac37-6d2f-4f55-b929-6f98119494a8"
        },
        "item": {
          "id": "209a776b-4065-44dd-900e-2a19ff76cf61",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad4d4d6e-640d-4326-b521-2716a809a924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28dea7-5a54-4867-a4d2-d151cc505242",
        "cursor": {
          "ref": "4fc2f0f1-b07d-4db7-9276-9202b5bb5832",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3062afbc-c8d9-45ee-95b2-4a370ecf4a73"
        },
        "item": {
          "id": "ba28dea7-5a54-4867-a4d2-d151cc505242",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae7e24b8-ab3d-464a-8963-7c9768291ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dfbe8b-231b-49dc-8501-6ad11de6096f",
        "cursor": {
          "ref": "5d784fc3-eee4-4ea2-ae75-b55357f4e69b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "08e5997f-4984-4406-803f-9ccdb9e83478"
        },
        "item": {
          "id": "40dfbe8b-231b-49dc-8501-6ad11de6096f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "0b74c1e7-c472-4be0-93cf-2b1fea9f0291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726400aa-043f-49ec-b2ec-75ecb405951a",
        "cursor": {
          "ref": "960e09df-f5d8-4404-b8dd-3c9f0c822664",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d54fa4b1-74f5-498b-9156-40bae29f70cd"
        },
        "item": {
          "id": "726400aa-043f-49ec-b2ec-75ecb405951a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b31d47ac-beac-4ed2-8cd4-2c3d2024be37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c42bbe51-6e9b-40b8-9467-b440a21439b9",
        "cursor": {
          "ref": "8585f0fb-ccc6-4173-a490-8966a8f3237a",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "087c07a0-f659-4257-996e-f57e2a62bd04"
        },
        "item": {
          "id": "c42bbe51-6e9b-40b8-9467-b440a21439b9",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b457d658-ed09-47c5-9d4e-df300cdbb819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4858a28d-6bc9-4263-9dc6-c631c42e7065",
        "cursor": {
          "ref": "bd792ecf-b67e-43ef-a68a-542bc95133b7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "db393f9d-ab31-48f8-b9f3-c3a6d345e1f9"
        },
        "item": {
          "id": "4858a28d-6bc9-4263-9dc6-c631c42e7065",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ecacbbb9-3d59-42bc-b040-7340257035bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "151e2a07-cfbc-4f2d-a866-514fb5e5b8b9",
        "cursor": {
          "ref": "be513201-e2ce-42e1-93e2-48bd1d3343b1",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5863f0c3-56ba-46d9-bada-83d84231484e"
        },
        "item": {
          "id": "151e2a07-cfbc-4f2d-a866-514fb5e5b8b9",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "8f28fb8d-42b4-43e0-a3ad-88a4955b7b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2423e119-69ec-4296-951f-07e1fc94bda5",
        "cursor": {
          "ref": "9c66eca4-44ee-4171-80f5-245a428e406d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "927ca00c-294c-41bd-8603-7b2185c6ade1"
        },
        "item": {
          "id": "2423e119-69ec-4296-951f-07e1fc94bda5",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24a81699-1662-4a31-9fc9-bf82ee3625f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa2c4cd-09d9-458c-8fca-f4309cf2be32",
        "cursor": {
          "ref": "269a26f9-8b1a-445f-9c65-7aa2136593d2",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57910871-6876-4e2a-aece-430602719c02"
        },
        "item": {
          "id": "5aa2c4cd-09d9-458c-8fca-f4309cf2be32",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "94c28170-dbc2-4a37-be1e-27bcf8e272d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4857b42-8c63-4b87-941f-29332adc2365",
        "cursor": {
          "ref": "e3f4cca6-c89b-4ac9-be41-d09e5c947acf",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "44eac82b-ac5f-4d27-aa2c-33d7adc1ba12"
        },
        "item": {
          "id": "c4857b42-8c63-4b87-941f-29332adc2365",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f5fc2fff-a340-43e6-8c0f-05bca6cd33b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212d3637-f50d-48f3-bfd4-8472539350d9",
        "cursor": {
          "ref": "a8baa4bc-b57f-485d-8282-12edf3f2b5cb",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "65e804f4-52e0-46e8-82e4-abc428fbb130"
        },
        "item": {
          "id": "212d3637-f50d-48f3-bfd4-8472539350d9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9f59867e-3c8a-42ce-865a-8512591eb89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53583b7c-1c2d-4b3c-8dcc-85ce3519e2c8",
        "cursor": {
          "ref": "d19dcc9c-fa89-43a9-a86b-6801f1a356d6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "33050c03-0489-41b8-9972-9a545986e688"
        },
        "item": {
          "id": "53583b7c-1c2d-4b3c-8dcc-85ce3519e2c8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "9d63909e-2aad-402c-8117-37ea3252fccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fd64c4-ca98-412d-b4f7-713502bd3f88",
        "cursor": {
          "ref": "efe4fabe-87ba-42c7-b8a6-bd34b36ed30a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f759763c-ed24-4e53-a716-61234bb7ac36"
        },
        "item": {
          "id": "c0fd64c4-ca98-412d-b4f7-713502bd3f88",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d674bc62-2834-4be9-ad16-6e6c051cbabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3151b6bf-9c32-47bb-ba99-5e624baa9bd3",
        "cursor": {
          "ref": "34499d45-692d-44ed-9768-0ec9ccd9f095",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cf00e850-eb39-46db-9e7f-5d42127ec8e2"
        },
        "item": {
          "id": "3151b6bf-9c32-47bb-ba99-5e624baa9bd3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2797a927-6a88-4b24-8c23-9643126e0e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf20cc4b-e33b-4ceb-9856-c1be614c3a4e",
        "cursor": {
          "ref": "a1f3af0f-8cd4-41a7-bc8d-b100535d9dc3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3063959b-0805-452b-9b09-354f121cbbd6"
        },
        "item": {
          "id": "bf20cc4b-e33b-4ceb-9856-c1be614c3a4e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "80ac5b60-6e8e-4e45-ae4b-0ae163c242e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58350fb-1683-42c7-a363-82e811b25441",
        "cursor": {
          "ref": "1e48826f-d072-4bcb-8e43-ff651c41a58f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4c131170-ccbd-43af-bd2b-cd072b8ac9e0"
        },
        "item": {
          "id": "f58350fb-1683-42c7-a363-82e811b25441",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e64a0998-c40d-448b-8e33-b050f4cc071c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f80010dc-47fd-4e04-9123-a66b7c3881dc",
        "cursor": {
          "ref": "e72ec9b5-a95f-4e3d-8447-09310fa32ce2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "54268967-c26d-42a5-966b-444208e635e3"
        },
        "item": {
          "id": "f80010dc-47fd-4e04-9123-a66b7c3881dc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5f7003f5-9415-463e-8183-59b1ddd5cb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3332b95c-2efe-4363-9a6c-aaceee459728",
        "cursor": {
          "ref": "01ab13f8-0653-4229-b83b-a56713870fa9",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "18ce8c54-3125-4c39-a8c0-0a6ae156a465"
        },
        "item": {
          "id": "3332b95c-2efe-4363-9a6c-aaceee459728",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "d2cebe9a-bd8b-4fcd-96b6-b5cb5e7b17f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85728a9d-2a6e-4c71-89d4-ffcaa8088156",
        "cursor": {
          "ref": "4404561e-9e3a-46ad-8c96-a69d9940cc84",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a2d47378-6106-4ba0-89a8-28ef5462963b"
        },
        "item": {
          "id": "85728a9d-2a6e-4c71-89d4-ffcaa8088156",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "88c03aff-7b8e-4527-aac5-6ccd5c40c2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a78c480-eaa2-46e4-bd89-5a149e1611e0",
        "cursor": {
          "ref": "88ca8986-deb3-40f7-80eb-5a36c0fc6b89",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "571c7c39-d41d-4556-b77c-7948ec8be24e"
        },
        "item": {
          "id": "7a78c480-eaa2-46e4-bd89-5a149e1611e0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3fbba5cd-d0b6-4dc2-bc13-1d8e705625f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1da5b3-9327-43e4-b677-2c76d9666e77",
        "cursor": {
          "ref": "a82d4502-a4d0-44ab-b602-695244914df8",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c65b168-8546-4491-8dee-e264fca2e4d9"
        },
        "item": {
          "id": "8d1da5b3-9327-43e4-b677-2c76d9666e77",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "155a3bdd-e283-4be6-94af-14d8a56d5a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321fdfa8-2347-4121-b811-1e9496b2c294",
        "cursor": {
          "ref": "dd997132-4842-4cdc-82bf-f08253dae1a0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6469643b-59b3-438e-9133-dc7bb0c2998a"
        },
        "item": {
          "id": "321fdfa8-2347-4121-b811-1e9496b2c294",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f6bb42f7-f59c-43e0-bfef-08c12a9672c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81824acb-feb7-490b-b8eb-4aadaa75deb4",
        "cursor": {
          "ref": "92aa396b-648e-4747-a928-351e785ef2c7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1b7080f7-4a20-42e6-b97b-2cb56e968bf4"
        },
        "item": {
          "id": "81824acb-feb7-490b-b8eb-4aadaa75deb4",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "04526616-511b-4a4b-ab34-375e06d13721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "515740c3-ce28-457e-9441-6c7566877320",
        "cursor": {
          "ref": "73edf4f2-80a4-4db6-b202-5342512b461f",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bd31b7d6-dba8-41d8-86a2-7823dbcf36c4"
        },
        "item": {
          "id": "515740c3-ce28-457e-9441-6c7566877320",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "79d2f4f4-4464-4438-a00c-664de6a612bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1ab9af-26ae-4c75-80b2-94946086978c",
        "cursor": {
          "ref": "e5d221e3-919e-4b14-ab59-a8e118073e2e",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "553c2ca8-8ad4-472d-9969-1581d310bbec"
        },
        "item": {
          "id": "5c1ab9af-26ae-4c75-80b2-94946086978c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a151c409-a265-43a5-8cf7-f0c090ec347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39560ac1-843e-4ee3-8497-4cf3f2e49bd0",
        "cursor": {
          "ref": "dc187e54-e5d3-4715-b738-1e3ed7404219",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "56e90aeb-6ebb-4145-aa14-2f1700924746"
        },
        "item": {
          "id": "39560ac1-843e-4ee3-8497-4cf3f2e49bd0",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0b42baf1-3e61-4aa2-8f43-f7b0da4dbb94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1c5638-62dd-4c8e-bf17-e2d1cc6c0703",
        "cursor": {
          "ref": "dca53b2d-cdc0-4d3e-80f8-5311a8f96ee9",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "dc5c965d-9d9f-4d07-91f5-dbae01247e22"
        },
        "item": {
          "id": "8d1c5638-62dd-4c8e-bf17-e2d1cc6c0703",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ac3ce8f1-96c1-479c-a153-5edb496370c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d407c6b7-64c9-4817-b56f-230c8502f9b1",
        "cursor": {
          "ref": "a273cf82-8e72-4f18-a632-2808c89d3246",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "be129acb-31a4-494d-8de0-fffe68a03791"
        },
        "item": {
          "id": "d407c6b7-64c9-4817-b56f-230c8502f9b1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f81e2c3a-79c1-4c9f-a4a5-ab1cd8df9c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89081d11-eb8a-42f9-9cec-9927ea2263b0",
        "cursor": {
          "ref": "0cc970d2-77b3-4e6d-ba6f-0b92fcfdff5f",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "7d33cff6-ef90-4e5e-8bf6-dabae3828a37"
        },
        "item": {
          "id": "89081d11-eb8a-42f9-9cec-9927ea2263b0",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "af6bf11c-2985-431b-9df1-85e488a9d98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "988c1088-07ef-46d1-bdeb-3e000c4f40f1",
        "cursor": {
          "ref": "d71d3ec4-0eee-4c90-814f-e13c5ccece62",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "00651a07-2d21-4ecf-9fb2-c4c96544b6f9"
        },
        "item": {
          "id": "988c1088-07ef-46d1-bdeb-3e000c4f40f1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "52b1d16f-436c-4cd2-aa4f-f29ea3fc1c64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8727ac53-a8aa-4811-acba-62d3acd53d01",
        "cursor": {
          "ref": "88ac2abe-6f3b-43c0-9089-80c753be942e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "fd6027e6-43f1-413f-ab11-612afafc4165"
        },
        "item": {
          "id": "8727ac53-a8aa-4811-acba-62d3acd53d01",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f482d223-e12f-4357-b54c-7fba6d7a514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2568c4-e328-4002-a72a-96bddd5f84f8",
        "cursor": {
          "ref": "b9a8f5a1-8042-4327-8117-d2efa4967686",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1aaa6c0e-689c-4156-a73d-4394d9d01997"
        },
        "item": {
          "id": "5e2568c4-e328-4002-a72a-96bddd5f84f8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9f21b3b1-59a3-4588-89ca-5cd81e101f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024c04c8-1728-4fd6-b514-8691bb738984",
        "cursor": {
          "ref": "913dc06c-0a50-4b97-9853-f6eb49bdc1f2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b3d98579-d8a8-4073-93fe-f015ebd2e75f"
        },
        "item": {
          "id": "024c04c8-1728-4fd6-b514-8691bb738984",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2854bcd3-3af9-4e2f-b1c8-f8eb23a32962",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2de221d3-1449-4017-b89e-5dffb841f877",
        "cursor": {
          "ref": "445edd51-4048-4180-90ba-70a4952078bb",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "71a5d33b-6040-49a2-ad1e-00cba2ceab2c"
        },
        "item": {
          "id": "2de221d3-1449-4017-b89e-5dffb841f877",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "74dba8b7-b144-41bf-a24a-64496462ec69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66cb68a-e6a7-4eb6-b425-ccda90aa6f56",
        "cursor": {
          "ref": "0f506bc3-3cac-4e25-841c-727d9b4c7bb4",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "500d2f71-86c0-492c-b008-571213128c99"
        },
        "item": {
          "id": "f66cb68a-e6a7-4eb6-b425-ccda90aa6f56",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "638eecfd-7c8a-4505-8719-74618013d2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed58908f-b049-4a9a-8304-ee075a1416f2",
        "cursor": {
          "ref": "fc5ca16a-a7e3-4de7-b69c-ae6caa136f58",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "963f382a-a65f-4955-85e2-73a2fbd08e6f"
        },
        "item": {
          "id": "ed58908f-b049-4a9a-8304-ee075a1416f2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "624b3338-42fc-4a6b-8e1e-4e9b3354b32b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4bc8f6-9f7c-49ec-a7ee-fc8715f0d286",
        "cursor": {
          "ref": "b4789714-8ed1-446b-bbf6-6b667391f7bd",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a28041a6-8163-480b-ab77-2f373f3a0a2f"
        },
        "item": {
          "id": "ca4bc8f6-9f7c-49ec-a7ee-fc8715f0d286",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a8bc7d58-6e9c-4456-86dd-da77dbbf0cdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61aa2c0b-6ed3-44ca-ab7c-028a8eebd864",
        "cursor": {
          "ref": "dc28301f-01b0-4ffc-ba32-5bf3af3f154b",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ac7f4321-2cf7-49bc-ac5a-004b14be0179"
        },
        "item": {
          "id": "61aa2c0b-6ed3-44ca-ab7c-028a8eebd864",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "51dcfce4-3ed8-4516-affd-2c396ecb74cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c52f9e0-e59b-49a9-b81e-f7a445021e80",
        "cursor": {
          "ref": "e36beafb-8dca-45ef-a5f9-acfe2fa029a3",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "f55f1dbc-bd14-475a-92d8-ac516d31927f"
        },
        "item": {
          "id": "2c52f9e0-e59b-49a9-b81e-f7a445021e80",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "75f6d22f-45b3-4942-97aa-71eba70f6e51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff213e8-3edf-457c-a66b-01b5579a1214",
        "cursor": {
          "ref": "0c0059a8-2987-4574-82cd-768a28f64255",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "7ae5e701-7470-4368-94ce-b6e87cc245a4"
        },
        "item": {
          "id": "9ff213e8-3edf-457c-a66b-01b5579a1214",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "814521c4-5527-4d3e-9d85-1f5d07b0c2ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e4c372-160e-43b8-9291-b8a830b42be0",
        "cursor": {
          "ref": "67653b62-5777-4ae1-8b61-9c762969c162",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7e5bd603-e43c-4361-a9a6-61a3e4df042b"
        },
        "item": {
          "id": "19e4c372-160e-43b8-9291-b8a830b42be0",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "414e06e2-4bd1-4d0e-865c-1e86352a0174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f204864-a426-4c94-ae37-6eafb63fd3dc",
        "cursor": {
          "ref": "d2e0eb44-e9a4-45a0-b730-4a8e87afc34a",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2c8eb490-244a-42cb-bad4-0c9ec139dfe3"
        },
        "item": {
          "id": "0f204864-a426-4c94-ae37-6eafb63fd3dc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "34104981-dc85-4aad-bac9-409f4c332349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a0add4-2134-41a4-8c6f-0e798d4632dd",
        "cursor": {
          "ref": "07dd2340-754e-4447-9e1b-0ea3c14dd067",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3ccf0628-6563-4ae4-b99d-0b81b96c15f6"
        },
        "item": {
          "id": "d1a0add4-2134-41a4-8c6f-0e798d4632dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "42bc2cd6-7959-4d4e-a7cb-c3981dc6b7ce",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fb5d89-6e95-4ee4-bb4f-66c97a8fd1ba",
        "cursor": {
          "ref": "0b1b543e-84a8-4801-a096-391ceedc26ce",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f891fa50-6292-406b-bb64-dc53abe239fc"
        },
        "item": {
          "id": "79fb5d89-6e95-4ee4-bb4f-66c97a8fd1ba",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "83e7b478-659a-47eb-ac9a-4743015b1f51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430ad0a9-c564-49c5-a8e6-8cf554ccb6f1",
        "cursor": {
          "ref": "50b79f31-a8e3-4504-97c7-dd304f00f592",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9516d86e-e9dd-4533-a0d7-10943e894c3d"
        },
        "item": {
          "id": "430ad0a9-c564-49c5-a8e6-8cf554ccb6f1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "29adbfa4-7fbd-4644-b389-e48be59b837b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7903d6c-f743-4457-8b3c-568be1c3d577",
        "cursor": {
          "ref": "1d61da38-3cb7-470c-b7a6-dbe7a075b6a7",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "ceb59274-cbc3-415f-a921-87a64bc2820b"
        },
        "item": {
          "id": "e7903d6c-f743-4457-8b3c-568be1c3d577",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e04d7266-d14f-4d5b-98fa-989bd5ce5fdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69f0e29d-8760-402b-a240-eb0427ab19d1",
        "cursor": {
          "ref": "6fe01c8c-24f7-4db5-b9d9-831012cd8943",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "131df07d-e7fc-491a-985c-c92b2a5371e2"
        },
        "item": {
          "id": "69f0e29d-8760-402b-a240-eb0427ab19d1",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "c2eaea68-f8f8-40c3-86c0-d1a9d594d093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfab5df-2b58-4a37-ab79-03b5f8bd3d54",
        "cursor": {
          "ref": "173943ad-86c0-4462-92c7-a4da3521b64a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4902da44-e6c5-43e3-b8b5-e132df57d99e"
        },
        "item": {
          "id": "2dfab5df-2b58-4a37-ab79-03b5f8bd3d54",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "525b066c-ca5e-4195-8c9e-e1f75c7015e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb80447a-5257-4b4f-ba79-1eda1179a73c",
        "cursor": {
          "ref": "72091be8-3259-4b61-a4fa-a2a8efa035fa",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "95c2e2d5-e9b7-490e-af0c-46ba7e24957b"
        },
        "item": {
          "id": "bb80447a-5257-4b4f-ba79-1eda1179a73c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "07b043ec-365f-429e-bfce-33cd9bf386a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a640f07-1cce-4e2d-a85f-cb25c75a0649",
        "cursor": {
          "ref": "578bcbe6-c125-479c-9755-d181496c298f",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "0668a3af-d75c-4ecd-9c59-db9c1d9d1b5b"
        },
        "item": {
          "id": "9a640f07-1cce-4e2d-a85f-cb25c75a0649",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9d381a08-1f59-4991-a739-aebf51606fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea83e699-917e-4fcf-9e62-c860062da1bb",
        "cursor": {
          "ref": "acbf3779-1d66-4b20-ad41-6c8034bf253e",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "519fd6af-33b3-4b95-9e2f-5122383802fb"
        },
        "item": {
          "id": "ea83e699-917e-4fcf-9e62-c860062da1bb",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "da083e26-f21e-4251-9469-4fdb5eac5bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2455d7b-75ff-45e3-998a-a94c8bd3544c",
        "cursor": {
          "ref": "eb033e54-f915-420a-a0f6-99fa455d88a1",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a5bf4948-d151-42b7-b272-fdca09189dca"
        },
        "item": {
          "id": "b2455d7b-75ff-45e3-998a-a94c8bd3544c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e66dc316-1c2b-4eb5-83d0-34b1d5b3e04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173ab96b-e48f-491f-8400-d6881f305b98",
        "cursor": {
          "ref": "249610e5-d072-466b-8bb3-4677b38f3707",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "fefb637b-2075-438d-abd2-df9a9f885856"
        },
        "item": {
          "id": "173ab96b-e48f-491f-8400-d6881f305b98",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "6bf8a49d-67f7-4677-8512-b501290bc2ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c6414e-f6b4-4784-8c99-18c7f0f8549b",
        "cursor": {
          "ref": "dfb5bab2-237d-40a1-ae2a-bd26dda31497",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae8f94c1-11af-4dad-aff5-a9921f4b0ce6"
        },
        "item": {
          "id": "b3c6414e-f6b4-4784-8c99-18c7f0f8549b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "93663379-8407-4c55-99cf-98007ea93f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64fc578-6ba5-4a20-902d-e09185188979",
        "cursor": {
          "ref": "a590e0fc-6296-4bba-b3e4-64d31bc89ef4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "27e31f02-27a5-48ee-a748-a7f50a731b2b"
        },
        "item": {
          "id": "d64fc578-6ba5-4a20-902d-e09185188979",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "edc7f984-758e-4197-879a-c0ed1024c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "725499db-7451-4405-97bc-f139318ba810",
        "cursor": {
          "ref": "b571fb21-a893-4201-9bc7-428c800b191b",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "19840a7e-05ac-4904-846e-b21c6e91e19f"
        },
        "item": {
          "id": "725499db-7451-4405-97bc-f139318ba810",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "44c480cf-5c81-4e79-a1fc-aded70048da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d185068-cad4-463b-b3d1-647069b6e238",
        "cursor": {
          "ref": "d1d1a17a-19c0-4e38-98a7-2768f54ccdfd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "938f160a-b505-4d7a-a269-279320e817ee"
        },
        "item": {
          "id": "0d185068-cad4-463b-b3d1-647069b6e238",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "4dfda6b6-b3bc-4cb2-a278-875d5c27b47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60039fc-c388-4d55-882c-8e2ba2b1a70e",
        "cursor": {
          "ref": "ece44fb6-07c1-4cae-8ea3-9140a8a0d769",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e5ad3857-4cc7-4aba-aa18-21ad794b4f8e"
        },
        "item": {
          "id": "a60039fc-c388-4d55-882c-8e2ba2b1a70e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ab3ef10f-7baf-4d4d-81ff-f130d6efde8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cec7710-4f89-4424-b3c0-09cb013dd25e",
        "cursor": {
          "ref": "9cc397bd-b0c7-4cd8-b6a4-6195e9392a5f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d93d0488-7950-42ff-9734-69806aa7b2f4"
        },
        "item": {
          "id": "6cec7710-4f89-4424-b3c0-09cb013dd25e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "bf49995e-e683-4db6-af5a-d345a3c0fab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac325cc6-8a88-44f0-8d40-e4b4afee718d",
        "cursor": {
          "ref": "55394c48-ea12-43ef-a9b4-81cbc9bacc0e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "31eedd5c-865b-4f6e-bc53-096fdb1cfb70"
        },
        "item": {
          "id": "ac325cc6-8a88-44f0-8d40-e4b4afee718d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "47acbb79-7ed6-4008-a875-76e1d0abab15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7f0267-6bc3-42cf-b2c8-fd488008eff7",
        "cursor": {
          "ref": "2065efea-2519-42e8-9778-e6afd041e36e",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "306987a2-679a-4c87-b856-db57cf92fdf4"
        },
        "item": {
          "id": "2f7f0267-6bc3-42cf-b2c8-fd488008eff7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9dce0f0e-cfa9-4082-92c8-a166c402fa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42fd9e6c-dd9e-4ba8-ad91-8ce71a96ae22",
        "cursor": {
          "ref": "5f55b1e4-5542-4c21-ac41-fc23db3e0694",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "e3761b45-531a-4c7e-b69a-9c80a8b3b7a1"
        },
        "item": {
          "id": "42fd9e6c-dd9e-4ba8-ad91-8ce71a96ae22",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8bdf3d83-7bcd-412f-bb37-ffdbbfc82c56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "332c047c-fdf6-44ba-a8d6-e8619fa5e429",
        "cursor": {
          "ref": "84d9b8da-3567-45a1-a782-3a6df4be3c22",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9840f432-7e55-449c-8433-eb91f460e18b"
        },
        "item": {
          "id": "332c047c-fdf6-44ba-a8d6-e8619fa5e429",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "540d547c-c1b6-43ac-b232-bdc3fe55b1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934192e1-e39c-42bc-ac49-917b12356ce8",
        "cursor": {
          "ref": "cdec7c5c-99cd-48cf-b95d-1eb4ca9ceb19",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c8c9342f-ed9b-46bc-bee3-a11e8d22a49d"
        },
        "item": {
          "id": "934192e1-e39c-42bc-ac49-917b12356ce8",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b95fffd6-bda2-4e0d-bed0-bd816c9e6767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97fd33d-1940-4d0c-ab45-dbb754ea5a00",
        "cursor": {
          "ref": "88c0441e-0532-4336-bf58-238f86ea6744",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "648e5e7d-3a37-4774-8fbd-0428a3a219e8"
        },
        "item": {
          "id": "a97fd33d-1940-4d0c-ab45-dbb754ea5a00",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5ede97f0-2689-43dc-a8c2-57759718e9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47be086c-69a7-474d-8585-f3c5c0a2a4dd",
        "cursor": {
          "ref": "1f6cd607-9e31-4ad6-90ca-eff3df6d990b",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ec60bd0d-6d81-44ea-b313-bbb7d9281ee4"
        },
        "item": {
          "id": "47be086c-69a7-474d-8585-f3c5c0a2a4dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3abfeafc-ea4c-4ed7-9b9b-f06b746dbefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13e74c2-ff0f-40dd-8ea9-281b9db16ebf",
        "cursor": {
          "ref": "cadb6621-492a-42b5-9a86-11a21fb981b4",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fa2eab44-474d-472b-b096-5ff7ac755668"
        },
        "item": {
          "id": "c13e74c2-ff0f-40dd-8ea9-281b9db16ebf",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "14723170-cf01-4447-85e7-665528786e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61726a5c-8172-4f89-8ec7-2a553ec36d9b",
        "cursor": {
          "ref": "25fc356c-0651-4d2c-99a1-6bc21bd20add",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0e953b38-2f3c-473b-9000-a9882a188f63"
        },
        "item": {
          "id": "61726a5c-8172-4f89-8ec7-2a553ec36d9b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ca5aa633-af56-4029-b52c-79178555733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8f6daa-6d38-4e03-94b8-317c9e95e19f",
        "cursor": {
          "ref": "0ec98d42-3ed7-46fe-ae70-bd0a57be7a18",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0b3c7611-beaa-4966-bb5c-31a2adf364a1"
        },
        "item": {
          "id": "4a8f6daa-6d38-4e03-94b8-317c9e95e19f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "27b2bc36-5108-4dfa-9c4b-72d1f2e65542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be19931a-c7a5-4fa6-add5-fa14f8eb8d65",
        "cursor": {
          "ref": "740fe065-5d9b-463d-b7b4-04fb7869b05b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9aae0409-140a-4afa-b55d-ce68e11ddd15"
        },
        "item": {
          "id": "be19931a-c7a5-4fa6-add5-fa14f8eb8d65",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4956d31f-cb31-4d35-b7b6-1f2137a9976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b1dff2-8a8d-46f1-b67b-26a2656ef28a",
        "cursor": {
          "ref": "9f10f63d-589c-446a-b059-fb8d8a19617d",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5f87d12-2fe1-49f4-aec0-f80c04c39418"
        },
        "item": {
          "id": "d4b1dff2-8a8d-46f1-b67b-26a2656ef28a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "042ccf7c-db1f-4957-804b-f971f870f987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "050bd788-830d-4af9-b154-97e6003185f2",
        "cursor": {
          "ref": "27aa4247-b633-4ccb-a7d4-9f0610f786f7",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0d42ae62-de59-42a8-8471-49d85e7a8fa0"
        },
        "item": {
          "id": "050bd788-830d-4af9-b154-97e6003185f2",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5e64fc75-804c-48e2-beca-9f4b5d4794b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8897627-f03a-4e55-ab40-971f176a4ebc",
        "cursor": {
          "ref": "9d78a701-6ad2-4fd3-917e-fc4342de747d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "45ba69a3-e494-4b61-a8ae-b20934628ecb"
        },
        "item": {
          "id": "b8897627-f03a-4e55-ab40-971f176a4ebc",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "53042f8a-db22-4181-8ea0-bf7f915b671a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e70c03-c748-4f46-a617-874577562815",
        "cursor": {
          "ref": "ecb803f5-08d7-4754-b00f-9b986a0d5637",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "31870f76-3b95-4540-8122-31c8babafae4"
        },
        "item": {
          "id": "f6e70c03-c748-4f46-a617-874577562815",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "81f3677f-2ca0-49c0-8e7e-d171ca029210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdef763d-e9e7-47a8-9d02-c168191984db",
        "cursor": {
          "ref": "91acd60f-107c-4e8f-8c98-e0aa3cf307a6",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b0436e3a-e745-4c58-9381-fb7ab548b181"
        },
        "item": {
          "id": "bdef763d-e9e7-47a8-9d02-c168191984db",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f74860e5-52a5-42cc-b8c8-2bcc57e132a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1a81057-f55f-43bf-b943-1c9006e8d101",
        "cursor": {
          "ref": "48b12c09-12b8-4380-8db5-a126ba32bece",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "3de685f9-e074-4c61-81dc-9d691b8222ec"
        },
        "item": {
          "id": "b1a81057-f55f-43bf-b943-1c9006e8d101",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52fdb3c4-a3c3-4933-8444-012958a439ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f718497c-5520-41c9-a616-34bbb63fd1b8",
        "cursor": {
          "ref": "5ba829a5-0489-4a3c-92e6-509b9b3ef802",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "475a341f-3395-490a-ad75-64af3f9c239f"
        },
        "item": {
          "id": "f718497c-5520-41c9-a616-34bbb63fd1b8",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "c54f90aa-a0b5-4163-91c1-57b4ddc1cf32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92780b6d-3d0c-454c-8730-6333668fede7",
        "cursor": {
          "ref": "df2d2cc6-297f-4f5b-b718-8b493fbfb560",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2fa43571-a347-4661-b2d6-9908daa5c5a7"
        },
        "item": {
          "id": "92780b6d-3d0c-454c-8730-6333668fede7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "acedccc1-474d-496b-b95c-fae413178df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84ea03f2-d218-48d6-ab5f-920b1a0c9919",
        "cursor": {
          "ref": "360e3c7f-128c-4609-abe7-dafe372247bc",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e0570c91-ed6d-4f73-bae6-aa89d0daca12"
        },
        "item": {
          "id": "84ea03f2-d218-48d6-ab5f-920b1a0c9919",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e45f836d-0946-48de-b7eb-7209501875b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743df97f-a94b-436d-86a5-5d62d6b625a6",
        "cursor": {
          "ref": "f348548c-f01e-40a3-9480-7a9588b2af7a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5d2afae0-ad25-4eda-8c09-576973da815e"
        },
        "item": {
          "id": "743df97f-a94b-436d-86a5-5d62d6b625a6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "6bf1aea5-5f3b-41b7-98ac-15584a9d3eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00c40b1-05a6-4b23-89e7-ea848ce197e4",
        "cursor": {
          "ref": "5021adbf-02b2-4c3d-b5af-e07e7a78d984",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f9b355d7-823b-42c5-993b-5e453091f757"
        },
        "item": {
          "id": "d00c40b1-05a6-4b23-89e7-ea848ce197e4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "71e051eb-99a8-4858-8585-95fb060c1551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72835da7-95bf-48ad-aa67-10084a95b126",
        "cursor": {
          "ref": "15ad4945-967f-4f8f-80a4-93659e5d18d4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cb43eb64-0d9a-41b4-b6fb-f98423484da2"
        },
        "item": {
          "id": "72835da7-95bf-48ad-aa67-10084a95b126",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0a698da5-7d1c-4244-ae9c-8a77a6a7352e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34faa59c-e244-45cf-bf61-663e5116fb0c",
        "cursor": {
          "ref": "00096510-fa7c-4360-9b6d-f286a96af758",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "945b4da4-911c-4971-80e4-51bfbd0ad6c0"
        },
        "item": {
          "id": "34faa59c-e244-45cf-bf61-663e5116fb0c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0852531c-2f4f-4ed5-9295-674f0ebcdb89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c1f284e-2b96-47bd-b6f1-cb62faab45dd",
        "cursor": {
          "ref": "901e8199-34ce-43f8-b533-fc6d940453e1",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ca8b09ee-bed4-4372-8bbf-3fb406e2ffac"
        },
        "item": {
          "id": "0c1f284e-2b96-47bd-b6f1-cb62faab45dd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1fb1d9a0-762e-48d2-b4dc-9ab672bb2893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8485cb0-0334-4b56-87b0-63945c6fe5b1",
        "cursor": {
          "ref": "8dc9a971-025a-47c3-9583-083806e67261",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4f2c9780-2d37-4255-9982-088b32371df9"
        },
        "item": {
          "id": "f8485cb0-0334-4b56-87b0-63945c6fe5b1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bace4864-91c9-4146-9eef-d24cdbd69939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ce1ac8-c54f-40e2-a48e-2c7bcc0bb6a7",
        "cursor": {
          "ref": "cde7287b-0869-4b96-a72f-c42f5138e027",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3e7693f0-0840-46b1-9c33-3afb66294c9d"
        },
        "item": {
          "id": "16ce1ac8-c54f-40e2-a48e-2c7bcc0bb6a7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b820ab0c-f584-4259-9f53-15c813a91db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1992453-5b9f-4fc1-ac90-7df62a21b7c9",
        "cursor": {
          "ref": "10120d12-19e8-4bd4-afd7-aefa43217f40",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6f247174-81f4-4f5b-96d2-9cea22a058d5"
        },
        "item": {
          "id": "d1992453-5b9f-4fc1-ac90-7df62a21b7c9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "dc1c3a4f-2c66-4767-89c3-15a474e323e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5702c3-6f60-44f4-b578-87e96cb08f19",
        "cursor": {
          "ref": "a359b621-3439-4384-bf89-3c1b915a44d0",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f06fada8-44b8-4f04-8104-e6f680b10b85"
        },
        "item": {
          "id": "3f5702c3-6f60-44f4-b578-87e96cb08f19",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3db2a183-cfa8-4032-af84-2c9cd8ab1f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97acf30f-be28-49ba-b960-f717653b1e81",
        "cursor": {
          "ref": "b4d56d3e-0d17-4357-9a40-91f4b3a2e04e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "3e0727cc-5ed0-4c0f-bd5e-4154be0e845f"
        },
        "item": {
          "id": "97acf30f-be28-49ba-b960-f717653b1e81",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "ac59bbc9-5856-494d-81e9-23f82adce0e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af64b6a9-bf8c-436d-a3c0-3c3d82fc8656",
        "cursor": {
          "ref": "a35447a3-4abf-4661-b50e-884419bf3e0a",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4aea7d98-7d27-40f6-88c2-af564fe322d0"
        },
        "item": {
          "id": "af64b6a9-bf8c-436d-a3c0-3c3d82fc8656",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "db823f89-8440-4d2d-b889-9f658c208437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e79ca2-8bce-4bf9-9547-3b54d9357c2b",
        "cursor": {
          "ref": "a9f5141e-4d62-44ff-b9d0-61312addea00",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "dd39172e-9446-4f75-a4ff-7f3693180753"
        },
        "item": {
          "id": "b4e79ca2-8bce-4bf9-9547-3b54d9357c2b",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b0b92b42-9db8-4a86-8387-f2770b3cb9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a80cb04-bb5d-45bc-9f4f-206e66aabec8",
        "cursor": {
          "ref": "d0aceb3b-ec61-42e1-9ba5-9ff2925b1539",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "fe0e2cd8-a56e-484a-8ddc-e4704ffbada4"
        },
        "item": {
          "id": "0a80cb04-bb5d-45bc-9f4f-206e66aabec8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ffdbd8a1-ac42-4d9d-8e11-dd12969e6166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e3d96c-5947-4911-8343-b59d607d9e40",
        "cursor": {
          "ref": "1a29c728-22b6-4c86-89f3-38241c50617f",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "8b9c1c4d-0d1c-4f53-995d-f687c9b733a4"
        },
        "item": {
          "id": "64e3d96c-5947-4911-8343-b59d607d9e40",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7f8b5f20-9d55-4b8b-afca-32d5013fb6bf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd7ed56-9ad2-489a-9d57-04178819794e",
        "cursor": {
          "ref": "b1f8d6d4-6881-4ebf-a236-be9e481b9d04",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "35c4e1bd-6ad8-41d7-bf9b-e5f94cd49dc0"
        },
        "item": {
          "id": "9fd7ed56-9ad2-489a-9d57-04178819794e",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b2388390-fc85-43c9-ac91-b8ce186b8c2e",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9407555-51c1-4c5e-980a-69941e4b3e78",
        "cursor": {
          "ref": "063d3a6a-6f31-44c3-9a3c-88c082e842fe",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f54222cf-99ad-4487-8361-2993ec441446"
        },
        "item": {
          "id": "e9407555-51c1-4c5e-980a-69941e4b3e78",
          "name": "credentials_issue"
        },
        "response": {
          "id": "646aa6af-ec2b-41f7-8083-568b1615c025",
          "status": "Created",
          "code": 201,
          "responseTime": 147,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a727e7-9432-40b8-89cc-de40fb1e7383",
        "cursor": {
          "ref": "6b45c259-da33-46e3-a37f-fcbaa869b1a0",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "28604f1f-9377-44b3-8a7c-83b61449b70c"
        },
        "item": {
          "id": "52a727e7-9432-40b8-89cc-de40fb1e7383",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b89b0e80-e884-4b61-8943-80dc6a3277f8",
          "status": "Created",
          "code": 201,
          "responseTime": 200,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15ecdf9-b6b3-4c48-b994-a9cd8ffde48f",
        "cursor": {
          "ref": "40955168-eca0-4fba-bba6-7bf4fffb6159",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8638723d-b732-45c4-a412-9ffdb439913e"
        },
        "item": {
          "id": "f15ecdf9-b6b3-4c48-b994-a9cd8ffde48f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "36ef5887-87d4-4a2b-8511-c89ab32bee72",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ef40e24-c32c-4c51-b047-5492f11107d8",
        "cursor": {
          "ref": "1651ca64-157b-4511-b61b-17e2983a04ca",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5b6d433f-4749-4636-8049-506a4f2dd0f5"
        },
        "item": {
          "id": "9ef40e24-c32c-4c51-b047-5492f11107d8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "f999801b-a62a-4b15-a18b-19abbb6a732c",
          "status": "Created",
          "code": 201,
          "responseTime": 62,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "734e794a-e551-439b-b7ff-4aa3c4a3959c",
        "cursor": {
          "ref": "5d2f2232-4df4-4d67-9f86-96e7549de2c7",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "937dad5a-d3f6-4945-b575-ae6cc8835f6a"
        },
        "item": {
          "id": "734e794a-e551-439b-b7ff-4aa3c4a3959c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b7cdc367-5f8e-40e0-bc41-2644fd39770d",
          "status": "Created",
          "code": 201,
          "responseTime": 57,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "7185ca03-b488-4f77-99bc-5c640c5f46d4",
        "cursor": {
          "ref": "715ac129-0d80-4889-a87d-08f063752452",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2ac3d4d9-6cbb-46f6-9e00-ff23e2a331b1"
        },
        "item": {
          "id": "7185ca03-b488-4f77-99bc-5c640c5f46d4",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a0412687-6fd6-471c-9df3-f206e77ff744",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96b5aa-ccfc-48d9-99b0-e484fd704398",
        "cursor": {
          "ref": "f34a2d41-248a-4c43-b69c-f6f8c78b80a2",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a4081d40-95cc-4b48-a0fe-89d24acb44d7"
        },
        "item": {
          "id": "fa96b5aa-ccfc-48d9-99b0-e484fd704398",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "9496b06b-56fb-49fd-ba90-1ed64c6a3114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee539e78-6449-4578-b53b-1185b654c544",
        "cursor": {
          "ref": "abbf47cb-ead3-4b86-827e-8e5b7d26b084",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "980fd8a9-f60e-4064-9207-1e73d0482734"
        },
        "item": {
          "id": "ee539e78-6449-4578-b53b-1185b654c544",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8b56c450-f74f-42e6-b89f-3f105395a028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d4e90-159f-41d1-9470-fce54a2095cb",
        "cursor": {
          "ref": "219b3843-0cc7-491d-8ec6-5acfa23e105d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "044aadf6-7568-43d8-9f4a-d5b2bf576670"
        },
        "item": {
          "id": "1e5d4e90-159f-41d1-9470-fce54a2095cb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "74ba3674-e808-4826-bc94-e748ffa2d70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b078708-75d4-449f-84fc-5426d099c577",
        "cursor": {
          "ref": "a33f7012-941d-47a1-a61b-006b9bc0a8c1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "96fbbfea-b36d-4de6-8b67-869f7a8a8164"
        },
        "item": {
          "id": "5b078708-75d4-449f-84fc-5426d099c577",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef21f5af-a081-4bd6-bd04-21d34ca8be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a308b36-77b6-4f06-b1f0-1f8423f96b30",
        "cursor": {
          "ref": "d1fd9714-d7de-4d97-9abe-b708d70ea225",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d4b0201d-fd23-43a6-99a7-8f4d2c42a745"
        },
        "item": {
          "id": "3a308b36-77b6-4f06-b1f0-1f8423f96b30",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ef76833c-2c49-4461-b776-247c1ad1e682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70936dd9-efbd-45bb-b4ee-b1b4f26502e9",
        "cursor": {
          "ref": "60648a83-dde2-4924-8f62-d5f5f430d557",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e9b895de-13c8-4699-b94a-39bd3bd21959"
        },
        "item": {
          "id": "70936dd9-efbd-45bb-b4ee-b1b4f26502e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fcdde4b9-2f36-4afc-b27b-9096f61c73a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f96f8d32-7d1a-43b6-bd48-1c01e73d4b5e",
        "cursor": {
          "ref": "52e41b22-d2a6-47a8-b6a1-3e979b67ecbd",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "171ec060-1092-41cd-b837-c005143b7861"
        },
        "item": {
          "id": "f96f8d32-7d1a-43b6-bd48-1c01e73d4b5e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4cdf462b-695c-4647-abf8-7fd52b29bc15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e167066d-0ab1-4541-bb24-19365ff927b4",
        "cursor": {
          "ref": "7b51fbaf-7191-44dc-a099-f09dc438473c",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c8ac9eaa-8776-4353-9aaa-62e5c0a0e528"
        },
        "item": {
          "id": "e167066d-0ab1-4541-bb24-19365ff927b4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "56c2cd48-8c57-451f-bea7-e109c5905075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd587cf-dbcf-4db1-abe7-a7cd86a020bb",
        "cursor": {
          "ref": "a1c0fcef-9f25-4f9e-bda1-17ce42d35411",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b92277e1-a1dc-4b82-9be1-f738158057b0"
        },
        "item": {
          "id": "8cd587cf-dbcf-4db1-abe7-a7cd86a020bb",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3b5b0a02-1656-4f4f-9e95-9bd856f602d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3abd4b0-6c79-4fc1-8183-13c63aa47b71",
        "cursor": {
          "ref": "a8139491-211d-40ab-a451-fb11d3c2c497",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d0515241-6678-4cfe-a775-6d8cd6fc81fc"
        },
        "item": {
          "id": "e3abd4b0-6c79-4fc1-8183-13c63aa47b71",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9c830841-106e-4b49-9b3d-fa429aca5baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf12d416-d86f-4059-b37e-2362b5529732",
        "cursor": {
          "ref": "227cfd58-f1ed-4131-aa04-04d7995485ec",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "9a9cc471-f73e-4332-818a-31daccfa6cc6"
        },
        "item": {
          "id": "bf12d416-d86f-4059-b37e-2362b5529732",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f135c445-efd1-486e-89b7-0f72761a7aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b5a5d-5cbc-4e5c-aa28-9697a3936736",
        "cursor": {
          "ref": "25dba278-4ce9-46e0-af06-f179c781a4ad",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "20bb4a5e-6873-404a-8c5b-ddf007caa294"
        },
        "item": {
          "id": "c80b5a5d-5cbc-4e5c-aa28-9697a3936736",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "85d29eef-e2e7-4f35-8855-b384db206c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae44892-1126-4fa4-bfb4-4ef7cdd77f13",
        "cursor": {
          "ref": "960b4ab8-4cce-4cba-b76f-4dc2eab391a7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "da38114e-15bd-4d42-82f8-f84c7d8d050b"
        },
        "item": {
          "id": "7ae44892-1126-4fa4-bfb4-4ef7cdd77f13",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "cc4845aa-2984-46ae-ad8a-bcc8f949a735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d89fbfe-f517-4bf6-9377-39de219d8b37",
        "cursor": {
          "ref": "baf6b975-96c0-42c7-8626-eaf449bd2ad6",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "2990be4b-9eb9-4118-942f-f0a8b488ead9"
        },
        "item": {
          "id": "1d89fbfe-f517-4bf6-9377-39de219d8b37",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "20458916-94dd-4c4e-9e0b-1f59c4c777b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2481cb08-645d-44c4-a8bd-c68c86126692",
        "cursor": {
          "ref": "e7f53442-1d5f-44f7-9464-717f1c0d91e0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4168e644-29b5-4dc9-a867-c0191d2b9c60"
        },
        "item": {
          "id": "2481cb08-645d-44c4-a8bd-c68c86126692",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4b1f1927-503b-47b1-9f2e-76c210988434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cff05e8-f98a-4a42-b23f-c31628f69daf",
        "cursor": {
          "ref": "f160b110-b0c9-4b5a-b66b-6f2e40b91349",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "f62fc900-3df9-4e49-8eab-7d6fd9f191a1"
        },
        "item": {
          "id": "4cff05e8-f98a-4a42-b23f-c31628f69daf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "0cf50a56-0fd5-4799-ac3c-f588fc24ca1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f523c512-b4fb-4c6f-b8b0-1dce39c7c84d",
        "cursor": {
          "ref": "ebb85468-4930-4b9e-baab-f61a435ff875",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "10090e45-15a0-4e5b-a4ee-d3fe334cd252"
        },
        "item": {
          "id": "f523c512-b4fb-4c6f-b8b0-1dce39c7c84d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eda2e9a1-e59d-4e5f-9b21-5c572b4e10eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a4e285-8af6-442c-9d62-d7610921ab15",
        "cursor": {
          "ref": "21f4f1ae-e1ee-46da-b5f1-62c9b8e651f6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "82f368ca-14c7-40eb-9d61-88edcf6e1f03"
        },
        "item": {
          "id": "a2a4e285-8af6-442c-9d62-d7610921ab15",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f3bd7ab9-91fc-4e99-b85f-01850e590510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a7d766-4d00-4ffc-8286-4207c4be924a",
        "cursor": {
          "ref": "ddbc01de-b705-4455-b0ab-72d573633be3",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "df9c8d3b-784d-4e5a-b1a2-6926fe4b1ced"
        },
        "item": {
          "id": "86a7d766-4d00-4ffc-8286-4207c4be924a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "cc8c8056-15e3-4c01-a708-93f71e138833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d5e1c6-1715-41f3-83c1-4ff4f195fbfd",
        "cursor": {
          "ref": "64e70315-37b7-4d83-8373-2e6d78b36244",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "137546f5-816a-4340-a57b-5cd85a88c878"
        },
        "item": {
          "id": "e0d5e1c6-1715-41f3-83c1-4ff4f195fbfd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9569ca08-9214-4768-89f7-5e6999ee2b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ef9c57-564a-4e4c-93aa-4e8d087da821",
        "cursor": {
          "ref": "c10ebf15-70af-4d00-b863-24b1489b3734",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7f7d13aa-eed6-4829-a9d9-78fe075189c8"
        },
        "item": {
          "id": "a0ef9c57-564a-4e4c-93aa-4e8d087da821",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f11c6aa5-ccb7-4da0-820b-575203859022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d6a260-81a1-4e8c-ba2b-69dd8d74affa",
        "cursor": {
          "ref": "669471d3-c0f7-44f3-aa16-e1521f08ce89",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "96a2c050-ddec-4bd7-ac3c-7c58188dea1d"
        },
        "item": {
          "id": "81d6a260-81a1-4e8c-ba2b-69dd8d74affa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7ac16cb4-e0bc-4a7a-b295-45b3ed61b11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa73b8-54cf-497e-ad53-576915c83c4e",
        "cursor": {
          "ref": "96bdc930-1b2c-45ed-96bc-704d276ca4ed",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5f215922-01b7-45f2-a1bb-b13282953206"
        },
        "item": {
          "id": "cdaa73b8-54cf-497e-ad53-576915c83c4e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "29e3f020-12d2-484b-a495-26f7807c9077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a1ca42-3dc8-4217-9603-10384ef652ab",
        "cursor": {
          "ref": "dbf4d3d8-4175-401c-bcb0-25fd47fb0629",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e47fb623-f88e-41fd-a663-8ac73ce295f1"
        },
        "item": {
          "id": "68a1ca42-3dc8-4217-9603-10384ef652ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c8ed461e-a28d-4afa-9856-118662016489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0645a498-09e8-4091-bb2a-60642da26f02",
        "cursor": {
          "ref": "740ba10e-31df-43d3-b723-944f79818b6b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4e72a2eb-679c-4780-b5a2-8072ac8db891"
        },
        "item": {
          "id": "0645a498-09e8-4091-bb2a-60642da26f02",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f65974e5-9bfd-45f5-815d-913761cc915d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5131ee-cd6b-411c-9203-18a0a46e6a0d",
        "cursor": {
          "ref": "3d6f4f2e-a341-4b9f-ac2b-85c27e738ce8",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f298d808-0f9b-4150-b3f9-97b198f0c094"
        },
        "item": {
          "id": "8e5131ee-cd6b-411c-9203-18a0a46e6a0d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d028d55b-7379-4e7a-a6b2-0df7fe879232",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "428e0dfc-6672-4d6a-87c0-e42b2198c3ab",
        "cursor": {
          "ref": "a32ca138-65e1-4eb5-9796-74c9c8043343",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "db9a4d9b-6981-4073-9e15-102a1557dd8c"
        },
        "item": {
          "id": "428e0dfc-6672-4d6a-87c0-e42b2198c3ab",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8885e604-8a4c-4e91-8c1c-03b821dc6b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5706915-1570-4339-ba4a-24ca4bba4d54",
        "cursor": {
          "ref": "e99b3e5b-4ac0-4615-8375-fb9b0eb2c8b5",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "41398b26-1457-40d0-b693-6c686438953c"
        },
        "item": {
          "id": "e5706915-1570-4339-ba4a-24ca4bba4d54",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c033952d-92f3-425c-9d03-b7a09b1cd629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dd1cb6-cf0c-4381-8d1a-861426e74913",
        "cursor": {
          "ref": "c42e6f3d-4720-49f9-a6cd-d55dfaf9a652",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "22c40aaf-a64f-4450-80d0-b11f397afe10"
        },
        "item": {
          "id": "40dd1cb6-cf0c-4381-8d1a-861426e74913",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a671201c-abe3-41c0-b9c1-048f8e00ea67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1b3464-19ec-4295-a53e-118613d69e9c",
        "cursor": {
          "ref": "daed4018-cbe5-4969-b757-8131af815102",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2b6229d2-5626-4c95-8ecc-5f5d12dc85c9"
        },
        "item": {
          "id": "7c1b3464-19ec-4295-a53e-118613d69e9c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a1871645-3405-4c29-a025-7f660f8ed69a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5faace-ee45-45a9-9e8c-27793dcbbf41",
        "cursor": {
          "ref": "dfa42cf8-f1c5-4fc0-afc1-262c555b1704",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b5e52dae-f7ea-49cc-9939-ce1b09829318"
        },
        "item": {
          "id": "cf5faace-ee45-45a9-9e8c-27793dcbbf41",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "88b07727-c674-4cbc-9b8a-2f8d19ca45b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08df18f3-98e4-40df-b950-e460c1417228",
        "cursor": {
          "ref": "0b1c5940-11d9-4657-b091-1a488e1b0900",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "705f328e-3b2b-4bba-96c9-de5d8ebf08a9"
        },
        "item": {
          "id": "08df18f3-98e4-40df-b950-e460c1417228",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "01e0984f-43dc-404c-91c7-80c5a86c9253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d66ad26-a9d6-4002-8aba-5513e1fbf72b",
        "cursor": {
          "ref": "01ebb868-3b72-4a29-83db-b88831d97a8a",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cc0b75c2-4553-496f-a785-9e884f7b2113"
        },
        "item": {
          "id": "6d66ad26-a9d6-4002-8aba-5513e1fbf72b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "036b1225-b4e7-40e9-9855-828899fb6958",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d4894d1-143a-4024-b4b4-127a3b9088ed",
        "cursor": {
          "ref": "b0b0849d-c6eb-414d-9bfd-bfcbcf5ba93d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a4e1c23a-153b-4e31-8dd6-79b6c41791d5"
        },
        "item": {
          "id": "5d4894d1-143a-4024-b4b4-127a3b9088ed",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a95234a-9ae0-4f56-8c28-cfd1bcffec67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbdf99f-10bc-479c-97dd-cf9eb59b23c9",
        "cursor": {
          "ref": "a33ec035-5bdf-4216-b363-790f10bfa3c2",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8bd963d5-989a-47d1-986a-af6f41c3444e"
        },
        "item": {
          "id": "2cbdf99f-10bc-479c-97dd-cf9eb59b23c9",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f1f3b96-b3c8-415e-8fd3-366399afacd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c4bf44-e969-4a96-a571-615937bfe484",
        "cursor": {
          "ref": "f9777a41-399b-4d04-a304-2f680017790f",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b2d15723-b4cd-4d38-ac53-096bfec4a04c"
        },
        "item": {
          "id": "32c4bf44-e969-4a96-a571-615937bfe484",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4294d906-0ea0-4c9c-b3d2-294344dd93a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4306859f-aafe-4ce8-b652-7110f053887d",
        "cursor": {
          "ref": "8eb283a0-4cd5-4912-9224-8fd291fb4979",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c42c33fc-cc0f-4d7b-be5b-06583b362e0a"
        },
        "item": {
          "id": "4306859f-aafe-4ce8-b652-7110f053887d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a6300f95-0f83-4949-8218-6372256820e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27eae1e-5d80-43a3-bd7f-a747a5bb4448",
        "cursor": {
          "ref": "ead79452-5c57-4fb7-aa6d-5e3c021b39ef",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0863110d-410b-492a-85b5-78662c5362fa"
        },
        "item": {
          "id": "c27eae1e-5d80-43a3-bd7f-a747a5bb4448",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "df458e6a-21c7-4a50-bf28-bdbec049b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffa7794-1a63-424e-80be-1b6ca8e3d01b",
        "cursor": {
          "ref": "7d9c5ccc-bb72-4cf2-8248-3c52ae7807d5",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e00b9d67-8e23-47a4-a4e8-a1a1dba12142"
        },
        "item": {
          "id": "4ffa7794-1a63-424e-80be-1b6ca8e3d01b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "cbbf21b1-9423-42b6-98c5-86be85557b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1948ca-cdd2-4197-9b95-49a623c68ee3",
        "cursor": {
          "ref": "6d4f9f09-b892-4127-9c7d-3b2c381fcf0d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f9bbb866-ad96-4c93-a15d-93fda3e50572"
        },
        "item": {
          "id": "eb1948ca-cdd2-4197-9b95-49a623c68ee3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0f00298c-3674-44fb-acbf-d3f6cf068609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ca4afa-61f8-4336-8d9d-976d818a0493",
        "cursor": {
          "ref": "9224db18-a12a-42f3-ad2f-49211f007052",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "fedadc08-e965-4fae-a29d-534ae4d9a987"
        },
        "item": {
          "id": "e9ca4afa-61f8-4336-8d9d-976d818a0493",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9034be0c-df6a-4f0c-940a-e8d350634261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456548d5-7502-4add-ae00-6e388f8c2767",
        "cursor": {
          "ref": "6ace6f78-a74a-4cb8-a1c8-d856c04b19fb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e8851308-0d5e-4dd2-ba03-cb348dfabc82"
        },
        "item": {
          "id": "456548d5-7502-4add-ae00-6e388f8c2767",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "351d0775-d0e0-4135-a24a-104d663d4a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a64e76d-7c89-44ed-9ed8-47cf198a2279",
        "cursor": {
          "ref": "43a1072c-b9a7-4a4a-a00f-3a3e5e4ee999",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a2af414c-a0c5-4801-b72a-1c0cd4a81cd1"
        },
        "item": {
          "id": "8a64e76d-7c89-44ed-9ed8-47cf198a2279",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "99531dbb-45d0-498e-8726-d33276746097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58101958-7e98-4bed-91d4-1514e499f56e",
        "cursor": {
          "ref": "112e7ce4-2550-4e6c-85dd-244e35635bea",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "0da32100-5ea1-4e44-a24e-edba03209a1e"
        },
        "item": {
          "id": "58101958-7e98-4bed-91d4-1514e499f56e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b38f90f7-2d0e-4bce-aad7-b00ec7b11a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59208f94-0bc2-4ea1-83e5-01a053f917e9",
        "cursor": {
          "ref": "37ea37c3-ee06-4830-975f-8e53112509f4",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7d0bc873-bb69-46fa-b65b-927d2e7a1f1b"
        },
        "item": {
          "id": "59208f94-0bc2-4ea1-83e5-01a053f917e9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "52ad2bda-1a31-4d15-a635-1d4e138c7332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1998f8d5-35b6-4666-a665-31028e570fea",
        "cursor": {
          "ref": "bca30bc7-c63c-4ca5-a968-a6130b26c974",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ba26932a-b147-4a87-9ec5-534a6678e36a"
        },
        "item": {
          "id": "1998f8d5-35b6-4666-a665-31028e570fea",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2be3152b-0dcf-420a-a6d7-7dbaa29250f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95031afa-870b-498d-8a6a-15b06fd87341",
        "cursor": {
          "ref": "02b1717b-9403-4e4c-ae26-31bf7c5dd60d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bf5de209-b61c-4b8d-9fd9-c27ef841eb9f"
        },
        "item": {
          "id": "95031afa-870b-498d-8a6a-15b06fd87341",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3f835c37-6b5e-4b25-a990-234790407642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ba3e17-39eb-4f47-9e24-b7d288704319",
        "cursor": {
          "ref": "236df40f-7507-4edf-baf6-0f1df98cce03",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe807dda-b668-4100-91b0-22e48f7094b7"
        },
        "item": {
          "id": "49ba3e17-39eb-4f47-9e24-b7d288704319",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "68cb81f4-da47-4d61-b439-cf04d37db3ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59587254-29fe-4be9-ba5f-8bb06d1c669c",
        "cursor": {
          "ref": "dda48404-6cdb-47da-8e52-a946e4f03b93",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "4fee3df3-ccbd-45f5-9af1-bc4d6d5ca38d"
        },
        "item": {
          "id": "59587254-29fe-4be9-ba5f-8bb06d1c669c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "af3c59d6-6eb0-4dbf-8c91-0b28f6195bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c2544-19ad-4310-a9b6-15856f641370",
        "cursor": {
          "ref": "ab5c3ac8-aa8d-4e9f-a93b-e5d1043d2165",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f3d82385-cae3-4276-853d-d80f2562f756"
        },
        "item": {
          "id": "c67c2544-19ad-4310-a9b6-15856f641370",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3e4224c2-573d-4155-b401-ad93e00437fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbd791ec-7295-40d6-9a4f-5d8c7cd17dc7",
        "cursor": {
          "ref": "020cc795-151b-4139-8556-50343a8aa46b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c9c782db-56a0-4986-816b-81bf4da1c5d0"
        },
        "item": {
          "id": "fbd791ec-7295-40d6-9a4f-5d8c7cd17dc7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "53e9e8fb-cf1d-49d5-8f8d-860ac79e66eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07f1a7-3640-451d-9a7e-3ced06a2abb1",
        "cursor": {
          "ref": "0b21ce3e-a454-4ed7-921b-1f669fe8265d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "24bf039c-e414-4e04-9ab0-3a8c93475481"
        },
        "item": {
          "id": "aa07f1a7-3640-451d-9a7e-3ced06a2abb1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b05a826a-e709-427c-96c0-059f4485c877",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be50269b-7571-428d-8ed4-78e7c0cd897b",
        "cursor": {
          "ref": "030350dd-266b-4f6f-9d77-58034847b4d7",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3ccbe03f-f29f-4bb7-9cb0-3521ca258e9a"
        },
        "item": {
          "id": "be50269b-7571-428d-8ed4-78e7c0cd897b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4eb344c7-f2d9-4977-bee1-b442ac7b7a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b942bbb3-6f86-4bb4-88ec-e93c9dc00c1c",
        "cursor": {
          "ref": "7bdf9487-f8ae-4349-a2f8-155dfac19b28",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2ed31eeb-d023-4a27-91d4-dc248796f4fb"
        },
        "item": {
          "id": "b942bbb3-6f86-4bb4-88ec-e93c9dc00c1c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "45551c10-a365-429e-a780-0399ccb076c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729937e8-ccca-4d39-b564-ec13e67792fa",
        "cursor": {
          "ref": "613c5121-3938-4a02-9d2f-ccc59d2688ad",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ab8a20fa-888b-43cc-af63-fbcf8850b8a6"
        },
        "item": {
          "id": "729937e8-ccca-4d39-b564-ec13e67792fa",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9906d239-17b6-4cc9-8b75-7e0fb85a12c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4da5ecd-9d28-4bf8-b172-cf97d90127cb",
        "cursor": {
          "ref": "0984014a-9b77-4742-aa47-0d670b1e1990",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "bd2ea3f8-d63e-4130-b949-55e7f7148197"
        },
        "item": {
          "id": "c4da5ecd-9d28-4bf8-b172-cf97d90127cb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5e93f848-5789-4c21-aebe-69233d7f2210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a09fe4-c0a9-427f-acc2-2e611cc23ebf",
        "cursor": {
          "ref": "00e892a5-ef25-4613-b5ff-019843cce8f3",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f50588f7-8366-4fe2-afdf-bd545e1cb379"
        },
        "item": {
          "id": "33a09fe4-c0a9-427f-acc2-2e611cc23ebf",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "cb49791f-e53c-45cd-aa38-c4385a94049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d60c30-0743-4bac-8e46-5de258cd4c83",
        "cursor": {
          "ref": "e43df101-32f6-47b4-88d9-1bb207af4d48",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "85a5fd51-c8ba-4c3f-91de-fed08ddc6aa4"
        },
        "item": {
          "id": "72d60c30-0743-4bac-8e46-5de258cd4c83",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ae94d2ff-8400-4efb-b5e9-36f97fb04800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7a9041-13bc-4836-93e3-98f1ff199cde",
        "cursor": {
          "ref": "84729744-67ce-4261-a93d-3a3fc7772f40",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "339e19fe-7bc9-4439-8f8d-8fb7a34e8fb7"
        },
        "item": {
          "id": "bb7a9041-13bc-4836-93e3-98f1ff199cde",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9a4dea08-5e0d-4844-aead-cc61651f188f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab57d8c-b8fe-4df0-8ce9-bfc1b6db312f",
        "cursor": {
          "ref": "2589818f-721e-4f43-ba01-256cea044266",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "fdc810a2-b5cc-4342-937c-03ec13cbaf43"
        },
        "item": {
          "id": "8ab57d8c-b8fe-4df0-8ce9-bfc1b6db312f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c6702f01-de9c-43c3-b826-bfea91a9a34b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762c6f66-91c8-4756-a0c6-d80591086ea0",
        "cursor": {
          "ref": "124b3586-9a7c-4d86-9d6d-6d0e813feeac",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9c284d7d-7310-4074-abed-0772999b16e3"
        },
        "item": {
          "id": "762c6f66-91c8-4756-a0c6-d80591086ea0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8c36a60a-0dfa-4e98-8bae-8b56ac11d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a16b1ba-56f1-420a-ad16-dc365f1577e6",
        "cursor": {
          "ref": "fd439d38-6624-4a3b-ae36-6a1767741a14",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "15610ada-33d8-4c4d-8b28-a7525428be6e"
        },
        "item": {
          "id": "2a16b1ba-56f1-420a-ad16-dc365f1577e6",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2786c343-900c-4dc5-9b4d-ef83d2f947f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df4a1151-52b1-4a64-bb05-269fc1a4bf26",
        "cursor": {
          "ref": "db750cf4-f486-4264-8262-76b1bfaea88e",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "00620dc8-6d82-4365-9ebd-54900cdb4fed"
        },
        "item": {
          "id": "df4a1151-52b1-4a64-bb05-269fc1a4bf26",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b98fd1cb-f7f6-48e1-be1f-2535b538db56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58eae8e6-cfb7-48b5-b9da-ecc0be15f00e",
        "cursor": {
          "ref": "dbdc5490-4f45-4afb-81e6-f548c445876a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9dc6ae86-58c0-41c2-8d43-d861bd3c31cc"
        },
        "item": {
          "id": "58eae8e6-cfb7-48b5-b9da-ecc0be15f00e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "518316bb-ebca-4bfe-8063-55e6de2b558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51513972-1616-4380-9daf-7074897b0038",
        "cursor": {
          "ref": "cc8597f0-f8fe-40f4-abdc-c6faa74ca32e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7c77b1a7-5b2a-4abf-9c50-075d8ed15c21"
        },
        "item": {
          "id": "51513972-1616-4380-9daf-7074897b0038",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "a60a38e1-328c-4a1d-8eab-66c064f663b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8312d879-e19e-4c7f-8c8c-1fcb846328eb",
        "cursor": {
          "ref": "a865cac9-c9b9-4483-8fb8-e27741cd435d",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7189306d-56ee-4791-a665-9fae2d14959b"
        },
        "item": {
          "id": "8312d879-e19e-4c7f-8c8c-1fcb846328eb",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3a42b53c-1b5e-408a-b809-d08561772f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc15cd8-5a14-4c81-998d-7009dade1b18",
        "cursor": {
          "ref": "09780048-619f-401b-9b13-70928c7f1e8a",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "591e5c4e-64cc-4100-a78d-185a1288efb4"
        },
        "item": {
          "id": "afc15cd8-5a14-4c81-998d-7009dade1b18",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "adeef30b-d847-41a8-97fc-0717b714455c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8ef8a5-74e4-48ea-a23d-bb76773193a8",
        "cursor": {
          "ref": "b07caf81-9bb2-4978-9222-0f70d4bfbfb7",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "41201807-a8af-4880-9652-2ceafeafe2f2"
        },
        "item": {
          "id": "dd8ef8a5-74e4-48ea-a23d-bb76773193a8",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b8fa4f7-8c66-4bc3-b969-eda0b45b2a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "780bab62-5a63-4781-a561-3f95bb29b47b",
        "cursor": {
          "ref": "2aec3226-231d-4b17-acd6-bac1be82b50d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d2e454a6-95ca-45e3-8a88-dcf4bb3eb92d"
        },
        "item": {
          "id": "780bab62-5a63-4781-a561-3f95bb29b47b",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4ab6093b-b861-4218-bd8b-8bb3548a04dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8d7c0a1-94cf-451d-96d3-cae6bc3c9780",
        "cursor": {
          "ref": "630d21f3-00b3-4883-bd58-0ac736736015",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1ef24c74-fd9b-48c2-ad84-61cd24f3955a"
        },
        "item": {
          "id": "c8d7c0a1-94cf-451d-96d3-cae6bc3c9780",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2bcd69ee-6b6c-4667-a558-aaa15100b4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4dbcef-677e-41ce-95d8-19dad076b4bd",
        "cursor": {
          "ref": "62a0d847-411e-4667-9da6-a31acb94273f",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "33a98b2f-f1ea-4454-a581-9c80b9b78c43"
        },
        "item": {
          "id": "de4dbcef-677e-41ce-95d8-19dad076b4bd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "86e27dc7-174f-4151-9575-c07051796347",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dddb397-062f-4870-ba0f-baba5ea70fcb",
        "cursor": {
          "ref": "a60fd27d-0107-4076-b95f-4b7d246f13e9",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "9e2a1a4d-824c-49de-9094-ef6f316cdef0"
        },
        "item": {
          "id": "6dddb397-062f-4870-ba0f-baba5ea70fcb",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "9f9ae479-ea1c-4a80-bd35-bbd227bb869e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad6955e-6e2e-4401-9425-fb6264f77540",
        "cursor": {
          "ref": "39b0a575-43e2-4425-9274-77a3680915ed",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f79012c3-1e1d-4285-9adf-09e3a0e179e7"
        },
        "item": {
          "id": "7ad6955e-6e2e-4401-9425-fb6264f77540",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d27c6190-b129-49b3-ae46-8f7f54692d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bab710-910b-4817-85de-7829fa6997b5",
        "cursor": {
          "ref": "b72254a0-8db5-4c5f-a08d-60f0e236d9fa",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "46abccf1-3fc9-464d-8dfe-8301a0b73acf"
        },
        "item": {
          "id": "96bab710-910b-4817-85de-7829fa6997b5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1acaf0d9-ff02-4282-bcbb-ad89f4c3c8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "321ce9b7-bf5e-4466-8e68-430d3515a796",
        "cursor": {
          "ref": "a5497b13-1df5-483c-8513-37db60293c90",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d264158d-b97d-428f-93eb-6c83abeda251"
        },
        "item": {
          "id": "321ce9b7-bf5e-4466-8e68-430d3515a796",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2b120672-4c67-4c08-af95-e242bc071c39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe223336-0f09-47b1-85e2-facd117049d9",
        "cursor": {
          "ref": "e0efc57c-f787-4541-ba82-717bc35798ec",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3942d329-09b8-400f-9c1e-c7882ad8c8b8"
        },
        "item": {
          "id": "fe223336-0f09-47b1-85e2-facd117049d9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d8dcc96d-3286-492c-ba30-7c9d9f124d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1abf108-60d7-4750-8b2c-82b26a3c0795",
        "cursor": {
          "ref": "1df1cc10-11bc-46f5-b43a-69409826ea60",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4f4453c5-4bab-4a90-b375-220455e7b3bb"
        },
        "item": {
          "id": "b1abf108-60d7-4750-8b2c-82b26a3c0795",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8c7c56fc-6a77-47d2-b9a1-bf825a7d28c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97f66aba-48e5-48e7-a39e-08cdb0f9b072",
        "cursor": {
          "ref": "2f045220-19c0-4427-8ace-7715801fce5d",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3bb3274f-bf59-4595-8af9-6ea3dd45f39c"
        },
        "item": {
          "id": "97f66aba-48e5-48e7-a39e-08cdb0f9b072",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6fc83f4f-eb0e-4f9a-9c5b-dce8609c02e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d8ed00-0f62-406d-ae66-c464c3f23bf9",
        "cursor": {
          "ref": "d3290eb2-6857-407c-82d2-1e89192c905d",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "249c405d-71c7-455b-9e5c-e811d4cda79a"
        },
        "item": {
          "id": "53d8ed00-0f62-406d-ae66-c464c3f23bf9",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e877a769-1a6c-488e-9bd3-11501b70d821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb53dbc-5a83-412d-89a1-92c5d22c6fd0",
        "cursor": {
          "ref": "ad14db24-d7dd-4f63-8995-ec7bf5114968",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "936fbf2c-4115-419f-be6e-4d1f6044b1b4"
        },
        "item": {
          "id": "2eb53dbc-5a83-412d-89a1-92c5d22c6fd0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "bf39fc46-77a6-4f22-9e54-4066f1699734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a035ee2-4a18-441d-a471-5d44ebcd8afe",
        "cursor": {
          "ref": "a2ec1b1b-74f4-4233-bce1-d9725826d682",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "dc55b191-e07b-4b5f-8569-2f8d5f4afefa"
        },
        "item": {
          "id": "7a035ee2-4a18-441d-a471-5d44ebcd8afe",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "027b6f9a-e1f6-4460-8e02-efa51f2603ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "831f30e7-c1dc-472c-8bd6-f0f151df1df5",
        "cursor": {
          "ref": "193e1c3b-061e-477c-9aea-201ed3927379",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "c8a1d6c2-1fac-43b6-83b0-eb737e47f4ee"
        },
        "item": {
          "id": "831f30e7-c1dc-472c-8bd6-f0f151df1df5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "21b9d9ab-12f9-4a00-a843-fc493e6679b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02de3ff5-e90e-4aec-b8d3-3326faf9f58a",
        "cursor": {
          "ref": "968dec65-feeb-4c6c-bd4f-ca0449ac2d12",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "df3aad90-ce69-4bcf-9c44-ecfd22951290"
        },
        "item": {
          "id": "02de3ff5-e90e-4aec-b8d3-3326faf9f58a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "efa468fb-e5ef-41f0-9d87-6976d957f0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48736708-9c89-4b8c-9c2a-49a838d982f8",
        "cursor": {
          "ref": "bbe34be0-f4f9-406e-81b2-c3f4620c6d44",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "f272379c-278a-422d-8a3b-1008945a160b"
        },
        "item": {
          "id": "48736708-9c89-4b8c-9c2a-49a838d982f8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6ddfccf5-58d9-4743-9a17-6f8fabc10dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507bb5f0-630e-4069-b306-ab64edd6b80a",
        "cursor": {
          "ref": "ab3260b8-eb37-46cd-ad0b-a81115b4e784",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5455b277-4b17-4b85-9966-8c752deadeb1"
        },
        "item": {
          "id": "507bb5f0-630e-4069-b306-ab64edd6b80a",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b2d3f46e-34d2-45b7-a1b3-75b10e37f351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e85667-e85e-4948-a55b-092a881be546",
        "cursor": {
          "ref": "83fbd4dc-073c-4dae-b581-94bc431547f9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "acee38f3-07ec-42f5-980a-92d415b26545"
        },
        "item": {
          "id": "84e85667-e85e-4948-a55b-092a881be546",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0c05bdca-0f3a-425f-a87c-f46f98f8fd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eda6c4e-3640-49fa-a97e-1e9db0da966a",
        "cursor": {
          "ref": "314be815-9349-4084-a467-17452d1dbaf2",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "89bb8897-aa42-437a-a581-7295af2fb02c"
        },
        "item": {
          "id": "8eda6c4e-3640-49fa-a97e-1e9db0da966a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "244ab7df-5c9c-4acf-b7b9-a10bb029d80c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131dacb0-5146-4551-b464-be6f81325793",
        "cursor": {
          "ref": "a4dd0bbd-1d30-4810-b56a-a466d6ff72f0",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "c589961c-7c25-4f6f-b225-cc15b6e65ab9"
        },
        "item": {
          "id": "131dacb0-5146-4551-b464-be6f81325793",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3ab26ee9-5721-4c67-98bf-3bd7f60b1915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4faf01-a2b5-499c-9b6c-a756f1d7782a",
        "cursor": {
          "ref": "8a3ca442-1237-482e-bff2-6574bbcb0644",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a76033ec-9289-4906-96b6-ea903137d097"
        },
        "item": {
          "id": "8c4faf01-a2b5-499c-9b6c-a756f1d7782a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8313a327-b5f6-47d2-94bb-a67bf14b9f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a4871-56c6-465f-8343-51ca758e1ea6",
        "cursor": {
          "ref": "c52977d8-afe5-4841-a4c4-395ce249b223",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "39c87495-410c-4d4d-aa6f-9cdbf4067538"
        },
        "item": {
          "id": "a51a4871-56c6-465f-8343-51ca758e1ea6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "923c155e-cf39-4b11-aba8-2e3338e15f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28693ca1-d1e8-416d-acf0-276310f79382",
        "cursor": {
          "ref": "e0514a40-7e8f-48f1-bb65-f8d88c134889",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "1253aed4-14a5-4f16-a00d-b6c5a8286169"
        },
        "item": {
          "id": "28693ca1-d1e8-416d-acf0-276310f79382",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f756c7ad-eefa-4bec-9318-889f1f3fcbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "953c5402-ee56-4c47-9da1-402346cd918c",
        "cursor": {
          "ref": "df1c0e75-9830-41d7-a561-5d77c6eb4e05",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c2ed371e-aadc-40ce-ae06-50b5ca7bacb9"
        },
        "item": {
          "id": "953c5402-ee56-4c47-9da1-402346cd918c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "56bd4cb3-69e3-464a-9efa-739f9424262f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded4b6be-3afd-4844-8f51-457c990ba7a0",
        "cursor": {
          "ref": "82b40ac7-9e4f-4cb3-846e-2fb6961f5d2a",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f721f285-93f1-48e0-b1fa-69e20b6a4420"
        },
        "item": {
          "id": "ded4b6be-3afd-4844-8f51-457c990ba7a0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cad7ae7e-81c4-4b8d-8c03-e6705ba21d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba3957-cf30-455b-89c9-3cff08e71a2e",
        "cursor": {
          "ref": "60614005-f0e9-4779-be86-37659a66aedf",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6080b905-48a0-4c36-83d1-39d1b984131b"
        },
        "item": {
          "id": "2eba3957-cf30-455b-89c9-3cff08e71a2e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4d7a0fd9-bfad-43c9-81e9-113516729119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a72121a-b305-4f93-b8f8-c64e50fe0dee",
        "cursor": {
          "ref": "c7f585d5-9d06-402a-8d5b-c6a3691a3295",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "21d457d4-7481-436e-8ca8-07d2c066c9c3"
        },
        "item": {
          "id": "9a72121a-b305-4f93-b8f8-c64e50fe0dee",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "7bcac178-5810-43e8-857f-a47e66523824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8ce842-09ee-41ff-93dd-db6232d05712",
        "cursor": {
          "ref": "56b31cd7-d444-4d14-9fe9-c9be3962d684",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ac6e3d6b-214a-40f7-8dae-709bb864506e"
        },
        "item": {
          "id": "cb8ce842-09ee-41ff-93dd-db6232d05712",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "34f6a4d6-3fe2-45aa-ae97-a64087f84b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0be1eba-3c44-412f-8da4-3f350e3e6d07",
        "cursor": {
          "ref": "11859bde-c945-4d55-ab17-0c58862074f5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8f1722b5-ed75-4280-ad38-da9d3a0ca8f4"
        },
        "item": {
          "id": "e0be1eba-3c44-412f-8da4-3f350e3e6d07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "caef3d1c-34dc-485e-805a-0f61f9deb7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14cf5cc8-318f-4abb-9569-8c55ed58257c",
        "cursor": {
          "ref": "8b956c5e-d05c-451c-b24c-3109036272e9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c05ffbe8-ae95-4669-b161-2f25ec3fc638"
        },
        "item": {
          "id": "14cf5cc8-318f-4abb-9569-8c55ed58257c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9378c440-225e-464e-80ea-d015e71ca31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f33e9e-492a-4c36-bc64-b3c08863ce7c",
        "cursor": {
          "ref": "8a335b33-afeb-4023-9f82-1bf33ff74f02",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7961fa29-fbd6-48d6-96a1-78776511ba71"
        },
        "item": {
          "id": "f9f33e9e-492a-4c36-bc64-b3c08863ce7c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "99ec6f42-0f84-4e20-bec4-780801d9b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609f754f-8269-4be6-a55d-74082da7086a",
        "cursor": {
          "ref": "4f0b3edb-6076-4450-b386-767ada2fb0ca",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "02877e85-4249-4435-bea1-0130f2893692"
        },
        "item": {
          "id": "609f754f-8269-4be6-a55d-74082da7086a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "c663d2de-03a9-43e4-bf7f-3c2bd0ce01cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae58844-62d1-48d9-bf59-ff500bcd1dd0",
        "cursor": {
          "ref": "6e9f7f20-1321-4d57-b50e-52eb8aea8978",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "11928dbe-8b36-4e01-aede-4f190b07390d"
        },
        "item": {
          "id": "8ae58844-62d1-48d9-bf59-ff500bcd1dd0",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cdcc969e-7718-443f-92eb-20bdf10c6bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfad67d9-085b-4460-b688-757ffe8750d0",
        "cursor": {
          "ref": "33b6bfca-6323-4539-9067-6e6318c583f0",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "00b858b6-9fe6-4b81-a9c9-275006612885"
        },
        "item": {
          "id": "dfad67d9-085b-4460-b688-757ffe8750d0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a91373bf-ba41-4155-8ce6-a1b4d276e0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8368c5c4-c02f-4f94-a249-c2df04dc33cb",
        "cursor": {
          "ref": "1a960a71-0685-4bbd-aa35-91135cd35ee6",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "70de1485-15b0-47b1-a3e2-a9c22b1490aa"
        },
        "item": {
          "id": "8368c5c4-c02f-4f94-a249-c2df04dc33cb",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e5f02f3c-ae58-4101-b891-81fc84c7fb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b34676c8-3e3e-45f9-847d-102a361b4f5d",
        "cursor": {
          "ref": "c53d4876-ca67-45e4-855f-8cf8f7f4d86e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9fa507c3-a9da-42f1-8db4-a773fa0eb4b8"
        },
        "item": {
          "id": "b34676c8-3e3e-45f9-847d-102a361b4f5d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "da0899cd-9bdd-4e6f-a812-1aea8d686f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5738dd69-5ede-4085-907a-227e9eb31bb0",
        "cursor": {
          "ref": "7f3f903c-6c31-45c3-8bb4-c4391ed89a8b",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "22f034ad-6564-4714-bed3-49a94338306a"
        },
        "item": {
          "id": "5738dd69-5ede-4085-907a-227e9eb31bb0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a9b3e20b-db80-45c3-86d9-6b77b42ddc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bff72ca5-254e-4d1a-a38e-73a8a33fbc2a",
        "cursor": {
          "ref": "169f9f0e-1abf-4575-825d-302528dc771e",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6373070f-ece7-4dec-aa9b-fa33cd9dc035"
        },
        "item": {
          "id": "bff72ca5-254e-4d1a-a38e-73a8a33fbc2a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c0bb5787-6457-48b6-9cca-55618504a1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716338c7-b255-49d2-acd3-74d42147fbdc",
        "cursor": {
          "ref": "66afc669-feea-4f37-922e-8ec3ca009414",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b9d0aab6-d3a2-4a5f-89c1-81acedfff60e"
        },
        "item": {
          "id": "716338c7-b255-49d2-acd3-74d42147fbdc",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "c290a594-d79a-41fb-8064-2a75fd35ea9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd9e17b-5dab-4367-b954-a49488f2b82c",
        "cursor": {
          "ref": "b998068d-94e6-46a2-a495-fd325401a57a",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "099e731b-d5f3-4d09-a0cf-3db5b592538b"
        },
        "item": {
          "id": "bdd9e17b-5dab-4367-b954-a49488f2b82c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f621cb8a-2e41-4024-b684-58892c8ae724",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c7dddb-3ecd-4723-b78e-690a65aecc23",
        "cursor": {
          "ref": "90cbfd18-7359-4ea8-8b7a-f20a24ee2842",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2605b250-de11-4cfe-a897-34b2b3623a7e"
        },
        "item": {
          "id": "a1c7dddb-3ecd-4723-b78e-690a65aecc23",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "14cb3566-fee6-41bf-9048-2308cf9d609d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67fc4aee-a7c7-4949-ac04-3ff650c7c29e",
        "cursor": {
          "ref": "a80b2931-982a-4963-b374-f63c2530685a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "92531ecc-6f9f-4644-be95-4ff8d570e161"
        },
        "item": {
          "id": "67fc4aee-a7c7-4949-ac04-3ff650c7c29e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "29335dc8-89c0-4a0c-8591-2325a399f93e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20812dc5-798b-4b14-a755-b0b8d4fbef4a",
        "cursor": {
          "ref": "6682f7ac-3e49-40e2-857c-f0f64dc702b3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1fb167f-c031-4dcc-946e-8c9d7d5108ba"
        },
        "item": {
          "id": "20812dc5-798b-4b14-a755-b0b8d4fbef4a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d73009f5-b7f2-4e98-8dfb-fe2bae2ee1c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd0ec2f-24b4-409e-928c-86d8e04d969d",
        "cursor": {
          "ref": "02e1cf32-da84-4ff8-8b72-c0ca061a0aae",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "187717b9-7b18-44f0-8e01-1b1a51dd538d"
        },
        "item": {
          "id": "9cd0ec2f-24b4-409e-928c-86d8e04d969d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d30a5337-9ada-4179-8c2c-2ae9172d3e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36afbfe-9a56-4cd8-a306-5e7600d922f6",
        "cursor": {
          "ref": "23544b84-a582-4ba8-8e5a-8be85d2d522d",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "69a82fb7-39b2-4824-b1e7-377321fb8a76"
        },
        "item": {
          "id": "d36afbfe-9a56-4cd8-a306-5e7600d922f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "9e22ceff-c28b-4b2e-ab61-21600aefd48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c449efe-b2a0-4221-8c60-f048e3d1d69a",
        "cursor": {
          "ref": "c907b3d5-7b45-4607-9901-0c961e8b8b15",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "7fbaf350-5bf4-45bb-94cb-908e0bbbda41"
        },
        "item": {
          "id": "1c449efe-b2a0-4221-8c60-f048e3d1d69a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6d4648cb-fe51-45e9-9b23-53038be88b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a3ed3d6-0e0d-4c54-87fb-04868f4a9719",
        "cursor": {
          "ref": "ad5274d4-4d0f-4376-8aec-99db84b33e74",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "43ce9d2b-3483-4039-a361-c3f78d8d981d"
        },
        "item": {
          "id": "2a3ed3d6-0e0d-4c54-87fb-04868f4a9719",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "72f3813c-46e3-4631-b097-4bf434fedd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cd98e3-5ebc-435d-adcf-adeccc5f6845",
        "cursor": {
          "ref": "e2b2bc84-aa5a-4af6-9dd6-3df147f20cc8",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4721fa88-7461-4e5d-9344-a85a2f2991e0"
        },
        "item": {
          "id": "b2cd98e3-5ebc-435d-adcf-adeccc5f6845",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9481f84e-4cc0-4c25-8029-fa6b18c87abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e46252a-2ab0-4ee8-ac78-041f75eae8e8",
        "cursor": {
          "ref": "b2166b02-e4be-4aa0-80be-7c07501d62af",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "995faefa-6a83-4a65-84e8-40a5826005cd"
        },
        "item": {
          "id": "0e46252a-2ab0-4ee8-ac78-041f75eae8e8",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e5216035-54b5-4433-a102-d3a64823b459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e8285a-bd09-411d-a5b7-3c96911c9446",
        "cursor": {
          "ref": "91c84551-b25c-4adb-afbd-df3e97d09400",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "94322247-cf0d-462b-a96e-a4ae1d470f3b"
        },
        "item": {
          "id": "90e8285a-bd09-411d-a5b7-3c96911c9446",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4eeec490-78ee-40b1-a902-72f029f81898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d1a4d4-7cd8-490a-a9c0-cb1f9dec4ac6",
        "cursor": {
          "ref": "64da4ef4-7b82-4bd1-bbab-02d1cbaa9873",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "abb12736-97f3-4592-9df4-607589b2eae4"
        },
        "item": {
          "id": "25d1a4d4-7cd8-490a-a9c0-cb1f9dec4ac6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f0dada7-bffc-4bf0-8778-a8af90924512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e13dee0-4472-4657-ba9d-191877ba36ac",
        "cursor": {
          "ref": "1bc5e75b-a28b-4ea0-b973-95eb02a00912",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0b6f9574-90c8-4292-9110-3401137c0b6d"
        },
        "item": {
          "id": "7e13dee0-4472-4657-ba9d-191877ba36ac",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c3157286-0106-4386-b65a-293a9e1f5c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171f4dde-221c-419a-a52e-6510ebe1e55d",
        "cursor": {
          "ref": "feb1e8c9-4358-4fd9-8d36-5fcfc10f6664",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2b0ed2b7-2163-4080-920b-6afa46f1d6b0"
        },
        "item": {
          "id": "171f4dde-221c-419a-a52e-6510ebe1e55d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "166de0dc-1ecd-450d-85e3-3a6659b05d63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9deeda03-ae82-472c-98b8-939d103ceb56",
        "cursor": {
          "ref": "9fa48627-ece1-4a3d-9dd5-3f3968cca2a7",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "718500eb-6eba-47b8-bb95-49868791bbae"
        },
        "item": {
          "id": "9deeda03-ae82-472c-98b8-939d103ceb56",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "21831e45-b933-4016-87d1-ea2c24c3f3bc",
          "status": "OK",
          "code": 200,
          "responseTime": 30,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "e3a4b1b5-3a09-48d2-ac5f-53502d7d6943",
        "cursor": {
          "ref": "20861a64-4b80-4ca1-a38b-5fd76df180af",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "60d0dc01-6c53-4f8f-9bf8-15df85a1ca74"
        },
        "item": {
          "id": "e3a4b1b5-3a09-48d2-ac5f-53502d7d6943",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "129a18c0-16b8-4f75-a03d-80b028873eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8696f9-b1b1-440f-8238-8a3ad195bb4e",
        "cursor": {
          "ref": "d6718574-6e24-4e4e-8898-26895c2934b2",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a51377fc-e634-47bd-a1f3-c9517a3b26da"
        },
        "item": {
          "id": "eb8696f9-b1b1-440f-8238-8a3ad195bb4e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "245adf41-5be6-454e-8006-fbb3507242d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259567df-f2b8-4ee0-8c9c-2663d28f38f3",
        "cursor": {
          "ref": "37e7f272-a2eb-40a2-8bf7-970b15321c3c",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "259b66bd-f20e-46f8-a5b0-9950355bbfce"
        },
        "item": {
          "id": "259567df-f2b8-4ee0-8c9c-2663d28f38f3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a9281c1b-9f4b-4356-8f4a-2b07a186fafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d214b79-8f65-4d4e-b038-619372e09fc4",
        "cursor": {
          "ref": "a25c2ede-5c58-43fd-8d8a-83fecb2f7030",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4162cc3f-b3bf-40cf-98ed-796777b3a043"
        },
        "item": {
          "id": "9d214b79-8f65-4d4e-b038-619372e09fc4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "415bec4a-b4c6-40e3-b739-93f7ddaf8f40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597dae82-9a9f-4eb9-ac90-8746a4186db9",
        "cursor": {
          "ref": "ce69367a-94bb-4389-96ad-a05f115dd20c",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f6676a83-e8fa-46ee-ba48-a6f8290195f5"
        },
        "item": {
          "id": "597dae82-9a9f-4eb9-ac90-8746a4186db9",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "67183fce-6126-4480-9ba7-0b85e72181b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bb53f72-9e95-434b-a165-5d7d42b76533",
        "cursor": {
          "ref": "60494ff4-29e4-48bb-94d5-13d909c43b5f",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bbfca644-7f90-4c84-bf16-9095c9ee8cde"
        },
        "item": {
          "id": "1bb53f72-9e95-434b-a165-5d7d42b76533",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "fa5995cd-c282-423a-8c29-2d4e94844993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978ead86-2755-441b-a435-92be54d11a3d",
        "cursor": {
          "ref": "497c991a-d94e-4cf8-812c-705dba6f04d3",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "34b7fa0c-dcf2-4210-ba96-fc52c71a40b1"
        },
        "item": {
          "id": "978ead86-2755-441b-a435-92be54d11a3d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "466dc69a-3db2-4152-81af-19c1a293733d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6add48f8-d7f2-4c12-9c8c-28c37a7ca80e",
        "cursor": {
          "ref": "4aa33c47-5144-412a-8070-531996946802",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d291c5c3-eefa-4a55-b497-7b3805074075"
        },
        "item": {
          "id": "6add48f8-d7f2-4c12-9c8c-28c37a7ca80e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "577830b2-355a-4aea-add6-0da7610565f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e573a68b-4a76-4359-b15c-ea939a4492b4",
        "cursor": {
          "ref": "6cb9afa5-4849-4ae0-b27f-ed7440a7955b",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4a58b298-5148-4d87-b172-cd2dc57952f4"
        },
        "item": {
          "id": "e573a68b-4a76-4359-b15c-ea939a4492b4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99c1ea7a-6fc9-4fef-8a6d-202f7ba19830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f604bb82-37df-4fcb-94f6-807cc1b5e0d6",
        "cursor": {
          "ref": "22e8f79d-50b3-435f-9f98-bb4d47e77ae5",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "370d7b5b-66eb-4f33-8e85-fc19c749c914"
        },
        "item": {
          "id": "f604bb82-37df-4fcb-94f6-807cc1b5e0d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "be0c19a0-fb90-46e7-b9e4-704cdfdcfa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d987261-1ef1-4710-997b-53f7afc0c4ca",
        "cursor": {
          "ref": "01a80bce-ba23-41e1-a60a-7921756fd3bb",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "30a65b5e-2b48-41d5-8122-f6c49f2dca8d"
        },
        "item": {
          "id": "3d987261-1ef1-4710-997b-53f7afc0c4ca",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ade91ad4-0ceb-4711-a6a3-5e1467c10296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef278b5d-921a-4455-a83d-5dc1a3a28e8c",
        "cursor": {
          "ref": "0780a766-b408-4292-aec5-53fca3c2c11d",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "fc85bed3-0d53-4ebf-a78c-ae4b126f49fe"
        },
        "item": {
          "id": "ef278b5d-921a-4455-a83d-5dc1a3a28e8c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "9a22768f-3082-4f06-bab0-6ae48f7c717b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85109b15-7b70-4cf0-b2cb-547264a4cc75",
        "cursor": {
          "ref": "edbc601d-eb11-4b04-af1d-6a1a329a3630",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "8583d188-5224-4e44-a115-787ee78bb37d"
        },
        "item": {
          "id": "85109b15-7b70-4cf0-b2cb-547264a4cc75",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0c78a81d-7bd2-4f91-beeb-ab8468d7bf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ce620-e928-4ded-afee-b25d8f8f6d84",
        "cursor": {
          "ref": "6198db50-31f0-45c4-9a28-421e32513479",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "138ab968-f353-4070-894e-e8d025621edc"
        },
        "item": {
          "id": "619ce620-e928-4ded-afee-b25d8f8f6d84",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6eccb66b-0b0e-4deb-934b-37f2ca70984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed7f6a3-905d-4946-84ab-3a21b0772390",
        "cursor": {
          "ref": "560d80dc-f379-41be-a02d-892ccb5fbfea",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "c034dc9b-8e06-425f-bd51-9e0ba4f335a9"
        },
        "item": {
          "id": "9ed7f6a3-905d-4946-84ab-3a21b0772390",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "6057dd64-fe8f-4ada-b26e-5794a2c9471e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5091af9c-e258-4b05-8b03-5aa9b0627149",
        "cursor": {
          "ref": "2a3c8a29-2269-4cbb-a3d7-a9a2bb4b688f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "72c90a66-2a4f-4d4c-a83f-2800493dc7b5"
        },
        "item": {
          "id": "5091af9c-e258-4b05-8b03-5aa9b0627149",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "88cb03ac-f88b-4a81-9286-b93e5e999894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93deb74c-2d24-43f7-ab6f-377b0e6cb63b",
        "cursor": {
          "ref": "cd4a685f-63ed-41ad-92bf-d5ce4b62a965",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "14d134f0-9c4c-42db-b855-7b5d2fa2c54b"
        },
        "item": {
          "id": "93deb74c-2d24-43f7-ab6f-377b0e6cb63b",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d2fa629c-7d8c-43ca-a788-cadfca40c0a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a62b015-a700-4355-b3b9-25699ab388cf",
        "cursor": {
          "ref": "5da352ea-91ea-4589-8f8f-75dd1b63822c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "bb09f001-8463-4a72-96e3-f57339f1da31"
        },
        "item": {
          "id": "1a62b015-a700-4355-b3b9-25699ab388cf",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "455bc4ab-5f7c-4f14-8694-5589b4f55ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f759cb9-8c96-439c-af1c-f9aa12adc6d6",
        "cursor": {
          "ref": "fa3575e2-50e4-4790-959f-d67afe8efd2f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "61ec8ed3-ca88-433a-bb9e-1383c91308ae"
        },
        "item": {
          "id": "1f759cb9-8c96-439c-af1c-f9aa12adc6d6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3d4e4d3a-a335-4c70-94a1-4a2bcb33f03e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3964c1c9-bb21-4fe7-aadd-32c777c999e8",
        "cursor": {
          "ref": "2286a479-81a7-437b-8c05-716e790912ca",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c7e90234-6694-4dac-94b8-95842f0be442"
        },
        "item": {
          "id": "3964c1c9-bb21-4fe7-aadd-32c777c999e8",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "483de196-e296-4b8a-8841-ea866cec595b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6cf5995-6e65-4605-874c-e570dd09dc44",
        "cursor": {
          "ref": "1140ad2d-1740-4a22-b7b6-dc011f17869c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "0769246c-4169-4b2e-834a-17f54cffa173"
        },
        "item": {
          "id": "a6cf5995-6e65-4605-874c-e570dd09dc44",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eeac51a5-bf63-4938-bb22-e54e15fab743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "858c53c2-5e85-4f71-9f88-221b0acb5c29",
        "cursor": {
          "ref": "3069dc07-eed9-4b0e-b89e-6a912eb07f85",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "55425c64-9a45-4be5-a4c7-9a2900315a72"
        },
        "item": {
          "id": "858c53c2-5e85-4f71-9f88-221b0acb5c29",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "916408e4-1c36-49c6-82c8-0a759187b1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9575a9-6e68-4749-bac2-cae16afb4b96",
        "cursor": {
          "ref": "8a68f824-3e2f-400b-b4f8-845f9ce0925e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f872dd8c-c7b9-4899-8c7f-c86607067312"
        },
        "item": {
          "id": "3c9575a9-6e68-4749-bac2-cae16afb4b96",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "28932350-6199-4e34-96d5-0f43938949a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca31c4b4-0d23-4704-95fd-ba178ec5fec9",
        "cursor": {
          "ref": "f13fad09-5d1f-4fe5-b170-b3e0837ac988",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "aea4aa2e-c3a3-4d1b-a3aa-30ff95066ec7"
        },
        "item": {
          "id": "ca31c4b4-0d23-4704-95fd-ba178ec5fec9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "38b3b38b-53a2-4c3c-bedd-33b63c0c89f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9247ab4-9fa6-4950-a0b0-35c467afb7ce",
        "cursor": {
          "ref": "dbdcb3ef-869b-4960-bcae-6e6038a902b5",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fa446d7b-97f0-4821-bc58-aacf68276d36"
        },
        "item": {
          "id": "b9247ab4-9fa6-4950-a0b0-35c467afb7ce",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5a1b0417-12c1-4d47-aa36-69ec8324b1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d88ff13-b787-4fbc-99fd-cf2dd197adc6",
        "cursor": {
          "ref": "27ea2273-6d66-4f76-b439-6c97848ead57",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "abc3c6bb-bad9-4eb0-bc82-6ec27fd19adf"
        },
        "item": {
          "id": "0d88ff13-b787-4fbc-99fd-cf2dd197adc6",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "637fc330-0c81-4ffb-b434-2fbdd52c2285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6a93b1-c332-4c68-899a-8cd4375f4902",
        "cursor": {
          "ref": "295d03a6-eb5a-400f-a5ea-0caf832c49f8",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "faf082be-39ed-400e-b59f-430a47b4f5b3"
        },
        "item": {
          "id": "ad6a93b1-c332-4c68-899a-8cd4375f4902",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "614011fb-7fdf-4b20-8163-8f2b18fa74cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dd5c07c-5505-45c2-b33d-245f8e3a1234",
        "cursor": {
          "ref": "a2a9b35e-ad0e-407f-8bd8-72fb08411eca",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "65fccba0-a86d-47c0-9f6f-ccb9a035e449"
        },
        "item": {
          "id": "0dd5c07c-5505-45c2-b33d-245f8e3a1234",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "1499a5dd-6499-4c79-9afb-869c12ee83d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486531cb-105b-4572-a397-8fcae01ecbaf",
        "cursor": {
          "ref": "0849d880-214c-4bec-b308-57d190ba9637",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "e740916e-0757-419a-9744-404a4cadff09"
        },
        "item": {
          "id": "486531cb-105b-4572-a397-8fcae01ecbaf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f7fcdbb0-3b1d-4d24-a007-54620aa3e2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cc9b2d-0cde-40b5-a58d-c4006455e774",
        "cursor": {
          "ref": "26c814f9-a7b7-4cc3-b9c1-3719411984de",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "6ded4c18-7cba-4e9c-ac5c-d2e71462a957"
        },
        "item": {
          "id": "c1cc9b2d-0cde-40b5-a58d-c4006455e774",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "58c22dd6-b42d-4f14-ab8f-37a0e44fabc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc921d10-586a-4391-bd3e-7be0fe88aff1",
        "cursor": {
          "ref": "3ffa5bf1-0079-4e90-894e-d3b8a7ac6cc2",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "50f3daaa-35ec-4486-8149-34fe523a16e7"
        },
        "item": {
          "id": "bc921d10-586a-4391-bd3e-7be0fe88aff1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9bbd9b27-eefe-4f24-83cd-2beabb506d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa96af81-b1ed-4efc-9ee7-20ac013bf513",
        "cursor": {
          "ref": "0cd66392-1d35-41a6-9697-a94f8b7a37b7",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e010145e-bc65-44c0-9cc4-5e4d84cb1d4e"
        },
        "item": {
          "id": "fa96af81-b1ed-4efc-9ee7-20ac013bf513",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "7146baa3-2ae4-4dce-b8a9-bac4777c9769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3619e2-1a1f-4c89-a28a-92af9f86384c",
        "cursor": {
          "ref": "91c21435-e83f-49fb-be7a-57a4c352adac",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "d84d12c2-4670-4810-96da-2f8f0956d9d8"
        },
        "item": {
          "id": "ca3619e2-1a1f-4c89-a28a-92af9f86384c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c369a1b1-5535-43c7-9d1d-cdac9249f686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a89fea-b8a8-40b5-b519-fa771ee9484c",
        "cursor": {
          "ref": "f2dd1626-dd50-412a-b879-83629ef201da",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "d5810ed5-e599-4949-9c4c-a808bd05f7b3"
        },
        "item": {
          "id": "e6a89fea-b8a8-40b5-b519-fa771ee9484c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "153a984f-a53d-4b30-bd71-7b7f3d800df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "074a31a8-0147-4ad4-8427-b7aea63fea8a",
        "cursor": {
          "ref": "9616db8c-63ea-4ce2-b47f-1a111e201794",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9ae28c53-d083-4bab-9a6a-9aa9763d2a0f"
        },
        "item": {
          "id": "074a31a8-0147-4ad4-8427-b7aea63fea8a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "047323c1-23fc-4557-978d-696b3cc26db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e442ab27-785c-4f57-91ea-1c9970ee55c2",
        "cursor": {
          "ref": "b19dc3cd-e743-454a-a443-575e881aec0a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "80310632-f83f-425e-bb4e-806cf28d0c83"
        },
        "item": {
          "id": "e442ab27-785c-4f57-91ea-1c9970ee55c2",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "af22e122-9321-480e-bec7-711aad6a2727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11edfe8f-010a-41f5-b7cd-9d5611906bd8",
        "cursor": {
          "ref": "25eef981-03f7-4751-9d8f-6b9cfa0635d9",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bebbbc55-c4dc-4c0b-aea6-3f79c4e46a29"
        },
        "item": {
          "id": "11edfe8f-010a-41f5-b7cd-9d5611906bd8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "83ad4794-c4e6-4476-a49c-99d30f4b94a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea557993-d51c-4253-b62d-73090d92cb09",
        "cursor": {
          "ref": "e9587c71-329f-43c2-b526-98b93c86f668",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fa8272ea-75e2-4dde-a8c2-8a6df1c9b141"
        },
        "item": {
          "id": "ea557993-d51c-4253-b62d-73090d92cb09",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "023605f6-32f2-4993-8efe-8a774527091e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30570a69-7b09-4115-bbf9-38cc7c664a8f",
        "cursor": {
          "ref": "be78dafa-bdfc-454f-b15d-51871f050f00",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "24cdec00-76cd-4a0f-8a5b-970659634ab5"
        },
        "item": {
          "id": "30570a69-7b09-4115-bbf9-38cc7c664a8f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e42206a4-759a-4e67-8572-53410bbcfaa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a014f9c6-780c-4121-ab7d-8147f8beba56",
        "cursor": {
          "ref": "4207abe3-ef24-446c-a81a-408de66e1d74",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6ca8ccba-d72b-4b0f-b72b-7b79e70b95a7"
        },
        "item": {
          "id": "a014f9c6-780c-4121-ab7d-8147f8beba56",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5150a787-331e-4bd8-a526-1d91e3bdc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c4ce7e-6d8b-47bf-8953-4728ae8c462c",
        "cursor": {
          "ref": "4def739a-7c2b-4565-aff0-404ceb5bd461",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "5eb76a68-9a2d-4ae2-a28f-f65b4b3a48c9"
        },
        "item": {
          "id": "12c4ce7e-6d8b-47bf-8953-4728ae8c462c",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "659b8993-dabf-483d-95e5-4c68b494eae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4adf4f6-68be-4883-8d23-24175151b4b0",
        "cursor": {
          "ref": "82776143-478a-4610-a416-9db6f56a6746",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "712f9c4c-111d-4b82-b81e-feec50ccb9cc"
        },
        "item": {
          "id": "d4adf4f6-68be-4883-8d23-24175151b4b0",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "81d6d071-13e3-4bd4-9c86-eb6a57878c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465f6356-78d3-46e7-a6d1-6496fdcd83d6",
        "cursor": {
          "ref": "9aaf11b4-c457-46ad-ae35-53ce561e1edd",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2bbf181d-62a7-455c-8056-732829b5b3cd"
        },
        "item": {
          "id": "465f6356-78d3-46e7-a6d1-6496fdcd83d6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "58d357fe-6063-40c1-bd4d-25936efcf789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d8aff7-951f-4a2f-bdfe-ab5fe10b9d01",
        "cursor": {
          "ref": "3219798a-ed81-4323-8451-dc8b1ad00147",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "51d43529-9512-4eef-9f75-229ab10e550a"
        },
        "item": {
          "id": "d4d8aff7-951f-4a2f-bdfe-ab5fe10b9d01",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "57b34160-f8d6-49a3-99a9-b3c3ea6f8d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f571bdf9-31ff-4860-990b-13578da499c2",
        "cursor": {
          "ref": "05a4f21b-0786-430f-82bc-09a54dedfe3c",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "36b1b899-be3d-4b9b-b863-3489500ae5dd"
        },
        "item": {
          "id": "f571bdf9-31ff-4860-990b-13578da499c2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "073fc61a-ebf7-4cc8-9604-276de577ee95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e8b6d9-98d3-4159-93ab-5489bb545db4",
        "cursor": {
          "ref": "b6fc95b6-17db-4971-b67d-78ffdd717e6a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d0bb5155-0960-481d-b2b0-8ea97325dde1"
        },
        "item": {
          "id": "e2e8b6d9-98d3-4159-93ab-5489bb545db4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "36a0a0ab-5d49-4db8-a946-5027db787bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f882aeb-0af7-4c08-a8b3-d8ba98efc2f3",
        "cursor": {
          "ref": "630bf49f-ef42-4a7c-b82f-6a106d889d10",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "b923654a-5eea-4440-9e7f-0e087c2f2725"
        },
        "item": {
          "id": "2f882aeb-0af7-4c08-a8b3-d8ba98efc2f3",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dcd77992-6ba7-4c5b-a4e6-01445d6dd7d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a809364-85ef-41eb-a755-7849d595553d",
        "cursor": {
          "ref": "fcb3c958-aa32-47ba-a845-a5129f4a74e8",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cf3e222d-f39d-4a01-92d0-7c213f7e04ae"
        },
        "item": {
          "id": "7a809364-85ef-41eb-a755-7849d595553d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5e8462cf-8979-4cec-ae77-991ded342f65",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "16940322-80ca-4b2f-8fc8-99f7b3224690",
        "cursor": {
          "ref": "40c13cdd-4dbf-42f9-b06c-00a772837ef4",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "5964a2ee-80ae-43f1-9042-e1060ffb785d"
        },
        "item": {
          "id": "16940322-80ca-4b2f-8fc8-99f7b3224690",
          "name": "credentials_verify"
        },
        "response": {
          "id": "1650217c-ab22-4079-9fea-153e6a3a6cd5",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80b3f5f-58ac-49bc-9175-f41e3e970f75",
        "cursor": {
          "ref": "ba68708f-cb98-45ae-bfd7-aec784389549",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "5ca3f6eb-17f2-4bf1-a942-9a978748431c"
        },
        "item": {
          "id": "c80b3f5f-58ac-49bc-9175-f41e3e970f75",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eeff600a-f096-4d11-bffd-6f640589ed63",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519ee0a-08d6-4faa-91d0-1ff5f42071cc",
        "cursor": {
          "ref": "cd97360a-f1e6-4b3d-801a-34b0ed052b83",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bde9b1ca-9681-43bb-80eb-c77e2fce3f84"
        },
        "item": {
          "id": "4519ee0a-08d6-4faa-91d0-1ff5f42071cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3f31a77-5c61-49b6-86d4-57511b9712cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4519ee0a-08d6-4faa-91d0-1ff5f42071cc",
        "cursor": {
          "ref": "cd97360a-f1e6-4b3d-801a-34b0ed052b83",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bde9b1ca-9681-43bb-80eb-c77e2fce3f84"
        },
        "item": {
          "id": "4519ee0a-08d6-4faa-91d0-1ff5f42071cc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3f31a77-5c61-49b6-86d4-57511b9712cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9721559-4da3-4330-8542-bd29eef95a40",
        "cursor": {
          "ref": "744d1765-7df1-48a6-b7cf-2002ee0f46b7",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f8030256-cdfe-4031-b75f-a6138bd2b7e2"
        },
        "item": {
          "id": "b9721559-4da3-4330-8542-bd29eef95a40",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7e6bfc7b-f81a-44f4-b81a-d91de83cc28f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a42d7d-c883-4069-a256-765dabbb2206",
        "cursor": {
          "ref": "3d3b1d2a-9004-43a1-a40c-cd965d39638a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "2bde7dd2-d93e-4435-b9b4-6346cc0f91b6"
        },
        "item": {
          "id": "09a42d7d-c883-4069-a256-765dabbb2206",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "04864458-3578-44ff-9543-d8e30eddbb2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}