{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a940aaeb-05ff-4cb6-b198-7de1f35c7023",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9281537c-2dea-4001-8a44-99b2fbea00ce",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a7e1e7da-3a61-4c86-9aa2-b75a8e66be05",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b99add21-a3bd-4c4a-94d3-37a4e1e7fb77"
                }
              }
            ]
          },
          {
            "id": "1abc860a-1531-4b0d-8523-896fc82af500",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a3f3622e-7a23-430f-bcba-a4e324467539",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "36f9035a-a50a-4046-9c50-9d8fb18cb27b"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6951249f-e212-4c9e-a75b-0967cb28cbb2",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "90cb4352-4bdc-46bd-99d6-7758dbbad63e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3376dc9d-bda8-4604-af98-fd7ae1e87a71",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c73a44a9-4288-4e3f-8578-22503424be15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ca149140-59c9-448a-a3f7-63e815587aa7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "71c6b674-7717-4d5c-abf5-c5382a1b0e3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09be7ef6-463e-4723-bfee-7178c0ccf122"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "48775728-9e1a-421e-8b6c-34e56b52be18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3e28be54-c9df-491f-a740-f5f0b0648f84"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "980cd68d-808d-444b-9d5b-08242b78acea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "48b1bd11-01dd-46f7-900a-e9337b5328bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2b99e2cf-9299-41a1-8d35-92059a6a1ced",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "492e8c50-1190-414a-aac9-036690997163"
            }
          }
        ]
      },
      {
        "id": "7d7a19b5-2c1f-4f0d-9f11-4275bb720a32",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "05952bfe-37d2-4fcc-91b8-521a25853cb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a2d7f52-62fc-4073-9709-42bafcc77c91",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6750692f-eed1-4d51-bee9-ca937d448ed7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35895f1f-020f-4667-af10-b4f07c8d01d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ced26547-6696-4813-bba8-458b9ffcba56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87db1e2-3b8f-4620-819b-4b6583f40e7d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d35c51-b506-407f-a586-1a21623836c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41cfa886-0747-4fbd-9609-fc0c63f6d68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa56e37-5527-4b55-8a4e-d02f4897a233",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381bf0dc-f028-4973-ba01-5e6196badeeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f4854cc-58c4-4b4b-ae0c-575994d0ca0b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "09b3e380-2b7e-414f-ba15-51fe8fef1676",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aac1e863-19b8-4f50-9bcd-a7f83eac2e49",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9532ed-1752-42b4-a43e-fd191155946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ef3dd5f-ffc9-4b17-8143-ed39b199b1a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a1ec4e-693b-437c-be7f-685e19e7bc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e40dce-4fdb-4bd2-9efb-03166fe5b4c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "86ccf494-497e-4052-871c-a758842c1c7a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a432ea1d-b4d3-443a-9b17-5d8bbc406b41",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07535a7b-934c-40c9-a6a4-ac123eba38bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "feabf93b-9520-47ca-9054-6043a3e76fde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac3927ea-c4da-43f5-b0b9-d956e8471cb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "38640e1f-bc70-4b83-a517-1351020c6ad4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a71ccf0-abbf-4855-8e37-ee641febad32",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59cb1d82-d0e2-4f8a-8487-9cd77c5afdaf"
            }
          }
        ]
      },
      {
        "id": "c2f7c1dc-c363-4626-a52e-b4581923337e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "aff74f6a-9fa8-4d72-ba40-8c3475158fd6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b8bda0bf-7480-464e-abd5-5b54aa81f389",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "293d1e4c-1f44-4ef2-8cac-27de359c2120",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20ee83a6-ce39-428a-9386-8025db124a01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5871b1ec-d6e9-4b17-865e-1b9e63cfface"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e4159c4-06c8-4988-9069-2b5de2070555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fce7677c-38cc-481a-bbab-c93dd983d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fd91f9-fe11-4d66-a3fd-45a29810de94",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81177e5-3f57-466a-b51b-0821b47b03db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a3c72e-3d90-4833-949a-16809863423f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac3c1e94-7427-4682-aa9c-e99bf81b40a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e7c178a-fa60-49e6-8f32-b8c2b1b2c4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64a8531-6729-43c8-91db-dbe4c8ce4934",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c51a762-ff05-4380-8b1a-a852af1043dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aafe97e4-4e99-4a9a-aae0-6654506bd1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61dd1f33-f5df-48cd-95f0-bcd94b256b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59f3a999-1d5a-4330-a215-273dd24f8956"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae846217-6452-489f-98f4-083b937a1917",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55462f30-1d82-41cb-9808-1ba1c2fef734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8553243e-ef84-4905-a44c-487ffbdcbc83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7e75b2-da21-4561-b55b-c89a66822b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16f47f78-ba50-4256-981e-59a3bb8922cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be136c4f-6e3b-4520-ade3-aa96833acdf6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5726d4a5-8db0-4531-b753-e88973c20ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab387eff-0b19-4d34-86da-2cb5315cd330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f6dd8a-34e3-499d-bd3c-05438889ebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcf47d24-3955-4f05-b73b-66dc189b83a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabe1de8-cb7a-45a0-85cd-6d7e973437ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2860638c-f943-4875-b241-badd9d51e405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4799a065-f7a1-411d-8f6c-f7b4f17160a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de51d8c-4ae4-4bd5-a73e-82c193689bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "668622d7-f997-4860-a16d-b7ed1c581616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e90687-5caa-4729-af88-a8674987b957",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dbfd42b-e2ab-4308-b2dc-cad5f5c937bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "610c736f-3a95-4d37-b5ac-a209338ae369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17531f79-b326-4cfc-974d-1b1b1f509524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f03c6bbc-9427-4441-9419-d17c9f97860b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762ffc0f-6ad3-4f93-827d-51623be542f3",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec113e5-58ea-4758-83bf-74a8f063aa53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f59b4b3-8ec2-44eb-983e-0faf1901515e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d24b5a7b-55c5-4a22-832b-cde10fc83867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "241bc390-db70-4bdd-bb92-566fab3c4e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8f3cfd-7cf0-478b-8fcf-f4a2f63fc17b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0bfa10-9cb9-4963-9a2c-3d1f58dd887e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c0aef4-13d5-4d08-bd20-10347cca2d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6662511-0fca-4819-a785-444edab0983c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7c1ca9d-03dc-46b0-b07a-db04eda22fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fdc552b-04a1-4ee1-96cd-9b656f1fc6dc",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb71978-3f3f-4212-a2b3-556b2616ff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fbea0d3-2dc3-4808-8521-a8fa1ed19ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de535c69-da37-4278-a869-137fc1a71e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a4ec0f8-9794-410b-be9b-d64ee4e3d13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83312622-bb78-4217-9584-8c729ed0254b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f9ee32-1486-4a79-9225-4b1c75a8972c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2b34a5-9d7c-4353-8852-efddafeedddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3406a693-38a3-407b-8f7a-e53fcb3ff794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da1db14d-387a-4536-9080-a3cc6f388645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f732ec-d817-4414-8c5e-5e69a39efc30",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5f98739-f375-4943-becb-26912827eab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d4a69c-593e-4768-b138-452a242c4f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6081fcc2-ce8e-430d-b79b-499547d4bb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b59519a-6e2b-498b-ac32-e9248ce0a8b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a5e3615-5081-4b7e-a67e-826c39895731",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8505694c-73b1-44bd-aaf3-14e0376af4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91e82f5-1321-40e8-8b03-86ea63dfda1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b2aa61-0ffa-4d17-9744-979faa052c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38db32db-8f58-49db-8b6a-6dc67f984874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "559d54f6-9bd3-492e-afbe-63e316c34e99",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "865ea581-1ac1-4abc-aa43-b37f104b37b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84a714e9-54b1-44d1-b983-da2e27b426db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9202db1-cb27-4ab4-b45f-647032bf6bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da1b42eb-c222-445e-863e-4787681607b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a524663-68a7-4069-a810-e16221fb3946",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3d27dfb-e6ce-4648-bfa7-d6226709c1a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d3dc83-7280-43d2-aa5c-8badcc50b4ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99b862a1-0c42-4b0e-9302-22dcc5a82eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db49361d-7bbd-46d7-b94e-40bca791f2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccded182-1509-4e9d-a20d-7d436ab45937",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf96a149-ef94-4f0a-90e8-d8b69f1de23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de10005-07a6-4a58-8924-e95335eaba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dee5c6-805f-4c9c-bfd6-6fe4a68296bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b9a1dd7-4e65-4c98-bf5d-6f0a5de7cf66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "279ba0e0-2522-4fc0-a4c0-8f54a49a07c4",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc751d42-a47d-4f93-93d5-05bd212a605e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36405212-f58f-4ac5-986d-4cdea949ff11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ba7075-2ccc-4479-98b5-1606b4af5bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfb7342c-88ef-4526-8f75-6e98a6317507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54323ab-a05f-4b9c-b17d-24a72fa83d85",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdbb46f3-a29d-432c-9bab-6992a0597e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f2ff0a-20cf-4b53-8d6e-06d671acc9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558cca44-6687-482b-8ffa-876713fdd0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5cd0d5c-ff02-4a7d-99a5-7576053e8a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779f3ce0-6c05-4010-a393-b37dcdeb7218",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817152ab-a8bc-480a-999e-154d4dedc232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7ed947e-843f-44da-b390-190ff9a26238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94238447-4aaa-4c74-ac8a-cc29b44804f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eba3b2c9-9a61-4cc4-98ec-35920a8d9b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc5cac5-78fb-419e-9c37-a603c4f91ba5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0439567d-41fd-4583-b208-a18ead31363e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "198769cb-020d-4024-aed6-a5e4e366247f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099e4b29-8bde-4d69-ad50-18797fefe32f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d799c814-afa5-48be-9b34-5603e3617931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77bd5181-0e0f-47c4-97a9-39305538e2c9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd49e18-49b1-4057-92dd-a6dbed167df7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1b585a-02d6-47c8-9226-e5c90251ba36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b9ef18-822b-4953-a570-57e9b02eda4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "babd5d4c-fded-4732-93d0-f82ab38d6fec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b0f6b4-0b00-451a-8524-29117483714c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe00c06-2e4c-4f63-9886-813b51d0aee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16ef8e2-84bd-4f01-ba99-19b0415284d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40db2255-3473-434e-86bb-f7e45846ec4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be287411-0abc-438f-a193-4f11a348d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74b8cfc-172e-47fa-94d0-24854cf7238f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2001a12-3a39-44b4-8346-d9ecd0b2b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4852c203-130b-4b6e-8a62-a5838a310de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd58128-4474-44b0-bc6d-99b8f4435a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6509ee1c-b9b4-411f-8d32-a8aa1c46bfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d10f80f-49f6-403a-93a7-35c1eda14612",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c602054-6948-4bf0-853c-bda814fbac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e412b0-c38f-42cd-b619-ec62fedce7bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af48fbbf-df21-4461-968e-faa9c35ab2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2f6b34-b262-42e3-9c4b-f14f82df981a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fa28f9-e035-4296-bfcb-00e6f08c45cf",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f009ed5b-e132-4848-a32b-51ab4b9c0059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0068cefe-6803-4f65-839c-39db4bd6d073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568eabd8-04b7-4509-abcf-d16ff73a599a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db63894b-1865-423e-ab0e-ff14ebff77cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d529f9-1675-46cc-b452-b55a3d4e09ae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bacfcf-a210-439e-a348-91ff3a0c2251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89f54b5-80f5-464a-8aaf-bf8ac3a4f1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eede7bf-e1f6-4dbd-bb9f-861f102b5517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00540e29-c423-4fca-a5b0-551e854c21c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381a30f1-b4c8-4e30-b340-bf5f477e1a08",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4a3ae2-a866-41a4-9729-78c35ffed237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc3821e8-7075-4e84-bdf9-334da3b3812b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1509e4-116b-49ef-b156-fa53d4d12d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0632f99-83c3-4f0c-8c77-74a195d2586f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "131ffd58-ad6f-44b6-9d55-49e1cafb755b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df704aa0-944d-41e7-9e1c-ba68085bf0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f80d95-48d9-4b99-98f9-c95c056d716e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b3b86f5-73b8-4313-9760-052a6accc3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7748b61-1f0a-4c0b-8717-4d1df43134b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b60e07-756e-4e35-8036-241d7f9236a6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50259ca4-d9b7-41dd-af4a-5e7aa54ad7fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60ae5e1f-69ff-49a8-88a2-158452e55029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8617b0-3ea7-4d6b-aefe-298c7187887a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d255f2c4-e758-432a-a7f0-9714af776307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa923ed-00aa-4d55-92b0-df5f1d3926c4",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2825ca3d-2d14-404f-bf54-1849d8519f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a5a963b-e21a-4b7e-a29c-b500d6852e19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff29582-4a03-4978-814d-688d31903dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "104cc46e-841c-482f-8e91-47c62ac87b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f0691a-a008-4956-8f95-4a293c1f5990",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3558c05c-9109-413c-8435-1358b97baee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b55af57-4d41-4caa-878a-9d978ade1b07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051c3109-809f-45d8-bcd2-64bde23739b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a744882d-f742-401d-b82b-61540e7d2a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca431f10-9449-4556-bf77-bf82cb8b83d8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd912b6-1ca2-40e1-a7d1-aca037f639af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4baf469-46de-45e3-9faf-ab3615fb1c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ed2359-7dc6-46c8-9bd0-0cb5a07d354d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c65b6870-3426-4c5d-a028-9bed84d71c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d2a42e-243e-40f2-adcc-62c0e47a77b0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b103f6c5-5a78-43b8-9f62-4199eab3797b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913dbcff-d60e-427d-9a71-a0be9851e374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a118d58b-b0ab-482d-b41c-a9c2ba33fe3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c12fecb2-6f52-4603-844b-78c46caeeffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d931a7a6-67db-436b-9c71-9705415962a6",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d4cb7f0-ca38-4fec-905e-6ca2b6f5cb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80798fb4-db50-4909-81e2-8da8eb83a8de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2709b1c8-f885-4ac3-a19b-f5a77fcb49ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3d51082-6985-47d0-85c2-2da02f39f793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1c6eb8-9ba1-4755-9102-ba080519ad2c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7360133e-e0c8-4a1d-8a2d-7fe6d7013734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f3bfa3f-bf63-438c-a7a8-10353b8fabe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "249aa450-16c0-458f-9347-9ae6ad955ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "bab9238d-fe2b-4470-a0c0-c85c8779417c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737cb72c-9581-41c7-b10d-22a79ee89b3a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e8647f-36b9-4f3c-b518-ebad9d556e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "330c551b-63de-4c3c-8bbf-8bdae35730e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79a94e8-db16-4332-a19e-fc7373478208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e785ba1-e64e-4048-95f9-34483d00a1bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70092861-81e7-4aa0-89c6-523b1c918aa6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e14aaa0-5636-4856-b3b0-907291be7cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190ca777-f142-47a8-b132-37918317b65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e42522-f591-468f-9d48-33dd977ed513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "126f5895-1db8-47bf-a6e5-8bea7079ffcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d5e0fe-cf34-482a-a4ab-e5f0b53a2971",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d86daa-8f61-455b-80e5-25d9627db26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae56cd2f-8fbd-4b9e-9ef6-48191624c5ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b03ee4af-ef38-4394-bc4c-1d62a62134bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf638bfd-1d1e-4fe6-a829-604d63732876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b02ead6-89ff-4309-9f90-67c7deeffa69",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c48c60d-494a-4739-aff6-e8399e36dae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0587409-b498-4a2b-b30c-9c0429e15757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c46a3c-06f5-45c7-8330-b79325f99f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3032e19-bf35-4f98-969b-580f93889446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640f606a-7090-4cb0-8bcc-f20b5904f2d2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f9de040-3248-4289-b5ef-304df22721ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b13c68bc-9832-4430-aa1e-c7b4ed38b26d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca285cb3-c4e4-4037-99a3-8ef820f085f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d6c341a-9533-4b79-bc84-7669084a7478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e7bcb8e-407c-454e-8775-a7272703ce23",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "470055b7-0e3a-4f06-a80e-d81903a16ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4222b73-87c9-4b20-b4dd-bbd7141d2aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04cf7aed-59ef-46e5-8124-ff64c164aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "48e46f32-9944-4e9a-8158-3de8a4bd0089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79ce373-0182-43b5-8685-be4a586251cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a677f86-6b59-4d27-a771-93785e075b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054aa7c0-6cc0-4723-b6fe-afe0477e35f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9cbcad-0f2d-474c-b3e9-5886650fac66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4c291455-c303-40ee-9257-bcc9d230a2cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f1a98ac-1056-4505-9426-c4e65035a8c1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceff51e5-9909-4049-a058-98cb851b4ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0673b6f7-ee97-4990-b139-62783cd7ecf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af07e9e6-491a-4cba-8a7a-95b608504604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47456f09-8346-4858-b291-c554d7068bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6496b973-c29c-4231-963b-90d3ea22e9f1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47c43381-01d6-4b67-91a8-36b933299929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca35d02a-b7b6-43cd-b9b5-285122bfdd32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8f192f-c03a-4476-b43a-04996d4e0df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "44d209df-2292-4b0d-b2b5-c5f27fee82fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8fed25-c219-4442-8712-9db247c17688",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8524e64-c1ce-4416-b500-524892bf4f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c9d8a4d-8eec-4783-9cf1-e3bda5ee60c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519e383f-8a9f-4aad-a9d4-39e07cef1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab33998-d6bf-41c3-bf63-f8cd67cab2b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aa8448b-925a-422f-a8bf-138986bb2ed4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba501323-d121-4849-b18a-4f339fba0736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "902ed406-b3e0-4155-b813-a9b754d1f429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcee9224-4baa-4e62-bac7-ca3a80257b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8afbeb02-072a-45e0-b94b-d5f366a5387b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112f50ae-d2f6-41e9-bcc5-40bf449539a4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23958eca-fac4-47b7-b5a0-04d9c2bbf708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c26f0514-63d8-4890-8b76-b81dfe5dca23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c8c85dc-7455-4425-b387-dd0aecbedf0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b3cd0b7-7e44-47f9-9d90-b6a2e6b2295e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ecef45b-b6f9-4c29-8e5d-df856415b237",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "722e013a-e1db-4822-99af-3356b60691e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e73a7a4e-5ca8-44c8-8ae4-fc0db3fcdf1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb6f4ba-2a20-4471-b14a-ec29b25ea5c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddd7118d-152e-47b0-bc86-57ef03b22d3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99080f88-004f-491b-948d-cdda6dc433ab",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54c24712-e957-4c2d-b25b-ad327a76db21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559844ec-7948-4b76-bbdd-86b869a3b14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193647ef-41e7-4fb2-a11a-93a75f29bfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3083ccdf-d56a-46be-852b-3cceabd55fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb0f1ff-510f-4ece-8353-9929876525bf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6b2f61-c661-4c33-bf57-2420c11142ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fb4e3a-94f7-4f31-83ed-7046020585ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d2e0fa-88aa-43c5-a568-b55196648f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "63feb3cf-a671-4778-9872-f00460e1c1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d663c66-e5a3-4777-9375-f6fcb39118ee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97df5d79-f63e-450e-b2bb-5818d8d67d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "264416d7-9418-4d50-a4ce-233668cab83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d867831-ac2d-4fa6-a487-b1401ba60622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "95639347-6e73-477a-b898-ff20201e2643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59ae3c4-2b14-4565-bf09-d2273837138a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0d98a0-8752-462f-814e-da61ba4a079c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd6acc84-07a1-4325-9963-3ac5a45a7a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7928ba81-bf78-41db-908e-1e58b88faa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4db705d-be43-48bd-a315-f595d91ca309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248ef451-3c5a-4e2b-8abc-ec6a913f3bbc",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e83c5cc-2f46-4279-9cbc-faff2bb74179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb1f254-911d-4915-844e-6310db1f54f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed050ff3-0df2-4831-9998-29fc6c578f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9173de-72a9-4b24-94d2-4d64c0d31778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "877e8dc2-dfec-4734-9b59-fe26fd93a675",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf30a6d-4e0b-4f3a-935f-c19079510241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67ddf603-1543-4efe-b872-95e40ab72465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508e94ef-bdea-436a-a555-9311651b5097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "80526479-242d-4ed8-bd58-c2bee41c3b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e92dffa-5aa4-4aa4-bd4f-6e2f593c198a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36618cdc-d652-48f6-8285-0b4b04083c6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b61f10-c7de-43c3-a89f-cd20c49e46de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cda32e-4a89-46a8-b388-8e7e92ca2aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd2459f3-17d0-4407-b00f-0324c1e32ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176eff96-7eb2-4c55-9bbe-1d2f277f22df",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb19d7a1-5743-415e-95ca-9988712d870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ed5131b-ef4c-4237-aff2-524d8c45a036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778bfa5a-dfbd-4565-ae76-3aadf46298a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "757a7ac0-2dfe-4b7b-a799-65db4dfcd3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15a4663-1236-41ec-834b-3a3c28650965",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6e041-81a3-4f6c-8453-e7fecfb122fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e198e4e0-74fc-499d-b797-970260392d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc665ec5-3a79-44b8-9b05-4b54ea52cac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95dc83ba-124b-4122-884e-3d2e61eeb2d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d001880-cb77-4936-8165-9d29be9d9f7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2041f25a-7629-44b6-b792-1ac1b8258040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704588bf-8627-4ea7-8363-c462a4066d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4741bc-9b7f-45ea-b771-30364a86317b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "98449626-45b1-4dbf-b3e8-448c306c2b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50641c83-21a0-4207-86ff-7232887f859d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0996105a-ebad-4f0e-804c-3e5209d6cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98de5847-3b26-4e57-b106-da539d39fec2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ff8076-e1d7-47fe-8a74-ef9b037d1d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39164a2-d370-4bd7-b4a5-e8a9d832f2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdb36c4-d125-431d-9d40-69a9494aa5b1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8bdc2b-9c9d-4536-8a41-0c9c2f972dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dfba1ca-b323-4adc-adc5-aba47cbcdafb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d53455de-8569-4c24-973c-f5eac0cd5d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1048856c-af90-4a71-8cbc-34388673288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5d2aa2-ad5e-4376-b2fe-25c74fc65e55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f01098f-fb06-459d-a70b-354414703310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d603a13-e3ed-43b5-8cef-cc3e0fccd0fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccceaa6e-d2c5-44f9-91b2-1d297c2270a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d7255fe-5a6b-44c2-9529-205dea7b5e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dbb0cfa-5f8c-4ef3-9081-e202b1a19ddd",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a56d274-829b-4697-8298-edc895e2783e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c46fea73-6f26-4bce-a38d-85168f431140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b4b7f5-4792-4197-9db7-0b486fd92c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "2edb6299-7702-4405-88b9-0044fc0a6b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f6501b-f932-4987-9e2c-8912f629c61a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b453fd9-925e-4aca-ae7c-964531d546ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47221014-51db-45e0-9073-a6bc6a00cc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "345c9bb8-5f63-46f0-a429-7c9ef7536088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "428b8be2-87e7-45f3-94a4-413f0799dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9dc826a-1643-470a-8baa-45a68164a1a1",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f02c57a1-872e-4573-9713-fd28c349ee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7d3409-6366-4e8a-8652-7c70c19b1b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4a703e-42fe-4618-b37a-26e4c5729582",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e33cd3e2-b2ec-4058-a6d9-4d63f949a42d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c312ceb-f4be-4bea-9281-705786c9073c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadae25c-6fb5-468e-b181-4fe815a91029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952cbdcf-b2f5-4ffc-88c6-7e6e09d7cc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82885f9b-6579-448a-8810-651cfd8d7c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "46a3885a-8edf-40d1-8997-28ab8c4eec1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b6b4e3-df44-4675-b1bd-48edf0859e2d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3acd7e78-b7e2-4369-ade8-4e82b401e957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba678db-aaf1-429c-a00a-fb20a89b4990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a58305-da3e-403b-96a9-a776773c1d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d71d72a4-af72-4578-9c80-8540543fda72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596d86ba-fb85-466b-af92-284387329598",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335b4809-e1a3-43d3-9226-199149cfc7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ad6d1e-a288-467f-ba18-2ca81b7eb611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcc94db8-6ffb-4abd-bcfa-da3b1c4a43c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "299b72f6-4910-4274-9adb-09018ab91c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbfbbbed-911b-4d6b-b159-d1240ae476f0",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4823a160-028c-48b2-9227-2124f7d58267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0c5968-aa7a-4209-bbe4-2e23c20fab72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4c4ac6-9698-461b-a57c-c138473db2ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b66c79ba-ab25-491f-b093-d1de29dbeb1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfcb313-4fbb-413a-9f1e-b47918fdfd05",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9803c3-ce69-40c8-bea9-8fdd668e0938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a829866f-6455-4f2c-a6c9-6626a8805a0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331c92c4-6eb4-4458-bb1c-60fc0fef7f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7fdfdf2-a00f-4ac4-9d4a-5654ae7d5f36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c373cdf-d73a-4faa-bf74-9fd5a47a28af",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6e67b2-5c03-4cab-9649-2f85f3e0828b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cec4044-479d-43ab-80da-333ff35a8185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa631087-6070-43ae-90d3-a0c8feb4325c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdac892e-534f-4177-a7a2-f491767a96b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f40b053-c994-45b8-8983-5b5552dc6735",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9e62ea-e046-48a9-b7d7-d8ed0fc45ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5172fae8-aa15-4560-8d78-f587adec0f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f57d6e4a-bf8e-472f-b2e6-6a3df4a586d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9951427-e0f4-4a28-a20c-2abe34f627a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555c0241-4e0f-46e7-a0e3-96ff9ac3d875",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0642452b-4718-4e96-986d-ab6a0fa45c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be91601-e533-447a-b6ef-7a97f3c25290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c1dd44-e099-4980-a973-d380adc7841d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a35b4d-8dd5-40a0-b983-e87d14a06af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a607d4-198a-42d7-8f45-19b4bdc48895",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f05ca4b-eb65-456f-8360-132bd2d20ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3068f83d-2045-4d60-8b03-6035697b8384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcfc7cda-88a2-4295-8f09-f55e87caad7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f084e4a0-f6c7-4bc2-951b-f38499876544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db7c213c-a4fe-47c8-af28-0855e618493c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dabc42f-c1c8-4325-81c6-bd248cb36b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2351de6-0f48-4d59-a817-2483b119e5e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2feb3494-4e27-4bb0-b05b-88020837726d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a47fb7e-9373-40dd-9d09-cc12d6419d77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e27ce-8968-4606-be05-e546ffa56155",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6eabbc-211a-4363-bc1b-ef0e78b617a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76b14b9e-df94-46ab-84f4-dc7ddff36439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8485bee0-a134-4144-b785-2fbdea7d56c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "023fe22a-31d0-47d5-ad47-84883b823837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2291fcd-e670-41a3-b871-f46e2d872ae6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3050fa9-3242-4c1d-8085-4ff07f00dc30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1daf9b16-f53c-412b-bf4a-e830416514b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2d3586-b45f-4d88-b315-c0ec3b3d343b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a90b4f1-b655-4d0d-9a24-700b6aa85683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb0cc4-d769-46b0-ab11-8a45188263c4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6644237-ab73-41ad-bf03-b10140442d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01754d5-2a81-4229-9695-130764c3b321"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2842e835-5446-43bd-9203-e286907a72e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74e80189-be5b-4a87-b7d1-fdab520a88cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b5dfee-8a20-42cc-8614-669ca80ec865",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648bbe8f-2ced-453c-b8e0-4393070bcfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e06f592c-f304-4db3-99b2-5ddddb5c7086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc976d4-e31b-4063-b0a2-c3294e0b448e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3db55703-a1cd-4b39-a5dc-46d50e852971"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbb3194-020e-48d8-b06c-012050db1b99",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9070cd6-e631-493d-8f2d-2c57a6d41c8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6b507f6-3c2f-480d-ad20-18a11ce61f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bc0e0b-7091-4c30-b21b-a99689c51997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1d06be1c-bdb0-4ba1-b63a-67cab5c27346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88fdaa7e-788c-4fb7-82d3-6e26f3aba02f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edb2bc3-d373-4a1e-adda-a58377037a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a29f112-28f0-430e-b0b4-68e3a47064ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3d1161-7e12-4691-9e57-fe5dc86a6fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af94319b-3cac-4fb2-8013-548d1e79a087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cc8fb8-a51e-4ec0-a4e4-ee09e84d3766",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e52b9c-76f0-42e1-a41c-77321b352608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f558d759-3624-410d-a901-6cb83b4eb772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9180d2a2-26cd-4a9a-8932-cd390277d37d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa80e82-31ae-46c0-92f9-700461ed979a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa554450-12a7-4665-928d-96009a3f9333",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011f96e4-c666-4552-bb44-7333c4f6490f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e407aeb5-0c4d-4a5e-8f4d-6d8523f6b370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b0cab0f-448e-4de6-a0b0-07eef93adc66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "242a928f-3e04-4954-8eaf-e420e44e4c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f26dbf58-ce5c-4d36-bff2-8a9383b59136",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a3ef8c-9c82-46ea-a6bb-01e495755975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cd20d5f-e845-4c99-bc05-faa40a2abf26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae1ad4f-d1b9-430d-b893-b7c9fb7b2564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab84754-b0a4-4c2f-aca4-1d939b551bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1783b776-0b3c-4c8d-b11f-d97077052fc4",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb7a369-172e-46ad-bd5f-d0d4f115492d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2639dd57-7d97-4c61-82ba-75ca733d95af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703f59ae-f6d4-4725-98b3-2730e80af1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "adadccb7-2201-4f6c-a758-2c8afcfed766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3011601-16bc-4756-97f2-432d8ec5f309",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380a7a0e-daaa-479f-8c03-c9355ae01e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565fddef-7543-4d17-ab85-6d710c699b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef1e83a-c6c4-4e0d-b4f5-94321b3eb4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db683651-c346-4435-9579-324f1e21cfab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1648bbfc-8d20-40f8-90cd-6adb1ff73489",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4c28c5-3c95-4801-882c-bf472ab8e99e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb4ee89-d5a9-49f3-9da0-be90b44740ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81d4847e-d35d-4b74-8080-1afcd37870cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0275d32c-dcfe-4962-868a-30a17a2b2227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a787b39-e97c-4495-b1a6-c21f9e555752",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e4e3a2-0021-4a66-9be0-01c5ead98a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2429a8c-d870-4402-be6a-eb01a3a1e165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d304bb-c272-40fc-b74f-ca3cf3616123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9c28b0-bb91-49b6-a4d9-e91e084923cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cc39b5-32f8-4e3b-8b1c-ff9bed7353e5",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350ae5fd-be74-4766-8c05-a2836ddc3f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6226e897-2fd6-4dc3-8c54-8b9cdfaae0ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d681f8-6eb1-4dfb-859f-93488f1321a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaeedb43-62ad-4479-adc5-1e8298862bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a198e87d-4fe3-475d-bfe8-1b1f2c130890",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496f082e-8f5c-44c2-aa53-b4ee7a124d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc474a7-faa3-48a7-be3f-6e4b6dc276bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fe79d4-9f3d-4362-9965-3e91a3031545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd5fac0-e935-4a55-9fc8-db5f34d22e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a61a8e2-35e2-4a6e-af09-4ea8a74d5954",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5dfa0e-a1e9-4978-96a1-16ddac523ef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77aa5e1c-a0a3-41e3-84ee-60c2dbd30677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c97f7010-134d-4a66-908d-b2cc82d7f6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7daeb6-2c58-46a0-a6f0-968015933b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f198aca-c462-4bf6-accd-1bd7f8ccacf7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c887814c-383a-466c-b5ad-202d0874ea5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "688e13e2-95b8-4528-99eb-b03ace772cd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b7a1b6-92ca-4788-bb06-2d513aaa6a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6743c5ac-7903-44a4-ba43-71a3b8b59c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194330b3-2e16-4cb9-b1bd-93cf77a3cc29",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9d6054-e87f-4f74-a87f-ae0496686321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d1da2b36-fcc4-4250-a97b-b9cc0123e653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25198a2c-fa5c-4273-a43f-f32904f2a726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f6ff4c-ed84-42b2-98e9-e83f25619c87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b5f984e0-08c3-4e2f-a184-b180eb08dd88",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "080cbdab-30fd-4e4f-bcb0-93200a6643ff",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7908640-4b17-4f6e-8488-5716d539767a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "740860d0-e3d8-4742-b658-86afdee1ba3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ece55d-ded8-4d84-9945-e4316b908b77",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35608c32-61a0-484f-8e4c-da858cf6d27e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb99aafe-e285-491a-9a34-39ebc09ef83b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1b790ad-f102-4586-8bef-e16a9eeb1283"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19db625e-c0ff-4259-af56-18d03e1ef52a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e63a0c7f-08dd-4efa-82a4-ba865d28e285"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cf723b8a-a085-47d1-ac2f-030917bff5ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f51ae5ee-5754-49ef-8a91-4f5fddf1bb8a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c1ef0243-4732-4bb9-bede-aab12df0ce1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "89c5be2c-82b6-43cd-917c-a01ce6300d4e"
                }
              }
            ]
          },
          {
            "id": "fe6febbc-7d9b-4b23-898a-978fdb4ebc97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9a53bc2d-0ef0-4655-bf53-ddd913cc6610",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "85e5f75d-5e4f-40e2-b557-a5b40d3e7992",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee890259-f5f3-4282-9756-e1564c7b383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "50971120-0c36-4f59-a5de-e7550cea85c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0950260c-a8f9-417a-9a05-9f0483fae9b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392f9a4e-1246-4d0c-a650-f90c4b654f5b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bc2b5cb6-51d8-428c-b8e0-dcf40ad31813",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44543a8f-b84a-435d-8c0f-0f5751026cb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9b07bbf-2470-44b6-af41-79f5c3ab2b11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c454c4bf-2487-4272-a6c9-dfea553aa0ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dfc1b38-0c94-4b6b-b330-4578df3cef83"
                    }
                  }
                ]
              },
              {
                "id": "0a05feb2-58a7-452c-aeb2-efe2dca45c3f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b72f08c2-e848-477f-8e8d-d2b144e91080",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "407cc627-89ca-4349-8056-01a3ae050351"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c9d109-4170-4670-9f56-3e8f12c6a227",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4006a39f-b26f-4bd8-85b1-44c25f9c4f9d"
                    }
                  }
                ]
              },
              {
                "id": "73d9c3e5-560b-45bb-a6aa-7f759e21181c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9951bb2-af01-4b3e-8c1a-f4bcd20775f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fa473de9-f436-463c-9473-799675743288"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "207b139e-2bee-40ec-bc6c-f8042750505d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f23cfe9c-8791-44ee-ab22-3fa4aa7e8bfc"
                    }
                  }
                ]
              },
              {
                "id": "ea21b8a8-eef2-4d37-a166-e062bb7e3881",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb390911-5683-4584-b601-3164c1f92043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e7275c52-533a-4abc-8ab2-e723ab02deec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a561e1ec-deab-48dd-8a76-d1939b95f653",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "6250fa72-d560-4e9c-80bd-263c30844571"
                    }
                  }
                ]
              },
              {
                "id": "a271eb83-9c4f-42f6-9f08-69e30a7b20be",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db900f85-071f-467d-a54a-a25c2a84a2c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce17af43-3c03-49de-b9aa-e8745051ed2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "96214018-64db-4f25-ba35-bfe80064cc14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "3d75b39a-c8f8-4484-8f3f-5b2dd07de366"
                    }
                  }
                ]
              },
              {
                "id": "6184fe1f-582e-4c09-9610-b404468096ec",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f13bada-e646-483b-9cb3-22a61d92d0b2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4986324-5cd9-4dcd-a31a-6885c9cb6f38"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e0048859-e97b-437b-a202-318fb7553a7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c22f85ea-78d3-47c4-ae46-d83d353dae82"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80054093-3111-4a93-a944-de9e1ce1775b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7127eed2-8977-48f4-bf28-dc498a9af08a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1a4b758c-bc12-4690-97f7-3cd57185feb0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "580621bb-7a89-4c62-b7db-b52338e8e697"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9bb3b871-d4de-478b-b6a4-a0886a10749c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e33d58c6-9120-4151-8da3-3bb7879bfd35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a9de68d7-86fd-4fac-9ecf-0675322e84fc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cbcde6a-3273-4b0d-b5d5-a7e414874a19"
            }
          }
        ]
      },
      {
        "id": "ed3c6b3e-fcc3-4d00-990e-46f5ac0f662d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1ab7ebec-ce90-4b8b-a646-dd9f605d1b5d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65896a15-6750-41b6-b1f2-48b9f98cc57b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9a5394a6-de30-4136-b29f-a9897e012c24",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d3a233-1688-484e-8bbc-fd4116ea7402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282afca9-e864-44ff-9570-772db57c643a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab7c002-1219-4fa8-ac71-3a2ffb4bf543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "938218ab-0e25-46dc-9e40-11dae6e396cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06aacb7f-0e96-4411-b49b-3c70475b5854",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc0b99e-fd20-40c7-9d33-1fd897bced68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03a88cc6-dd57-4ca7-a925-1e8782dff71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509eb56f-c8ef-4434-8b6d-9804163b0891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b8bbc81-1cda-40fd-bc6a-18cca946ef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b65c8b-bcd2-4afa-9a82-22ad203fbe4f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6766c7-203d-4aff-9b57-6632f55e334b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bfa500-af13-4b67-9c45-44d931c9fd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf58e3c7-976a-4899-9a7d-774a85bfae75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa334e87-4d3f-4b0b-99b3-45dd75952052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed9bdac-6299-4c20-b5cd-e544c5131c59",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3044716f-4620-4d5d-8211-6b5d85087ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9651a60a-bd7c-4d75-bab2-fe952a4143b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c643d22-dcc3-4a9b-b56b-19e137d02c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "047603c5-45b1-460a-a870-fa7eec8664e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a3c7242-b247-4679-a1ae-b3cf8de7dd07",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e7c324-1a29-461e-82bf-15d487c3c25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8595856f-10ef-42ac-9e20-d4fa61cef7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e38a54-4aa1-4ae0-8d9a-9677fec84060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c18fc6-278e-467c-8fcd-c022ad40f689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e780a7a4-7654-4ee4-8fbb-b45dbe45a83c",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d44f2d-2ff3-4b08-98f4-30c9ed00a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecff8f24-dbf9-4112-93ad-e9b879177aac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a723170-e56c-4701-aadd-3eafbe3d218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5297e53-8b9a-4b6f-b103-a6d91ec89f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7034458e-0c8c-43ab-9276-6e19246ae894",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539d7a2d-31f3-4234-8591-367754c1b759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3691ead1-c5e7-4b87-b8b7-20d93290ecb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82421cd1-c0e4-4b5b-92e7-540ec6afff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c637bfb6-0d39-419f-a14c-a47f6a406998"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6411ee-2905-44de-9356-f035609a20f2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681ef93a-a128-45ea-96f4-03b9bc39b02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afdcbbae-171e-432c-b170-263d3722882c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "202e0816-4efd-40c3-b3fd-5dd7cbcd94f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa0fc45f-4fc7-4a0f-a623-65be1a4697d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ce31d2-4d1f-45f7-84ae-a9fafce4d2b7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202f2bd5-5d62-4ce8-8af9-070c316fb1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334030a2-fe9e-4222-afc4-fbd30eb3e51f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e31442-d69a-4d06-8755-7b7dd8654a8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7e01850-6db3-43e8-b266-4da4b717997a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a16e62a-3f9a-4fe9-8c2e-4e271747b2d6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e825f1-d199-4b92-b98f-427d0002e89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da2e66e-5739-41f5-a6b3-c6e8ad629ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f962a6-d31a-4125-aa6e-13aaaa7b6d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a99b916a-fb20-4d4e-81b2-2a18e48fc991"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b171e07-ca90-487c-85d1-37967c763602",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294d7efb-3402-43bf-a760-9c6841173c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08ce5d1-c70e-4973-8dbd-303d18feb718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a55f6e5a-df54-4c56-bd1b-74231d981b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "9e11b72c-ee69-498c-8385-94445ac4557f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c370c7ec-23b5-427a-b18c-fa1adba4ab4d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2704a0ec-0f88-429e-909c-2a344245459a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f76298b-5ff8-48de-b3c0-09aa3fe35c46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec281e0-a4d5-4a44-940e-54cf36bc369c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6912559-a698-414f-80c6-45a6732fb696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585d9c78-9941-4b76-9e17-499a2415b980",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16ad8147-2112-411e-b44a-f7be73db75a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c727eb99-6379-4a72-8c0a-c972276a8c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40e7db8-7be3-4133-8ff9-52a2b8c5af1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b959ce5-cfd2-41c3-9bdc-325d4f5866d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfccdd0-75f2-419e-968f-9a7fddcdf217",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f4b493-7d31-481d-9cb5-948df0201c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861a0793-fb4d-447f-b752-f17daf4726c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd231032-1b27-447e-be02-887b028647ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8734b33-b5d3-446f-b1e8-99df5e532f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcbfc56-a4d0-4524-b783-28c0c4499673",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ca33b9-1787-49a0-b5bf-5f0df99c74d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacc9b3b-77cd-4541-812c-0c966ca5e9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8fb916-7304-4266-8216-67dbe0a833ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8821ba82-5cdf-4248-ae33-b87042867d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29060a00-eca8-4f76-9207-68117bb2e250",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89962850-ad9f-49dc-9e3b-caf9ad811d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ce895a-b9c7-4a32-9575-9e8feb69a000"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98612aa5-a0cf-4029-88cd-595acd5702c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2046168-f1a0-4399-8528-53f9422f7997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a5a11c-e464-4b7d-9b27-bcf3a5f0a3a3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18c9b4d-220c-4d21-a3f0-a82ca526a933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16974cc7-a60e-4e85-beb2-e9aa24f4b471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9c3cd6-09ad-4a5d-a8ca-010a0b1c2145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "46f2d20e-efbb-4fe3-bd22-175b8b720010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2f87ee-4df7-42fa-888b-4d0ce1638108",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd549db-15d2-42fb-97a7-7434db48b64b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dc482d7-c22e-4099-b139-a9abe84f8249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ec0c1fe-c9bc-4b1e-9e42-33564a3f118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ec3d8f-b5d2-4061-b00b-04600943b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4391889-c91a-4160-af05-4a945d051102",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a17eef-ea3a-461f-bb43-5b9a06551e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d85b1b-08fa-4aea-b803-cba1716618f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8fb90f-5bd3-4e81-83bd-f5a0743dede3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f1808f-d295-4546-b799-87f56fe33f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7971fa62-5257-4bb4-b88b-667099819e98",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1895a522-d163-488f-a518-361bb26076ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed41762-ec5d-4c0c-b28c-77f597653458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e183892-c831-473d-a54d-fa915de6ab12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe14f0a-a018-4706-bff2-563f85cbf292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcd8caa-6159-47cd-821b-bf1c10539355",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8144f65b-0500-4605-b6da-25bce0db9f7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6741a054-2369-4d38-b3db-a74eebd4978c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059c5c05-a3be-4a34-b76f-5b73b04e318c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6cdc9d4-0d31-41b5-b44b-fad4f0255476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30e14aab-defd-47ba-b9d6-885bd4e63723",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92234c5-66f0-403c-a50f-87a390004637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6d45f3-aa77-42ef-8e06-66098eb4d944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6c7902-26f3-4a96-81a3-def0c545e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1a02cf-38a7-4120-9a6f-5b015897544e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0674e814-1966-4242-be9a-46ac4efd5803",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9030432e-44bc-45d5-b800-838e92e0bb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26647689-c19c-4958-86d3-6831e0f42b6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419cd505-11f4-41e5-af1e-52e82363e760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "245110ed-9c14-44b6-bd83-0022cd56ca7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2adfdd-8a14-41a0-ac58-bdb0f9317168",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf7de33-8b97-41c7-bdec-5f8c2caec958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec813934-a474-429b-b790-d6db5770f372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0e4a953-b827-4883-a2fb-2a8ba2475c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9886f3e0-1cba-4bf8-ac13-91264fa09037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95af3475-aa92-4e37-a047-4296d540ad44",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5a8758-59cf-4426-a060-3aefc9f7cde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27888d32-b924-4b1a-b2ab-cadc851a2639"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f7dfa4-dd92-4b97-bdda-f0bfe765c3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfcec575-12eb-4760-b228-2c4bef6bfe80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a97097d-6cb6-480f-8756-845812c0967c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "905abe8b-a7e1-44de-9c62-e817063ce595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c3f52ca-646d-4cc9-ae8a-ae24f9566a79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cf11492-8e27-4c29-a61f-a69725de2b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e5388a6-81ed-46c5-bd27-2a40c6c0ed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a293e0d2-b246-4660-be4d-c9a108c884ed",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4a0870-06a4-4fab-81b3-ee7300735ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b2c0cf-350e-4add-9938-9a1b4aabb66e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d93c3ac-f509-43e0-a638-7bfb621ba147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9ffc7d-85f3-44e5-8ace-11b10b296aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c694f5b-7f72-4907-98ac-1c5c5d470fac",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "917d7c87-b75a-462a-aac6-44197a073c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862d8842-f36f-4f5d-9b74-ed2f8e5a9084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08a6dcc-eca4-4b43-b076-9927b721c23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f79acf0-7a98-4539-8799-0296191ee2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b131c1e0-d943-4ede-aee1-cd108a0af6b1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2049537-127b-44d4-8d99-d332af3a6891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ac48be-2dfd-45dc-9ea1-287608d1251c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2b2ea2-db3f-4f4f-aef2-8e6cd5f3d354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8459291e-3ace-43fa-8dcd-4ce3a6ae1bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4019d836-e662-460c-8b10-8ef28407842c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fadd445-931c-4c28-9635-53fe07a7aec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0216760-35e4-42c1-86e3-07419b9ef931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70abae0-10b8-4ca1-a071-29d7e2569d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c800ba7-1361-44dd-999d-c066e7a7262d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797ea80d-1a27-4181-8252-9267068bede0",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e9fea7-2713-4084-9a8e-6330f92f1c93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ae4732-fc9c-4307-ad9f-c3d2f7e689c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5e0b04-0e85-44b2-b18a-48868f5d1aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e027d5a6-151f-4197-b8b1-a944261139d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fedf4cd1-8e77-46e0-b2d5-0586648db319",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1da2b3-ba62-4862-a338-cabb214eaff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fdc5ea-c049-4c19-abcb-43d5d7fb101c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1750974-ee6f-4daa-a23c-dccc8ecb054d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd287c0-b8f2-42f3-8b59-06fb92ed064f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed80a579-6934-4aff-825f-fbc9fa3c1a5a",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a36fc61-dd6f-4a70-9199-cab73aa08e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e6bc75-e0ae-445c-b744-2bc1c3fae206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c89af1-5223-4f6e-973b-b9d908a1bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f3d331-d69c-45d8-8e1b-d7db490fda12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aab6b65-d0d2-4568-94c0-166f64191251",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e4513e-ff4c-439a-abe7-f6020261ce63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6020e6d-025e-4bd0-aece-489464deeed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b31615-0a43-4a61-962a-d6c182a0c58d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "15195d03-2dad-4d5c-8065-fbf89a191a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c53d3ed-135d-4ec9-a735-ac5ef738f691",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3f10f68-9cea-46cb-8d5e-c53de1b61cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e4fe791-ff7c-43ae-97e5-d116da9f318e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41ce9e9-b762-4791-8d2a-7df682bb0f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb2f502-0a2c-464f-adf7-ab89c1f7a41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74605ed4-cdb5-4a02-95fa-45db2efff58c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afa264b-63ee-48aa-ba30-1951e04319aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe30580-a507-488c-bbfb-8fd1c699d3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a518141d-ce1b-4d37-8a43-ce6553741a4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eff79148-92c0-4b41-878a-d4ca8cf26f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b238c9aa-aef3-4f55-a3ba-f4db0010e09e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a57863-1083-49be-bd5c-f5937a75348a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42f30802-198b-436a-8729-13b15dd673d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d921fb-195a-4657-9a34-e74f17cbf452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cede080-d525-451a-9a97-4178367aaafb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a808502-1881-4298-819f-dde468ff0607",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9b90dff1-5c4f-4046-bea7-c538d4fe9214",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e973e0a-1c19-48f5-ada4-c1a8b1e901b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dacae033-2df2-477f-be30-10f82ace31f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a659b6-591d-4884-b6d7-6b76d1296c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "88a90de3-1671-4490-880b-88aa3a9d53f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "003f0789-90e2-4ce0-833d-dfe289a7c789",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ace6afdd-c15a-4d67-9a62-3b7fbb0c3c09"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5abf902-9355-4d1e-85b3-39570f6c75c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c047f883-704b-4647-afb9-7a2427445761"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fbddae9-8ac0-41e6-8e2c-404e687b5cf3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f837b195-ca04-4220-b23e-75c44235805c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60a34d03-4454-4a21-b812-be4a86c86a0e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b93421a-0293-40e7-aa85-5d4da45c7047"
            }
          }
        ]
      },
      {
        "id": "9fe9971c-3572-43f6-95d4-51bbde1b1954",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "68cfb7a4-7510-4afa-96c9-cbb43cc65a19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "781488f6-0580-428b-889c-d42860ccd12e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4d4b0d46-a4fd-4832-96c3-83e87e37a525",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fdae61-d527-4788-8bc0-3b985dcfbe98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539ee46e-ab2d-4ac7-8cc6-373f4547b8d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67107304-daea-49ed-941c-d0d25f341dfa",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4b8ea4d-1adf-4f43-b178-b695ee968853",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8319ea28-93e2-47b9-aa98-678066e6775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efab54ca-d0f9-4973-87fd-bed96c15f9c6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2ec8eb-9989-48ed-b694-303578c9fc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6824b7a0-8ddb-40fc-a9c3-f0747076c66d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6b8d4d-46da-4481-a49a-46eaf1c0ff1b",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb7d08d-97e6-4064-a605-0ddafabc1f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d65f0a39-b27d-4ae1-bb9d-835a2a64d418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116702cc-8a70-48d9-b655-6beccdcedea7",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df6f172-5f38-40ee-bca7-fdb38670f486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84068cb2-fad1-44c3-9d97-4a7035ee931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b33e9c-5aaa-49e0-b981-6efc67146c15",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a76a57be-7ddf-40d7-99b3-8647b0f6f771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cda8b353-ec8a-4f86-844b-b7c0bace2009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abd1c6ba-b46e-437f-94fd-02ea1b592874",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a921e918-de3a-470d-a93c-f1dab8b4af24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6147c0a6-92bb-4909-8880-f25d9d7a993d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6ee43fa-db0a-41d3-b28e-48374ea7f14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d112e04-f241-4393-b6b7-146cf24871e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a33fd6-3ec4-4dd8-ab1e-54d7e8394344",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb6a1b3-610e-4df2-a45b-95f4c43979e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa94aa46-3ec8-4741-ac85-e8e9176b090f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fd79ca-89d1-4561-8703-47a141321514",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78070203-4c55-41e5-99d4-f6db90de01d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6462a174-b565-4212-873a-cf7772b57276",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d3e86f-bb45-4b30-8ba6-7bfb6af3576e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36fdc5e0-e547-4cc8-8586-d87f8db41048"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d66ecaa-68cf-4d4c-a04c-3c3faffaaa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "968d46a8-809a-410f-905e-944020510e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891b0f66-39d9-4429-8251-803f93de0142",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f8d362-268a-435a-8faa-cd6582cc66ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b21b2871-d6b1-4b9c-9aa8-c43e9c6143d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd78cc41-ee25-46ae-bd84-e5a8b49e78a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c1a345-6a9c-4554-85be-94b91a3ff950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1111538-ebf8-4ffc-a877-d7cff35d6cb7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53f6432-8ba9-4ed5-8175-ccf5d0eac340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef9cd16-5750-4078-8a1f-f227d8bec28a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd135ecb-b9ef-48dd-a85d-3491b30ffa75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f0ff85-7b73-445c-89f0-cbb78e9aa686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add55f61-5f5b-429a-a8e0-32165c843937",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3812702-8ddb-4d1d-b622-e94f42c9ec89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75aa38bd-ac98-495e-acc5-996ee1883bd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46678d9-e32d-475d-a1ea-cb5e3bf4cecd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7731f111-aae1-489e-9443-011135cf2af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7768da-0a5f-44b8-a33c-d3ae69cf1c63",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d199bac-f3bb-4a11-a6dd-cf2c1efcbecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3c217fc-f887-42f9-b782-2235f733698b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db110f2f-7855-46fa-9154-3841825520ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2ef90f-6177-42c5-9d8c-a6c3cc27b617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd05a06b-ab87-452e-a0e8-1cce442c812c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bef611b-bb82-4ef1-98dd-606d8bd5c3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fb47077-91df-4e69-ba6b-5bbbd062dc2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647277b7-0102-4483-836b-33361478a657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfec74b4-f4ed-4065-b72b-6fa11e197dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd8183c2-68bd-42f6-a017-e31bf2d63f03",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b10807-cdbf-4fe1-b3e6-604f5cc23c3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02aea040-3102-4078-89c6-996ac5e584df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4813627-5bc5-4830-8d89-9390b7cfa8e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f251b78-fcc7-459c-884f-5da5b050ada7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ddc9e9-eedf-4092-9600-0b429e6872f4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a672c4-8b2b-4865-a7b5-e0c0a33eb3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c647add-a9bb-42fa-b1ee-39e92580d381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae349462-eba6-4c63-b4b6-9d5aa78c466b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933d3b9f-ecad-4421-9246-a58b5bcbd3fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0f953b-2d27-47cd-930e-f080d82a8c5f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee87450-d1ea-4c8f-b5ac-6c71d6478327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b929c21-5810-437b-851a-96f5bc3b206d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6fed43-c14a-4e9f-9ced-9ea145a777f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "770af7b8-37e1-457c-9716-40a5dce53268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab24d9a5-9a54-4565-8ef7-aded016c5f09",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be525008-8d32-4a10-b1b7-94a8aa9f45fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb806f8-863e-419d-9881-baaab166d3b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aca118-f152-48f2-bb92-582f747defe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deb36206-8b2f-4927-a611-37c96c1b2836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa4ea58f-0242-4b56-a098-5f245b843724",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d395ab1e-e3ed-4184-b0f2-0e5511a12351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7174e71c-9041-486b-a4eb-d5e4db27c520"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437fc616-c14d-4e81-9529-966f78b9eae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc3e0c5-0ab0-4fd1-964f-fe00bd388534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24835ea9-2cec-42f6-8f01-01c5ef0fdaf1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5ab3fd-3cd4-463a-a1ff-c597a9150820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d4109c-eb82-4285-9bec-38fa4cc5e518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b958c76-ef61-4c8f-98f6-cfe9c006c1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607970a1-17be-4e53-a07d-f160130ad00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777b5f01-bb4c-41fb-9d42-954c9a078128",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef8c3d92-18c7-487f-9c65-5fdbefd27da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed020b81-b794-45f1-aa06-080d2cff2807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f88abf-f19f-4e36-9e11-2f118b28fd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b9d842-bc8a-43b6-9baf-624d51a8f9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351c2149-c631-427d-b9f7-6a0f4dbaa51d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e86e78b-9e72-4cb1-94ba-ad9fa448c954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e30b38-e8fc-4fe6-b43c-520111851f66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a234f3a1-8687-4492-a1d4-5a3c2a4c61f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b287e2-1db9-4439-88c0-b30a02e0b777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025bf7ab-2ac5-4b14-b58a-f731299140e7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eaada8a-4060-447a-b06e-c39c07d0eec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc8ba1d-4ac0-4a1a-9f07-de217a5dff4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c5eb47-ac88-480d-9372-d89182b8516e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6232c3-7f48-46a3-b3d1-02f251ab8de3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b960ef92-6b63-4f4f-8ae9-4b148b161b05",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f42bf9d-dc65-4691-9b19-0620de2c4223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a85bcc-8cfc-4cfc-a822-e1f31d686b77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7347f7d9-c268-4e67-8abb-e75cde9e3383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bae729-cda9-45ef-9134-fba2011fce53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f136e82-6ee5-4d34-94f8-ab33d8c9b075",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1905962-ad18-4eb0-8b62-1a73ecbcec48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14bc86c2-4ff5-4190-b8f7-d5485843224f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9c285d0-6fb7-483a-a6eb-7927e2be1e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cde5d2d-b7aa-4d04-b150-96007626a2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9250bbe2-8748-42f4-ba5d-21668b542091",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e714b6a-99eb-483e-9f8b-ad67742d2253",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54025751-ddbb-4995-9716-6178da1d7178"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef10198-10ea-420f-8c3c-ed5183d237d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43afd587-be3f-4271-be00-7718389fdb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cc984e-1c45-4918-ab0a-7d9c2a807fcf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c26aefd1-8b3a-4902-a9d3-0d408817cc16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "835ab332-e0a2-4d8f-a6da-64b8fe110531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bae127-990a-4dea-8dcb-35579a9d6177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8130feea-fa25-4f88-a6ba-9bc1a52ba406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fc488d-169d-44ad-a769-3864297cc948",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa497462-1adb-4379-9fe3-b5a6c777f383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d8a866-9c0a-4926-81c0-49a163d6c21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79005eda-7483-43f4-b0bd-defd0058509f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a58436c-19af-42f1-aed7-fd0f435c39f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04cad58-4ccc-4b48-9500-31d65a9bfca9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca54c8-05b9-42e6-bed6-c51f11e263a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82f65e5a-f9c0-42c0-bbb8-1fd73ad8dbca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ec1bf9-d709-4e61-81db-f60f1033e1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ba982c-955f-477f-8969-30799f71ae48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3c51c0-f3a1-4a9b-9999-53e4b7d0d0df",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dadcabf-ffde-4f90-b6c3-821e42904116",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c9dc5d-f57d-4af2-a725-d29f6bb948b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e92133-b20e-4726-a6ec-cc6e6d7a668a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a6bdcc-635b-47d1-aa30-670096fd1f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e757d0-7683-4e12-91e5-28d503f3e099",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d77e6cb-8112-4945-9f79-1011e1d73771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d0dd52-a297-41a5-a040-ae036e998b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0418cdf4-fab1-4087-873c-7224a53769c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e0e45c-6b13-47f4-99b3-b2ea1a1fd285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5712ee9-61ad-48b6-9b34-0a038ac08101",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b375c7-950d-46fa-acb3-9d1f90b85b0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acb98a7-1e28-4632-9de6-97b4119bd550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faea1b4b-1ac5-424e-ae2c-e4a3a634db68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57c1c875-2c9e-4d67-b4ed-78eb12998790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b1edf3-8e59-4314-a7eb-969b949e13cc",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a42100f-8fed-42e0-95ce-02e571ad2ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7df519a3-08a1-4112-9513-9c8a480cd64e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd6f5758-3175-41cb-b34d-fbee53ab7d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a1be920-d7ee-41e9-91e0-eaa3bcaac1cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89bef00-3648-4324-899b-f0b73f588e2b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1664d13b-1ff5-4985-a90f-328b6011e210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72598240-d813-4263-a537-4ad2da24027e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac7c569-a4a4-46c8-9dde-b78ab6c37e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a613bdd-e94b-4e35-a53f-441d7574c612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c531a4f-005a-4d72-8f6d-5cd39ea5c78a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9243e762-c682-4d82-b7f5-ec76f9cd4190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eaec869-15d0-4ced-a9d0-e51adfbb8b4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44e3159-fa01-4d74-baf0-c0a9d8281a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16b7e3c-3db3-4382-a10d-9aee5b884617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca8958b-0b12-4012-9f12-705ddc43be34",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e704c38-df2e-42ce-826e-649012831de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ae9b4-5fbe-464f-b85e-4239fea09628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a594a1f3-8666-46f4-98f1-191f46ea030a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56a107f8-7aa4-4f18-ab3c-d787df76609a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02fb3cd0-47b6-4da7-ba8a-fed1474a3bc9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dfc5b5d-65f7-47c8-b0fd-f7b90a43b88a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce19ffc-2c40-480b-8994-d8fb61930d10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fefda3cb-ec3a-4805-80a8-1695fe2f24f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3380221a-8b28-462b-a74c-9eb49492693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd9124a9-3db1-4137-bf96-f59523302c96",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cf69ce-c754-49ab-becc-171f924c50dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d1fc16-9dd6-446e-a18a-4e9f04a16a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d94cea6-8190-4026-acee-75fb65e51b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab662df-f4ba-4aa3-952d-a3cc70497d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc784175-7972-44be-9318-14cc88c8a2d3",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9110980-7b0b-42dd-bc22-550d715af465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ed095e-6f04-4aa6-86a9-f4a454f2b585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f579f1-461f-40ce-8788-c6b2e366e9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b83da4a6-7572-4260-9210-0320b4a69ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2acbc1-6a7b-42f2-9daf-618ce5fd6b08",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e9fd11-6712-460a-9d95-b32651705d90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6314a95d-feeb-462b-8f78-f15abf0d4985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98800618-3a0f-4e45-8091-df5ce9e31e4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e209ce6-0d2e-474c-9f9c-cef90c81420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe39401-d2c5-48a4-8457-2c59875b7970",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8072fb6e-c3ce-421d-85d4-6cab8057b75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c7a0fe1-a481-4a1c-8a67-cec269b78b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef53a4d7-be0f-4ef8-95de-56a931ffaeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c35afc7-a5f4-4d1d-be22-de953343de37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "288de69d-d258-4781-ac89-649df3372e15",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f2c0413-95fe-4fea-ba3d-e0227253ba4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c302d97-879f-4c72-8348-f0de56216d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a77ea38b-0b23-482a-82d0-eb3744b13e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecd216c-9ccc-4e1c-a088-a19be4be9e3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d99cc9-6dcb-4eb2-a0c6-1aa4a0b9225c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8608af24-9032-4c99-b26f-f6cf10251e32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49702d04-925e-4882-b7da-bfbba8dbeeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc2c97c-ce61-4ce0-b459-b09414e895b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a73caa-3b75-4902-99ed-5bef1652087c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c715fe-3088-4f43-ba89-bdf23733d737",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1ba698-45ca-4b0e-8731-fe3c58e62258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12487095-8353-48a3-8ad4-497b9ec7c110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f6ae8e7-3e96-4f47-bf65-ba0ed9e648ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9909a6a8-0c05-4b72-9cb3-18692a0049b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0938a59d-e3b9-4c8e-8fde-3afff4fd334e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bca37fd-f8d9-454b-a680-5418e3754a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb4924-2358-4734-a2e7-08bf7bd28c30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ac7c3-4bf2-426a-9231-0419e5da334b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6f0fa5-aa60-45bc-83c3-25eceeb09284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a4ea6c-5965-48b5-b2d1-c8698ab08d94",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dcf896-5f8f-48ea-b1a6-f5892e5b4005",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77d3281-03de-45c6-a7f6-bf352f50e0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c016b2-a2b0-4df3-b5b5-67afffdac611",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4ad6865-3279-4da5-8518-c9584c3aa466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ecc399-7df6-4a6e-b95b-a9a6f29d19d6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca3e1f99-e47f-4f2e-9d51-bc03cc84e2df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55070a55-85be-4ce1-80d4-f91b34cdb734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85dea261-19af-44ed-83c9-5e9c84435e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ca2277f-ddf9-4f6f-8bda-c41f387ac0cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8851690-53fa-49a2-91f7-ad4f4c6f8ded",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8981a3-0f0c-4317-a730-ae965d0c0a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "403b69ca-6345-4a19-8b45-40a3f33ec05a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a850c2-8476-4f40-b70c-c2023d59dbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df82579a-f8b6-4ac6-94f9-0fc550c055c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13df12c-4898-4718-b314-208117f33c29",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040a3e04-fc2d-4bd7-a2f5-8f3ae4cc4a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3ec5a17-6020-4d76-86cb-9cd5b313a86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31214354-1d15-4c5a-9992-632a97d840f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa429e5c-bbfc-4de0-9900-6236ec8e50a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44bca74b-a2b8-4bcf-b172-405f148d1a39",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2d481e-531e-487e-94c9-5cb1807e454e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61a78d7d-441d-4718-b1eb-3fb72f192aa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f95107d-9005-4b1d-8031-39e917b6d3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717e4ca0-295d-4143-a8a4-d93a014fde9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ef00b6-8a49-4781-ad0d-72686f163c3d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "393a7b09-3893-45b3-a00a-3beafdc8e26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185f25e9-3ef4-4890-81ae-30833f0adf53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d0edbf-3b8e-4a73-93e9-3eacb3965a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23e0a13f-37b1-40ab-9a9a-e199a5df9bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de02154d-4848-49ea-8f42-fa72cc236d5e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e8d3d9-9814-4c4a-a137-5d52035fbd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "356f7cda-1e33-4e94-b757-f77e2a403032"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb1bba9-f5fd-4d72-987c-f5c6bc55ea5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14768642-62ea-4854-b6f6-3a85c6f64c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f772e036-4ee4-417f-97c2-0695efa2cd52",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed14c5ce-7141-430b-80ed-0ba94eb762a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ac90df-7542-4008-a9f2-478dfe81d2a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59399ee-f732-4334-9bd7-cd1817f47fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e2a8a37-0398-4806-aa63-b60689a1c139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941f1c8b-d6fb-4709-bced-6e2cd40976dd",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643dba2c-78bc-447b-b582-99e06c248c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c56e2e5-47e6-4157-9849-fa8a1208fee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f7bf7c-a4ec-448d-b5d8-d2ecb4c76851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3fbca5a-4767-4d49-858c-5190f71ab189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4eb0881-d59d-49dd-984f-f71289a8b9fd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a39a542-e127-4d46-8ab4-d3c955890325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f08417d-db13-409d-9304-787f01962b1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab2758f-f303-4514-a37b-2148292491f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfd082e-3ebb-465a-ab20-235122a92556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bbdb47-74b6-4e23-89ad-99341fb433e3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db73a18-b6cb-43ed-9da6-13dfba48c289",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc18243a-1cd9-4ab9-a38e-eee749fed166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "749d8e94-4be0-4d0a-8812-29c2dd8fe794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6818a25-2706-4b3d-82d9-6d37d61c4ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f44fd61-d514-452b-ac7c-c8b4f47209ec",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb2ffd34-98d3-4ba5-8051-364b93a844b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc2da0a-0dc7-49e0-b876-81a52ec766de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "124824dd-82d5-49a8-b3d0-58a33645ae13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b7f89b6-5803-47cc-8a18-feb2811ee246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1edbd4-ec45-4936-aafc-ca1cba4997ab",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a874be20-c934-41da-8a06-785256fd6aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "195ebfd7-eef5-4613-a733-072a76b64fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95993e01-2e4f-46ee-ab8a-1c2335662b73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a850837f-aba8-434c-a7e8-1a86a1d9e76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09501891-9119-4b5d-9681-0707efccf1a4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9ffcd5-1868-4e7f-9ba2-09b23579d33d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f0f55a-771d-4600-afb9-0475d68d9890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a576d789-0dd7-455a-b1c9-c98c32f9d2d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92b26168-5dcf-476f-8913-4ed1a5ef455d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3fa763-db5e-431d-85e8-6f5274fed1e6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f091072-2bf4-4157-bace-0c7a43620039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0b98ac-49eb-46ff-b3c5-edff46f40397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c83e4fb-d4bf-4b20-b732-a9e794b9c0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f899f3-7eff-4027-b51a-ee7f3bc9ba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a15ff1b-cc36-4d12-8100-9ac1076d0d46",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8853b7f8-6943-4d71-96fb-b46370941b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f6e61c-76e1-4aec-8676-fe70bd0c8d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab291ac-4972-4be4-bdef-af034f500888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb65fbf7-eb7d-47fd-a0fc-bfafe15eec91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ad1c23d-e565-406c-98ff-3a346154cb8c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68467601-af49-447f-a733-f0a362f9bcc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "037d162d-a5f2-4366-a180-d7ef15b93f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a6fbf3-ac93-4524-9b92-b300f792e502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a26d5ab-441c-4369-bc76-ac91be6db937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5335f2f1-2a1d-4f57-960a-b955fe1c014b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60e725d-4613-4181-9a2d-c25156be98b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc034f8-cd42-48cf-8507-b8e4ec89e0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f0767f0-ca36-4f00-a686-f1cc3f766b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c9f4613-3bd5-4b56-bd8b-6f585e97baf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e74f1c-c343-46a2-9259-b15ad28d0536",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93040609-d689-4d18-87ec-2cbfe5ca28d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fca4fb4-7057-4bd4-9485-179f0f52434f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb92447e-95cb-47c4-8174-f5456bd6779f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa91510-3bc2-4f90-a3f6-72b832ed9b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ba4ced-392d-4c6f-86eb-f0e06c763b50",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e332002a-7367-4fa6-a50b-ba0c7632dd07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf307665-8035-49f5-aeb9-b8fde36fae39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff568634-d86f-4d79-9679-44e5be83cd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9a1044c-0cf0-437f-b87c-07f0a3918b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576f7321-3417-45b5-8e19-5eb421dcd669",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98901bf7-2040-4e58-ab7d-628f435dd11d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99e0f9de-3003-4cdd-9fec-70f1fa2023d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec610134-e4e0-4d04-a214-bd59ad676aee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a29936-3035-463b-9c3d-0579de2011be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b07fd62-ffd1-49d2-9550-43bebeeee8a3",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0728b1e0-f2d3-4fea-a34a-4d2fec2b1a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "904a365c-eee4-4ced-ab15-c87387dbc1c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7f5fc5-cce8-44aa-8d06-dd6a95b301c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53076a65-fd95-4fc9-9e0b-53bf8beaa598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025966c3-1683-43a6-adbc-43585f626f28",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8dfbe92-a522-44c4-8523-930dbfc3ed14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d930669-2277-4528-a5dc-86eae7925720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde61b57-d12e-4d49-9e9f-3bec245b2628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e17409-ff58-4734-be41-321471c3608e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "879ac5d2-62df-4fb6-affa-1f7062fa211a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f23fc7-350b-4260-9261-7f74b8fa2563",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "110fcce9-5791-46a0-b52b-df93a4705c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5071ab3d-f6fa-42e0-9d34-1c5103f7e5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30410d9a-6896-4403-9c06-ec80a2e64e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e6f6ae-08fd-4c48-838e-37484eff932b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586ff888-363d-46fe-812b-fdf0d86b13a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0b963fb-5ec1-4a9b-8465-9b92fcf0cf7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9822a61-23c9-4c52-bace-f7e99eed4842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd7c9508-53cf-4868-97ce-fb4a935c29f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "200d6d36-12c9-4d41-8ea4-882f3be31ec7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3341002e-91e3-40c5-ab95-2cdbd0a58f59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c1cbf7b-b50f-4a56-a158-0c78cd042d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719daa91-3dd2-492b-9f41-573923abd899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4054116-df3f-4b3a-b1a7-e8e2e3f8a58d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2c176d-70cf-4a55-b703-1bf5662783f3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8608ebcb-30c4-456f-8e85-2bb2867d21e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "087081c7-16c5-49a0-a79a-370ea30c8169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5db0aec7-82c9-416a-93b1-2523ca65da14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075a4228-0585-4550-aa26-6d17d4f62bf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f640a89-f300-4ccb-adb6-6d6b48d559c5",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1bc0d72-0ac4-41f1-bd44-d483f3cc21ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7717ad9c-e943-4710-8200-dde8d9b04f75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b208e9b8-2833-4ab5-aa80-f2ce8bf0b7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d5668a-a597-47d3-a38e-b49e030c82f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a7ad69-2dd7-4c20-9101-94635199d890",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc6e484-613b-4c92-866b-81cea351c291",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70827b24-89f8-404c-b07a-92ed8f3a201d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38b32be-9fb4-423c-8aed-07d258f8991f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b07ed8-a3d3-40b6-ba26-84177bc42263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f4a253-fff6-4309-93f0-536418c0e484",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5251b9a-38be-4903-8710-d8bff0a8c470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "116da17e-f0d6-483d-a3ea-3df001b87328"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18bc29da-9530-4627-968d-d017fdd3546e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb228a3-b8d2-4c46-89e6-9b9967a2180c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4ef087-696a-4962-8e3e-28774f8c08dc",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e84ad8-3f31-48e7-af7a-9b4f839083bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57ec1aa5-ae19-4450-9f54-d03332d84f77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f62e573-8d43-467e-9d6c-0c29476c811a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7e5ff3-5bed-46a8-b1f0-924b3c8b6acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ec7cc1-c959-43cb-9346-0be18a15a264",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de66c93f-cf7c-4f7b-81c2-ee8be0f7c617",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb0bb36-31b7-40b7-8cd7-614bb8109994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "570820de-7109-4474-8c20-8dbf5c857b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6060c73-5b13-4400-92ac-02fcf58a94bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f15892-2457-4693-9a6d-a821ec811375",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5417020-c950-4d84-81df-7f348b8ff433",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bda8d4b-c90d-4e2d-94f4-a051b50ea4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55258a3-dcd9-4a12-b266-06aad9da117e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af612e98-b69e-487a-8e86-aa87f05ca338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f027dfac-40ce-465b-ad45-4aa181e60818",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a165eb98-624e-4621-9ebc-7fa33479855a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaec0c3a-aadd-4e49-bf2d-c1df24e41fab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62aa219b-61f5-465c-97cf-5611d1622ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90675392-5a3f-4ebd-8d1e-1e6157c7393c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80dcff82-162b-472b-913b-8993688139ee",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2073cd-84c8-4be6-a7f8-9c8f1002de3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0e0ab6d-6eee-4c2d-814f-68cd298c1659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06bc0c1-199b-47c8-b789-8c5a91e0db43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2628c233-fb10-4859-a5d6-b6c7612afdbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7d3783-42da-4f19-a408-00da84ef09cf",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff2e86d-1e64-4072-af94-c093e91bc65e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72923381-8af7-4c2f-a2c9-015404f2e4f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0b68c6-3e84-4966-a755-e0dc93a83f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8792cd81-9234-4c75-816c-cbb9bf98d0bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03c7fefb-d579-439f-9aef-155500d9595f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62577ae7-c605-4334-ad2a-d39600856f13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "487b90da-1a7e-4111-84ed-ba4a379cde8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b460c20-3031-40cd-8a64-99a572385067",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c837a4d0-5abc-4e53-8d28-18407802d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90750ed-b79b-4489-8dbf-263523130801",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37df949-8273-490a-8d56-e67a36264b04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47a9f30a-babf-4473-91d6-3c2b37905480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9db828-a058-49c1-b40b-c9de7296e265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea5399a-dd96-4753-a23f-524461f72eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d113dc8-a982-4509-a20a-97140503e567",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4ec8c2-1fe3-4ce1-b02a-a013049e3d7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ae2c5f4-e388-4854-804d-d38de2944ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c239bfb-4f04-4e2e-81b5-3434e8b43d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6754a9ac-7779-4ae7-b252-84c92a1c1e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "706b8731-cfb5-432d-a0bd-93b17c0a02a0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35939058-b8c9-4295-8e3a-91d94567b7fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82eba57e-b70b-4ad7-8d9b-7f99f3fe2863"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "350d3bff-9273-4397-8bca-7312ed5e78d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a84458-3f7c-471b-9e8e-afd9da57f276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dad0808-7867-4eee-9ddb-cacfb256a5fc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45da0e04-680a-4c1c-b7e9-df68ad21cdbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "319161ba-3479-4d61-8ffe-4527b806a5ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52a79530-802c-444f-b939-8df146104cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64137aed-d7e2-4053-bec1-9bc65aca2357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80d877f4-114c-4107-8599-abbe8b3c92b0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d291f4be-ceb9-4737-b3e6-4e060ad794c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bff716b-9935-4c35-b31b-c532f964a244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b436e5af-8891-4f43-b6a8-44285e5f657c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91bb89f4-dfe9-4d45-8300-e7f445649ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673869a7-cf90-4c2b-846a-69566af04774",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902d2b86-aaa1-4954-965a-699af303cb9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf657252-00d2-4ae5-8dd7-d965f523410f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac3ac1a-7e4c-40cc-b56e-80660aa936ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e774bf-c70d-4524-ad33-12f54d9734a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a61cc9b-6c45-482b-b138-8d6f8f9ec81a",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad93b555-2572-43c1-bba6-fcf92ca19f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3391a281-bd17-44a7-9299-c7d04c221758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda3b2f2-c854-4db5-a2f7-18a7d280a5d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a99506-fe0d-4230-a05f-bb90dfaaf6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56942f7-b538-4d5a-8112-91a5211eb5ed",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779518d8-ade4-48b0-b3bc-72500e043697",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de3207b8-5169-4554-a1f5-fbfbfaa95c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d64417e-cf5e-4cc7-8474-cfa9d12b6e82",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3252c94a-5dd5-4f06-b1b1-9fed603b5a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "313b8294-013a-4af1-a430-6c4b73d8b448",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee19e6ba-97f2-4b4a-90e4-38ff553eccea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bea209b-5ec4-4883-8b7f-628921a9a53d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97cff2dc-1e17-4288-8bf8-dfe40b5351ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf89ed6-d3e3-4e35-8d2b-083c4694a826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bd5135-1375-430b-8c63-2677e44579f2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a48b83-ae8b-4f1a-a1ab-bd97f7c659ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ec2964c-5b84-4a9a-b51e-7eca50c386e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2471683b-bb27-4f9c-a5b5-909e0681ab73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f5c4fb-4eaa-43be-b809-6a1fb73d3e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eba1311-968b-4b36-a63b-fd5f62b58932",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f39938ce-122a-4f3c-b69c-0f8cd09db707",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c11395-2623-43a4-863e-54880b9f0a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd33214d-becd-475f-bac5-def711a1cb2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3b4ef0-7921-4ed8-bd10-ad6c1ad8071c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68448c8-d27c-4380-a38d-f2a3088f30b5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9314a4-60f6-49c5-9bd0-9689b27440f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349e95b2-1aee-425d-aec4-f32b9969b1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f4083ac-f6a3-4499-a8c8-02cf8a817ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50f7be63-2e44-4047-a7c8-6a94324d2b39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516dfcbf-5358-413e-81ef-f6c85b61d35c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51488f3e-ede6-4f1a-87d7-d7eae32dccc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0e43053-0639-41ef-a41d-4f81a7345843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e68354-ad87-4ca4-ba4a-607efc7f98f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba6f498-5584-4f27-9792-397671cf119f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3086c4-8ff3-4e8f-8dc3-613f7169ff73",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44f96e96-a20f-4731-8439-f344f3722382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b88b31a-dc24-446e-96f3-2fa83004c5c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b51d4a0a-6613-475f-9a12-3800e334ffdf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d60e4c6-9e9b-4485-bc24-4c7745d02157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128cb02f-e1ec-4452-9e27-85c1bce63b75",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3cb0e7-ac88-4bd3-a380-377b9c09a638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b3c5cd-32f3-4d00-9a15-a4878e291b1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b91c673-36b1-4eef-8e77-055712992692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceda4677-e5eb-4c3e-8855-1ea31b9953bc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3807173f-41e2-4327-84a0-f15f2c2d1853",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6efa1ff8-9918-4283-adeb-0adc56b82a90"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e3e77be9-2af6-4ee3-af7e-702e0874a67a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "21a2bb10-1c5c-4497-829b-058f4d014c02"
                    }
                  }
                ]
              },
              {
                "id": "c1c9a74e-af47-4310-8b95-7189371b2c75",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "307166ec-2f8e-4e06-b8cd-2a259b2ddace",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206ce922-8e7c-45c3-9fd1-528c195937fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f6ffc8a4-ac2d-460b-a8d4-314bf0e5982c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c601650b-3665-4721-a02a-ba0c3f73e80b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92a57484-ee72-4e73-8b56-3241c6e68cd5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9446fdc9-2a86-486b-b5ef-ba4965a9f61d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cba0f993-fb9f-453f-a8d9-2857a1063a7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcf09f4b-f847-45a6-a7d1-6ae96924513b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b11a008c-c811-40aa-b4fb-d9a1299b229d"
                    }
                  }
                ]
              },
              {
                "id": "d10dacfe-14de-4eab-b496-f29b4de39c37",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7beaf424-76cc-44d8-ad7e-4e465153e8fa",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72693b7f-b2a5-42f1-a40c-a145d74a6379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "eea5222d-a2f9-431b-a54d-cfc8b6b7cafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82912f89-2c6d-43dd-ae7c-55983bc7e6a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce2a3819-9c9d-4981-9995-9744a75184b6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f196c8e0-f3d6-4cba-b5c8-6adb867a38b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5d5ef79f-7fde-4787-acf6-9095822be191",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdbcf52d-2f72-469d-b1c2-459e919e29ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6cf0a7b8-ae90-49b3-8859-e2de7f139ca2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78d822d2-b8ff-43a4-85e2-913c59c63341",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e4ffafc8-1b3d-4d75-9f34-734d32cd0cf8"
                    }
                  }
                ]
              },
              {
                "id": "24275947-2f4c-4a69-a24a-2ea31e7c4266",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "438d0b33-6bed-40e4-843d-fda9f3b88755",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "02024cdd-9dc8-4c2a-b13a-eeeb9a1db615"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c999db4f-96a7-49b5-8391-b70b32d89543",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bdc0a359-28bf-4c62-92e6-e301321fcc6b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af51f089-1a54-4b98-9b13-9f06ce4692f7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "413ac28c-6bc5-48b4-a57e-fb6e1804382f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a84377ed-29b6-43b4-9ae7-8b4c92a94ab4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfa37aed-31a5-4d76-ad85-46296579710a"
            }
          }
        ]
      },
      {
        "id": "e53fc508-797b-49ef-8b52-8576ebd5618b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "89b2b8cb-6d8b-4ed3-a005-677fe6218ac6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c09b93e5-fa71-42d1-83e7-e8cadd5cd282",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c53dcbc7-6916-4701-89eb-09905a201116",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06be792e-928e-4339-abef-9d04476464e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "347d1b8c-6ee0-4164-b3c5-06bc1d42969c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d58e62c4-10d9-404f-91e6-7f9141728d48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b51dfd97-379f-4931-86a4-bf8482f0dde9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e97bae7-6ca7-48cf-8724-5b039b23c33c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba0ce35b-698a-4e3d-8b82-86d8fd920524"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd4dd089-8625-43d2-a654-9dcc6fa23bdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15fe714a-2784-483f-aa16-a38dc5b2a956"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "572587bb-c237-4cb9-9b0a-3f19fa0343ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "849b5360-8017-4ef8-a521-dd2dbf396b9b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5747fab0-5d94-4a95-8627-0a91cd809a4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6cb569f-9a6f-4285-b994-f1ee7e69ffea"
            }
          }
        ]
      },
      {
        "id": "b935c32c-62e9-4c9e-b8a2-1268374e0dc2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "bab0142a-704b-44d3-bf14-2ec7b1ba8835",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d53a7fef-fb53-4548-899f-f9c2d29b3e84",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b41f5166-72f6-4e60-9f2a-9f796a28f49b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a96791a-0e7b-4a81-b584-26cb62a83617",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fdb01d9-387f-48aa-b6d5-6d0431d2a62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9746b770-5074-40e2-b457-24103127cdbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1f6800e-5bd9-4938-88f7-10df6c8ca928"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e5f7067-b7a6-40f3-9c7a-dc3003b5f4fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b142622-297f-4202-a33f-d4a3a061a5ca"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "34677427-ab06-411e-b6ed-ffbb1ea82740",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96884931-f41c-4a32-aa45-431709ce030b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b5ca835-0fbb-462c-82b4-209c57b96200",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "754da872-d56e-4bbb-8683-82cf468d5634"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34e0e4bd-dfb6-4a71-9612-729065f0fe28",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "560642c9-11de-437f-b3a3-c41e13348269"
            }
          }
        ]
      },
      {
        "id": "4e9f5344-b668-4d7b-86c1-774942d5e490",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "0f326a56-d6c3-4946-a49a-40d59b8c5f61",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dab309cb-4787-4230-8246-4f04cb7d2436",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a1775d4-340a-4e65-84e7-a5e3a0cf3965",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "459b6aa9-5ad2-4f4a-9df4-b9f463486c4c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4f8f649-2edf-439d-8fba-b6c74dd104d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3231ccc2-e6af-4b5d-8453-9cc26458ced9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d9540b8-2b4f-4f09-89ae-5b66d3fbcb7f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8846d66b-d41b-4a62-aeb1-08f9afafa7b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bce834b-7133-4945-bac5-61020a1f96e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71120cc7-cfd1-499f-ad07-d2f296bddb7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "795c9286-13d8-40c5-aa8c-5042830558a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "320ce76a-bffd-4b4b-848c-9ab45f8d46ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed268f1b-fea9-4e48-b40d-603829be0933"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23d18e7b-f380-4286-a3c9-8cae3abc8e9f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30a522bb-1e79-4826-8447-1497976d1043"
            }
          }
        ]
      },
      {
        "id": "546c5fe7-759b-437c-835a-ce1ce3976337",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed37fe2c-d699-4592-b9eb-d40ebfb9ff9f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "902be0ac-dc84-4aa9-8bef-b64ed16125d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e7b0f91b-461e-4c88-89d0-e0c26e7a3d6a",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c1fffa86-4e66-4814-b851-85fff4472cd3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e6deb4d-8658-4831-b3d2-bcf169f64888",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 112.30555555555553,
      "responseMin": 6,
      "responseMax": 11461,
      "responseSd": 755.465034624743,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721522602828,
      "completed": 1721522639425
    },
    "executions": [
      {
        "id": "9281537c-2dea-4001-8a44-99b2fbea00ce",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0f4feee1-8f6a-43f3-9d61-081c71549696",
          "httpRequestId": "df871c9e-c95f-40f6-987e-abfcc1f61d99"
        },
        "item": {
          "id": "9281537c-2dea-4001-8a44-99b2fbea00ce",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "637e662e-cdd9-49e4-bbe8-e1046b54bd51",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "1abc860a-1531-4b0d-8523-896fc82af500",
        "cursor": {
          "ref": "62cc2d57-76bb-4719-9ac5-3f0166751fae",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2938387d-8c8e-4ad0-ab3a-e1206d7bccf0"
        },
        "item": {
          "id": "1abc860a-1531-4b0d-8523-896fc82af500",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c0b94d3a-e181-44a2-b4fb-f1cdfd27d4fe",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "3376dc9d-bda8-4604-af98-fd7ae1e87a71",
        "cursor": {
          "ref": "d1a97d75-7a4a-41b3-8413-c8ef6f45d751",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bdc4c4a7-1886-4c22-8d33-2ea82a67ce37"
        },
        "item": {
          "id": "3376dc9d-bda8-4604-af98-fd7ae1e87a71",
          "name": "did_json"
        },
        "response": {
          "id": "4f63c21d-cfe9-4e52-b3d3-5ec6ad6ba5ab",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6750692f-eed1-4d51-bee9-ca937d448ed7",
        "cursor": {
          "ref": "d549c774-9b77-4701-932e-c67892142d61",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b80440d-0650-4dd8-82ef-de7bfe9e870d"
        },
        "item": {
          "id": "6750692f-eed1-4d51-bee9-ca937d448ed7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa5b07c0-49cb-4d0c-96e9-f69c0dea6888",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6750692f-eed1-4d51-bee9-ca937d448ed7",
        "cursor": {
          "ref": "d549c774-9b77-4701-932e-c67892142d61",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0b80440d-0650-4dd8-82ef-de7bfe9e870d"
        },
        "item": {
          "id": "6750692f-eed1-4d51-bee9-ca937d448ed7",
          "name": "did:invalid"
        },
        "response": {
          "id": "fa5b07c0-49cb-4d0c-96e9-f69c0dea6888",
          "status": "Not Found",
          "code": 404,
          "responseTime": 472,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87db1e2-3b8f-4620-819b-4b6583f40e7d",
        "cursor": {
          "ref": "8f1b38d2-934b-4acf-949b-7c70e74f8fa9",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1ed42a51-a5ca-49ad-97a7-8d36fcdca8d6"
        },
        "item": {
          "id": "c87db1e2-3b8f-4620-819b-4b6583f40e7d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "404ea0c6-5cef-43ae-89a9-b4b01099df19",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa56e37-5527-4b55-8a4e-d02f4897a233",
        "cursor": {
          "ref": "f6ec19e6-6113-48a2-ae63-63cd661c1fe9",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "53d98d6b-f03d-4070-a9ec-33bede2c7f0e"
        },
        "item": {
          "id": "0aa56e37-5527-4b55-8a4e-d02f4897a233",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f141d4ad-76b6-46ea-a3de-39ffefe69b0a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 34,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac1e863-19b8-4f50-9bcd-a7f83eac2e49",
        "cursor": {
          "ref": "383d9758-cd5d-4bbb-a5a3-04ccf28efc20",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6da04d43-f860-4fe7-8438-bbe29b8e1cda"
        },
        "item": {
          "id": "aac1e863-19b8-4f50-9bcd-a7f83eac2e49",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "477b88be-a30b-44fa-839c-0ac4c0b4efa7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a432ea1d-b4d3-443a-9b17-5d8bbc406b41",
        "cursor": {
          "ref": "dd62471f-6967-4116-9071-c5e8f81cbc40",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0b38dc61-a26d-43fc-8a09-e479a8c5e30c"
        },
        "item": {
          "id": "a432ea1d-b4d3-443a-9b17-5d8bbc406b41",
          "name": "identifiers"
        },
        "response": {
          "id": "b125eae9-2aec-420d-9cc0-c3cd3e0b50fe",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293d1e4c-1f44-4ef2-8cac-27de359c2120",
        "cursor": {
          "ref": "8b427f21-8db1-4338-9ccc-51b7f9bd0d67",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5eec01ee-9763-4ae0-ad59-7a89e822285c"
        },
        "item": {
          "id": "293d1e4c-1f44-4ef2-8cac-27de359c2120",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3dc45777-4810-4f7b-98ec-9fc9b197143f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79fd91f9-fe11-4d66-a3fd-45a29810de94",
        "cursor": {
          "ref": "7d0dbb2a-4c73-4288-b0dd-f09de5b6e0bb",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "260f2532-5ce4-40dc-9f33-aa7e58948116"
        },
        "item": {
          "id": "79fd91f9-fe11-4d66-a3fd-45a29810de94",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "10eb6ed6-e6b0-4db4-8d09-58d3f4b7e1ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64a8531-6729-43c8-91db-dbe4c8ce4934",
        "cursor": {
          "ref": "0d68036f-f57b-4305-8cd6-d5e8cc2ee7f9",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "72bba87b-6c32-4219-88ac-8b8bbb4b265a"
        },
        "item": {
          "id": "d64a8531-6729-43c8-91db-dbe4c8ce4934",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ddff55a7-7a64-4114-89b4-af21ba553e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae846217-6452-489f-98f4-083b937a1917",
        "cursor": {
          "ref": "e1063ed2-3fdc-411d-8fa5-0e458c07822b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4654ba8e-381a-49ed-a04d-b17b4d2be533"
        },
        "item": {
          "id": "ae846217-6452-489f-98f4-083b937a1917",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4b4b0488-474f-41f9-825c-8c8fdad7309c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be136c4f-6e3b-4520-ade3-aa96833acdf6",
        "cursor": {
          "ref": "e081fb51-8c45-450e-81a5-54e99f7ef38f",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "25a90c4c-3eb2-4d87-acbc-62f536678dd7"
        },
        "item": {
          "id": "be136c4f-6e3b-4520-ade3-aa96833acdf6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5f18e928-7fda-4e0f-be80-d235212557da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabe1de8-cb7a-45a0-85cd-6d7e973437ae",
        "cursor": {
          "ref": "a6c95130-e39c-4ddd-bc52-8a7b6ecc109e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0f2254ba-8324-49a0-82f6-afed5a8b6475"
        },
        "item": {
          "id": "dabe1de8-cb7a-45a0-85cd-6d7e973437ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "66cd14e7-d878-481d-9de0-33e4bc4021bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e90687-5caa-4729-af88-a8674987b957",
        "cursor": {
          "ref": "52cda2f3-e90d-438a-8b14-248a16bf0d4b",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6d7cf3ba-ad77-4fbf-91b0-fe286193182e"
        },
        "item": {
          "id": "f5e90687-5caa-4729-af88-a8674987b957",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "33cb523e-8c17-4c08-8231-a1fdfa93d8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762ffc0f-6ad3-4f93-827d-51623be542f3",
        "cursor": {
          "ref": "0d2d1baf-ec3f-4c4a-bb96-eba5222c8bee",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f2b6360d-dc49-4a2d-8cd5-cedf474f2d68"
        },
        "item": {
          "id": "762ffc0f-6ad3-4f93-827d-51623be542f3",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "69f7b70e-4f62-46c6-aaf7-548dcf727dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8f3cfd-7cf0-478b-8fcf-f4a2f63fc17b",
        "cursor": {
          "ref": "1d40e384-6cff-448f-a177-692d003d4427",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef690846-2fff-4ea6-9a42-6404afb02d15"
        },
        "item": {
          "id": "7a8f3cfd-7cf0-478b-8fcf-f4a2f63fc17b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "29dd9851-5273-4641-bc88-1ef20821f1c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fdc552b-04a1-4ee1-96cd-9b656f1fc6dc",
        "cursor": {
          "ref": "4e362c24-f1ca-4fc0-afb8-2c1dde8f4052",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "362ee00e-01a2-4d22-9a24-445ce632c3fb"
        },
        "item": {
          "id": "0fdc552b-04a1-4ee1-96cd-9b656f1fc6dc",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "340a3bdd-8fa7-4939-93ca-91cdefd983c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83312622-bb78-4217-9584-8c729ed0254b",
        "cursor": {
          "ref": "50f3939d-0cac-486a-8392-db3749f0aff4",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3a252d7b-05cd-46b2-bbf9-f09cf7d1bca0"
        },
        "item": {
          "id": "83312622-bb78-4217-9584-8c729ed0254b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "5a1467dc-abe3-49db-b1e4-63d662012fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f732ec-d817-4414-8c5e-5e69a39efc30",
        "cursor": {
          "ref": "562b44f3-3842-42c5-802f-565464cc3b36",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d8280a61-7aa6-4f56-948c-6831f7fbb7d5"
        },
        "item": {
          "id": "39f732ec-d817-4414-8c5e-5e69a39efc30",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2ef236e0-c3c8-46a4-a1db-6f3c5f170529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a5e3615-5081-4b7e-a67e-826c39895731",
        "cursor": {
          "ref": "51223d15-b585-4730-b4a9-44ea67c19b56",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7c57f1d6-158a-45dd-b623-e4c5f9e7496c"
        },
        "item": {
          "id": "5a5e3615-5081-4b7e-a67e-826c39895731",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "678c98bd-214e-4c51-81a5-b242696d8a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "559d54f6-9bd3-492e-afbe-63e316c34e99",
        "cursor": {
          "ref": "91ea7e9c-5dc9-4b5a-a3da-f9a5c55ad712",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a646cb65-1ae7-46c2-9587-f1bb5b04b657"
        },
        "item": {
          "id": "559d54f6-9bd3-492e-afbe-63e316c34e99",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5d7a4085-4dbb-4f4c-82bb-cea121275983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a524663-68a7-4069-a810-e16221fb3946",
        "cursor": {
          "ref": "84b593b6-73d9-47ff-9332-2d59156dbfbd",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1f7de8c8-de98-44be-858f-0a08273d894c"
        },
        "item": {
          "id": "5a524663-68a7-4069-a810-e16221fb3946",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1970fd9e-89d4-4b25-bcb1-3e4b0b113907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccded182-1509-4e9d-a20d-7d436ab45937",
        "cursor": {
          "ref": "77e506ba-16a6-48f9-9e4a-df9ba6a9626a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b0ca9820-32ba-4eda-b1d8-fab1f8ab09d6"
        },
        "item": {
          "id": "ccded182-1509-4e9d-a20d-7d436ab45937",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e1185a94-1586-4263-921c-c5de2492b46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "279ba0e0-2522-4fc0-a4c0-8f54a49a07c4",
        "cursor": {
          "ref": "9c942166-f95b-45a2-9692-ee4bf6228720",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4b9972cd-20bf-4ece-92d7-c8f1493a921d"
        },
        "item": {
          "id": "279ba0e0-2522-4fc0-a4c0-8f54a49a07c4",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "73ccaf92-3c3a-43a2-84b9-ea1144eb2ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54323ab-a05f-4b9c-b17d-24a72fa83d85",
        "cursor": {
          "ref": "f9750fb4-9b0c-43d1-b907-0d761e72c85a",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5e2220d8-b24f-40a2-80f5-e1836b45db71"
        },
        "item": {
          "id": "d54323ab-a05f-4b9c-b17d-24a72fa83d85",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "14f01663-b282-40da-9053-fe138bf48813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779f3ce0-6c05-4010-a393-b37dcdeb7218",
        "cursor": {
          "ref": "217afd6d-eb47-4757-8530-86e09af5af41",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "372600e3-a065-4943-b712-af89e99dd183"
        },
        "item": {
          "id": "779f3ce0-6c05-4010-a393-b37dcdeb7218",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e169e3d0-eb4b-47a7-acbc-9d0d07cfc75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc5cac5-78fb-419e-9c37-a603c4f91ba5",
        "cursor": {
          "ref": "55d27b30-1748-4950-bdb5-7c662c4121a2",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e08022c6-61b0-4c65-960f-1e15de2dc4f0"
        },
        "item": {
          "id": "6cc5cac5-78fb-419e-9c37-a603c4f91ba5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "67ec8c3e-b950-4f07-8977-d6a6193b0b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77bd5181-0e0f-47c4-97a9-39305538e2c9",
        "cursor": {
          "ref": "5c4f4233-ee4f-419b-b349-da9076db2928",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7a0e5b98-0f3d-44e5-bb86-ea3eaf655938"
        },
        "item": {
          "id": "77bd5181-0e0f-47c4-97a9-39305538e2c9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "5d69d78c-a001-4f0b-ba96-9e46caa25902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b0f6b4-0b00-451a-8524-29117483714c",
        "cursor": {
          "ref": "e15f546b-56ac-43fb-970f-23baa2e31fad",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cb45be94-733e-44f9-b95f-81bbb89dd602"
        },
        "item": {
          "id": "65b0f6b4-0b00-451a-8524-29117483714c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "56173348-be82-4273-9255-c9f38022b37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74b8cfc-172e-47fa-94d0-24854cf7238f",
        "cursor": {
          "ref": "a2d3f004-0a78-47eb-98b7-664880c8eca1",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6f20665a-0359-48d3-bcc5-0264a40e015a"
        },
        "item": {
          "id": "a74b8cfc-172e-47fa-94d0-24854cf7238f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "8af0b9df-51a9-4ca8-8275-132888ca48da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d10f80f-49f6-403a-93a7-35c1eda14612",
        "cursor": {
          "ref": "2c1b96ac-e208-439c-925c-7625e7ee5645",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "76b92d19-cd34-43f9-b88e-75a17bcb1de1"
        },
        "item": {
          "id": "6d10f80f-49f6-403a-93a7-35c1eda14612",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "42ba77ac-1511-4bb3-95af-716194a957d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fa28f9-e035-4296-bfcb-00e6f08c45cf",
        "cursor": {
          "ref": "eb399d11-3fbf-4587-a249-f498e6d4329b",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "164b18de-79e1-40fe-bc63-7aa38529f051"
        },
        "item": {
          "id": "82fa28f9-e035-4296-bfcb-00e6f08c45cf",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "6c229acb-55d8-4687-b6a2-1b95c1a867d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d529f9-1675-46cc-b452-b55a3d4e09ae",
        "cursor": {
          "ref": "b700f851-e5d3-4e44-b063-72635b6c30af",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "42ffc078-7dce-4418-a3ea-6359de69cb23"
        },
        "item": {
          "id": "99d529f9-1675-46cc-b452-b55a3d4e09ae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1e30b9b9-bc19-4022-b521-6c9fd6693128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381a30f1-b4c8-4e30-b340-bf5f477e1a08",
        "cursor": {
          "ref": "43f635ce-f165-48d7-972c-c15d44c05c98",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "58b4b402-a403-4523-8425-43129d8a94ef"
        },
        "item": {
          "id": "381a30f1-b4c8-4e30-b340-bf5f477e1a08",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "8711b1bd-66aa-48c4-b1f9-8b56a6725424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "131ffd58-ad6f-44b6-9d55-49e1cafb755b",
        "cursor": {
          "ref": "9978ded5-f854-4a4c-a59d-e2602969b467",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "054e0792-d027-4ea5-94e0-24aa80e615e2"
        },
        "item": {
          "id": "131ffd58-ad6f-44b6-9d55-49e1cafb755b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e9ec1a5b-385a-4d38-b14b-9015707f8c53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b60e07-756e-4e35-8036-241d7f9236a6",
        "cursor": {
          "ref": "efbd8fc2-4f8f-4638-9b2d-f29fc50e748d",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b5617a71-7f14-479f-83a2-186e2f7cfac7"
        },
        "item": {
          "id": "e8b60e07-756e-4e35-8036-241d7f9236a6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f05cb304-277b-4751-b479-b6148a77a040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa923ed-00aa-4d55-92b0-df5f1d3926c4",
        "cursor": {
          "ref": "74586428-0403-4aab-b3e6-f260e42e7c5f",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "56fdc6dc-f3d8-45c0-a92f-778fc925b8f4"
        },
        "item": {
          "id": "dfa923ed-00aa-4d55-92b0-df5f1d3926c4",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3d7a7554-12be-4426-a973-d05534840230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f0691a-a008-4956-8f95-4a293c1f5990",
        "cursor": {
          "ref": "925568c0-d799-4a73-b5aa-c156454773da",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f03173b4-f6e2-4c2f-ac4c-9505e3aa4d1a"
        },
        "item": {
          "id": "85f0691a-a008-4956-8f95-4a293c1f5990",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "e25522e0-df29-4a52-95ac-19a77be61ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca431f10-9449-4556-bf77-bf82cb8b83d8",
        "cursor": {
          "ref": "1cab98ae-c56f-4e9f-98a1-2d662159e55e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a89fef37-2c9e-4c99-9010-db1f57d4fe7a"
        },
        "item": {
          "id": "ca431f10-9449-4556-bf77-bf82cb8b83d8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f66eb1a2-5a87-4fa5-9773-286debc8d343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d2a42e-243e-40f2-adcc-62c0e47a77b0",
        "cursor": {
          "ref": "8b3d3caf-f30f-4936-b70a-5200eec2775e",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "bd1edc54-b008-42d5-bc66-84e12cb0942c"
        },
        "item": {
          "id": "d8d2a42e-243e-40f2-adcc-62c0e47a77b0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2b258eb5-b18a-43e3-b834-682e5bd26a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d931a7a6-67db-436b-9c71-9705415962a6",
        "cursor": {
          "ref": "caa648fb-8721-4d2f-a2ae-cb734a62b1ca",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "6433ad6a-2319-40f5-92f7-66240aa69195"
        },
        "item": {
          "id": "d931a7a6-67db-436b-9c71-9705415962a6",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e00e6475-6a6c-4f67-87e2-2a342b1cec42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1c6eb8-9ba1-4755-9102-ba080519ad2c",
        "cursor": {
          "ref": "51875ae9-4a07-494e-860c-be5adabc699e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8da880c6-9efe-4bc1-b6ba-ede0a01534ce"
        },
        "item": {
          "id": "bf1c6eb8-9ba1-4755-9102-ba080519ad2c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "948d6dd3-95ca-4a21-a826-89ead90e5614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737cb72c-9581-41c7-b10d-22a79ee89b3a",
        "cursor": {
          "ref": "219a2f06-7d3f-4637-97a2-976d66441bb6",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d0126f97-4a54-458e-8f73-d17b2e05ef52"
        },
        "item": {
          "id": "737cb72c-9581-41c7-b10d-22a79ee89b3a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5329086b-a771-4264-96eb-9f95258b9a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70092861-81e7-4aa0-89c6-523b1c918aa6",
        "cursor": {
          "ref": "939a779e-80cc-4a85-ae32-31673a6be263",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3814c5d1-00be-458d-b81e-ef6820363589"
        },
        "item": {
          "id": "70092861-81e7-4aa0-89c6-523b1c918aa6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "262f09b9-6a79-4ec5-aedc-61d4c7530f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d5e0fe-cf34-482a-a4ab-e5f0b53a2971",
        "cursor": {
          "ref": "c1d1fd90-8724-43a3-b222-47b48ad37466",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f0a7091d-950f-4c2c-aadc-982fed82f528"
        },
        "item": {
          "id": "10d5e0fe-cf34-482a-a4ab-e5f0b53a2971",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "2cf7db89-67f3-466f-b364-fa4aed4137c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b02ead6-89ff-4309-9f90-67c7deeffa69",
        "cursor": {
          "ref": "360d77a4-e4d7-4700-975b-bdc5f175a34a",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "07e80853-f384-4b96-b7d0-d63fa7d9f5b4"
        },
        "item": {
          "id": "2b02ead6-89ff-4309-9f90-67c7deeffa69",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1b78c022-56ac-4f05-a11a-e1d739f8f7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640f606a-7090-4cb0-8bcc-f20b5904f2d2",
        "cursor": {
          "ref": "ec599ab8-7a41-4440-9649-4da1acd65ff6",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "67d8d749-476e-4cfc-a7dd-bb6fb37d7ff8"
        },
        "item": {
          "id": "640f606a-7090-4cb0-8bcc-f20b5904f2d2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f7caae11-fcda-4a1c-ab8d-8803826bc9cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e7bcb8e-407c-454e-8775-a7272703ce23",
        "cursor": {
          "ref": "dc22aa5c-32b6-46c2-9080-2581aa9da023",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ea6ed9de-fb72-4b5e-b889-978bf4631660"
        },
        "item": {
          "id": "5e7bcb8e-407c-454e-8775-a7272703ce23",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "edcad04d-4245-4c3f-bf16-a66dfc1bd9b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79ce373-0182-43b5-8685-be4a586251cc",
        "cursor": {
          "ref": "3b6ad5b8-2f98-473b-b79f-54d73f5d727b",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1573d174-f2b2-448b-96be-2bddd8f43394"
        },
        "item": {
          "id": "b79ce373-0182-43b5-8685-be4a586251cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7ba0e522-93cb-43ec-bf10-ae90b3bf1870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f1a98ac-1056-4505-9426-c4e65035a8c1",
        "cursor": {
          "ref": "08518cc0-ae0e-4b8b-a283-1fcc001b0469",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "24ae969f-612c-43f5-960e-21759a834eda"
        },
        "item": {
          "id": "2f1a98ac-1056-4505-9426-c4e65035a8c1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e491c928-4c0c-4ff8-9fc7-649ddd8c4e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6496b973-c29c-4231-963b-90d3ea22e9f1",
        "cursor": {
          "ref": "d167e8bc-ea6d-4a9d-937b-c194946ec64f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b4d5f4f7-d1e8-4a85-8940-49efbd57ab46"
        },
        "item": {
          "id": "6496b973-c29c-4231-963b-90d3ea22e9f1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "64422e7d-5f21-43d1-9188-22aa407dee8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8fed25-c219-4442-8712-9db247c17688",
        "cursor": {
          "ref": "26454b90-dddb-47f0-bf25-d5542961a3d3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "20651fba-1b9b-4245-9e35-b2ff87f71290"
        },
        "item": {
          "id": "bd8fed25-c219-4442-8712-9db247c17688",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "22c84cb2-6c56-43e7-8366-454c73980d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aa8448b-925a-422f-a8bf-138986bb2ed4",
        "cursor": {
          "ref": "29bcc336-0f3f-4628-8568-55fa3adc1329",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "5cc682cf-843d-4d37-a595-5b48811e4af2"
        },
        "item": {
          "id": "0aa8448b-925a-422f-a8bf-138986bb2ed4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6e47d7e0-ad79-47ee-97aa-b32611c216fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112f50ae-d2f6-41e9-bcc5-40bf449539a4",
        "cursor": {
          "ref": "2da23687-e48c-492e-8d3f-b7f21c76c8d8",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "280b0b91-9e08-4b90-b736-0dd8fcc2dc3e"
        },
        "item": {
          "id": "112f50ae-d2f6-41e9-bcc5-40bf449539a4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e12c2fb3-6fb6-4ae3-9ae4-37077e1d12ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ecef45b-b6f9-4c29-8e5d-df856415b237",
        "cursor": {
          "ref": "c0bbd86f-ccc6-4631-8784-20f3f4bf3798",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "068c68b4-3494-4a8e-a8d6-0de186824035"
        },
        "item": {
          "id": "4ecef45b-b6f9-4c29-8e5d-df856415b237",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "ecc29436-bde1-423a-aa4c-e09f61f309a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 940,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99080f88-004f-491b-948d-cdda6dc433ab",
        "cursor": {
          "ref": "fc365989-d75b-4aaa-be12-2c3ac71ff7bd",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "50f2ea7b-6159-4263-9b31-b791b9decf1f"
        },
        "item": {
          "id": "99080f88-004f-491b-948d-cdda6dc433ab",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "86160495-3fc1-4cdc-ace2-b269da6f05b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb0f1ff-510f-4ece-8353-9929876525bf",
        "cursor": {
          "ref": "f3ec42ad-431f-4c22-acb5-a2264d27a201",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "afbac31b-1335-4ab1-8509-3ea9413c3a38"
        },
        "item": {
          "id": "adb0f1ff-510f-4ece-8353-9929876525bf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f328181e-5322-47d3-ab5c-24f669095fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d663c66-e5a3-4777-9375-f6fcb39118ee",
        "cursor": {
          "ref": "c891dbcc-afdc-4295-a935-9d922d80a047",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5fc23980-d8e9-4fdd-b8e6-f27a952862d8"
        },
        "item": {
          "id": "4d663c66-e5a3-4777-9375-f6fcb39118ee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "92181335-fe6b-49bc-b494-99bef9afbf34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59ae3c4-2b14-4565-bf09-d2273837138a",
        "cursor": {
          "ref": "7aa381f1-5c15-40c5-8c58-b1a8c150513f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ba868e7a-4ea6-4289-b0ab-8d04e0f6e2ea"
        },
        "item": {
          "id": "e59ae3c4-2b14-4565-bf09-d2273837138a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d207e4e6-b110-4392-8ed8-32e2b8d49f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248ef451-3c5a-4e2b-8abc-ec6a913f3bbc",
        "cursor": {
          "ref": "d04bdf3a-981b-4b97-b46f-e428e603f113",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3cc7d7b1-66c1-4cd7-ab08-d00aa6af126c"
        },
        "item": {
          "id": "248ef451-3c5a-4e2b-8abc-ec6a913f3bbc",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "31b657f0-ea40-4eb3-9c59-f0b4a3811d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "877e8dc2-dfec-4734-9b59-fe26fd93a675",
        "cursor": {
          "ref": "ec2f810b-aa07-4dde-b113-b02f573e635f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6544978d-6133-4206-9b16-f5cf6d4069c5"
        },
        "item": {
          "id": "877e8dc2-dfec-4734-9b59-fe26fd93a675",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5e9d6a3e-4f15-46c6-8d21-4a59dd5d6d27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e92dffa-5aa4-4aa4-bd4f-6e2f593c198a",
        "cursor": {
          "ref": "b8fa8494-3acd-463d-bc1c-9e6cfec4cee1",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "374072fb-570c-4440-9ee4-3d5964adaea6"
        },
        "item": {
          "id": "8e92dffa-5aa4-4aa4-bd4f-6e2f593c198a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "207f8012-3b3d-49f0-8db7-d0294f631afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176eff96-7eb2-4c55-9bbe-1d2f277f22df",
        "cursor": {
          "ref": "0f038b14-fd5e-481c-8105-bc014a479b04",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c075fe85-b9ad-4dc7-b3c8-61a4981ca0f6"
        },
        "item": {
          "id": "176eff96-7eb2-4c55-9bbe-1d2f277f22df",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "2bbcb094-7189-462f-89ec-5356c68e9b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15a4663-1236-41ec-834b-3a3c28650965",
        "cursor": {
          "ref": "7b30949d-ed37-4a1e-a713-ef5ad7170388",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "54dcad39-ece5-4e4f-84c8-b4c720fb890b"
        },
        "item": {
          "id": "b15a4663-1236-41ec-834b-3a3c28650965",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d92c2bd3-5daa-4ffd-882f-1df051521c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d001880-cb77-4936-8165-9d29be9d9f7f",
        "cursor": {
          "ref": "83310510-7f22-4655-8458-7497a5c0b7a6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3cc672a3-c869-4eb0-a763-6331f95d8ad9"
        },
        "item": {
          "id": "5d001880-cb77-4936-8165-9d29be9d9f7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dfb16196-0a68-44ff-84b7-4953836667d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50641c83-21a0-4207-86ff-7232887f859d",
        "cursor": {
          "ref": "65f5ebdd-e8ec-4fc9-b4a0-789021b44d0c",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c5c2c250-5075-400b-b6eb-f5c97c133aef"
        },
        "item": {
          "id": "50641c83-21a0-4207-86ff-7232887f859d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "210e6f3c-7d80-4fd2-b0a7-cf10eba0aa7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdb36c4-d125-431d-9d40-69a9494aa5b1",
        "cursor": {
          "ref": "fcf89ddc-62f3-4ff3-a552-df6fb79a91d9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "88a88d98-e8b8-4335-9c43-e5e9847ff31d"
        },
        "item": {
          "id": "fcdb36c4-d125-431d-9d40-69a9494aa5b1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "25a32107-741c-489b-865d-1f3897f84150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5d2aa2-ad5e-4376-b2fe-25c74fc65e55",
        "cursor": {
          "ref": "3befc959-4043-4ae3-b0cd-fb64127a8cfe",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "04152442-f7f4-4d94-9a51-bb141090c973"
        },
        "item": {
          "id": "bd5d2aa2-ad5e-4376-b2fe-25c74fc65e55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "9e0869eb-4590-4c37-aa8e-0b30f23ddac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dbb0cfa-5f8c-4ef3-9081-e202b1a19ddd",
        "cursor": {
          "ref": "325b3c50-1df5-49b9-9ad0-ea8360812435",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "87a51cd4-9a93-4ccc-85f6-551d875e9a6a"
        },
        "item": {
          "id": "8dbb0cfa-5f8c-4ef3-9081-e202b1a19ddd",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "8832de19-71ce-48b6-acef-cbfe054266bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f6501b-f932-4987-9e2c-8912f629c61a",
        "cursor": {
          "ref": "edf8cb2d-d808-4a53-8d44-14631227bedc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "19698679-1e25-4d10-bb02-0039186fe79a"
        },
        "item": {
          "id": "d3f6501b-f932-4987-9e2c-8912f629c61a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "0b6bc6c2-b20e-4db2-b534-fff75bbc1ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9dc826a-1643-470a-8baa-45a68164a1a1",
        "cursor": {
          "ref": "c09cf952-dd68-44ff-bb77-1c31de491234",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1d26619b-cdc6-4fb2-8f13-cd98ab7026a1"
        },
        "item": {
          "id": "c9dc826a-1643-470a-8baa-45a68164a1a1",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4845ef91-8d7e-4566-818f-d7acd9c763d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c312ceb-f4be-4bea-9281-705786c9073c",
        "cursor": {
          "ref": "e275eba6-ef93-455d-bb7c-c8428cec62d5",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "23fbc84a-b13c-4713-be85-3b7e79c8501f"
        },
        "item": {
          "id": "7c312ceb-f4be-4bea-9281-705786c9073c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6b86177e-c7a6-4c45-8550-d1bdae68e57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b6b4e3-df44-4675-b1bd-48edf0859e2d",
        "cursor": {
          "ref": "4ec8f3ad-99fe-4bb7-8633-4baff7225610",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5feba725-05d4-4abd-a1ae-dee0ce10c25d"
        },
        "item": {
          "id": "82b6b4e3-df44-4675-b1bd-48edf0859e2d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fec8b5ab-85ab-4140-803a-9d31163cbe61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596d86ba-fb85-466b-af92-284387329598",
        "cursor": {
          "ref": "259c7129-f19c-485f-8e8f-6ab68aa3768c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3b41d9ef-c05d-4732-b830-8c5f795c0c53"
        },
        "item": {
          "id": "596d86ba-fb85-466b-af92-284387329598",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "70041436-b97d-41c0-82c5-28aa8f9e662b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbfbbbed-911b-4d6b-b159-d1240ae476f0",
        "cursor": {
          "ref": "521e17b2-1010-44f2-a262-4c685b1aac47",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "cb3f497d-912a-430c-a8ba-886e503ccaab"
        },
        "item": {
          "id": "dbfbbbed-911b-4d6b-b159-d1240ae476f0",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c147d389-0d11-4dcb-b13f-33d1dea58860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfcb313-4fbb-413a-9f1e-b47918fdfd05",
        "cursor": {
          "ref": "664ee742-b1df-44ef-8635-abfc75ae6252",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "79d636b9-84cf-4fb7-9f58-8f7cb78ca4dc"
        },
        "item": {
          "id": "9bfcb313-4fbb-413a-9f1e-b47918fdfd05",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b3fe3225-932a-4452-9c9f-94506e994b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c373cdf-d73a-4faa-bf74-9fd5a47a28af",
        "cursor": {
          "ref": "192ead9d-3827-4435-8767-328867f5eacd",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d0d442e2-5ed7-4f4e-98b7-1b8f5e6004f9"
        },
        "item": {
          "id": "6c373cdf-d73a-4faa-bf74-9fd5a47a28af",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "99a22133-cdd8-4388-b349-bedda3e65d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f40b053-c994-45b8-8983-5b5552dc6735",
        "cursor": {
          "ref": "d2187446-bc9b-4ba3-9eec-af81ac1fed7d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "a350576c-36f4-425a-be9e-74cd312533dc"
        },
        "item": {
          "id": "8f40b053-c994-45b8-8983-5b5552dc6735",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9c0d18d7-9a39-47e3-8db2-db3f426a5791",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555c0241-4e0f-46e7-a0e3-96ff9ac3d875",
        "cursor": {
          "ref": "0bf064a6-cae7-4830-be91-58dbe40d78cf",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ef426915-4539-47d5-b9c1-fdd1f1d956d5"
        },
        "item": {
          "id": "555c0241-4e0f-46e7-a0e3-96ff9ac3d875",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "15ac7e32-6d5e-47a8-a158-d6e26beb17b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a607d4-198a-42d7-8f45-19b4bdc48895",
        "cursor": {
          "ref": "9ccd4507-0dab-4800-8c30-2e20168217ba",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "39629cc6-0666-4db6-a553-7b880c89276b"
        },
        "item": {
          "id": "40a607d4-198a-42d7-8f45-19b4bdc48895",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9e87e205-be33-4e6f-b1ff-4fe7614f3e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db7c213c-a4fe-47c8-af28-0855e618493c",
        "cursor": {
          "ref": "abf02f3c-2869-476e-b007-3098814bd81f",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f04350ba-2a6d-4b83-81ff-5841ef2f9175"
        },
        "item": {
          "id": "db7c213c-a4fe-47c8-af28-0855e618493c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bdee4194-659d-4ffc-9e4e-e157a1f328d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e27ce-8968-4606-be05-e546ffa56155",
        "cursor": {
          "ref": "2fb5d90f-c4e0-4aa5-b401-5314b65b67bf",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "72481762-d3f9-4ac5-8a3b-a52062eb077c"
        },
        "item": {
          "id": "f17e27ce-8968-4606-be05-e546ffa56155",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "140b80eb-ddc7-4f85-83a3-8fd004583c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2291fcd-e670-41a3-b871-f46e2d872ae6",
        "cursor": {
          "ref": "18a72e9d-faf9-4554-9e55-f293ba244cef",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d9340123-90da-4cad-95f0-a3fcedd304dc"
        },
        "item": {
          "id": "d2291fcd-e670-41a3-b871-f46e2d872ae6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e2a50dba-0858-4968-a539-db12cfeb1ad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb0cc4-d769-46b0-ab11-8a45188263c4",
        "cursor": {
          "ref": "045507ae-6123-47c2-98b7-ba749656c58d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "da74d445-30c0-4c99-8b0a-769ab5576e9d"
        },
        "item": {
          "id": "72eb0cc4-d769-46b0-ab11-8a45188263c4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8837bca5-26df-46bc-890c-e19e093501ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b5dfee-8a20-42cc-8614-669ca80ec865",
        "cursor": {
          "ref": "df1ee020-8405-4c1d-b7d1-7201c5aec064",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ff18559c-09d6-4d66-a65e-086413f2700d"
        },
        "item": {
          "id": "20b5dfee-8a20-42cc-8614-669ca80ec865",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7a20828b-3edf-42de-9921-2c98d114da45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbb3194-020e-48d8-b06c-012050db1b99",
        "cursor": {
          "ref": "c202bcb1-b2fc-434e-81b9-0dc0dd44be32",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3d878acb-662b-464a-b866-04b755792129"
        },
        "item": {
          "id": "1fbb3194-020e-48d8-b06c-012050db1b99",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8cfac767-f18f-4cfa-be99-6a408636e8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88fdaa7e-788c-4fb7-82d3-6e26f3aba02f",
        "cursor": {
          "ref": "57a59a67-8ba3-48f6-8497-3e29cb8c299d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "13e55560-89db-41c4-bf5f-9cd0e2241045"
        },
        "item": {
          "id": "88fdaa7e-788c-4fb7-82d3-6e26f3aba02f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e8d8d433-8cc6-46fb-ab43-7aa93c9f6912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cc8fb8-a51e-4ec0-a4e4-ee09e84d3766",
        "cursor": {
          "ref": "75ff3619-70ca-4403-9dd3-3bd3647dc094",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e2d1ae36-6fd9-47f6-b356-8d92d7e7145e"
        },
        "item": {
          "id": "64cc8fb8-a51e-4ec0-a4e4-ee09e84d3766",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "98c477a6-d740-4d79-b7ff-fd84f1738f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa554450-12a7-4665-928d-96009a3f9333",
        "cursor": {
          "ref": "c68d1488-86cf-49cc-88f3-be577c802aa6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "31922dd6-358e-49e3-b2ca-61a7581802fb"
        },
        "item": {
          "id": "aa554450-12a7-4665-928d-96009a3f9333",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "212444dc-8dbc-4f05-99b0-07297b505122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f26dbf58-ce5c-4d36-bff2-8a9383b59136",
        "cursor": {
          "ref": "bbfbfcae-47ae-4f57-a60a-9b0cf0bdd689",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2a8c07ac-d78b-4253-a62f-2b1b0424b729"
        },
        "item": {
          "id": "f26dbf58-ce5c-4d36-bff2-8a9383b59136",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3b2fa7da-43b1-46ae-a96e-8c017fe63cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1783b776-0b3c-4c8d-b11f-d97077052fc4",
        "cursor": {
          "ref": "e10ad1da-f6af-492d-b8a7-7a755ec0925e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c49fcfa1-14ae-4557-a289-27560abbcbc7"
        },
        "item": {
          "id": "1783b776-0b3c-4c8d-b11f-d97077052fc4",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1c270b5c-882e-43bc-97eb-f805de0383ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3011601-16bc-4756-97f2-432d8ec5f309",
        "cursor": {
          "ref": "d0a3f178-49f9-4d09-8586-d124f6246ed6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2f688b35-d924-4bb6-b3ab-2a8d10951a52"
        },
        "item": {
          "id": "e3011601-16bc-4756-97f2-432d8ec5f309",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e183c714-6f9a-4ae5-965a-b7c59d3783b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1648bbfc-8d20-40f8-90cd-6adb1ff73489",
        "cursor": {
          "ref": "5779b2f6-a4b9-4b33-95a2-a934d69c8886",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0462c342-87b0-49ed-9fa8-cb2487255586"
        },
        "item": {
          "id": "1648bbfc-8d20-40f8-90cd-6adb1ff73489",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "72635a97-c4ab-4bf8-bc7d-3e86cf15390c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a787b39-e97c-4495-b1a6-c21f9e555752",
        "cursor": {
          "ref": "971bc13a-9459-4b63-aeca-ea4381cf5174",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de76dcac-362d-4a7b-8fb1-93e9053025f9"
        },
        "item": {
          "id": "6a787b39-e97c-4495-b1a6-c21f9e555752",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d65ce7e2-ead4-40bc-b9fe-a556bb01f2da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cc39b5-32f8-4e3b-8b1c-ff9bed7353e5",
        "cursor": {
          "ref": "17273820-5fa5-49d2-8c06-2b14bd922cf6",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "8c2a448f-a759-4b16-952e-21fe19dd409e"
        },
        "item": {
          "id": "a9cc39b5-32f8-4e3b-8b1c-ff9bed7353e5",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3b580768-097c-4c18-b564-fd6595c9beef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a198e87d-4fe3-475d-bfe8-1b1f2c130890",
        "cursor": {
          "ref": "448993dc-ab57-4586-9cba-a82f611c9272",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b84d06ee-eee8-4c8a-95b6-9f28caf18197"
        },
        "item": {
          "id": "a198e87d-4fe3-475d-bfe8-1b1f2c130890",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "620d3b29-8564-4e47-afe5-2bef9934b5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a61a8e2-35e2-4a6e-af09-4ea8a74d5954",
        "cursor": {
          "ref": "089f8775-0e6e-4a73-8e2b-7bbf78605f50",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c826f1d6-3f0e-4960-afa4-964fa19f30eb"
        },
        "item": {
          "id": "3a61a8e2-35e2-4a6e-af09-4ea8a74d5954",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "623ca761-4b2c-45c9-89c8-912329c8e85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f198aca-c462-4bf6-accd-1bd7f8ccacf7",
        "cursor": {
          "ref": "ace8fd2c-a769-4325-88c5-5ef91d6a75ca",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "72267395-b4bd-4c55-96ff-503cb4b8f998"
        },
        "item": {
          "id": "8f198aca-c462-4bf6-accd-1bd7f8ccacf7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "207b3ca2-9e8b-4664-a868-e65c32ab382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194330b3-2e16-4cb9-b1bd-93cf77a3cc29",
        "cursor": {
          "ref": "cb4fe77c-d8e6-4c5b-b035-65aa7ac55c61",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09a33a93-0e4e-4d28-936b-1d4642fc4b82"
        },
        "item": {
          "id": "194330b3-2e16-4cb9-b1bd-93cf77a3cc29",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "e6662238-900d-4e60-83aa-00e4fba4729f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080cbdab-30fd-4e4f-bcb0-93200a6643ff",
        "cursor": {
          "ref": "fc9512d3-64c1-473f-9131-40b34e9b581c",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "25ca1e90-b850-447d-81b9-2f432ecc08a9"
        },
        "item": {
          "id": "080cbdab-30fd-4e4f-bcb0-93200a6643ff",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2507ce94-bde2-4aee-8a47-26af04fd06e2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e5f75d-5e4f-40e2-b557-a5b40d3e7992",
        "cursor": {
          "ref": "91363f01-f8be-43d9-8832-f9d538ee9717",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "702603c8-44b1-4293-af2d-adb2f6f68603"
        },
        "item": {
          "id": "85e5f75d-5e4f-40e2-b557-a5b40d3e7992",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "d29479ef-e407-4ff5-aefe-233e8f191160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "bc2b5cb6-51d8-428c-b8e0-dcf40ad31813",
        "cursor": {
          "ref": "8dde89dd-47b5-49c9-89c1-5ebacbcac4ab",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f47e8418-00e1-44ac-8880-5dde1240ed32"
        },
        "item": {
          "id": "bc2b5cb6-51d8-428c-b8e0-dcf40ad31813",
          "name": "credentials_issue"
        },
        "response": {
          "id": "098bee58-74ac-4a5c-910b-3ef91da42f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "0a05feb2-58a7-452c-aeb2-efe2dca45c3f",
        "cursor": {
          "ref": "96b89518-8b68-409c-b6e7-4086817ed0f2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b9047c98-1169-4f9d-b469-32e74db1d8c5"
        },
        "item": {
          "id": "0a05feb2-58a7-452c-aeb2-efe2dca45c3f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ca2f356b-a686-44dd-845e-1aa6f059fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "73d9c3e5-560b-45bb-a6aa-7f759e21181c",
        "cursor": {
          "ref": "95670dcb-cb16-468d-b951-22448578de60",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7b48b38e-c810-48b7-a1dd-770f8c2c8bd2"
        },
        "item": {
          "id": "73d9c3e5-560b-45bb-a6aa-7f759e21181c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d0e1b008-2bb7-498e-b8f0-66bbf2521e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "ea21b8a8-eef2-4d37-a166-e062bb7e3881",
        "cursor": {
          "ref": "e7097457-76d1-47b9-86b7-7a3f90947a12",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bb7d9485-9d47-4d6f-af32-0211ae51f096"
        },
        "item": {
          "id": "ea21b8a8-eef2-4d37-a166-e062bb7e3881",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "506a7cbe-967f-4e93-a256-320db3b6b150",
          "status": "Created",
          "code": 201,
          "responseTime": 11461,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a271eb83-9c4f-42f6-9f08-69e30a7b20be",
        "cursor": {
          "ref": "c3cdf727-4c69-4551-9d8b-b5986846ba6f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7ee9c078-aa25-4660-92bb-672e605010e3"
        },
        "item": {
          "id": "a271eb83-9c4f-42f6-9f08-69e30a7b20be",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "19f8940e-cbee-4cfa-9ccb-5d39bd103a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6184fe1f-582e-4c09-9610-b404468096ec",
        "cursor": {
          "ref": "0f7fcd70-91b3-41c8-a2d0-de72e7495a16",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "8fca3bfb-bb09-40ff-a030-f3e8a06f392b"
        },
        "item": {
          "id": "6184fe1f-582e-4c09-9610-b404468096ec",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d39675e3-a82b-41ee-9e8c-6dd00d9031c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9a5394a6-de30-4136-b29f-a9897e012c24",
        "cursor": {
          "ref": "97323497-bfab-4261-9ccd-ac46b9b7fd7c",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c5db8b74-5be2-450c-9579-695b4ab5c5ee"
        },
        "item": {
          "id": "9a5394a6-de30-4136-b29f-a9897e012c24",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "311f76e1-9221-482e-b1bb-2c4395793afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06aacb7f-0e96-4411-b49b-3c70475b5854",
        "cursor": {
          "ref": "a7025b83-f20d-48f6-8b67-c62eea7b90c9",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3eb1de99-44f6-4a6b-9306-9eeb87a00b80"
        },
        "item": {
          "id": "06aacb7f-0e96-4411-b49b-3c70475b5854",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "40b5a42d-dcd7-43b2-994e-0c9f679d41a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b65c8b-bcd2-4afa-9a82-22ad203fbe4f",
        "cursor": {
          "ref": "687ec3f7-c9b0-4c2c-a8dc-5c03c4faaffc",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "dd62d480-09c8-484f-a268-519a663312cb"
        },
        "item": {
          "id": "e3b65c8b-bcd2-4afa-9a82-22ad203fbe4f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c5353918-5809-4e8a-b3f3-943f9879d336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed9bdac-6299-4c20-b5cd-e544c5131c59",
        "cursor": {
          "ref": "e45218a5-80f8-4bfb-b72e-e318b882baf3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ea8d6294-fd36-4b3a-af62-268cffa6e7ec"
        },
        "item": {
          "id": "3ed9bdac-6299-4c20-b5cd-e544c5131c59",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "015375ab-65a4-446f-8427-fa426f123b52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a3c7242-b247-4679-a1ae-b3cf8de7dd07",
        "cursor": {
          "ref": "399016dd-68d8-4988-a69e-22d1f807591a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "21b1a17c-2301-4e87-9c8b-81261e6473de"
        },
        "item": {
          "id": "4a3c7242-b247-4679-a1ae-b3cf8de7dd07",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7152b090-3bf6-4848-8054-6aac01d9b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e780a7a4-7654-4ee4-8fbb-b45dbe45a83c",
        "cursor": {
          "ref": "5789c87d-ea57-478e-91d0-fad9ee02702d",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7962cb5b-47f9-476d-9aef-337c3864ab3b"
        },
        "item": {
          "id": "e780a7a4-7654-4ee4-8fbb-b45dbe45a83c",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b2d6f959-62f8-40e2-99dd-b94f718e0241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7034458e-0c8c-43ab-9276-6e19246ae894",
        "cursor": {
          "ref": "b07a4fa9-e3fd-4136-93b5-c3124223c0e1",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6cbec5e8-12d4-4484-a640-18b36cab5341"
        },
        "item": {
          "id": "7034458e-0c8c-43ab-9276-6e19246ae894",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "70c8a28b-910f-4479-baa4-65f58a2e328e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6411ee-2905-44de-9356-f035609a20f2",
        "cursor": {
          "ref": "58265c82-e0cb-463e-9552-e962816af66a",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "28de7f32-0615-4a3d-88e9-43045378f06a"
        },
        "item": {
          "id": "ad6411ee-2905-44de-9356-f035609a20f2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f16527b1-b6fc-44c1-8af0-ecf29717c7a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ce31d2-4d1f-45f7-84ae-a9fafce4d2b7",
        "cursor": {
          "ref": "9dbc144d-5c80-4660-ad53-c114119aad34",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bcaa90f1-7eaa-4593-8c6d-2f892fe85907"
        },
        "item": {
          "id": "e3ce31d2-4d1f-45f7-84ae-a9fafce4d2b7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "79f223c3-3bc8-48fe-b428-268ea27bbf64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a16e62a-3f9a-4fe9-8c2e-4e271747b2d6",
        "cursor": {
          "ref": "a248ddd5-c277-4279-8807-b5ba8b7b0dbf",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b33deb0e-a425-4927-9b0f-0db6fef83e18"
        },
        "item": {
          "id": "3a16e62a-3f9a-4fe9-8c2e-4e271747b2d6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ac203d33-3f6a-484c-8bba-fc018a344da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b171e07-ca90-487c-85d1-37967c763602",
        "cursor": {
          "ref": "434acd32-f04b-466d-a801-e4cc58811aa1",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "805e0a92-e5d1-4a6d-afbc-3caf7e7c45e9"
        },
        "item": {
          "id": "7b171e07-ca90-487c-85d1-37967c763602",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a4f06ffd-118e-4c57-af20-3aab6f98b863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c370c7ec-23b5-427a-b18c-fa1adba4ab4d",
        "cursor": {
          "ref": "3c479b8a-954e-40dc-a079-5e16662402d6",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3f959205-4139-42b4-a66b-b2dc5b0bff47"
        },
        "item": {
          "id": "c370c7ec-23b5-427a-b18c-fa1adba4ab4d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "fce50d39-727f-4651-a2a6-438a570ce6d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585d9c78-9941-4b76-9e17-499a2415b980",
        "cursor": {
          "ref": "fd68349a-0409-4648-b1ca-67ecebb9068f",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ac81077-91dc-474c-b070-3103464a3be7"
        },
        "item": {
          "id": "585d9c78-9941-4b76-9e17-499a2415b980",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "79d2e840-4cef-471e-8741-46a9fb3c83e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfccdd0-75f2-419e-968f-9a7fddcdf217",
        "cursor": {
          "ref": "fabe27a8-0fcf-4829-bd42-9dea988c2261",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "97d8c957-223f-4a97-bf50-8a622544f73f"
        },
        "item": {
          "id": "bbfccdd0-75f2-419e-968f-9a7fddcdf217",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c30c82b0-b534-494f-8824-f42bf41bac3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcbfc56-a4d0-4524-b783-28c0c4499673",
        "cursor": {
          "ref": "d47863ef-4a12-4d2e-8957-19eb278adce0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5a745ef7-8dad-4e54-9577-952c12c6a54a"
        },
        "item": {
          "id": "4fcbfc56-a4d0-4524-b783-28c0c4499673",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "15ff99a6-bff7-4926-80bd-d4a47cd39355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29060a00-eca8-4f76-9207-68117bb2e250",
        "cursor": {
          "ref": "10055eab-45ca-45d8-a5b5-a021796d019e",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "168e9d7c-9df8-4608-94c6-616a21b59477"
        },
        "item": {
          "id": "29060a00-eca8-4f76-9207-68117bb2e250",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a4a9f99-fc2f-4c7b-b3f6-5da56d34cf83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a5a11c-e464-4b7d-9b27-bcf3a5f0a3a3",
        "cursor": {
          "ref": "f5f107c3-afe0-4c9d-b19b-153143f9d9b7",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e32a4d1e-7394-4bfb-979e-c25434c9e535"
        },
        "item": {
          "id": "57a5a11c-e464-4b7d-9b27-bcf3a5f0a3a3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "91aeaf47-4b56-40d0-93be-7a9f86010d37",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "1e2f87ee-4df7-42fa-888b-4d0ce1638108",
        "cursor": {
          "ref": "24b4641e-8b8e-40a9-b59d-5d0bbbb53d28",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "ea520299-8b57-4543-98d1-7032338c03c4"
        },
        "item": {
          "id": "1e2f87ee-4df7-42fa-888b-4d0ce1638108",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd9dbb16-38f5-4cb9-9a98-f63761def5ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4391889-c91a-4160-af05-4a945d051102",
        "cursor": {
          "ref": "a3241746-80ed-491e-81b1-6c6b4fcfda93",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7bb7718f-2d05-4aa0-9df7-e66689203a40"
        },
        "item": {
          "id": "b4391889-c91a-4160-af05-4a945d051102",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f7900c0e-1658-4003-949a-1e91523d32b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7971fa62-5257-4bb4-b88b-667099819e98",
        "cursor": {
          "ref": "35608865-50c9-43a0-9f0c-c2be1005f7eb",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2e5e60ca-dc7d-48aa-830a-e9ceb351fa0a"
        },
        "item": {
          "id": "7971fa62-5257-4bb4-b88b-667099819e98",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c20316de-70a0-4030-841e-58c3398c450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcd8caa-6159-47cd-821b-bf1c10539355",
        "cursor": {
          "ref": "8c70b883-0518-467b-81a6-e908e9c2923c",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "de32edfa-724b-4ff1-a473-09e2f9e58714"
        },
        "item": {
          "id": "4fcd8caa-6159-47cd-821b-bf1c10539355",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2ccd1bbd-ac9f-43ae-9ef2-50cd08c00775",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30e14aab-defd-47ba-b9d6-885bd4e63723",
        "cursor": {
          "ref": "8aa1fc60-277f-4484-afba-f865e5343e8d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "83cc5a2c-93a4-4e21-8249-53182b516935"
        },
        "item": {
          "id": "30e14aab-defd-47ba-b9d6-885bd4e63723",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cd8e8969-c54d-41c1-93e2-f3c8e5783c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0674e814-1966-4242-be9a-46ac4efd5803",
        "cursor": {
          "ref": "687104b1-444e-47b4-a522-5005b5406b6f",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "da76cfe6-2c0e-46ba-93cb-6a6ad93750c6"
        },
        "item": {
          "id": "0674e814-1966-4242-be9a-46ac4efd5803",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c4019a31-d09c-43f6-86fc-50d7508b956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2adfdd-8a14-41a0-ac58-bdb0f9317168",
        "cursor": {
          "ref": "708f794f-85bd-4fc1-bd59-5b644369e4ca",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "45c1217f-6089-4604-ad55-e1f1b50f84de"
        },
        "item": {
          "id": "df2adfdd-8a14-41a0-ac58-bdb0f9317168",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "84a97bc7-8add-4b8a-b94c-af4e0188c0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95af3475-aa92-4e37-a047-4296d540ad44",
        "cursor": {
          "ref": "e306b369-0c73-4c07-9080-50773054c5f3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32683d67-3835-4123-a52d-42f4dcb5b53a"
        },
        "item": {
          "id": "95af3475-aa92-4e37-a047-4296d540ad44",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "47012bba-143a-43e2-8c8a-1f51deba6095",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 41,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5a97097d-6cb6-480f-8756-845812c0967c",
        "cursor": {
          "ref": "3b3a7ae8-fefc-45f4-957a-93d6ac6ac6a6",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "ec89bf45-d85e-4aea-9d9c-d257d10db457"
        },
        "item": {
          "id": "5a97097d-6cb6-480f-8756-845812c0967c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "08c90307-10bd-49d1-8c76-c7c74192cb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a293e0d2-b246-4660-be4d-c9a108c884ed",
        "cursor": {
          "ref": "48ede397-444f-4de9-b160-b82864eecb4f",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "60da4d24-ba5e-43b5-a600-f1a7818b715e"
        },
        "item": {
          "id": "a293e0d2-b246-4660-be4d-c9a108c884ed",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f4f374c2-4b6d-414d-a72f-40fd633525f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c694f5b-7f72-4907-98ac-1c5c5d470fac",
        "cursor": {
          "ref": "b4089c6e-cf19-481b-92ec-1993aef3aa2b",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "4f130ff2-2526-494c-bcc8-5f2571a7e5ee"
        },
        "item": {
          "id": "2c694f5b-7f72-4907-98ac-1c5c5d470fac",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a628f9de-c2ed-4225-bb12-aa57328ea39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b131c1e0-d943-4ede-aee1-cd108a0af6b1",
        "cursor": {
          "ref": "c2e601a4-758b-4a7e-aa83-3a47e004f770",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4c729fed-d16b-4985-8f85-5f63c2fe425a"
        },
        "item": {
          "id": "b131c1e0-d943-4ede-aee1-cd108a0af6b1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "045d47ac-81f0-4f3f-bd5e-22dac26259d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4019d836-e662-460c-8b10-8ef28407842c",
        "cursor": {
          "ref": "d3fee33b-eb9a-4e4e-a2c8-cb85248801ee",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5ba64337-c5a1-4b62-9d7a-4b2782a1975a"
        },
        "item": {
          "id": "4019d836-e662-460c-8b10-8ef28407842c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d6f3278a-2503-4738-9459-fec27a1e90e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797ea80d-1a27-4181-8252-9267068bede0",
        "cursor": {
          "ref": "e4556bfe-cde6-46eb-8157-78ef04d2045e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "bae892a7-1199-44bd-b4b8-40974aff5de7"
        },
        "item": {
          "id": "797ea80d-1a27-4181-8252-9267068bede0",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "36883509-e405-4860-91f7-3139c859e7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fedf4cd1-8e77-46e0-b2d5-0586648db319",
        "cursor": {
          "ref": "95ba5a57-dba8-4b7c-a8de-5cd422bb0e55",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b50fa835-06fb-48db-9a89-7249755a5dda"
        },
        "item": {
          "id": "fedf4cd1-8e77-46e0-b2d5-0586648db319",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "547fb805-98e1-48cb-8450-acab5cf22aed",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "ed80a579-6934-4aff-825f-fbc9fa3c1a5a",
        "cursor": {
          "ref": "ae4ac8f3-e220-4f6c-a37e-d75462dcf996",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9a9f9ef7-9e23-4723-9868-2bda77ab7b1d"
        },
        "item": {
          "id": "ed80a579-6934-4aff-825f-fbc9fa3c1a5a",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7d103a2e-cb47-45c4-ba72-c1512fe427ee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "3aab6b65-d0d2-4568-94c0-166f64191251",
        "cursor": {
          "ref": "9f4f2584-4539-489f-b9d6-008b5fab08be",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "51874305-7d27-457c-9c31-57e85e7f3058"
        },
        "item": {
          "id": "3aab6b65-d0d2-4568-94c0-166f64191251",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "37bfba2d-1bbb-45d6-923a-2cf7c379ad3b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "6c53d3ed-135d-4ec9-a735-ac5ef738f691",
        "cursor": {
          "ref": "de9b4039-7d2f-47b7-8982-c854dc3e7715",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0b894658-8e88-417b-b985-e38314a01974"
        },
        "item": {
          "id": "6c53d3ed-135d-4ec9-a735-ac5ef738f691",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d2d06ea8-47e4-4224-b683-b63b8d649c90",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "74605ed4-cdb5-4a02-95fa-45db2efff58c",
        "cursor": {
          "ref": "76cc2610-9af0-430b-9fff-4e635d5fb299",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fc9d7994-aacc-4bb9-80b4-fd6ab9f7e445"
        },
        "item": {
          "id": "74605ed4-cdb5-4a02-95fa-45db2efff58c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "d991d52b-c7bf-4c23-bc2b-54189f4e0749",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 32,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "b238c9aa-aef3-4f55-a3ba-f4db0010e09e",
        "cursor": {
          "ref": "93555904-1c7b-4cc0-8683-fdaba0116b74",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8759fafc-2dee-4f43-9f37-fc24bb6146a7"
        },
        "item": {
          "id": "b238c9aa-aef3-4f55-a3ba-f4db0010e09e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "da3fe894-0b0e-4f8f-a40b-3b4101141375",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "9b90dff1-5c4f-4046-bea7-c538d4fe9214",
        "cursor": {
          "ref": "b30e6896-81da-4d70-adcb-5b89442e59e4",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3809144a-212f-40ce-a83b-8afc7ac4c7a3"
        },
        "item": {
          "id": "9b90dff1-5c4f-4046-bea7-c538d4fe9214",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c24232f8-f73b-422d-8d9b-40037178b94e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4b0d46-a4fd-4832-96c3-83e87e37a525",
        "cursor": {
          "ref": "ee1faafe-0a60-4564-9362-104ef6641427",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "135d06c5-7375-4e98-bd27-b4693642e554"
        },
        "item": {
          "id": "4d4b0d46-a4fd-4832-96c3-83e87e37a525",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f868bda2-5694-4c01-8675-d60b213e5c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67107304-daea-49ed-941c-d0d25f341dfa",
        "cursor": {
          "ref": "05db4c30-6643-4958-b0fc-0acef0f6c032",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "991c4b57-13cd-4137-aab6-a40cba764080"
        },
        "item": {
          "id": "67107304-daea-49ed-941c-d0d25f341dfa",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8603f4fb-f33c-477f-b91e-393a5d202e53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efab54ca-d0f9-4973-87fd-bed96c15f9c6",
        "cursor": {
          "ref": "1669c27c-5648-43f7-bdef-c8c8a910c3bf",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "07060019-7fea-4bc4-a553-da904e00041d"
        },
        "item": {
          "id": "efab54ca-d0f9-4973-87fd-bed96c15f9c6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "04ff77dd-0bc3-4c6b-9a1e-cc157f00c129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6b8d4d-46da-4481-a49a-46eaf1c0ff1b",
        "cursor": {
          "ref": "6c97cab7-9e5d-4396-b70a-e25cf9a9e06a",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "96655b24-8092-48d4-b120-cae56bb6c63e"
        },
        "item": {
          "id": "8e6b8d4d-46da-4481-a49a-46eaf1c0ff1b",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bf08aefd-15a7-44cf-9248-bd607342e16c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116702cc-8a70-48d9-b655-6beccdcedea7",
        "cursor": {
          "ref": "6b2c46a5-7ff0-4469-921e-66a69af33a75",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "17ac7ceb-3c7e-4bb9-b581-88813220d182"
        },
        "item": {
          "id": "116702cc-8a70-48d9-b655-6beccdcedea7",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8933a166-4be1-4b83-b3c4-4b5e2e1e3ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b33e9c-5aaa-49e0-b981-6efc67146c15",
        "cursor": {
          "ref": "b10299fb-81a0-474c-a8a6-87e38da6035b",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cb56f51b-69f3-404c-b5a3-66c3d331d5bb"
        },
        "item": {
          "id": "e6b33e9c-5aaa-49e0-b981-6efc67146c15",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ebb39502-1a6b-4340-90ec-0970990b537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abd1c6ba-b46e-437f-94fd-02ea1b592874",
        "cursor": {
          "ref": "da58e0b9-2d61-46ef-8f06-79b7aaffc31a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0417e42b-f7a8-4c5e-927a-db45a343eb2a"
        },
        "item": {
          "id": "abd1c6ba-b46e-437f-94fd-02ea1b592874",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "7730ba71-d2eb-45d6-b1da-77dc037ddb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a33fd6-3ec4-4dd8-ab1e-54d7e8394344",
        "cursor": {
          "ref": "e2c2f43d-261c-4205-b64a-1cdc9c9ff711",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f68544cd-b980-4944-b36f-6fe2be587195"
        },
        "item": {
          "id": "f5a33fd6-3ec4-4dd8-ab1e-54d7e8394344",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "7bcbc191-7361-4496-8c78-46320136923b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6462a174-b565-4212-873a-cf7772b57276",
        "cursor": {
          "ref": "e3a5069d-09e5-40f0-96dd-341fd751a6b4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1bc167eb-a4ab-426b-9d7c-a3c0005daeef"
        },
        "item": {
          "id": "6462a174-b565-4212-873a-cf7772b57276",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a602e450-b1fa-4a82-9e8f-4025757ad78a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891b0f66-39d9-4429-8251-803f93de0142",
        "cursor": {
          "ref": "85521591-bd40-423c-b3ac-f81c5a4c80c5",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "187daed5-727f-4d4c-b11d-e9d834787f04"
        },
        "item": {
          "id": "891b0f66-39d9-4429-8251-803f93de0142",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1c21e78a-fd3b-4c5d-a26b-11166cb08f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1111538-ebf8-4ffc-a877-d7cff35d6cb7",
        "cursor": {
          "ref": "c08fedb3-4778-48c2-a9da-e9630cfe5661",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e699265e-9859-4098-8d58-9ed443b8b27e"
        },
        "item": {
          "id": "f1111538-ebf8-4ffc-a877-d7cff35d6cb7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7067f0b1-f110-434b-8d4a-a291b76dec07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add55f61-5f5b-429a-a8e0-32165c843937",
        "cursor": {
          "ref": "a1cbf4cf-e6b4-48c3-9574-e86a6b275383",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0bbee182-2cb3-4e5b-8532-f4d489b01769"
        },
        "item": {
          "id": "add55f61-5f5b-429a-a8e0-32165c843937",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2b6f65be-fee8-4538-84f6-a337b4c2ac5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7768da-0a5f-44b8-a33c-d3ae69cf1c63",
        "cursor": {
          "ref": "a6cb262b-4bc2-4322-9725-9d5bbe7e529f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "4d38b8f1-2c70-4196-a957-9ceb56b95c13"
        },
        "item": {
          "id": "1c7768da-0a5f-44b8-a33c-d3ae69cf1c63",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "881d35fb-408c-446e-8713-0bb7951e6328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd05a06b-ab87-452e-a0e8-1cce442c812c",
        "cursor": {
          "ref": "2f611381-a3dc-432a-a081-40dc39f11066",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1e001c57-fa0c-4a9c-a878-8beaf09f1f8e"
        },
        "item": {
          "id": "cd05a06b-ab87-452e-a0e8-1cce442c812c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4b16ed0d-7fbe-4cac-8b09-089d7a7af5bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd8183c2-68bd-42f6-a017-e31bf2d63f03",
        "cursor": {
          "ref": "f697bbd7-9a87-4648-9431-14804f8fa1ed",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ce8876f2-d171-4650-a0ae-2f671386a89a"
        },
        "item": {
          "id": "dd8183c2-68bd-42f6-a017-e31bf2d63f03",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "bed2ab2e-2e6c-4d3a-9024-3e0d37a2616d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ddc9e9-eedf-4092-9600-0b429e6872f4",
        "cursor": {
          "ref": "7f4b2ba3-4d53-4acc-a1c9-5e8520000b7b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8d5a74d3-2a24-47ef-804a-b9a22f7398df"
        },
        "item": {
          "id": "27ddc9e9-eedf-4092-9600-0b429e6872f4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "957847ca-a01a-4112-b412-f9f6bfa74ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0f953b-2d27-47cd-930e-f080d82a8c5f",
        "cursor": {
          "ref": "4bdd4b83-cb7d-434c-83dc-115b2e5c6c74",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c36a7402-4341-46bd-9a07-fcadb420cb64"
        },
        "item": {
          "id": "3b0f953b-2d27-47cd-930e-f080d82a8c5f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "95edbdf4-79f6-46c7-9561-8e33ae41d163",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "ab24d9a5-9a54-4565-8ef7-aded016c5f09",
        "cursor": {
          "ref": "1f730e91-217e-491f-bbe0-1044d776d9b2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c1fa091-0826-4a9d-b0e7-325f3f02c66d"
        },
        "item": {
          "id": "ab24d9a5-9a54-4565-8ef7-aded016c5f09",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "54117a9c-c69d-4106-9f88-f8a40501d622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa4ea58f-0242-4b56-a098-5f245b843724",
        "cursor": {
          "ref": "9d6a3770-1538-4da7-bef5-9daf0c6f6f71",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3205c1fc-87a7-41da-9baa-db7b3dc72c73"
        },
        "item": {
          "id": "aa4ea58f-0242-4b56-a098-5f245b843724",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f946be6b-264e-4eae-a565-54a7074a7b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24835ea9-2cec-42f6-8f01-01c5ef0fdaf1",
        "cursor": {
          "ref": "e0284dd4-b781-42d0-84f9-52e9e9cb3e40",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "56b718c6-6380-4116-bbf6-5df89475e84e"
        },
        "item": {
          "id": "24835ea9-2cec-42f6-8f01-01c5ef0fdaf1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "415a9611-1496-4303-ae26-8de3f4ba59cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777b5f01-bb4c-41fb-9d42-954c9a078128",
        "cursor": {
          "ref": "0a8572a7-c8df-4b5a-9864-2b19e682aaaa",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "958a048a-db81-4525-a0c0-76e4d1716fa3"
        },
        "item": {
          "id": "777b5f01-bb4c-41fb-9d42-954c9a078128",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "37fd5fd8-aa29-410c-b6b4-37c7b75ac7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351c2149-c631-427d-b9f7-6a0f4dbaa51d",
        "cursor": {
          "ref": "a1efd1a2-d84a-4957-bc88-04c4b04e84e0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "906074da-d5d0-4a0a-9049-b06700b0b311"
        },
        "item": {
          "id": "351c2149-c631-427d-b9f7-6a0f4dbaa51d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "378758e5-138e-4c17-ae1c-a25089325cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025bf7ab-2ac5-4b14-b58a-f731299140e7",
        "cursor": {
          "ref": "e72f8cf8-0dbc-4385-b510-e8dd1b9ac4fa",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a14b5d0-b06c-4984-97c2-38027c60325e"
        },
        "item": {
          "id": "025bf7ab-2ac5-4b14-b58a-f731299140e7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5ffd7e15-5867-48eb-8c2a-5aef0a2d086a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b960ef92-6b63-4f4f-8ae9-4b148b161b05",
        "cursor": {
          "ref": "b5677bc0-54d1-43c5-a593-8c6e07fe41b0",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "475cab89-ee38-4f47-9e74-7fd36f7ab176"
        },
        "item": {
          "id": "b960ef92-6b63-4f4f-8ae9-4b148b161b05",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b63e55c5-11c9-4419-b092-5b3b7be84efd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f136e82-6ee5-4d34-94f8-ab33d8c9b075",
        "cursor": {
          "ref": "dbe0bfb1-49e1-418e-a1cb-d3810544dc88",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f944d0cd-1b77-4eb0-af92-032309739a75"
        },
        "item": {
          "id": "0f136e82-6ee5-4d34-94f8-ab33d8c9b075",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3deeb445-ef8f-441c-a8ba-4bbd6e73899d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9250bbe2-8748-42f4-ba5d-21668b542091",
        "cursor": {
          "ref": "c24a0fd1-9ea8-4c6c-9725-cb736bba709e",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "359c5ba6-bbf5-4aa8-9f09-9c842399d4c6"
        },
        "item": {
          "id": "9250bbe2-8748-42f4-ba5d-21668b542091",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2ecc88d3-ae24-446b-a532-4e4e3ceeb9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cc984e-1c45-4918-ab0a-7d9c2a807fcf",
        "cursor": {
          "ref": "f840fbd1-99e7-4b28-b7d4-44a967ade6a8",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a4779db8-1429-4046-8e26-62a0a02ed6de"
        },
        "item": {
          "id": "73cc984e-1c45-4918-ab0a-7d9c2a807fcf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f5cafb81-82d9-43eb-92d0-60c53a669704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fc488d-169d-44ad-a769-3864297cc948",
        "cursor": {
          "ref": "72882786-7e0b-4f83-a2f7-d7392d72cbc0",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "c623fe36-3120-4775-9201-a8c6737d3a7f"
        },
        "item": {
          "id": "d7fc488d-169d-44ad-a769-3864297cc948",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "97196488-069e-4e01-9cd3-41e61b7979b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04cad58-4ccc-4b48-9500-31d65a9bfca9",
        "cursor": {
          "ref": "56749d78-1bfb-4318-b674-ab792b6a7144",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "82a1fd25-2868-41ad-b8bb-f468e3fde6e7"
        },
        "item": {
          "id": "b04cad58-4ccc-4b48-9500-31d65a9bfca9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dc694711-0d4e-49d2-a592-6095b234580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3c51c0-f3a1-4a9b-9999-53e4b7d0d0df",
        "cursor": {
          "ref": "c463b315-23f8-471e-841c-98ae3faeed97",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c3ad3a3c-a65b-4ee2-8a5c-dc0235f702f8"
        },
        "item": {
          "id": "bc3c51c0-f3a1-4a9b-9999-53e4b7d0d0df",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ecc0abc9-bb95-4b4e-90d8-c6c50492cd98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e757d0-7683-4e12-91e5-28d503f3e099",
        "cursor": {
          "ref": "a76ec1cb-d690-46ad-8e70-9a3028216e42",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b21ff8ff-e3e0-40d3-93d5-135d0fe13f96"
        },
        "item": {
          "id": "57e757d0-7683-4e12-91e5-28d503f3e099",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9fd3033c-24cf-420e-9eef-45d015fc3e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5712ee9-61ad-48b6-9b34-0a038ac08101",
        "cursor": {
          "ref": "86dc5185-82b4-42b2-9541-adc34f197c8d",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "25c04c7e-4068-45e0-9506-8be460e73848"
        },
        "item": {
          "id": "b5712ee9-61ad-48b6-9b34-0a038ac08101",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "308ce86c-710a-44c7-bb8e-e210602331dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b1edf3-8e59-4314-a7eb-969b949e13cc",
        "cursor": {
          "ref": "8dd250db-3a1f-4755-8be9-093c9441be8f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "66640c74-2d81-4797-9b04-2424ba46981b"
        },
        "item": {
          "id": "88b1edf3-8e59-4314-a7eb-969b949e13cc",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e58fd351-27a5-4430-add5-7a18cee14445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89bef00-3648-4324-899b-f0b73f588e2b",
        "cursor": {
          "ref": "26a9efe2-d38e-40f8-97e6-38200dcc0629",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bfdd1450-7aba-48a9-8110-92798fb9e860"
        },
        "item": {
          "id": "b89bef00-3648-4324-899b-f0b73f588e2b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0d99548c-41dc-4cc0-8852-ed112d0c02df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c531a4f-005a-4d72-8f6d-5cd39ea5c78a",
        "cursor": {
          "ref": "034fc8e5-b212-4054-8c14-0dec4cf4317e",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "db84cb14-014e-4897-98e2-1cb7f2764133"
        },
        "item": {
          "id": "2c531a4f-005a-4d72-8f6d-5cd39ea5c78a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a1c471c3-815d-458f-97a3-8b171671f8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca8958b-0b12-4012-9f12-705ddc43be34",
        "cursor": {
          "ref": "f0be79cc-65a3-4e54-b4c2-c4d50d10f685",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9234db46-325d-43b2-82ca-6796cd45ccac"
        },
        "item": {
          "id": "8ca8958b-0b12-4012-9f12-705ddc43be34",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e9bb9ed4-b871-41c8-acf9-eeffd214b1b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02fb3cd0-47b6-4da7-ba8a-fed1474a3bc9",
        "cursor": {
          "ref": "fdc1fec3-74af-4319-a3a8-3513f2c02290",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "5df10bec-8630-481b-90ca-5699f3011af6"
        },
        "item": {
          "id": "02fb3cd0-47b6-4da7-ba8a-fed1474a3bc9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c3a2cf2c-7846-4979-8af4-cd6ae55c1eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd9124a9-3db1-4137-bf96-f59523302c96",
        "cursor": {
          "ref": "d812f443-9b7e-44a3-bfa2-dcdae1937d47",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e9919eb0-d055-4157-8c50-2cbcdf3429e2"
        },
        "item": {
          "id": "fd9124a9-3db1-4137-bf96-f59523302c96",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bdb37ce4-fd88-492a-b60c-1fa0c524005c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc784175-7972-44be-9318-14cc88c8a2d3",
        "cursor": {
          "ref": "9e25212c-9393-466b-8a67-fee8d9195a55",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "34ac3274-4ba2-4de4-b836-10fa56d17813"
        },
        "item": {
          "id": "bc784175-7972-44be-9318-14cc88c8a2d3",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "94a69552-876e-43f2-9985-b3d60b4badd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2acbc1-6a7b-42f2-9daf-618ce5fd6b08",
        "cursor": {
          "ref": "3b496084-418c-4a07-b644-7446cac5db87",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "20f5fd5d-c30b-4b04-ab20-a6aebf6023d2"
        },
        "item": {
          "id": "8e2acbc1-6a7b-42f2-9daf-618ce5fd6b08",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0a95a464-d7e1-48c9-b749-273c99a3d176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe39401-d2c5-48a4-8457-2c59875b7970",
        "cursor": {
          "ref": "fd92803b-4438-4a88-926b-bba517ac476b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b13b892a-1797-4b5c-b443-2398cff6b913"
        },
        "item": {
          "id": "0fe39401-d2c5-48a4-8457-2c59875b7970",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a49a2760-7c17-4381-8d9b-7eacfa76c7c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "288de69d-d258-4781-ac89-649df3372e15",
        "cursor": {
          "ref": "e3d907ad-6bbe-4330-8bcf-93ed75dd9eef",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "5826e249-f210-4296-9750-4bf5765d9ed9"
        },
        "item": {
          "id": "288de69d-d258-4781-ac89-649df3372e15",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0e1d2e7e-f700-4276-8c26-87d2fe21ac74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d99cc9-6dcb-4eb2-a0c6-1aa4a0b9225c",
        "cursor": {
          "ref": "000e11af-3a0f-48ae-8d30-85fae3e88f9e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "28ad6537-263e-44c9-b868-aa5614591e2d"
        },
        "item": {
          "id": "63d99cc9-6dcb-4eb2-a0c6-1aa4a0b9225c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "3c844c04-84d1-4640-8b69-9286dcabcb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c715fe-3088-4f43-ba89-bdf23733d737",
        "cursor": {
          "ref": "df783130-92d8-4684-b69b-9748e4d66001",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "78701319-05d5-44ef-9dfb-0e26a51e5a7f"
        },
        "item": {
          "id": "32c715fe-3088-4f43-ba89-bdf23733d737",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fe42acc4-bf5b-4b45-a998-8318942441f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0938a59d-e3b9-4c8e-8fde-3afff4fd334e",
        "cursor": {
          "ref": "fd80f90d-7191-4dc6-a96d-17f3529d374a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "18fa534f-a6a7-40c4-a19b-85ce9705f2ee"
        },
        "item": {
          "id": "0938a59d-e3b9-4c8e-8fde-3afff4fd334e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f4281155-f8c1-405c-b09c-351e243a620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a4ea6c-5965-48b5-b2d1-c8698ab08d94",
        "cursor": {
          "ref": "cb77bf95-63ec-40f0-a7e2-68bed40f184f",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "531b9c5e-3ad0-4056-9f2f-e7d436e0b694"
        },
        "item": {
          "id": "01a4ea6c-5965-48b5-b2d1-c8698ab08d94",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e5af64b0-b9c4-4343-9f06-ca8e1df657e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ecc399-7df6-4a6e-b95b-a9a6f29d19d6",
        "cursor": {
          "ref": "d839b4e6-b03e-4673-a70d-847b542fcd8e",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "eae26eb8-a2ce-476e-8a39-2e31c6bbfd89"
        },
        "item": {
          "id": "10ecc399-7df6-4a6e-b95b-a9a6f29d19d6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "93211bd7-a0bf-430e-938a-6f7de941d692",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8851690-53fa-49a2-91f7-ad4f4c6f8ded",
        "cursor": {
          "ref": "00531e4b-a4bb-4236-8f15-7cb340c1f8ad",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "764d8ad0-e645-435d-8ff2-10a550f9868d"
        },
        "item": {
          "id": "e8851690-53fa-49a2-91f7-ad4f4c6f8ded",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e743531e-12cc-4f6e-9b4f-29d7ccf998d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13df12c-4898-4718-b314-208117f33c29",
        "cursor": {
          "ref": "449febb8-ece0-4564-8b40-4c9f1db4792a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a3538c1-17d6-4f7a-8acc-bc21b594260e"
        },
        "item": {
          "id": "e13df12c-4898-4718-b314-208117f33c29",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "8e90b7da-eb0d-4a98-bb29-23d20c7e6f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44bca74b-a2b8-4bcf-b172-405f148d1a39",
        "cursor": {
          "ref": "8b34bbb5-72f8-4422-819d-cd0f61104c46",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "fe524429-e508-4ae0-a730-a635cae9da49"
        },
        "item": {
          "id": "44bca74b-a2b8-4bcf-b172-405f148d1a39",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c49c985d-a0a0-4c65-a02a-00d64bd5956c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ef00b6-8a49-4781-ad0d-72686f163c3d",
        "cursor": {
          "ref": "1d927b81-237e-44f5-b8a9-92937c6a3285",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "91965e38-e2cb-4e39-8fe8-08e6721b8d18"
        },
        "item": {
          "id": "93ef00b6-8a49-4781-ad0d-72686f163c3d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "3bf15786-0169-49e9-868e-2dcc38d14582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de02154d-4848-49ea-8f42-fa72cc236d5e",
        "cursor": {
          "ref": "b1a208c0-edd2-4e29-80bb-f3715a38f0aa",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "0ec714e4-f902-4980-8c90-7c97225cbd73"
        },
        "item": {
          "id": "de02154d-4848-49ea-8f42-fa72cc236d5e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4f4eb79c-b2c7-4fcf-99a7-576bd91dabe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f772e036-4ee4-417f-97c2-0695efa2cd52",
        "cursor": {
          "ref": "fd5dcc84-c21f-476b-95ef-6a36089314e4",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ef440c43-71d5-4322-95f0-fc28a19bb42e"
        },
        "item": {
          "id": "f772e036-4ee4-417f-97c2-0695efa2cd52",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ef2c7cc6-7181-4589-ad08-fd865d8df458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941f1c8b-d6fb-4709-bced-6e2cd40976dd",
        "cursor": {
          "ref": "2381bccb-8375-4b8e-b437-3f09c5cd6280",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "04974809-f1a4-408d-a3c8-cd6d25ca9c93"
        },
        "item": {
          "id": "941f1c8b-d6fb-4709-bced-6e2cd40976dd",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "57648ae0-1be2-4f94-a3d5-4ebbc785265f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4eb0881-d59d-49dd-984f-f71289a8b9fd",
        "cursor": {
          "ref": "b13afaa9-94a9-40bd-ae8b-111a89847b42",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "aa1b843d-e353-4d02-8493-9270af3353f3"
        },
        "item": {
          "id": "b4eb0881-d59d-49dd-984f-f71289a8b9fd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "61284396-a656-4eab-80a9-904bf34a5754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bbdb47-74b6-4e23-89ad-99341fb433e3",
        "cursor": {
          "ref": "04f42558-9875-482c-b64e-0133cc281a8e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "41da5b0c-aa71-4245-a439-596d1e1fc129"
        },
        "item": {
          "id": "41bbdb47-74b6-4e23-89ad-99341fb433e3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8fd11b3-adef-4d2f-8692-04fd327ae7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f44fd61-d514-452b-ac7c-c8b4f47209ec",
        "cursor": {
          "ref": "94a51327-01ff-41f4-b6a7-ebe88cef7c65",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f8cfec6e-1172-40dd-a9ab-88678a6e3a79"
        },
        "item": {
          "id": "4f44fd61-d514-452b-ac7c-c8b4f47209ec",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "107b300d-0bf8-4878-843a-f3acc8135d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1edbd4-ec45-4936-aafc-ca1cba4997ab",
        "cursor": {
          "ref": "d11d5c30-d353-4372-a061-5a4619ba9c4d",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "03620a55-2333-4eac-a173-831fb5952210"
        },
        "item": {
          "id": "ab1edbd4-ec45-4936-aafc-ca1cba4997ab",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6b3b78ee-6cdc-4d80-9560-f392cc873204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09501891-9119-4b5d-9681-0707efccf1a4",
        "cursor": {
          "ref": "7cc4301b-9c4c-4c63-8a1d-11aa967edb4a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b9b5c41f-766f-4d22-a83c-e03f58a721a6"
        },
        "item": {
          "id": "09501891-9119-4b5d-9681-0707efccf1a4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "ff4bfe7d-390c-4134-84f3-0e3c37886c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3fa763-db5e-431d-85e8-6f5274fed1e6",
        "cursor": {
          "ref": "4f6bd6a4-1d94-4b7d-a23e-4ee044a8338c",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a893d95f-6387-43b5-bcc2-f1907f353da3"
        },
        "item": {
          "id": "3b3fa763-db5e-431d-85e8-6f5274fed1e6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "87dc31fb-6831-4b04-91e6-2e8cb19464ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a15ff1b-cc36-4d12-8100-9ac1076d0d46",
        "cursor": {
          "ref": "cc91dcb3-ea95-40f2-afff-c0d7f1a74a7b",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "118db42d-f96f-4fe1-89b6-96ae034e9223"
        },
        "item": {
          "id": "7a15ff1b-cc36-4d12-8100-9ac1076d0d46",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8d0a0756-591d-483f-9b06-837dadf6dc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ad1c23d-e565-406c-98ff-3a346154cb8c",
        "cursor": {
          "ref": "6cd5acb5-7eac-461f-aa45-08cc02bc39b3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "98e8300f-0fab-4bd8-80e0-9209ecaf89e4"
        },
        "item": {
          "id": "7ad1c23d-e565-406c-98ff-3a346154cb8c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e2d96a37-6298-40f9-8e3b-0ce414acc0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5335f2f1-2a1d-4f57-960a-b955fe1c014b",
        "cursor": {
          "ref": "96320e37-ddfb-4f5d-a64e-9bc23acff0c1",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "982d8b1e-f91b-43c7-9d20-94eec6445e71"
        },
        "item": {
          "id": "5335f2f1-2a1d-4f57-960a-b955fe1c014b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bb2daa08-1be1-4b56-8000-bcd909ecd851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e74f1c-c343-46a2-9259-b15ad28d0536",
        "cursor": {
          "ref": "3ff6df5c-3bbc-49dd-8795-36233857fe86",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f4aba9a3-ddef-4cf0-9841-9c3d8b11dcce"
        },
        "item": {
          "id": "31e74f1c-c343-46a2-9259-b15ad28d0536",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6aecb512-d495-4a38-8c24-0bf1b2189973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ba4ced-392d-4c6f-86eb-f0e06c763b50",
        "cursor": {
          "ref": "88f53fd0-00f0-4ab3-9f78-c93782505b27",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "cea8cd11-11cd-4bf7-9dde-a4965b39f824"
        },
        "item": {
          "id": "52ba4ced-392d-4c6f-86eb-f0e06c763b50",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "e3d74b4c-5706-4406-a603-33dd155c3ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576f7321-3417-45b5-8e19-5eb421dcd669",
        "cursor": {
          "ref": "5a6e5af4-cd66-43b2-aa76-51a478c32309",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0557fa52-a0b4-4567-93da-26c1c79ecced"
        },
        "item": {
          "id": "576f7321-3417-45b5-8e19-5eb421dcd669",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2cbb37cc-f239-4b0e-b7bb-6800146f7eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b07fd62-ffd1-49d2-9550-43bebeeee8a3",
        "cursor": {
          "ref": "900ffc2f-7d53-48d9-9f45-66c132300a0d",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "0452cd93-4688-409f-a1e8-b399dbcea4cd"
        },
        "item": {
          "id": "1b07fd62-ffd1-49d2-9550-43bebeeee8a3",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ef86a9ba-e081-467b-a1c7-467786fa53ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025966c3-1683-43a6-adbc-43585f626f28",
        "cursor": {
          "ref": "99cbf13d-f012-407a-901e-ac35058905bf",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "732bcde8-d110-4ff9-ab6b-0f5ccc06b305"
        },
        "item": {
          "id": "025966c3-1683-43a6-adbc-43585f626f28",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fb67a457-bd8b-466e-8119-cab0c6dfbee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "879ac5d2-62df-4fb6-affa-1f7062fa211a",
        "cursor": {
          "ref": "a9c11c6c-d4f1-4bb2-91fc-2c64cd6fad02",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6cf1af10-4643-49f5-8f1c-8e9cdf40f3d3"
        },
        "item": {
          "id": "879ac5d2-62df-4fb6-affa-1f7062fa211a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "93a38ecd-fdf9-4acf-bd58-90647e15079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e6f6ae-08fd-4c48-838e-37484eff932b",
        "cursor": {
          "ref": "fcc42ad6-398e-40fc-9c3b-90ab562ca0e9",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c1c47e32-0b21-4402-a3b8-b6d622e10877"
        },
        "item": {
          "id": "e9e6f6ae-08fd-4c48-838e-37484eff932b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "98eadb79-788c-4d9c-b867-bb4c06c232dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "200d6d36-12c9-4d41-8ea4-882f3be31ec7",
        "cursor": {
          "ref": "e6c8fc3b-36ea-491c-80a5-7f39b6bd67e2",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6f798b31-211a-4f09-b79d-c5d2e46536cd"
        },
        "item": {
          "id": "200d6d36-12c9-4d41-8ea4-882f3be31ec7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "71b1c4bb-0b47-4118-b8b3-02f3d7280000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2c176d-70cf-4a55-b703-1bf5662783f3",
        "cursor": {
          "ref": "820b782f-efe9-40f5-b1f6-10433efe8eef",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7ac811a3-5038-45ff-84e6-1d1329b3ebe8"
        },
        "item": {
          "id": "cf2c176d-70cf-4a55-b703-1bf5662783f3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0ebffb8f-e41b-48af-a58f-0329edc59082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f640a89-f300-4ccb-adb6-6d6b48d559c5",
        "cursor": {
          "ref": "072e8a5b-f912-4f3c-a00a-4a981f12ccf1",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "877b1da8-4751-4e88-93d2-2d9394e08c6b"
        },
        "item": {
          "id": "6f640a89-f300-4ccb-adb6-6d6b48d559c5",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "dc56925b-478c-49a5-99bc-6be86968cf27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a7ad69-2dd7-4c20-9101-94635199d890",
        "cursor": {
          "ref": "ca652bfe-03ea-4fca-aa36-6cbadf1697e4",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "95fea771-6426-4589-beca-e061eb962fcd"
        },
        "item": {
          "id": "e4a7ad69-2dd7-4c20-9101-94635199d890",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2629f045-dab3-40d5-958e-398b4903e0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f4a253-fff6-4309-93f0-536418c0e484",
        "cursor": {
          "ref": "ad5d69f9-a089-41a3-892b-4973f491f8a5",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3c0a1ae8-c6f3-4b63-9be4-734f581c5b9b"
        },
        "item": {
          "id": "80f4a253-fff6-4309-93f0-536418c0e484",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "0f70d5b6-1dc0-4461-b1fc-876cd4f587ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4ef087-696a-4962-8e3e-28774f8c08dc",
        "cursor": {
          "ref": "746ad1ca-2dc9-4382-89bd-a1aa3b322b9f",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c81e591-6b9d-4e1d-b31b-658d85ef6f94"
        },
        "item": {
          "id": "ea4ef087-696a-4962-8e3e-28774f8c08dc",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "24cd8274-215b-425b-bc3d-7eb4200dfbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ec7cc1-c959-43cb-9346-0be18a15a264",
        "cursor": {
          "ref": "513d696a-8013-46db-8e53-4a38a456334d",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "42180f8f-14fa-43bd-a5d8-05503bc90916"
        },
        "item": {
          "id": "45ec7cc1-c959-43cb-9346-0be18a15a264",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "302dbf1e-0289-4852-9a4f-cbfd7f077771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f15892-2457-4693-9a6d-a821ec811375",
        "cursor": {
          "ref": "a1cea5b4-0f69-45db-a380-407d6e48c753",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5b5bde52-428c-4b99-beef-ae585f56f36e"
        },
        "item": {
          "id": "f8f15892-2457-4693-9a6d-a821ec811375",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0abc9b24-0e0e-4eaa-ab75-61770baab548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f027dfac-40ce-465b-ad45-4aa181e60818",
        "cursor": {
          "ref": "fe6f30bb-d4bf-409b-bb2b-8cab7ab9ae47",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5f380da7-5bf2-471b-80f7-3e975cbd93cb"
        },
        "item": {
          "id": "f027dfac-40ce-465b-ad45-4aa181e60818",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c706046a-4aef-4751-a27e-49ad49f4fa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80dcff82-162b-472b-913b-8993688139ee",
        "cursor": {
          "ref": "5132196f-0011-4183-93ce-ed59fb6b48d8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "4baf7469-8916-415a-89b5-6271931b9740"
        },
        "item": {
          "id": "80dcff82-162b-472b-913b-8993688139ee",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "98eea4b8-2c8b-4a1e-b369-fac863ce59ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7d3783-42da-4f19-a408-00da84ef09cf",
        "cursor": {
          "ref": "0cdd9829-9ea0-45cc-8e56-fa9a3c522f73",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "67917bab-e36f-4b33-ada2-3c75c1ee83a3"
        },
        "item": {
          "id": "6d7d3783-42da-4f19-a408-00da84ef09cf",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5c54292c-c4df-43fa-b2d3-9b96a22f2d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03c7fefb-d579-439f-9aef-155500d9595f",
        "cursor": {
          "ref": "9054aedb-8ab8-4cfe-b8f5-5ee1dd6a21f1",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2d830c57-5e92-48ce-bc03-f82a530ecf42"
        },
        "item": {
          "id": "03c7fefb-d579-439f-9aef-155500d9595f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "229af585-5d57-4313-9cc5-fbb7de43063a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90750ed-b79b-4489-8dbf-263523130801",
        "cursor": {
          "ref": "f1d89991-6291-482f-96ca-2adb0cc10812",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b2f78ac1-7977-4da6-b82a-af6ec3215320"
        },
        "item": {
          "id": "d90750ed-b79b-4489-8dbf-263523130801",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "48052558-a76d-45ab-b98f-7dce02169566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d113dc8-a982-4509-a20a-97140503e567",
        "cursor": {
          "ref": "86630f3a-ade9-48d6-8a23-d79e7fb465d0",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8bb37c8f-6414-4cdb-843d-487234dacfea"
        },
        "item": {
          "id": "3d113dc8-a982-4509-a20a-97140503e567",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5dd2d144-4bb0-42cd-bf97-edd03f878eda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "706b8731-cfb5-432d-a0bd-93b17c0a02a0",
        "cursor": {
          "ref": "0787c3a0-5412-40e4-85e7-0c918710be3f",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "03872fa9-0b78-4476-bb48-732667e80335"
        },
        "item": {
          "id": "706b8731-cfb5-432d-a0bd-93b17c0a02a0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "eac61c6e-3ecf-4b4b-9cad-68eac87bd4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dad0808-7867-4eee-9ddb-cacfb256a5fc",
        "cursor": {
          "ref": "beaeb85c-db28-429a-a896-baa0ec2d053e",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e316227c-0752-4a53-a3c7-e8aa64d476b6"
        },
        "item": {
          "id": "9dad0808-7867-4eee-9ddb-cacfb256a5fc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f02dc974-a78a-4a6b-9bf8-09f3102c657a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80d877f4-114c-4107-8599-abbe8b3c92b0",
        "cursor": {
          "ref": "9db613a2-6fb2-4ccc-83bf-782f1187fc48",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e7ed4910-2fc1-4b72-b22e-5ed8ae8ec093"
        },
        "item": {
          "id": "80d877f4-114c-4107-8599-abbe8b3c92b0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0898488e-9d71-4e3a-bcac-63d1d318519c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673869a7-cf90-4c2b-846a-69566af04774",
        "cursor": {
          "ref": "04e9e42b-783a-4a78-990d-3e661e721ef9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c8d7edd9-a3e2-45db-a694-3d300640e104"
        },
        "item": {
          "id": "673869a7-cf90-4c2b-846a-69566af04774",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ea91494e-825d-4125-b93d-610173dcb077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a61cc9b-6c45-482b-b138-8d6f8f9ec81a",
        "cursor": {
          "ref": "7cc5e1ea-e67f-4154-ada0-0383feb36703",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "876019b7-fc62-42c2-b73c-780d6f36b1b1"
        },
        "item": {
          "id": "9a61cc9b-6c45-482b-b138-8d6f8f9ec81a",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fff972f5-48fa-48bb-bfd2-d6e5c128b096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56942f7-b538-4d5a-8112-91a5211eb5ed",
        "cursor": {
          "ref": "396c7e4e-5454-488c-887f-da04a6e5d749",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "db5d6ff7-0b66-4453-afbd-f9a730931814"
        },
        "item": {
          "id": "f56942f7-b538-4d5a-8112-91a5211eb5ed",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f8744eb3-bfdd-4670-952b-0ff6df1d6a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "313b8294-013a-4af1-a430-6c4b73d8b448",
        "cursor": {
          "ref": "433aba2a-ee8e-4147-8bf2-6f52446e1d1e",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "afa127b6-1114-45ef-998c-7580a94bf93f"
        },
        "item": {
          "id": "313b8294-013a-4af1-a430-6c4b73d8b448",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b0e41bab-8f14-4f07-95dc-72e86b0e922f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bd5135-1375-430b-8c63-2677e44579f2",
        "cursor": {
          "ref": "7caad9a1-5c5c-4ec4-bf4d-23cf65f235a7",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "ee671903-2b31-4608-867b-2083ea78e654"
        },
        "item": {
          "id": "c0bd5135-1375-430b-8c63-2677e44579f2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a3c4fadf-1b3f-4656-9637-8f09fe6d9f8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eba1311-968b-4b36-a63b-fd5f62b58932",
        "cursor": {
          "ref": "f02e09a2-45f8-4bcc-b74e-c915bb4820d8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c2294102-3815-499c-98d1-0ab0b824bab0"
        },
        "item": {
          "id": "6eba1311-968b-4b36-a63b-fd5f62b58932",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "26441e49-537e-4bab-94e1-6a0b9dadd6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68448c8-d27c-4380-a38d-f2a3088f30b5",
        "cursor": {
          "ref": "6d1ed928-9180-4cf3-ad5c-225fe873dae0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "10a866cd-411d-4be8-b996-c193649c5769"
        },
        "item": {
          "id": "d68448c8-d27c-4380-a38d-f2a3088f30b5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "afe20ce0-ff4f-4e30-b0a1-8680c3ba1ee5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516dfcbf-5358-413e-81ef-f6c85b61d35c",
        "cursor": {
          "ref": "218c80fa-d3ea-4a08-b4a4-ebe7618cd3c3",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9c3e4baa-84db-4e9f-bc03-6e389a3e9773"
        },
        "item": {
          "id": "516dfcbf-5358-413e-81ef-f6c85b61d35c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "cf4aa880-30b5-4744-a3fd-abc47cd2aed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3086c4-8ff3-4e8f-8dc3-613f7169ff73",
        "cursor": {
          "ref": "364c8b49-55cf-4447-a64e-3a7055851191",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "550010ce-df0f-4c5e-844e-5f8117ae2071"
        },
        "item": {
          "id": "2f3086c4-8ff3-4e8f-8dc3-613f7169ff73",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "872696ad-bbb1-402a-b1e2-807fa2c587fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128cb02f-e1ec-4452-9e27-85c1bce63b75",
        "cursor": {
          "ref": "f93d5016-4bb9-46be-a303-97efff1dd7c6",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3492e4f6-2e5d-44ba-817c-15abd5938fd1"
        },
        "item": {
          "id": "128cb02f-e1ec-4452-9e27-85c1bce63b75",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7c88cb01-7c2d-405d-8446-4cacf2e3a443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307166ec-2f8e-4e06-b8cd-2a259b2ddace",
        "cursor": {
          "ref": "1c39e4ff-05f3-4a62-b76f-b23056e481cb",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6c6ad6bd-1a56-42e0-a783-854437a654da"
        },
        "item": {
          "id": "307166ec-2f8e-4e06-b8cd-2a259b2ddace",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e9de64ff-5c9f-4dca-bac9-8e11486c02f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7beaf424-76cc-44d8-ad7e-4e465153e8fa",
        "cursor": {
          "ref": "9deca9c8-06a0-4fbe-8abd-433c66fcaa0a",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "97e4af41-0031-4a37-83d1-21941be65db1"
        },
        "item": {
          "id": "7beaf424-76cc-44d8-ad7e-4e465153e8fa",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b4c38c99-9478-45c8-a37d-def417c2b70e",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5ef79f-7fde-4787-acf6-9095822be191",
        "cursor": {
          "ref": "788fc1d8-f4b4-492c-bba5-6714b96ffdea",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "71938ebb-e4b3-4d8c-ab5d-074f94e47443"
        },
        "item": {
          "id": "5d5ef79f-7fde-4787-acf6-9095822be191",
          "name": "credentials_verify"
        },
        "response": {
          "id": "fff7a8c8-063b-4513-954d-db1c23b3b6b9",
          "status": "OK",
          "code": 200,
          "responseTime": 2026,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "24275947-2f4c-4a69-a24a-2ea31e7c4266",
        "cursor": {
          "ref": "31d4b1e8-a07d-4e7c-a498-b52f4cecc8c0",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7538ee49-7ba4-450c-8453-12f800c11ce6"
        },
        "item": {
          "id": "24275947-2f4c-4a69-a24a-2ea31e7c4266",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "494f0a6e-9b50-47f7-ae9b-1a164cff98b5",
          "status": "OK",
          "code": 200,
          "responseTime": 2940,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53dcbc7-6916-4701-89eb-09905a201116",
        "cursor": {
          "ref": "8049d7a8-e9ff-4b86-bb70-2704f0a59330",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28a6a42c-66f3-42d9-a1c2-e0ebbba3a22f"
        },
        "item": {
          "id": "c53dcbc7-6916-4701-89eb-09905a201116",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d06b58b-75a8-46d7-903f-e4d70db6edb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53dcbc7-6916-4701-89eb-09905a201116",
        "cursor": {
          "ref": "8049d7a8-e9ff-4b86-bb70-2704f0a59330",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "28a6a42c-66f3-42d9-a1c2-e0ebbba3a22f"
        },
        "item": {
          "id": "c53dcbc7-6916-4701-89eb-09905a201116",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1d06b58b-75a8-46d7-903f-e4d70db6edb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b41f5166-72f6-4e60-9f2a-9f796a28f49b",
        "cursor": {
          "ref": "f52d469a-5c6e-47e9-ad3d-32e8336d93fe",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e490b63d-5204-49ab-965b-6f397027ae71"
        },
        "item": {
          "id": "b41f5166-72f6-4e60-9f2a-9f796a28f49b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "bbad46d1-5695-42e9-be51-d991d0785317",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a1775d4-340a-4e65-84e7-a5e3a0cf3965",
        "cursor": {
          "ref": "5b155b29-2d86-4055-a625-46cd84e46b03",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b644d74a-6add-46d1-8dad-eee59279d295"
        },
        "item": {
          "id": "3a1775d4-340a-4e65-84e7-a5e3a0cf3965",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c7645f04-156e-470f-a7e2-45933973a0ce",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}