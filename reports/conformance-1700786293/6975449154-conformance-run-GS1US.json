{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "71a8e236-f567-4da8-9b73-e35784147b89",
        "name": "Clear Cache",
        "item": [
          {
            "id": "43981d3f-f721-4b75-bb29-b8fffe441465",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "59ea1685-55af-47bd-a9ae-888a950cc00a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "304e6117-a297-4235-9319-0c91351a61c8"
                }
              }
            ]
          },
          {
            "id": "4149797a-7e33-4723-a4f1-e2b53b9a7bbc",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8af84cba-f8a6-4349-a6ae-5b3054f8767a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac4ba601-9c4c-4a0f-aa90-7b15c2156db1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0621fdf5-0430-437f-ad37-df7f03730dc4",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e780b1b1-d256-44d8-9939-0d21b291a00c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e294a0f3-387e-4335-8a2c-80bbbb317b0a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b44d8fc3-519e-41cb-bae6-e8ea5a8598cd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "108c34ff-1e36-4d0c-b301-f64651ec0907"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1c7a09b9-122e-4d55-9834-18e65a897c62",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "855d9668-ad83-45ee-951b-1b85432903d8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d047de30-950d-4694-9d07-9567d6a8b9cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "558eb65b-7641-4f5a-8725-ff5051e5cad4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e10a9ee0-ab12-4e6e-86f9-37deadb5c82a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "398aa9f5-b6ba-43a5-83fb-2b16fe46c094"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0663955-18da-48e1-97dc-dcf28ea2edc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f3ee367-7bbe-4aad-9f0b-b155853ac19d"
            }
          }
        ]
      },
      {
        "id": "853b6b3a-92fd-45e9-be23-eab68ef6219e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7e3b99ea-b021-4795-a2e8-bbf8606b98da",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53c36b69-6283-4560-b134-2ece61035114",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f748814e-5be6-40ec-ad1d-611bf7b3a827",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad525a4e-1236-4698-aec2-1b27a289d1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8d0b2ff-8b47-46e7-a2e4-1756ef0f0304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23db43e9-de40-411d-b39e-dabc859fc839",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c08063-5127-42a2-8f37-103b80be3eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca95dbf1-1aed-4d3f-9942-90b532b60677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abd76c1-b6ae-4bed-bcea-c8dfbc3b1252",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50b9779-d892-4427-9985-e33e2d4612e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c5c4da9-2a5d-4bfa-ac47-550a6e491acc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5727f202-8df9-41e4-be80-da884f88e953",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a574c59b-f087-4801-a55a-8c871e31dbf2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376fc2b7-57ad-41fd-8b0a-9e746288cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "21878c63-a955-4251-a6b2-2f3d6aa255f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9eb4aa8-fa3d-4226-9ec2-28dc1d8decb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba8316cc-fc7f-435c-8605-ab051299f737"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "40117961-d27f-4a4b-874c-a62c4df13853",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5917cc9a-5b6f-4a5d-ba61-a929429a0cdc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b323a71-91b9-4f27-9898-a351a70586c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ee6fbd0d-ac49-49b0-b7f1-0b0e337b1ad2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "34c1cdca-d28e-4a01-8bc5-cf3db0f8e770",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "9837d36b-ba9e-4e65-8421-df95c8f969aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6175f8d8-b676-4ef6-a7f2-e4b7918f0dec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "49f2833d-b9dd-4dc2-9903-02fd07dcb922"
            }
          }
        ]
      },
      {
        "id": "a757edd1-31d5-4c07-b297-554f1c47c705",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ed82f9b2-52a5-45e9-b020-9b18b4bb2ffd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b0eb3df5-042e-4afd-af10-98225e18dccb",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4485db62-0986-4980-9f21-ff18689df104",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2895e372-6889-4e3e-836a-5688c0b9e7e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcdf1500-2f08-487e-9bc5-8e5b14f00901"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9523a604-9d96-4868-99e1-83d2bb517b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b134eab-6e4e-472c-9092-087ff73ef153"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9481f4d-99fc-463b-be5c-655872c6d823",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "472781b9-fab6-490d-85aa-a94bb4288eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bc58d99-362c-40ee-9d91-216a6d408a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a543efbd-0a6b-4acd-8ac6-82bb885fd3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a9def67-3b70-41ab-b031-c6a0d49eea22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772d4194-a779-4224-9cb8-298f9eb39457",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122f68ae-8da3-4789-b416-0b2921914b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0a12e6-e923-4a2f-88d3-3c7cf91b446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14985bbc-4a7c-421f-afe9-1ffda63ec6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4f7dcae-2c53-4a59-940a-09f450f86821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcecf90-f2c5-4081-9fca-d6c2d1762ee3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be5b8a1-537f-43ad-83aa-b1544a5ffd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef5fffc6-cb07-4fa7-814b-737a4e1f46c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f761ceb-6b48-4cbc-91fc-90a7f8e7f792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dfc6c48-3b95-4ccb-b551-e5785a0f98b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6065f00-dbde-429a-9e11-5965a61c6ce0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f419d3e-aa49-4580-9fb4-1fc44c25e6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3e1201-275d-452c-8852-d0ed3867b059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c41255fe-1468-4c33-a5e9-3116de68d934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e613328-0bd3-4c60-b1a0-1c02bc32cf2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9e9f13-1b0d-4e71-b5b8-1cc3945cd14a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f5608d-9e93-4f1c-9ae2-0825bb092f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9fccab8-c377-4e97-ac93-6b50a968c3c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad58aad-07ad-4e04-9451-e7a27fb164d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1a481d6-ac35-47fd-85a0-1c0b7644cbc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bae401-0ce6-4806-a11c-4779866248d0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c758765-3125-4006-bb8e-b6e008a3506a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "899477dd-b66a-4857-b19c-4865dbc5f4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa999a00-87c4-428f-9da5-77a9bf4272d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "408e2bc0-a331-4251-b7b2-fde5110e6750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee734048-1fbc-4b20-9405-f1559791ff6a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c53536a-5f02-412a-a225-0d7657f86b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dfe05c-8e87-4b1a-883c-f5c792ea04b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "885612dc-0c3b-4a0d-9620-c98a6acacde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2ff740-d4b0-4aa9-bb02-d802a8bcc794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79233149-15fb-4451-a8ad-05d5abe6a07d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ca2f5e-e637-4148-b983-270181afd030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be081746-cd49-49e4-9790-bb7b5d399948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ed980d6-88a4-470f-be6c-eb4d84b27434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1f103d5-b19c-44bf-b51a-4c6e13a396f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c20ee0ed-8d02-434d-b579-52db42941c3e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "003505dc-32b9-4fd8-a913-a2d8b176f46b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff80ba14-5232-4724-9180-f4a668629c76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcdd5d7-57c7-4f8d-9146-59333dde0375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd6a3c68-03c3-44a8-a032-1d99e0a51c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9150b6f-619c-4f49-a510-be78c7da8aee",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c931caf-adc0-458e-b3a4-5c1cef7c4c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7209add-ea0b-4214-bfbb-0877ec4fa659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6116e05-72fe-43ae-b462-812c482292e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b927b33-9368-4321-9d2a-c0a2188c5269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e766b9f1-029d-4158-b83e-a290a45e660c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "367db265-7ee1-43e9-952f-d0e6efc80cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97a04e4-25e2-4d39-a4db-ad1c25df6fbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70312459-7c14-44d2-9989-80a01541bd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6adb939c-a7dd-4cce-b72c-6c1e24ebc333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4089654-38bc-4e02-9db9-2447b701f59a",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1b3669-bfcf-465b-ad08-577bca7c3f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c77a71-fe6c-4f81-b123-cc7ae414c22b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867285a7-0f1f-47e0-a882-1bc2961621a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a495460e-51b0-453b-9704-da186ea86112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0682c65e-4c79-4d44-b066-9e8016edd83a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5048d77-270c-4ecd-ba7a-340d9f42712c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79755e39-730c-404d-acdc-69692abc1e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6fe9e1-3de4-49df-9a76-113cb86fe1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "857eb647-83a4-465a-ad5e-bc273fc2b191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32e6537-2020-4cd3-b1dd-bdb92e608777",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91dc7b8-81fb-4211-a7d5-c8bbae2edc36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e35cac-eec1-4b05-b436-b09ac68e169c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cf2b60-2915-4a03-9c41-d57f1e2e323a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c22639c-9d65-4d32-b66c-0581a2cef539"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c47b820-044e-437a-aa8a-1fd81a31fdd7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3640cf-9b54-4d84-9236-2eb99827ebba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7c140b-e283-43cb-bc6c-4e8945fa6634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac49e8-50e7-4754-967a-0aef146a0b5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2de7c432-db90-4262-9393-7adc7e6db172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cdae40-9d2c-401a-9beb-a62c07bcfe8f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9750c60b-d6fc-4537-86f0-f1c8e163ccc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f50921e-3944-46b5-82ce-429a6036e49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632b8761-4b8f-4db7-a8f1-bacf7984cef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7ab7a6-20c9-4f3f-abb0-1ececef32ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c495d8-b51c-4f16-9879-fc72161f61d9",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efb676c-6efa-48b4-b9a8-069ac9f7d65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f5fe302-dba3-45ad-b883-1cf549f92c58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260431c6-d53e-4370-8260-3acbebe0b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "83a4588d-a662-4bab-b574-2a517fc0c8b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631a29d4-5892-447c-b4b9-1ee0bac78172",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da5bb7c5-4190-4fcd-9ff8-02183afc87fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9818c2d1-f491-43d9-8427-f809c29e86f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e769e513-4675-44d8-a98f-14ad08237682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e44db7-fd91-42e1-8f36-583f9ac18e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f47037-95da-4809-892b-c76e69f35884",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb3c3f2-5a9c-41b9-9207-05493495032d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ac57c55-92d7-4716-8ec1-55adabcf0219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8727d256-d022-4f46-8558-e5f4e1f2e5fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d64f6dc9-6e04-49a2-ae6f-01f5868c6d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45168fbc-6127-4dc9-b5a1-d715b21c4c73",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d4e6760-ce75-40e9-a1d1-cdd5814813c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745bb13b-36ef-4563-8c60-b2f036b89369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b91b6be-824c-4284-8990-b97ccd59d599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1932e3c2-dc8c-4e13-a4d5-2894ca687df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be068f5c-e9f6-4c68-9bf1-c53eee3797c8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb5eeb0-0511-4d86-8772-1a6c07df3b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be76d40-8e63-4177-9d3c-694e11111a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b701d188-b49f-4671-8a41-689e96641bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "896847b9-01c5-41e8-a84f-b0110cd48bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf44843-63f6-4ad5-a01a-2e3eb46c1160",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9c0d83-71c0-4dec-a718-267042959040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25514cfc-0560-4c50-8cd4-2b23c4f8ee43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a740f3e9-9db0-4118-b183-a2e52ebbab3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4f36e1cb-b132-4a40-82f5-7164ee6ab493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d22355d-106b-4a4a-ae05-f929adeba444",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "695b8a6c-6f9f-4932-b749-6068a3daa51a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d889c50-5277-4095-aa5c-fe3f8dbe3e4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844a3526-9d46-46d9-9fc0-fed8d513a6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ea5913-93d8-4538-af52-87b7a0669e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67969a6e-23a6-46e7-b8fd-905b77a1cb8d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df285923-7298-4a09-8dd9-00230d1fe676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "660fdc79-8cd1-49b7-8f5d-f283308f62f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ba80c6-04a4-4cbb-8b9c-e12856541afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d8afe07-4888-4c92-aba1-b26684a7c1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2dbbaa5-36f2-45be-9bf5-9e3ddbbb4fee",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa3178b-5b7d-4358-a2e5-da880f95daf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed3ada65-4826-4588-8e03-1d40ec1e3bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0bb4978-68fc-4e1b-a651-403bdd823031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "94583584-7bcf-4995-8a2e-14bba2ab5281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "925102d5-aa4b-42c6-95fb-6e553f154cfc",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d833e18a-f83b-448e-9fdc-a5eb2e10eaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4ef074-8fbc-4f8e-afd0-0d772aded238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85430619-2c03-4d3b-aa36-386c9af679d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "971f11e4-40e0-4a41-824f-c74da2b69593"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c03be37-8c14-4ecc-91ee-f8a15cc72619",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcacad95-d410-49b8-afe1-69cca1e1ca64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a9bb5e-911a-4fd6-8865-52ea519474ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd6b5d2-d1f3-4b8f-b5fb-24b5be828f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87f642a6-7613-4420-80b4-c6f84fc29f3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da78029-f4c0-4136-8939-868e9c3ce42e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1622970f-9e3d-4dbf-90ac-a69196bd2d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bab276a-60bc-41d1-9b32-03b943a6de62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc34e0fe-b490-4733-84b2-c54d751bd8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e35a3022-873c-4413-968e-53aac5f07362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e19f605-ed7e-4dda-ad6f-1daa5106e0a1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6c56b5-63b5-46c0-9ff1-fb3339e93661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e663039-c581-4425-8886-9a3a7e863478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b24a779-754d-4f20-825b-6403bf1c299c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8034b70e-3eff-4dc0-ac04-3db1d0da5134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f440f5-0f20-459f-9e4e-7ae09f3c6f71",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a59fd4f-43ca-4d25-a3b7-f93a48464bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "327b4950-7b93-4177-bdc4-74d7a8214140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e3c17a-e209-4b8f-8260-fe01c013d432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ddcc4fa-2b79-4a23-b9ba-8faa0787eaf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f722e1bf-86ad-481f-ae27-f76dc5839eee",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bfbc9e-7e77-4f12-84ba-50ce969edc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2aaacfd-d742-4958-8a6e-f693cb0d843f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee02adf-a6c1-45bf-9ede-ea42645b2e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dba0332-dcbd-4001-b073-b7e8852ada5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5536d151-bfa5-4803-9ca2-26aeac3ff80a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4494f975-fb22-4a31-b5ed-f1e76d56b503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f904cc9f-f114-4448-bbba-f64e86db920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f96933-1bfe-4684-84eb-8374de4aea3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37131a85-1fea-4e31-93ab-f985f83dd78b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4dd670-a119-42c2-b44b-770d9b9b1d2a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add2eeaf-21e2-406c-b3e9-6bce417f15dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edee0e7e-35c1-4705-86b2-373a85d12836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a0893-506b-449d-aa96-8e88f9d369ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b885f335-c5f4-445d-948c-2dd60191d29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75b47a2-d743-4063-90ab-e2a46d6e1fba",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8ad0e3-ee91-4610-8556-3510541071ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "557af3aa-b484-4c56-9a53-b2581d3f634f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be771262-9541-4536-adae-c4caf8665575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8933b34a-c5e0-4ca0-b524-31e28a2c45cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14c6d73-35f6-4df4-b375-3a7b4f5d7863",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80fab739-f4e9-414c-aed2-161a6e16d5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3280604-1dd7-484f-bb9d-b14c3684fcb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27cb96b-4ba7-4589-8bf2-d1143ec6a941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "65352af6-efad-49ee-850b-79fa64daf857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5189cbaa-07d5-448e-8039-d3a39e1ff93b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0f829a-6878-4b70-8aec-4f05fad6d32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84c08d68-9da4-46c0-aae9-d35efe277229"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68ea213b-9f79-4386-83d6-c76b3bb72341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74b785af-dbab-40ed-806f-bcca49fb6a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dee754d-307a-4790-b873-887534fab4ea",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e475786e-b6ce-438d-ba84-07d2af27afc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "018a9360-cc2c-4fae-afd8-51ff914c0300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7706c63e-2787-4382-b887-1a32fbae0916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "552bbd48-ca5e-4a7f-adb3-9b25c3623f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0826bf11-f828-4668-8b22-e2b2174fe97a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f35db2-d085-4c9e-b540-4772473686d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0113fb7e-52f8-404e-8c92-efb1ad5a5c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a740e68-b1b2-4f0d-93fa-36e1869550bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f5ec6bc-483a-4409-8735-9353c28ecbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52986b54-f248-4ef2-9946-2480b91ef7b7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab89f038-19eb-44a0-bca5-531404b5249a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f67b8a-1e1c-46d7-969b-a2b8ed58d698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8310c77-567f-4114-88c6-626eabc0a5e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b32ccad-f12f-4552-befc-f5d65692fbe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60cc3c66-6eb0-4f62-b267-632f6cd0d69a",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e5cf04-3080-45eb-81d5-cd1372ca6915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deede5ac-33db-45c3-b177-199f680293e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac9166f-7af4-4d6e-af1f-4d4302102a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "274508b3-248f-4d7a-a245-aa96f1ff412a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1ee01b-abd2-43d5-9590-77e6bcf88ffc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee25471f-d286-482c-a405-d9fae58bf6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bebdbec-f5b7-4fca-9d98-6a01eee5bf43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdf79cd-e4e2-43e9-9184-2416e4d4885c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "74b09f7e-245a-4211-a8f0-614780bd3801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dcc22c2-dbdd-4b36-87ca-2c29d7521e2d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "359402de-62c3-465e-a5c4-138c15ae4d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b92fab-9376-4327-be21-9381c3c0c3c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b5ca807-d19a-4f49-902a-36ec9d77dcca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1875c67f-b18e-4461-a669-06e44617a902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482d6355-cd0c-4a50-a0bc-9fcb9a5cedf3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2712ab76-2ca7-465e-b056-5cb31b42474b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a73cd7f-dd59-40c2-9bcf-493617c1f5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a054af09-0d08-450d-8f75-c5433d0dfbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "15263d08-cdb7-42d4-9747-4997378419a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e43e0a5e-1905-4445-b0ef-614dc41de9b3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860bff73-e00a-4fc1-8312-0b642b75f0c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d55f35a-dbad-435d-ba7d-0dd6c821e7cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0f9840-781d-48dc-8300-7df6145476bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7244b352-9828-41d0-b304-1d8c3e79be6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b5a256-5ff9-46e3-ace8-abe795497c4d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fec4240-15d7-4252-8778-9959fa8ad090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9f455b-b551-4939-add4-ff509f16a8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e863e010-4c70-4466-9797-f375f4d59256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc3b730f-5001-4209-8f99-d3ee6e9bc336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ce777-43fd-4d44-8919-ab499e05ae65",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b67e53c-a990-4e87-8e08-415c4148db79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027afeff-88e3-44b6-ba79-1ede33b680f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51933f66-53fe-40f0-942e-6bfaf5d1dee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f3511e-a15e-421e-9a28-6dbf45f92043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f85ff8d-4728-4c1f-bfb1-f70ac4e3d67e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5eed39-7931-4a16-8bbb-a14e1bcc2ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39858c3-ce9b-4349-8cfd-886282b8aba8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5fc750-7fcd-421e-ae2e-0e3818536df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0923d3cc-5c7a-4a21-a18f-acd54882a5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3766c54-251e-4b1f-86cb-37ef0a915e46",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35c27c38-47fd-408a-a42a-53179ee1d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8adc01-2d9e-4cb4-9d67-36748918cb8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd5d2ae-3eb3-4a71-b2af-abe9a8fdce55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2723f678-5e67-47fe-8702-81ab4ee34c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06fa6cb5-2476-4f55-bf37-ba02fcf8ab79",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3fb8e0-a4c0-4053-b7b1-c2bb242e7d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "227fae52-1baf-42bb-952e-b0faba2dc743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4a905b-d75f-4c1a-a8c4-0a2f05314733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3845e57f-26b9-454e-9950-8c11f7602dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b33bff5-4fe7-4b85-9779-540e88bd84c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be95ce8-5305-43c8-a400-d2445e5d5289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "157ffce4-0c0a-4259-ba3c-9fdb3c958806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc472f-78e6-4d1c-a009-06e62bea426f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "52ae9827-ba94-4560-9918-2c9239cda4e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e8dfea-ba0e-46e3-9d79-7a68f7517620",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d76c2a8-479a-41f9-8b5c-96ba8e681ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5b00bd-5160-49f6-bae2-5e02e3f6ada0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b48251-f292-40de-a87a-1587c6b6b0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d4fa0d-56b8-4c49-80ad-e92ae689fad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33ba8c59-ef50-4493-92c7-6bce417125ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43dbefda-62bd-444d-85db-1839fd3e420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf23ad83-5af7-452a-a314-f9012b2b0f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14f19b62-83da-42ac-96f1-bc4a3a2e11d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "859a79f3-225c-4f00-a699-97e12c2a7e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390e4e3c-750d-4c33-b5a1-0a7988ecd8d1",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccdbe8a-2840-4322-ab55-249dbc7e6131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e669f7e-f833-445e-a84f-a63384edbd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c0d0f1-38c4-465f-8158-13ce247546d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9498a9-ffe4-470c-b1ac-4412ec48f01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a2e2984-fe71-4741-b012-a471d104e383",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20805404-0c03-4a29-b86e-5493aa3e0d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53043712-d8da-4b02-bdca-402005962c15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "739fdbb7-7cda-4467-bacb-7205078f43a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f11ae3-d870-499d-a821-24b2b010fbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059e3b4-7988-4c77-aada-3b5f0b394986",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "098e3fe1-f4c9-4f17-9e88-d023a9b2ce32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b063f7c2-2566-40fc-b361-f9827833e1ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79182d91-9127-47c6-b34b-20170569bf25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "db3fb347-fb31-431e-8bf6-29d39b11c968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1044d9f-084b-4d35-bd16-38f21b9b30b3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fba1316-5e43-46cd-9b42-10d0020daab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0f5182-20f3-4936-9d76-e8cde43d91fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4144b99e-71a7-42bd-99f7-fc4ba5cb3afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d8f9623-2665-4921-9561-3f9641896242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea3f1fe-0754-486c-87b6-d3c7eb53bc38",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5fb7b7-7e75-420a-9189-603fb6914144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ec3977-9f78-49be-a53e-1a915d5bb02e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd26bd8f-88f0-4edb-8ab6-a50cc30ae8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9506332e-dd06-4214-a6c1-de245cdd8704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c866e568-b0ae-4f10-ac7b-a568a8a54b7b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc562c7a-8d3e-46c3-a142-87b3564e3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec84e23-3a35-4836-93b6-c8332a57dba7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ede97c0-5b86-4336-b5d1-07a9b86f8998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd20135-7aa4-48dd-9e2b-b1b9fd2f1b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca44f62-b81b-4e84-a368-8202e5cd49a3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07af0c06-8cce-4a95-90fd-4b4d1aa276e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9453c0-703e-4f2f-b932-06ea61e40128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4428be7-1afc-44f1-a796-49e5d02ceea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6077df70-29da-4b52-bd33-953aa1b718e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee567e1a-77ec-4d57-8cc4-ed328a3291c9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96486c9f-9fc3-407f-baca-28a95d57ae9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5d4398-04b7-41f1-8d01-5436fcd68a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f81eed-0c52-45b8-ac2e-3610ef0e5c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9daa7b0-49e9-4cd2-9de3-03a072a343c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83121a47-ae16-4838-b20f-a3823f49e19d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092567d5-7faf-4cf6-b140-4c95a8aeaa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb425f4f-023b-4619-9bdd-34e190f99ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb82df84-0d23-4270-b410-db142ed78a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "59dbe132-fa75-4a18-84e3-7ee30d0cbe70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd215b0-3222-46fc-b6e2-73714150530c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f911c7b-36a9-4bb5-a99a-45a68b9f40d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a25dfb8-8e3e-4ade-a76b-f38ea9eec6e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160a291e-a8cc-4238-a3de-65aaaad9b01b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "62202a13-2783-446e-ae06-a1abf12a5a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61320bf6-166b-485f-9914-44cadcd2b5c0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fecd75-8fe3-494a-a744-315a84e5efad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0dcd388-4a09-4183-94c9-f3c08c46cf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cf0f04-07cf-465e-8db2-1fe1ee0354d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cbc1f32-7a1e-4dd1-bb23-2d7163fbcdd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9401dec-c1fc-49df-921a-27b2bc318f08",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86498caf-7be0-4d79-bf55-d47a73a511c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db03d9f-c647-4ebd-9a88-5c0916a316bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1be2a5-8886-4844-8961-2804f5151f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "679f9a22-e51d-4824-82d3-6d3ad47e7d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e94bf1d-380e-434d-9214-56393f9c34fa",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a803564-46b1-4f72-bfd7-e2d28f64e28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7056eb-2344-4d58-817e-5c23115d6778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de20dccb-3112-44e8-8ab5-e7fd236330a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc213ce-b853-4466-94a5-c2fe3bec18bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf794c10-b7fb-4e19-afd0-c8fd4ac91bfc",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2123e72d-f666-49ef-89d3-02f131b9c03d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9d83798-9246-4bdd-b9f1-95cc0559f4be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bac85fe1-16af-4f7e-ae95-f563bbf0f6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca399fd6-3b57-40ab-9d64-b16eee128b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af1c55e4-2535-4c33-b140-32c3e00d8d77",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c961721a-62ef-4a36-a39b-45ab562b389f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27bf111-eecc-4b4a-8b02-da27b8cdb818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d2fe2d-fc00-410d-8944-061d4554560e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4214db6-101c-48a1-8a2a-1d3356c6f5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd545bf5-8ad2-48d2-bf1d-28e8b24e6841",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9199f25f-ccef-494f-b5e6-213e7af4ec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "516e9abf-1383-4e8e-a19a-967809aaf6ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a4e757-d664-4e46-9ef9-ce23ea234468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "28a1ccf0-23d3-41c2-95b2-846fda1de079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1bd138-01d5-4987-96c6-a056c7bfbe6d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27857c-82b0-4caf-a2fb-127e65b52a0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc50d154-bea1-45ae-b90b-46d182dcdb74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4b7e38-6349-4f13-bc68-0eb2ed47bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4ffcf25-beda-4e8f-924c-fc0544e22dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3331b696-1e64-487e-b3e3-e0b9892618cd",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab0acca-6fa9-43fa-987c-96b5ec9cfd54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d070d9c-6198-4c5e-ba63-1c78a28349d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7715b520-0d46-4615-b79a-9a6e02d01722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3be95b8-1dc3-4b4a-bed9-1d8e79a985b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f07eb58-476c-4aa3-bcbb-402906b44e8b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90187a9d-e7db-44a0-9671-6673459cc00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a12831f-60cb-4a49-abf3-d749db4487d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6a9f10-39c5-495f-afe7-fae72c4c2cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a34ae486-29d6-4741-abad-e84977acc2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1342e0-3408-4e1e-a250-b9faab4a8280",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b5b48ab-163d-4195-8270-3ea23e414693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009dd53d-db38-4c8a-9700-9cf80181176e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3b53d1-2708-4956-991a-c2e859f09816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "969b1cac-d325-4b17-bd3f-c91d93cb79bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1da2225-1ba3-4f13-bf4b-332ac18a3774",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6078f0-7cd8-4255-9eb8-ce5a8777fd6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461084b5-078d-41a0-84dc-a40a63daffa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71971781-7c99-498b-b4bf-b80ea634fb7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "10e8f98e-62ba-460a-b597-daff05f8d32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbffc23-fbf5-497c-8245-31eccdd58262",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c850fcc7-1e83-49b7-8131-1b3802e90da2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91d165f-7d9e-414c-95b8-8d2c234ebe43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c9f832-57aa-414f-bd50-358165947e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c246918c-84a5-40e1-bc56-df7f7466d65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc112bff-8c80-4034-a738-8566b71593f1",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353db5ef-4e38-4aed-b7d3-7bd7743af4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e51fe0a-8828-4820-af98-ff2c9ee6cf46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ff14a4-983c-4cb6-89fc-ffc90422561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ea0404-403d-4215-a25e-4558110f73a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8b4868-a7fd-4bc8-aadd-04a12d9680da",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e504fd16-ae3c-48ed-91d8-a4d2cc56747c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9634a06c-636c-48f9-b6e3-bc5d822e75c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608f23c2-5eec-495a-984c-366d1bd82a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91332314-5a37-4e14-884e-03ddcf730497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af882cd8-e702-4e74-af01-2e35b217d1f7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150a9334-7078-41fd-a003-47616caf957c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df4048e-4a49-45ed-b715-d34c926beabd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ef233a-7eda-4da9-9ca4-d486d79491e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78ff453b-50e7-4360-afc7-869fe09a2c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9b5b15-44b8-430d-813b-1ea1fea0785f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13917ccc-e850-45a6-aac1-a9690e9ea4a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc48c07a-d055-4170-855a-8a9a730ae4aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e15cbee-9402-4938-ada4-d0d629b74260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02a5c5c3-eac1-4866-9eb0-d907df97800e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688ae991-9748-45df-a722-b5ca8730b310",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61d8139f-4922-4e85-99c0-00328bf764fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa906097-b189-4983-99f7-e983e7326a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97258e29-1e15-4a85-a4ce-6c0d1e29cbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef3d434-570a-4891-9cf4-128377408b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4fe364c-e320-4117-bf1b-25b3c4030f09",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f82bcae-de98-45c7-a888-bea56ad64ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6342e327-6dfc-4895-a3d9-3548de121322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a24d0f-7261-4ee5-8272-9de83037da9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d250d0ad-9769-4fca-84a7-f771d6630fba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9540a9-f3ee-471b-842c-ed6e892ab525",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ba649d-2093-47f2-9cf6-ac6ce5eec174",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da1c45c9-7d41-45f8-a780-2028749e7622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3d37eb-7d56-4f88-a0fd-c3a6e530a628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2626bb8-f21b-4756-8f78-be9cf6c312b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae3292e-0c14-4a7e-8491-431d332b760f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a56d25b-c758-41f8-aecb-4184d8b1e6e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862f0e6e-54b7-40b1-8322-c8b3b6fcbc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d62050d-02cd-4d79-a071-f8960889a84e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "afcecb43-5eaa-4200-8b13-f57906962924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4187978b-edb4-48cc-bdf0-455b48306ed1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60d9ddfe-302a-4cd0-901d-2501a597c092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71976552-378f-41d6-8025-d6fd45696e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e219faa-b9bc-4b2d-98d7-c61d30b27128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e064b83b-0b6f-4eda-a654-e1a853da2112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b63f2e54-29d5-4b99-9452-05d085de21eb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb37eae-3762-44d8-889c-90631cb56435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf16eafd-184f-4b8b-b66c-a19adc54f45d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2066ad21-9bd2-4d5f-a78b-c0fb4e0929f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "85b21318-9fee-4bdb-8a86-e9de047c8d24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b5873e-bc99-4b9f-a289-44f97ad13738",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "047ad43b-0b05-49f1-89e0-9681ad4f533a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54813689-7ee7-44b1-87cf-0087b534b90e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56e1bf6-f4db-49aa-8791-ff6d286536b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "353f5a5d-7f0c-4735-910d-fc7554b710cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb43f6d-3f55-409c-9be5-6844908084a4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff93289-fc58-40e2-a4df-2cdae43182a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb31fd1-048e-4001-93ae-5c07a46cb4d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f508b34-51cd-4cb1-b769-5af192d915fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa09caa-7096-4396-bd60-fb19ae4039af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "827ec816-8759-4c56-9f02-6ac774b16936",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87cb9ff6-f340-426e-84f1-9c64fb48c8df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e17d396-9ca7-420a-b8be-08d6ebc1fd3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1913ce0d-a5ad-4a0b-a57a-fe693daa779e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5a59eb-648c-4854-a305-3c8241348369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79ed410-5d9e-4eb4-8630-6c2b4a1ef095",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a620e3-7bb2-47fa-9a3d-a84eaf3b68b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909af93a-4b3e-4a42-b4d5-077a79f3eed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1224f98-3bae-47ee-883b-ad4a192eb437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "970528af-a724-478b-ad3f-7ac18e4d3abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1438a00-b77a-474f-a50f-de389b18e431",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfe6468-bb03-42f9-8bda-17ff0111b22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc6ec71-70d8-4217-b0ae-f444d6f0ff60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ba1c69-ca22-40c0-9ed1-25f4ddea1628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc15d94d-3f8a-44ec-a94d-1f103a7ee5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2fcbd21-5e99-4563-a8ab-115f63b3fd96",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42eb097d-9351-44a7-9f6f-e692129b9711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b8f4d8-6f49-45ae-a8db-60d8e4ed88e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78224c95-0319-47ef-a085-ad62fc347b7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "87dc65bc-6c79-4cd9-8b07-581b17a279a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7030436-71eb-4c04-b744-29198d9a2efe",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc123e33-a211-48f4-a2ea-8885207b9f33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "349225c1-ae65-48dd-b66f-fd0993709fc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c568e8ef-7bcf-42fc-82ed-b71c3db735bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73cbb365-2974-465b-88cb-db0ed7390d35"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "425c03ff-1400-4d79-97f4-4b65a628b6ff",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "73152e60-0db2-4a6e-a5b0-e0d3b7841c28",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c3936f6-de16-4a32-a65a-53e15cef4f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c5968d1-4db7-4084-9a1c-2ad0a5e698bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cb4c9b-3758-49a3-b09a-c583581dcecd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c0f7b0b-4b3b-479c-8905-3b065a98a1ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bae061b1-5579-4606-9b50-200045fe902c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09e5ef48-d348-42ef-bafb-41d9f6e4b7ff"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e4f64a5-ba8e-41c0-ac9c-fa6f148c0218",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "044a4d0b-060e-4b05-b7fc-9d4e46078fd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c87df288-5519-41d2-88f7-374e46be09c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c394603-5b75-4bce-b2c0-32a44fc1e9db"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ae48507-668f-488b-804f-240e629fa3e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "237a6374-2fb6-4095-a4b7-f6630d89a532"
                }
              }
            ]
          },
          {
            "id": "c3026ad2-77c5-490c-b0e7-c1838127f72b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f4371f8-31c8-4761-82cd-0ea058c7c83c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1dabab5d-7251-45f3-9da5-198c2fb2cb55",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388349b2-9b0f-4a4b-846a-be0a262ab1f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "862a97f8-f818-4835-a628-0fb9af019558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c71074-4d43-472c-9e2c-fa5d086dfa62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670343df-29d3-4ffb-8a21-df3159b7bf47"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "72e7eb4d-e609-42f5-a2ba-13371fc7e68d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84ecdc3a-4981-4905-895a-6420456bb489",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "70fbf56a-f808-4bd8-a93b-778605fd7e93"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83a9ea06-03a7-486e-a957-5eef16454e3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "098dbe5a-dad5-431d-8e39-baf4ecbcda40"
                    }
                  }
                ]
              },
              {
                "id": "a6de9819-02fd-42d3-b1fa-5f6cd9554734",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "730d18ad-e2ed-4dd0-a4de-01255ad3e165",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c817ba9e-31c9-45fa-b9d0-21b4858cda0a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01cb3c1b-4c51-4f50-b839-313dd7c9cde2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "68277158-efd1-432c-85d8-6a811f1634ec"
                    }
                  }
                ]
              },
              {
                "id": "6031ee9d-148f-430b-986e-8a2c42f585ff",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b123553a-97b4-4d64-8469-679ab3d2b148",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e904fed-7e51-42e2-b8d1-5e7a8a97b4d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b00dd0c-e1d6-4f98-9f78-cdecf25aa00d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d69619e8-9845-4131-826d-11f350c6bab7"
                    }
                  }
                ]
              },
              {
                "id": "40aa20b5-c566-4dce-8561-6ab512556267",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "267178b5-057e-41f5-a497-6f792deb1189",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fb0b4703-b836-4536-8faa-a5ed2ba70a61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14e08ac7-22db-4f02-9719-5bb9e136d73d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cc1831b2-3014-4906-b1b6-3da521623d32"
                    }
                  }
                ]
              },
              {
                "id": "638c813d-f420-47ec-8c90-76acccae9efe",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00466b28-7cfc-47a1-b9a4-131815266c96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd820cb9-5697-447f-b46c-0842858e4c4c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3946d460-3e00-41f0-ab0c-e730954705db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "e7e0f9d0-5157-45e0-81b4-befcfa5cf7cb"
                    }
                  }
                ]
              },
              {
                "id": "2da5d77b-9e60-4378-9e5d-37b9da1f399c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7171c0fc-63fc-4bb6-b484-33763712532e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3d133741-6039-48bf-b825-fc1eca27db2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d6988ab-2131-4fd1-ada9-5d400e40af96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ce942f3-5e08-4e95-ab2d-bd7b720cbedd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b2d20f15-7c74-4dae-aa9c-fa180903d172",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "50134167-4710-4ab0-9be0-4b5c0ae7ecdd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e691e8b7-9e9e-4526-b71c-462ddbb39f52",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0eaae7e5-d8bd-4af9-9ab3-09fff34f5158"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "35474349-971b-4dd1-9292-23e500239f95",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "933e400f-1601-497b-9252-06c94099d091"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2c3c240-a4cd-475e-b5c1-0f19f12d8332",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cfe6e61-9a55-4cc2-81e7-519f2b2e84b2"
            }
          }
        ]
      },
      {
        "id": "066a73c9-872d-48e8-b1a3-c8fadcd1d2a7",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d593bb38-aedf-42d4-93fd-3febecfbdba2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7721cd76-291e-43f3-a6e7-62cd7680a558",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ed7c1bb-1455-4d7b-998a-9e2598c25f19",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31835421-bb78-4331-b313-975f18e221c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0f1e16-8728-4a4c-ba38-5072047dd78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e648ab-0e10-4899-905c-b2073473197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "535bd6f9-685b-428a-9801-9084c18ebabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d83a928-0c8d-43ea-84f6-112c19e59f0c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240bd4a0-d2bb-468a-abde-f48e8575b8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2552deb-587a-4ea1-8e02-918f19e117bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8c1c98-8642-47d9-9c49-52d604a12e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "12421846-d101-41f0-9870-7f91ef196268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ec17a8-f36c-40ad-8e0a-2be081d0cd34",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9f8372-043a-4c33-9585-18b5a25e901f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fa4c351-05f2-4b9b-addd-d9a6abe9e130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aa99bb-7898-43b6-b135-ec135b335c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c292cf01-8beb-4e3a-bbf6-945ab62b633d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc20c81-8009-44d2-8324-259660008466",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93305f5c-21c6-44e0-9883-1a711946c3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f17e06-cda2-4090-a511-675261ffbd79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e98aaa6-23e0-4f1b-80d8-490a5efc11aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5333ede-7af0-430a-9e13-7fc9268dc976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3104c67-0cd6-4b5b-b9c8-87cd6b430edc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80576fa-354d-468d-b73e-8a34310c0ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd69fbd-1145-4c0a-9f12-67c10ed3d1ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dcbd12-17db-491b-9474-54b04bb42387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "048d142c-53a6-44de-876a-49dfa5b0fb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3c691aa-66a5-4aa0-8a29-214957a62985",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4df631c-68f3-4d3f-89a2-8aa5a3ba68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476d081b-8cf7-40cf-b9c4-37719143e965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12505d-a9e1-4f37-8873-c0deaaec1311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c440030-f8d7-42f5-81cc-515bb7f55a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a43c23-0409-4794-9f47-2512f6b8f9b2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d3d944-475f-4319-ac87-61df202ac254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdbb3077-729c-41ff-9e91-409fbb106b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2d81bc-f67b-4165-af85-cc8359f9d957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "eefe45d3-7931-42e3-a794-2b323e154d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465e01ba-30b3-4193-be67-4dd8ef86ba7f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01c086f-b7e5-48e0-b340-63b1daa4989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e452e9-2d66-4434-82ed-cea8da86b50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc69fbe-fcab-4609-9e86-5c49f6695b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66d6df2b-8b4b-4466-b9a1-ea2b1233926d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9225fb3e-e0d3-4724-947e-edd2964c9d70",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "872d1f67-3e20-4c6b-9587-525e65d6f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6665c480-389e-43f4-ae79-50065e35347d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec93d560-19ac-4db3-a912-c22eb7b53ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e37c188c-fe35-41b9-a42c-c4143783e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39e29af-e9c2-4474-a93c-e740d9f5f591",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c76f25-8613-48cc-8674-f2c90b48e3f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c94b5f-e6c7-4ad9-92d5-79cc7c0b6f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a6fee3-4687-4f08-9ce7-633d3e22f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71906866-9c5f-4917-bca4-a438b9ba5b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58713c56-f965-4e27-8e6e-00ed962a2977",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbbb7625-7bdb-466e-b9e1-203f45db8cb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54a43c7-948b-465d-ac55-a6e6b94a7ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14721ef9-41b5-4def-9c45-d5385d0fddb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "44413c41-f722-4cf2-b51b-aab5e3c8c40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ce8d6e-350c-47bd-956b-ab0b79dc9956",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "290cfa6b-573c-43c2-96d1-727af4954386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c44c366-9d36-43f0-a54b-ec86c4ba5e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ea53c16-3dd4-4282-8a7e-33231bd660a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "33b76233-79d9-4c8d-b83c-df6b5e9bc73b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6bccd0-f1a5-4bf3-8d14-f96858fe1ed8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411044af-1d90-42f2-9390-29c11050b1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cdf2ee-6782-46e9-9793-a116fcc6ea06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3a39da-7d40-4d00-9609-1ce7a22bfed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a512b4a-43be-44f0-a588-21f06c1cc128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c560e4a-f9f3-42ef-9e66-8e4321eda97e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1a23946-ca63-4159-9ce1-31f42a0e85a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70a272e9-c642-488f-b864-e7d3a243a1b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e838580-297d-4da7-b5df-ea9cb33e73f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f03e2a9-a31e-4df0-b605-c9ffd4c5c429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0bd274-b2ea-4292-a943-9c84b4399b2a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5415b08d-ba5f-49ae-b758-3469c40b1296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "721bd223-4158-42f0-8eca-e13350b49a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f224650f-e3e5-4c40-9ee5-593744e4584c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "099bf0ff-7f41-4911-b671-9fb50f53841b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60b760f5-14ad-4d64-acfe-6b9039c315cf",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8208eaf-cbe4-45a4-87e2-a500c406b925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd4a08f-fc45-4b3e-ba84-90cd043a2821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9bbf55-8328-49a7-a04b-15ec10ee8a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d78effed-e5d9-4e66-8443-5f8288cf8891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd116103-dd05-4fd7-8d08-f78011b6902e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f2caf8-c47f-4971-b0a3-4be071c0e167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25bce0cb-8d43-49c2-bd98-3e8321a7c5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdfee17-2c24-4a7b-b5ac-82ad9fe26102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "72f82764-6e13-4a26-95a0-178213fdb5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d890279f-3a9c-466d-9289-c44fdf5d3fd8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d510ced6-10f7-42b9-9077-11aeb4566338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c3f91d-ec24-4634-aea7-1aab4cce952a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719f840c-31fd-4108-a110-5f77417d42a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2774bdd3-c518-4f28-87d4-c55f1302d77b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36012854-2cd0-4ad9-b9f6-531ab806e054",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e427fee-609d-4f3c-b688-ebaf99d64fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359dc889-2208-43e8-aeb0-74aa0c1c52dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2270942d-8a12-4862-992a-5238ceaac865",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81eaa91c-afcc-4e4b-a6eb-0c98934c4981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab4b3dd-1266-4f57-9a5f-8f0c74580809",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9305a3ec-16a2-4fde-9bec-9ed7985a6f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d76b529-57db-40d0-8d2d-d9cd1fcfb5a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d890fe1a-483e-4793-b224-9dcb3cb9cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7dfba509-b21e-4a7c-a33c-63baefaf03ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c67d1-4c85-47bc-bff7-52f2b2887414",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c944f5f-d91c-4767-b719-6bdd5aa4e900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8249b073-dc02-47ba-8979-30001e598fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53041816-ef0c-4a56-84b8-ee6c7074c587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82d43812-76c7-4ddd-bea5-ee1dbfcdc651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1181df7b-2936-4cf3-aa94-baccfca89316",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "043df043-48f7-4ff6-94ac-590dd1c83cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8921d320-8575-4c9a-b68f-d7ab8fb70b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4cb5e8-edd4-4118-91a4-641f0798929c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01469558-7f6b-45b4-b4fb-ae3a0b552003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23841553-d2b9-44f8-b0f4-2dde26e9192b",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97a41f6-52c9-431f-a3d7-bc8792deb90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f28b91e-d44d-4253-9eef-1f322c48d1ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64e6f60-e3e7-42ce-8da0-d8cb96642dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d529b6a6-4341-4950-b4a9-aca63f987c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f81560-b20c-41d9-ab34-ddbb8f669d37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbed7fe8-80b6-4cda-b638-b15e26b20d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a58ed1-fc93-41c8-b753-185d751ced86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066e31aa-d789-4be6-9f7a-30960bb0dbb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e602df5d-c2fe-4d7a-b0ae-484b9284d310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e682e43-53c0-42f5-a3dd-0aaf337815b8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b596de-b315-4dee-be3b-623941f55992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3688930-58e2-4a37-a3d7-b147f55b8a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a83967-c8b8-4a10-9af5-96e599559f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc2ad10-2162-4e76-99ad-69b2fa3f84b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06040ec5-0177-4501-ac24-8048e153381b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17d749f-6851-4032-8c86-841d30f713bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2782f553-78af-41fa-89d6-0026ccaa9384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec41934-04a7-451c-88d4-410fb6585235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d36370c-011d-4dc9-a16d-2a120f36e0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caa2b601-2016-44b2-bd18-c195517ee0d3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7231701d-9780-497c-9ea7-adfdb86bda4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f05f2457-7760-403b-8896-0e3325190daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca0640c-dd8c-42b5-b15f-d6b046c6f81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38dc3354-2e60-4979-8038-794b7b1b039a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b398a426-88d3-4227-b563-6ee9f72572be",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620b5c31-a2fe-4052-b98e-22621df24e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbe2523-064d-40df-820e-7065c3f8e10b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd4c681-783b-4a41-88e7-8a14b4650868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76121d7d-8ff9-4978-b6ab-39da2f3b6210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5af093f-8548-4f4f-b00e-ff6318bdb474",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c695008-8c33-4184-b720-4a5edb62f36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f84a7a-652a-4dbc-b144-28110f42aa62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c52703a-0b21-438e-a298-249ba6f0192c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34604028-7817-4fc2-80b6-a83a0d5b55c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56b795b9-a303-4a5b-9d9b-30672aebcbf8",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6273907f-eee0-47dc-837d-4e4e65d42249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62963d10-7fe7-49b5-a6ff-d9cebdffbfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4d32496-efaf-4546-aaf0-99c4daac3965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db8ce130-832a-404e-900a-cb3a4ac1369f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf44d0f-ff7d-438a-9f25-95bc4451f477",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ae9a23-b127-43f4-8896-125d768c86e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d587a718-b10e-4634-86e6-468b8b95659f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb97c13d-4acb-42af-ba5b-97d238bc799a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cc5836-24cb-4413-9a5c-e2f48b92283e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f50ebf-4801-443d-a3fd-1a23580f865b",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9860fdba-148b-495d-8560-feb4b89ea74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "149ac133-44f4-4bcb-9b2b-d9c06378608b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9eedd1-fb4c-4093-a6a5-2c6b1c5cfc5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d63f5406-ac71-400c-a189-96318874d168"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47cd0ac1-1304-4ca4-be0a-790b641faa1e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9c807178-c96d-4bff-873b-a0d68007dbd3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c9421c-03d7-43de-bea6-2a70aab5e27e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0fec630c-deca-46d2-85cb-ab3efe9630b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d22f01ef-56f1-4c5f-b16f-6e8f43fedbc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "62bcda8b-e061-41ca-953b-609a0292558f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bb7eb6d0-4e2f-4ac1-b918-e7d52a698416",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34f98ce8-c81e-4b97-918f-a8711972297a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "072d3e09-c89a-4cfd-8318-078ec62f92ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14a57c14-a367-40e9-8a7f-86ea085342c6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4f122a35-4c69-4111-a2f3-0ca4dce0615c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d4804b78-16fa-4fd1-bda0-a0114bfec068"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5a3cf4a-4bc8-4ca0-b9db-100fb8c65ea5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ab875cc1-4833-4b68-b48e-e3c28d2c9388"
            }
          }
        ]
      },
      {
        "id": "83b9564c-f56a-400a-a9b4-ea7df182dd1b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "9ac947d0-77c4-4fd0-8916-2a4dc3f62695",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7446e21-14eb-4858-b925-b693deb270fe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "108f0a94-c6c4-4406-b631-a592e959e99d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101b402-f1fa-4062-b3be-6a1c72acd673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682b8482-5f4e-4b48-99e9-62b02a127e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d80c46c-16d3-4c5f-b5ee-af603804a33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed5a006-bc2a-4671-8e0e-8d61902b59f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a0faf2-0778-4489-be3f-5257bb097db3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0667a87d-7c58-437b-8d4b-fc11b9861a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc7f0e2c-34b3-4a8c-90d9-67e5b76525e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8999f9e2-642e-4e75-a8b9-8f21d79e5fd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "852a4129-1185-4239-b676-c35f50254e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ee648e-e97f-4c13-b921-4c573c421a4d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a56fb-bddb-461f-a065-c4ddfcf3142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56d3a250-cd3f-4a69-8fab-94777b1f4106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6917b9a6-51e7-46d0-94e3-6461e7a64278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc194b98-35cc-4516-b025-3012b9d5c958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f27ee1b5-3992-4bf3-a293-42a151885091",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe07b3f-8778-4432-a23a-5a6dfd37f603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f975eea-c6ec-49f9-a6e7-6218619fe600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3a55d40-6522-4084-81e0-56a171a4fe66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3b2ec9-8628-437b-b6d0-293bdfa010a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27950c67-9137-4999-b035-886d30cbaf10",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33942e76-7e62-4e0b-ba77-7ea35b622c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6629d1d5-99d2-4656-b52a-48552ea77184"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f330fc-def9-445a-9867-d1771fb99526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "759c2564-f395-4529-b2aa-6b7ba2aeb92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435d6600-46d7-4859-bbad-cf92ee2f5f2f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56c497de-62ef-4b26-a0ee-40820013ca62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11aab47c-628d-4409-aa6b-9cfbe01ee8f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b368067c-5a1e-4a63-9c11-47a7d7ebd29b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5584961-6e17-460f-b05f-9e0fc6f56811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a632c790-d17a-4882-bdd9-08f240f81965",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afde23a-0597-4c11-8b95-bb6e63e25b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "665ac247-be2b-46e7-ad46-369b58acd18d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "097be3bc-026c-4ca0-b859-43c5784f955b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad328ae2-8cda-42fb-83e2-07326bde8946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5d1e5-7f3c-444e-a404-fd402a50359b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c071b865-3107-4c1e-8f9b-f61da653719a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b438d3af-29bd-4457-aebf-a805c23275a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cec9a31-875f-4a7d-9ddc-cb6cf7597f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ba81804-acb2-46b4-bac9-796a52ed7c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b641730d-357d-4948-ae76-9fb45c7517f0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e668b96-ee6e-4d22-a255-0182d8445f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63396866-a4b8-43c1-95c5-b6e3a4d8f276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90408710-5e45-4256-841f-65e48b99a858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e06b4188-1aa3-4bdc-a4f0-7108ccb083a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cbc320-40c4-46c5-b027-3acf096a16d7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828a5c1d-f92d-4ec6-bf9a-a08bc2aa9754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b803a4-bf88-4697-986e-be0279866141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258f2d5d-1358-4f42-b488-4d298d117e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d6bad9-9b8c-4de8-a895-89a2bbd2df04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d114ef1c-f0dc-482f-9fbd-6107e909dcc5",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b086e0d7-b2d5-4303-91cb-0bee64dc87f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fddf6b8-eef5-4e28-8d8b-218841a73c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cab31f2-ce4e-4eed-b55d-5ac137568140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8b30a425-14b9-4943-955b-427a8968906e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59743bdd-8f9c-44f1-8bb1-f3d8971d5a23",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd0c28b-fdba-4423-834e-44322ddb4045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2659a482-65a2-4ded-b796-f4ab5034bdc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bdf8c2-db1d-48a2-901b-01a6d52c7dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "276bd26e-f880-42cd-8e39-16c833782543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfc9f88-4536-44a3-b06b-0e4e962fd7d3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347e73fe-bd9b-43c3-b9c7-fba1cd289eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c448482-1b59-476b-9274-2793709baec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df36692b-d269-4f8a-9fc6-20e9de9003a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33e174f2-8ffc-4a6c-8617-ebdcb7bd3ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312adad-1807-4dcd-bc16-9f77b92d9134",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabb755d-5152-4436-b14d-22ec4e6953b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a245cd0-e0cc-40f2-a587-b4fa21c545f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51854bb6-e9aa-485f-a61f-fc591ec2150f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4dda209-330d-46c1-ae47-90cb633ff250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3e36c1-110a-404a-9031-fa55e7ee0a7a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3596ed-8222-4490-80c6-7293979794cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e830734-cec0-455f-aa37-c3ee895df710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b737c243-302c-4c76-8e87-d384d055728c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b5368d-cb2b-4a64-b373-f4bafa26950a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37538077-5192-41ca-a033-32320f6f47e0",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5564a5ba-42e5-4e9f-bdb0-4c4d2bb2b498",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0c7eba-1b06-4f9f-b2b8-275d01829bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e38748b-f75a-4bb6-b7f6-abebca89fb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "19619604-0031-4f52-8ec5-288ac758935e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b49b39a1-7b4f-4e28-bb5b-c1eac4405168",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2592a4c6-22d7-4c82-acc0-cd0d1c3b21ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f68dd1-5bb3-459d-945e-227c69162966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa03242-fbb4-4457-a208-e904d4523a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9870091f-bccd-4f8e-ac5c-a1005d23b952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec62cf6c-691d-479e-8efc-42c6c82a6bb3",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28803dc-a05d-465e-adb3-07a096d93508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe50ca0-6f12-4640-a3e1-13fc9ccca863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b66517-f7f4-4107-a855-c6a296faecd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2c1541-82e6-4591-bd65-d3c1c7ddb2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd141cde-80ec-4a70-86da-40e11047dc60",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5356fd8b-3368-495e-98f7-83630b74236c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56d1d59-94ec-4995-bd7d-78da7acbeb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1737bc41-d2dd-48cb-b03d-fd2795f3cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a678f48-f257-474d-92ab-98f78a96d3b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ee5a3d4-faf8-4019-921d-ead6976414fa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a486533-0104-472d-a9c5-b7f504603ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bfd47e-6ce5-4abe-9afb-69f65aa0ab37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b809b89-6a52-404b-a5e5-bb9d1a11006f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6b389c-1e41-4728-85be-fdb1fe951d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8c277a-08ab-4530-83ea-7c9cf9b405e7",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36674918-c228-408f-9bfb-5aa07e01021b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce961468-7adc-4b35-b43f-b06e757f289a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e59b3c-1d40-404a-a760-6a5ae18a6648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c81d63d6-a54d-4710-a56e-8a6b7e66bf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619d0b92-8204-46a8-8711-f3d01a7d4037",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6329f2de-0b61-41f5-af27-39d001f6d55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d88b291-4a9e-4773-b029-264fed4bb551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f05b6919-0ff1-44c4-93b3-cbd7be56ea1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93a63142-2b4f-4046-9f8b-45ebf0387aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b67d90-8e92-4c07-8a76-7dbf26591c65",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38861afa-ab43-4e61-938f-c738f9c63419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231b93eb-0bb2-4b40-b5fb-b893e002bf79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6136929-0765-494f-8b13-c971eb824759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcad4f9a-8b02-4ec7-a226-6e10c5fb0dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "048778ab-3657-4f67-abfb-d9032ec2890c",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff677a7-0899-4be3-8e38-3e65b0269763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a976e8b-c9f6-4643-a223-463af410233c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb7b62aa-f1fa-4db0-9e4e-a69918e5f048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "989738ec-0aea-4753-90d0-52e67393a1a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d1792f-246e-44a2-b7dc-4a4f4e18d849",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5b9f7c-b726-42a4-8188-53efdee6649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2132941d-14e5-4200-ac32-82f1917eb62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c59d45e-11f1-4b22-864d-191ccb8bcc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "396d3b21-2584-41b8-908f-3dcccf309fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c431f820-3c29-4015-85f8-92ba80d3fd1f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17a406a-2484-42bf-999f-dc120f2d1d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b0048fa-939d-4821-a6a6-d765f1014e0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a930a4d7-cec7-4f9e-a0ec-829f82598b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "92a71a4c-85c7-43cd-ae85-ec5785fb4bfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a43ad09-d74e-4b5a-8449-a43c5c64d7fb",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b53ebc6-9957-4d61-9d6f-fc10021ac3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5eb583-476c-47b0-99bd-9edfa859f5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab80f80-77d9-4a7a-8535-5f160e65b068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95472419-dad1-49a2-b485-e3ea0c42a980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc6a39f-c654-4867-ae62-5facb40ea74b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9643e4e9-78d3-4eef-a903-6dd7e4f327e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9f29d3c-8af8-4897-82d0-fade2e406578"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32a0e7b-35c1-4a0f-b35c-fc52b8712cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b7cebeb-e3b1-41b3-95fb-94dcf6cd9d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6c2cb4-2fa0-429c-9214-ba54ae561125",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "483dbb60-2445-44d6-96e2-5bfec8045942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "506a1292-9489-4129-8368-04ee9a5f3dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c03c16-ed0b-420b-a116-3571b8428ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7248b3-8f55-4477-9b3c-b393b2b2a458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51468704-1a6c-4192-9a88-86069601bf46",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9219590-5baa-47b5-9d02-087476d199c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d865cd2b-e01d-460d-8706-d86c34079862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "328414b2-0145-4a00-afdd-69bb4c31d295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4830c1f-5cd0-4e27-9784-f967ea79de63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21fda49d-e918-4e25-9a8d-c0dd4ded7667",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd51d3a3-dee9-4362-8628-397d158ac980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73732afc-52dc-4e2a-bf54-821df6ad50ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152ce89b-60f5-41b0-b077-523752db2b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2342a85-7e11-4658-87cd-bde01819eb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d0740d-2c3a-4d13-b0a3-e2cc16f82b2f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df601152-c53a-4d4f-aee5-82af67b97baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c60126d-5819-4f22-918f-2b143e565b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83213183-c0fa-4665-b1ce-fb55239007c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe42b9b-ca67-4246-8e27-85d8089f9fd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57ac238-3f2b-420e-80ac-77146ca57e50",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cdd0d4-543e-4f0b-907b-3706eebfa1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f65531-acdd-4fb4-b76a-4e101167baa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3eb20b-dd8f-4682-bfd2-ba64a0be0847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d665a2-a316-4c60-960c-63111b2bfed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b784d9-0b11-49c1-85d2-c126f0dc5f7a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b46b33-29fb-416e-b655-6d45202f91b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbfec330-0c09-4b19-9574-978c500dc65a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92f6c639-1841-43c4-a50e-38d9db8ec2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36469cb0-60c5-454b-b79e-3a939568d0ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93cfba4-4993-4a16-8119-e91bcf9aca06",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08cf7e6-1a0e-4e72-820b-b829dba89a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bcb4eda-e47e-479f-93c9-997f3189df04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b41da049-ad23-4dd2-80f9-145dd52f6450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4706f72e-30c4-4e0b-948a-dd8e413fd020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e507ff56-e55c-4418-81aa-63420f7b3c0d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575659c9-80ff-4c2b-a4b0-fb589eb146b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6350ab-6f5d-4b7b-9bd2-d278800f46a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d201f25e-2a11-4b81-a62b-4a571cf72554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47c19e59-0a02-4cf1-aadb-1863cc7fe47d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15f5276b-b65c-4932-8ac3-849e319b1d1b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a3f983-ae4a-4064-b017-31572884b859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943a5234-dc96-4152-ac52-ec94ad28fbd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f427ad4d-29a7-4d29-8a02-cf16f1c0119b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58a3184f-dca6-4406-8df6-f853ccf06eae"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "174f2d78-d654-431a-a2d1-ef91960cd01e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "558b1264-7d71-462a-b9ca-1d98de782fbd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efd05e2-f32a-4805-9609-c8f1feccb25d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b40b63b8-7a40-43db-9f14-8061dca15556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a4f76-c553-43e4-806d-bdea1ed32fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c66e4c5-e984-45a1-85f2-0e6eae15a0de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "525150be-993b-4e3b-b8c9-6b7122cf611b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adfb9c63-6683-4902-8639-4f63824d1ce4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "18585dab-a9e2-4bae-9fa8-1e8125dc587d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f86c125f-7741-4655-81ce-6b48f95b6618"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f24c17d4-863a-45d9-bb67-e400896db2a8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "af0dcc09-692f-4531-bd40-5e5278210ac7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17079402-9ae5-4bbd-8ac3-b334b419c823",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd8996df-adb4-476e-98f6-c9490595b501"
            }
          }
        ]
      },
      {
        "id": "3d0b4f18-0062-40b9-8a45-1597a95bd734",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f8511ee3-84c1-48d6-b120-7a342878e30f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "51849012-76cc-4863-968c-3466be7600d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e425642e-5256-424b-8833-7919da71f61e",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d4587-b1c9-41ec-ad45-c7276e6787f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bffd0b44-2f76-46bd-a534-b359c2433d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a52d6c-68df-47de-be30-d0b8baebfb97",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e55a35d-5e4a-4a33-9647-f28c73971d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "815460fc-099b-449e-b227-c8b4346b7cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2d2632-36cb-47c1-b012-5fdd10cbb96c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0836d7e9-06b0-47f6-99ae-d31fb19f8645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdedd66-6a21-45ac-9bc0-8feecf261be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcffd95-5371-4433-87d3-1f33a5c8dda6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afdf0bc-b34e-479b-9c2c-2727bb08e068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f883695-80f6-4d40-a4d0-02c2c7c1b86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2e11d6-9f53-40b0-8bd1-6a745afd88d5",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7dcec2-844c-434b-80fd-d1fc56eebc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dbde9c3-c79b-4464-9332-5049fe4baa1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf69668-374e-40cf-9c49-954cb6c3b200",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe6c38b3-ac75-4650-b5a9-8c5bee5de031",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df7e6b86-0e14-466b-bb5a-273baab43f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b272db0-d1b9-41b5-9c66-149869bc507c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe80fb9-7bd6-481b-a1c6-24a6d119ff2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46886ce-1514-4a29-9591-ba4a7ceae362"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dc0f893-24ce-433d-b8ca-3d85365cf251",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb0bf47c-1968-4c2b-9eb7-238755c3ff98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9e82fc-4d3c-4a4e-ac8d-4f9d226e100a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7953614d-ad6b-4b7e-bb71-02c657339dcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5379e6cc-3768-4a02-ae6c-cfa0b4111e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6664d8f8-4591-4db5-8303-2e178d5acd1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c92839-5445-4870-b5dc-8b9036be25ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d1d693-f9c4-4dfc-b1e4-c7de7ac44c7c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6253a64-d3e1-4dad-9c59-a3c9c64ddded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e56c53-9ebb-4830-8b6e-7f736f061b94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7de8360-73a2-4e56-916e-412b0c70797f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8039ea3f-34e5-4338-8675-b4e823070684"
                        }
                      }
                    ]
                  },
                  {
                    "id": "823adf08-ee30-45f2-9d07-c83190316ff6",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e68e6b-36b8-4e2a-88b8-4cae71ea8bad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cb5f1e3-f608-43f3-afad-dd62a67a2b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a821cf-410a-4f29-858b-59128bed1353",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d6f42e-521a-4fd4-bef0-7115c6522e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c61b79b4-c667-4f45-9d14-e1c30d897cd6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ff70cf-e674-4166-b147-dc8e83957291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75413cf-a8b8-4e81-9e86-2cd13a994310"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c45255-ee33-4557-b4a3-97dee519e12d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "787adfb5-0af5-48c7-a01d-44146e2b0d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aa26e4-eb05-4cd1-817b-fa630ebabaa7",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89489652-ba03-44be-8aaf-d38daa488a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f6ba383-3f98-4ced-b486-92c6d0ff8685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "621998a4-3c7e-47b9-b463-913a83f3d358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f13cc2a8-f5e0-4884-82f8-1c6d490afe84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0006d90b-ed2a-4e8f-80e2-29fe2c4f1bf9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d67c328-0f59-4427-be9c-9fb2b717d80b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4049695-0207-45b7-bcc9-4cd0ff284150"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099dc59b-8756-49ca-ac9c-2093666f6ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b391ea7-a536-4612-a919-9ee102c4ccd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6be7b85-8d5c-4d65-83c5-c1245c52dff2",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9cddf74-35b9-42be-b3d3-aa85372c8119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2bf7e6c-866b-4622-9535-7ca5702114fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46d5be03-d053-4c16-a886-33dabe12763b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ea9412d-815d-4a15-8eff-e659191e117c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cfe8e1-6ca3-4eb1-8a73-a63b19f2fb36",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a729781f-66f4-4cc8-8aa9-adc3e6b34e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae64b89-6703-4f2a-9269-fdc3f49c973a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "233c965f-57e1-4cd7-a1a4-081ea83f4a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "690791bc-3697-40b4-bbb8-03111e6f3001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649424f1-73df-4f74-bbd2-e11f1c70447d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d348f54-d7e6-4dd5-9086-a08b7e53864c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf98eba7-c55f-46f8-847f-3343bee7f938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bc5748-63fc-42bf-aebb-3b493f791c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f85b5ea-1034-4f7f-b0a6-d5e9700e194d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db6915b8-fce4-44b1-a4fc-a16fcf50afcf",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21598981-3d1c-4fba-85e5-0a47f4b33011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "030d15c2-6a2c-45ae-9c5a-292e582e4497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c1b70d-d78f-4c51-8611-c79c68edf86b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68543a27-01fd-44ae-a1a0-703736f6e714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b063c320-cc54-4141-8aed-8ce10dba9407",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5310f497-bef6-4ddc-8010-c9a406f5ed5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "531c73ff-eb6c-44e9-96f9-3977e17be1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c67044fc-bdb8-47a5-82f8-e64339cc4e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2a09ae-5053-43bc-a732-4db0f33fec4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8daccdc-6b1d-4d46-8669-d5753917024e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92ea0ac-a3b8-4b44-b951-d9a1c62ee112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294753bc-7fac-475a-8bd7-e7fc186ca8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e659235-0556-41ff-b073-adccae2cabd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e96d48a8-5da0-4fa8-af7f-c0ee48bb2eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb13265-6c36-4fde-b946-aa90554541d1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ac3a03-25bf-4195-856e-14b7b88fe460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d985ad1b-763d-41c7-a1bf-e47c0517d5f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1209f733-161c-4f2c-ab53-f95fac2f186f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dae59b5-3fbd-4a1b-9dcb-afd9b3f71780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7517ca60-5e18-402c-a455-668326a3c260",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593dd24e-1b45-4001-a4e0-5d1d84f46ee0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36a93a6-77ac-466a-8132-103698f82026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98791746-1c4f-4b1a-a99e-409ed3ee6f81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a34121-2f21-40ae-8898-8a3e15bdff8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd9b7f1-65a6-4fb5-85e5-46937173c7d4",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca1097e-cfcb-4aad-b66a-5e9106c911d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b6d8bd8-0dad-47d6-80ab-c2e72a345350"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f6f774-d81b-4a1d-bc39-558cb24fb0ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eae53fce-5fbb-4bda-a125-c9b0dbae1906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b33d45-1ec4-41f1-8866-5caac9e56159",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb65ce9-c712-4311-89b7-843aa1349e3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18622d33-2575-43e7-b3a6-de7ba41fc473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53f16de-07f6-444e-892e-59504b3b71ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8769923f-c973-4e1f-bc87-2b1d2d6d63e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf8a1da-91ef-47e6-a09c-c8f664c9d614",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94d3f832-c715-4a21-abe5-a4f1ad262545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b8677c3-d5b9-4e4f-b56f-0bc8c62eeb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8376dc1-60f8-4503-a073-43f28764204f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e046a8f7-c4ee-4dda-98cd-274bd7778f07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481745d7-98c1-41fd-afd4-5f297be50f39",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb080755-5809-4647-ad50-9a4994b028fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf268b83-6084-4b91-bc17-ad12d99495fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73de9c8c-5819-4c37-8558-c370fa655bdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a0ec06-6c91-4524-bca6-fa792f10d8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7a1c21-a848-4e8d-b2ec-d8a981184cdb",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecec945-4259-4aee-9f41-b96ea6b8fdec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f372e3d-db0d-4c7b-bb7b-6ccfcc0ba2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d11542-b24f-47b8-9e6b-d46698b321f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87b5f37c-a446-41e8-8544-fbb77462802b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d554f904-81e3-4ea4-a93c-cac55d675bdf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28293c3-4b3c-4d0c-9ec9-e9246c6ae10d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d4be250-d55d-4869-b320-ad8d7ba72171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f41637-361d-4dea-9913-d7b9617180be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c5f9df-e27f-4edc-a28f-2886520c5862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa10d5bf-9864-45e7-a352-d0b3bdc03539",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5174de63-911a-4fc8-ad4f-dc0f0f1d6434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fbee66-9ceb-4f9a-b3cd-483dc67cce32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c958d4-4d9d-48ae-aeeb-a489bdf80bdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "418dafe6-0a02-4248-9cda-8aa9432ac16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4771ad27-d5c1-47d5-b2f1-eb8c8ba92610",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88914b49-64f0-44a2-84c6-c20a4ba7bcc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f2371c-6f79-41fc-8fe0-aa4ea63940b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f888526e-2da0-4e5b-89b2-9265dceaf403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36177137-8c2f-4fdb-851f-b2c27270b517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae868fc5-4391-498e-a71c-42fb6d92eb7b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35607556-4814-4cf8-b70b-e85ab1c77322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8124a179-4194-44b3-92f4-2e639060f519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1742817a-cbe4-421c-8c8f-416aec510ae3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2017c0b8-6271-4a27-94ac-642c8221433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555605e5-48ea-4921-b910-9bbe281a719d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a506974-4b68-43f3-95ad-4aa5146aadee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc659c38-ec2b-4ffb-b719-46059c2eeeb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c5e442-30e6-4287-8424-cbc7c3c6b063",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a683b254-acc5-4be8-ab89-db1fffce20ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09bf906b-8c39-4f51-b9fe-1e0c9c7115d2",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ec087d-aa58-4c4f-90bd-c7df8aacb771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc24d108-3ae7-4528-b60e-bbc9174919b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "571af0e7-adbc-4f42-8e84-1a549a10a017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33335f82-3af3-443e-85f6-3505a6208bb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670aa2b4-1d1f-4797-9e6d-91000e0be04d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dd4e67-b318-467a-9039-7f01060cc01c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3236952-9d1d-4f8a-b184-cd723b50e000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1837e437-1aa5-42de-93f0-1fffe7a0fd79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c7e9b0-1aae-455e-94c1-cbdbbfa45ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5597c2-38f9-4616-9ce0-77de6da3125c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773983b3-3e16-45d5-863a-5af6f89a7334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f4c5a0c-2f65-47f2-93bd-acdbd48b5a31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8008944-f35e-45ee-b52f-976815cbd082",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda2bee2-6211-40a2-be53-c39d58bf2fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94aba1cf-2faf-4861-af6d-b59a56c76bf1",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7894472-8d05-4595-90eb-2b53d4cc8e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733b8509-9c90-477f-8a68-a6a34036a6d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdbb709a-87c4-4f08-8263-dd619efc6f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b52e1844-c646-4571-b9d8-550548c483c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1d7fc8e-2a30-4620-bec7-47566e2f9501",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de442ad2-9096-443d-bda7-0833f01f9f0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee09fd35-8d46-4fe4-82b4-ef3e9ad8d9ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b633559-a37f-42b2-9e15-d304add6a854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "371e97b4-4af9-4fcd-9a75-8721550ac065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88caa5d8-ef6a-4602-a060-8c0f1fa4bd5d",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c525a3-baa3-45fa-8655-d5a5fb805089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7affe1d-f303-4dfb-8431-42e8f7c0e1e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afbaf2b-2226-4958-b55e-9b1c40804d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3934f06f-a406-40ce-af5b-ddcfe7fb9133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c2afb8-d095-4142-a858-5353403fa7a2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dd2314-4b67-4e42-aa25-7e99c404cfc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ac1efb-0686-4293-b2f3-5c9b2d515cd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54df239f-61c7-4143-a693-1a7b8a9afe4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e144e39f-bc9a-4e98-8e31-c49071236f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25061aad-7891-4463-8df7-b400e0146157",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abea5fe-214e-414d-94e9-24203555dcc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e50dbd-62ef-4b5b-8a28-f3c9850e8746"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d92eef3-0d9b-461d-af4a-14ab115a8dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3c69bc-7214-46b1-9768-fd13d9518b8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c227a32-7d67-41a5-99ec-3540fdb598c4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b55aa3c-4a8b-4568-a4af-63c9991ebe8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c405fb86-faed-4bd3-842f-c46ae60a16d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7b6007d-faf7-4473-a136-17752d584736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ef0acc-3e90-46fb-a24d-18957c8044dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c989c3-dd36-4700-940c-95f6ab89530f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1ac3f5-9012-4ec6-b410-ea986a0ea214",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5c51a0-666d-4076-9f7d-a892e810d303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d898aba7-865c-4b91-b5be-0b8f2c88a195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d22ebec9-d6aa-4b30-9b23-5e1413e34128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4631f0-df80-424b-9f27-606002208f02",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f83980a-4f74-4139-af96-4a9615ef0fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f182077-ab8b-4176-8a64-926a20a71c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d42d44c7-c5fc-4eec-a542-f767190d8585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45633c2-5f3f-4d75-829e-142238e57dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa175c7d-7c25-453e-bf7f-31e0f00731fa",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00180ac-b9c9-4316-bd26-4c6e66b327e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27fdecbc-57c7-4d8c-9059-6c47fe26d505"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d5a860-1425-4cea-8e02-cbbb6e156ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6920fdec-2e4a-4070-b776-857a5dbea3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e5e357-5d14-41be-9777-c3ecdaf45136",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2a4189-9b67-4cd4-a681-a38f564b4d38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089e8e98-2c35-4ca0-9ea6-9e9c586c056a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bad6557-9239-46ba-9197-739433792f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21bc9806-92f0-4ac0-bc19-d833fab5da56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0179cf4d-50e8-4b07-bbd8-82a23cb409bc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de197f5-508b-4477-9010-bb434631e79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33445777-1321-4bb3-9704-9080f1e8038f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a66531d-3950-4a04-b2a6-4367c8021835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e65d2a3-938e-4170-8bac-527c64d11685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2386c-71bd-45ed-bfb3-be1a3449f95c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1f2d818-9975-4738-8d3c-9d1bd38af9b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f958718e-ddad-4f0f-9c8e-f6ae612362f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf6a97e-3951-4d3a-bad1-5dbebfb2c506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "261acf56-829f-4f9c-9990-c312f45e9acc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b3665c-0bb4-4671-ac51-1b77d6a897cb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1e844b-9d8b-49e3-a909-6f0c7f5b5628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc97a40-bc43-409d-b6f8-ff593ace46dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c05f797b-07a0-41a9-b640-f7ec9d87c60b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d928d0-2f7d-4c64-ba8a-78df4687ebcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf4d38d5-a152-409d-8ed2-ecdb9b9b9cb6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "925d06e4-cf9f-4cb3-8ef7-0ddf9ceee7d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b6826ba-235d-474c-b532-6cb7dcf4933d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bb8544-f49a-440f-a76a-a9e839dd7600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200bcd94-af6f-43c7-9e94-4655bb46ccb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de317eb-0c82-406d-8de2-e0447857b3a7",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388b5dc1-8f17-4532-ac95-f94b2d49e602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c21a40f-eb7d-4e2f-934e-e69cfef37f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee63f63a-b5e0-4cda-abd5-d7673afcd2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6353d8e-b24a-4fe5-ae4e-4b9723d35a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "588d3b8c-ffad-4a70-b190-065190938362",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1c4740-df27-45e6-807e-6c41184dd4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c0a4d97-2b27-4e49-89f2-22d075ce283f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f72bfdf-aa41-48ee-be2a-55736f64e5ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad584229-fa4b-4cd6-9099-db61755f1837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31808c55-0dcf-480b-8f80-60f46a77216b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13adc655-5870-490c-a026-f53b6d5aff3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67b5056-d11e-41dd-be7e-07ca63d61019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ef3e0d-ce66-4530-8760-db6dfccc8ff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e0837a-e61f-4b28-a270-cd2139b7714e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62bbf05-e4fe-49e8-85bb-afc6e7ae01f4",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ef0a2d-c205-4947-9985-4137b7edf4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b128b97-9449-4bff-bdd2-aea79989941c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b2959e-4514-4113-855c-0da5e141fb17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5034179-bc85-43a7-932a-0c2fa7b15a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e2325-2a27-47fb-9837-35379a1a7132",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5182fe3-3faa-4d79-be93-522a1db059f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea48de9-55ac-41e4-93eb-4601b8496386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1564a3-2bba-4f56-91e8-4c4b53517683",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f95aebd-adac-4946-92b4-406158c15575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a43a691-9f33-4ab9-a169-0e847ee540a1",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff43b328-0238-41c6-aa01-054e417a9c8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e2a2a1-bfea-480a-9329-561943c2d98e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479be2d1-a335-4035-985d-7d268234ca0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fb7abc-50f6-464c-8ab3-6866117d8b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a471aa1b-5cab-46df-97ca-215f922cb3fe",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d358a1d3-b960-4fa9-99eb-a63b421e3225",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952053dc-be92-43e0-bca8-da90e1aee67e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1bd855-2401-4637-8f96-d75ef75c6d27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb2987e9-f37f-4bed-bdde-2b1be45c1ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327fc0da-526e-4a3e-ad58-db92212ab9d5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f26c489d-218f-4aef-bcef-1d05202b137c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6920bf-2b78-4296-b4bb-b69bfe25f0a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8d452f-98e3-4a45-98e1-96a563dc0114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798777e0-5fc5-42e4-8401-aa5e0e8b338a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d884137-ac43-4ee3-8dbb-d9a78a920fc6",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3071b5-a773-47ed-a4e1-7d60d7f3ce26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394b7980-b375-40f7-b412-d18956a3d09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d23a25-9fda-480b-8014-bbb9ebfd5955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4366524-92b0-4882-b9fa-b3904d637d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ca6891-43ad-4eec-b8e3-1cf05066ee39",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ff6d88d-27a2-46ba-bfd2-8241b819da42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9ca472-aca0-4756-9a3d-c4395e15674b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d93f3be-5f81-4c5c-a204-f03fb28f6901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b746ff-7da4-4630-a093-890e42d80441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6052db96-196f-44c2-8b9b-d317f7d22c42",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd00e74e-eb76-44f4-8085-60dacbf908d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ffbeae-91eb-43a0-953a-78f8dde6a4bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb12e4b2-1580-447d-a697-998014e45fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39c64dc8-b0ef-48c2-91ec-c701b77f6f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8193a737-9570-4f72-9ec0-c114f6797fe4",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad619ae5-8006-45c0-a289-fd1de5599189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a954516a-57a8-4c89-9a09-38969dccdd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e4bcc9a-f190-43b3-b07d-c64df49df655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2ff98d-de87-472c-a3cf-9f60c77794f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae066e1d-076b-4bc7-b17d-cf44ee4ac511",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f32e2a-3d22-4042-ba34-f54e39600967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1d8f75-79f8-4d27-86e9-8ab6067efd67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f69eecd-8fbf-4ee4-ba6d-1b34b27d9dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f484a92-f18f-4be1-8e3b-8d5e5105373e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b614d58e-7c03-4781-9557-c7016b1e7e69",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6231dec8-2879-4709-9946-4c215cae697c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4291c643-3573-49e1-bb12-b8991d94f38e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "755ad253-4fe5-4dd1-a88c-fdc6502aba7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79121541-2ffa-4619-bcc2-fd36655e261d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06161668-63ed-4292-90dd-73f1b6f7021b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e8602a-f7b4-426f-8c09-9b923b8af40d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e5b6451-5977-4524-90ef-f7cf19748cb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95a5536b-e494-4cc9-8916-f2677e26d219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e32eb290-1504-4a83-a175-0cbaef7164ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35092d7-e72c-4abb-a8ae-719eaac64a2b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d362e902-262d-41c9-8b88-a48b5ed960d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0540ee29-0eb7-496d-974b-ce2a7c2060a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06314a7-d2d8-4837-a8f3-40102540001c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41d9e0fc-4b6e-4ac7-bd72-bcaf0e379637"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68a5b75-8024-4c3a-9054-7cb17c6043d9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "542f8bfd-f6a7-45fe-83f7-4fec2a6542be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bc36091-f25c-4e52-ac80-f2f54393eac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a10af66-26de-4b18-aa44-f6ab2b998713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30906a5c-2621-464c-ab5d-1d2dfa4792d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52be3c9a-4264-4b89-9119-cd79b8e118cf",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f97178f-805e-46da-899d-b1fc0cec8189",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17433807-433b-4c76-83f7-7221153d8f62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc8124b-d280-4ef5-b064-546c86904c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cae556-e9e6-454b-b760-02685957ee4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1df0c2b9-0c51-46cc-9da4-032ef481f546",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8869c1e8-84f0-4d8f-b4fa-653e3a545ea9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38b65ab0-37c3-4496-8501-fad7bf100ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a704a002-bf8b-4858-924c-177679dfd85f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d04b45-bb2e-442f-a674-7d05240f4f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2454060-6a69-4092-aad9-b036e85d97ab",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4a0275-7e5f-4e0c-b864-57f1ae1641e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "791d1ce0-312f-4d75-9c73-e8a5736d9f3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dde0aad-3df9-49a6-ae6b-a15691e4b85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01b07789-4dd5-4ec5-b7ef-a9ac3b2afbd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e46742-6d85-4777-b99c-0e096238d916",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65f7bcdb-73c6-49bf-ab70-cffa349c7fbd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64ee4e72-8761-4254-8d7d-378b29eda852"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffdcd062-1179-4119-9a0b-90e4781999d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dea086eb-d3e7-450b-8e05-b6a9977d3983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e15999b-d5ef-4eac-8c2b-cf0cd8baa408",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e60a6fc-4ef8-4ec3-abb3-42f6b6ffd86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0efc108-b32d-45c0-9608-4bbfcb924f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a90243a-da3f-4df7-a895-92271ea1f99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1a3c2e3-356f-4b18-8953-efdc686b7123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fb8ae6-b492-4498-9266-18bd3c54b8f9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d3973c-5ac4-445f-8a01-7da85971ed74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b4fc48-783e-4a13-86a6-15f4577bfb25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca561670-6840-4880-983e-b0afbed1813f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc807dfe-8a10-43fd-999d-0125e78e1a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4c97fc-1b6a-43a4-a2a8-f4c6afcd3c62",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc2eb12-cd0a-4959-b3c0-762b57986a50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "069c37d9-8660-45e5-9a4d-05b2f28912b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db9554f-6679-4112-bad9-a171999b9fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99433fd6-a598-47a8-85a4-734eeeedf51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81656106-67de-4c3a-8158-e73dba232ed0",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b882922-c6d5-4d5a-8e45-547c37be36d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec4f6cb-6bb0-4b06-8e51-ce0cdff03dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "503f6382-3c44-4eae-8799-9a22556be7b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf79031-8e18-4817-8301-def3bd54b6b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e4eff5-92ba-4fff-b9ed-edf09fb6aac9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10737778-8503-4aac-afaf-dff1257d189f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2642798a-7133-481f-aca1-fa7a38d26044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "743f82c0-7b50-4076-8d20-cee6e8a43f51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846ef82a-1db4-4246-8e5b-d92aac897eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2ef1f86-1b0f-40ce-b2ea-b67e743ae975",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca279dd-0a84-4340-9daf-08caba76106a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "823792d6-637c-433b-bb99-711dffcd2292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7426d9b-3230-4b3b-a4e5-d6403ac83c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "139a4cff-ae08-42eb-ae24-0f113d24b7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1942b6a6-faff-44ee-bf3f-812aa6a195d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1710584-fee6-44bc-9d1a-895e2c618ec0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de78213c-5fbe-4cd2-a3b2-f11ef5e71e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17478d1c-cfa3-4808-90a9-0fb14df2b955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa63c692-dc29-4157-98c0-e7c2e7779cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be16b8d-a756-4377-b983-b6ea1aa9b130",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "546aa9e1-2a03-4265-9b31-aee9aa83c607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f831272-c2be-4bf2-88e6-1a9e943560c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "053bcf10-0e2e-40e1-8447-dc2d3b03ec76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03720d0-eee5-4f7a-b723-a453a08377e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71487b42-4beb-44d7-948e-ebdf27c04097",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba133f5-6492-44eb-a7d2-65b8b940ba76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87258eb7-9f4d-4e5b-b629-4a641000a4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4c1937-f777-4b12-b2ca-f3f1c368f565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060fb297-ccfe-495a-8da6-b9f43718f6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2ae6a9-92e5-4d33-8415-426a5b9b94dc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf50766-94ce-4dfb-a494-6c9e72ebac05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7a64e73-425c-4d22-9509-7ac6302d9d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f6b568-692a-4a78-ad96-ebc107880408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44930f1a-0942-442d-a539-66041bf5058a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f97663a-592c-4d06-ab4d-e3e7d51d4d84",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24db4365-d882-452e-91b8-c0721398014c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43c56085-e75a-479e-8058-687990e40f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba95d1b7-2fce-4704-a175-53fe50d55d6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c22da8-7451-4292-bd42-538c39e0559a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4291908-cfca-4724-bb75-ebbc8a0e3438",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec81efb-1d3b-478c-af9e-1a4d8379f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24d80b9e-77e7-49e1-9c1a-f2ff23962b15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4713059-4ecb-4943-9b4b-7e5db806bdce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d19f07d-ef80-4008-81b6-c33592df1f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7e61e5-fc5f-4f6b-b837-ae647b9801db",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69752053-a96b-443d-8a49-1fb2bb3727b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb8107f8-441b-4725-987d-f004aff697f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7d6a2b-c3fc-41ad-aa0a-efb90742cc3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f473f981-40c8-461c-b6c6-7979b7f0177c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f776c0-e6c8-4aad-a4fc-97af450eb1b7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17fbef7d-9661-44b0-b603-5d0c41eccb53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e011f193-394f-4453-a586-f7b3bbe17d3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67fbc8d-36e1-4563-8647-2051694116f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d67812-5b79-4d58-9b59-798b78f73537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49562f94-6d42-4095-b0b9-9d8b9785276e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f39112-700a-4ad7-9b0a-a4cfb3861926",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d248da79-35ce-47da-aff4-5fb96251a3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc1bc88-f766-473c-a435-e326fabc07df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e87deb-fc66-413d-82db-7f42f342b9c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b95e0e5-cc58-4bed-89f2-be0c50579f4e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba61140-4faa-49d3-ba95-03bcde378feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3a65fb-55ca-4150-9e49-4b7c1208a47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e206401-d36a-4b80-8af4-f9a2a8060e96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1bebf7-00b0-416b-ad17-f8818dc0a14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a9b769-984e-42e4-9100-12066d49056f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e28a2c9-8113-400c-883e-f1dfd7409993",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0399d2d-27ee-49fd-bc2b-69fe01b7e225"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43269f6-ab1f-4406-8f7e-e2069e8c26d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c399860d-aa8c-48b6-a67d-6d88cb5d6243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21c0731-eea3-4e75-8e36-e2c086d7dfe1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f3a4419-a117-46e3-bee8-34991f58db80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a765a167-c3ee-4015-953d-43be84b95265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a561d9c4-72ad-45de-a888-d6202cea04cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2501488b-e7e8-43ea-99ca-efd934f9db51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9541367-11b4-455e-a5a0-5aa4ab408b51",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddfec73-f202-48f4-90f6-1e128d5712a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbef6f15-3213-4321-9c4b-0ecbcc826277"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2bc491-2547-4b1f-b1a9-f37a5bfbd30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23018a5-399e-4242-8160-94ddc738f478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc03cb5-6404-481e-92d4-b6b5dfb247e4",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e149a70c-403f-457c-ac39-05877f583ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88660101-4dbf-4597-9940-a6539e0e1477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c97a3c9-792e-4561-902d-c0ef924ca81c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "254a9669-f535-49b5-8ca5-7aacb7ce765d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93976cd-242e-4f24-b1c3-6d663e69cbb6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d9141c-6da1-4f16-89d1-73f0b178b156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18d230d0-1ddf-4a3c-80c4-871acd36c502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14ca8ca-26b3-41ea-8f1f-2886ddc02d68",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36e60407-595f-45b1-a520-9358013d61fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dffc01c-de52-450c-94d4-14327a663f8d",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8811b88b-b4c9-4f15-b156-e7b8f9ad75fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e52122d8-3410-4b93-9807-afc04b3491cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b67411b-11ee-4851-804a-f49d5877b16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2974be2d-a08a-421e-b248-a44ec2bf3840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fb9309-07b8-4eaa-a8bb-57da2e8dba24",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9f0be45-f24f-4f27-b6ef-8f2653f461ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b5ac7b-7b81-4575-b57f-15d16b995471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f359448-330a-4bea-9f35-bde70ddeb05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "122de861-cd44-4b4c-b4f7-8049c50ee735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7015e6e5-af8f-4057-a1a0-75323e97c64e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c871822b-a066-41d2-a4f9-0b0a4bd6dd48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e226841-dfb9-421e-9bcf-d062794c2a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a238ee2f-6e60-43ec-a18b-ceb51ec95772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28861f56-77a4-4afe-9863-bb3db3c37fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8c7402d-d66b-4720-b272-4668fda71631",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc21ee2-9fb3-4995-ab15-5ff57706c3b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "579c5d2c-0e24-4b14-bcf1-a7a8a709ebe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7066e7b4-4364-48bb-b5a6-db7f4ba04a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e91094cd-c82e-43e2-973f-2264f7b11e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36dba06-0273-4454-896b-8c6531111b84",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67549fb8-3342-49e8-a2e1-9d8e6491967d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c82dc6a1-c7f0-473f-894b-e1298008f26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd83e5b-ee93-457c-a36c-a822f4c1f379",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a497b9a-f7ad-4d8e-a04c-38328f81d466"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db9c709-64c0-4679-94d8-45c77dca1b51",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b5c502-4011-43d6-a5f2-bf2e5e748d51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0c10a9f-2af1-4362-8966-e93c3db845e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ecc335e-e3d9-4a69-9549-d957a2d5dc42",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a7a74c-656a-42ca-a3da-75e461ed6263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a515cf-dcbe-400c-a5ca-961d54424ab6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13518959-a43f-4e0d-8191-046492be2e1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb15990a-b98e-4ce8-9541-bb6fae6635e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6181c760-d9ff-4d5c-8de8-81c3d82fad5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e85579-8795-4747-baea-d45c16bacd45"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2cf433a1-dcf2-41d3-9a3b-dbd1cea57eb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c43c5b43-0481-4645-8a00-85cd3c8208fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93b07b93-bde2-413e-9665-28c8c59dbbc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2628d247-d013-4576-8831-d9ff391b56b4"
                    }
                  }
                ]
              },
              {
                "id": "d956b616-9adf-4944-8367-ea6202ac7a2c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a95b65eb-bee8-49ea-a656-9776fa9dd2f8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b39f7681-11c0-4c9c-a38b-a4f5b03749cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c099703f-48f1-46eb-bf77-cd46f9fd6060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4e6790-1d69-45fc-9ae2-39d6acf6b19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f190eba-0da4-4bf7-a6eb-5346f96030a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d2a8a5c6-c1e6-4c83-ac2c-c67ca6817af3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0fd31ff-7fa2-4187-80e5-e2124966b7f6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b60018e5-e7a4-4d72-bc5e-a59aca6f35ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a225c928-c317-47bb-bb9b-80c0582eb459"
                    }
                  }
                ]
              },
              {
                "id": "347ffdbd-94a2-4fc2-a10b-df222faa41b9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d16d8202-a310-4715-921b-700daede27b6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a913992e-22f7-49d2-8bc3-c4ecdef557fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a211ee7a-4dcd-4fad-9179-50309f3e39d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4d6de3-b4be-44cb-b1eb-f8bb7c7edafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6329ab2-5bae-4aaf-90d4-c8c0a07c6bd2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "21c24567-4706-4f2b-973b-54b0447145c1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "02eddbc3-7628-4839-9264-2d61dd5285ef",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "38e08827-690d-4075-9b22-edc87bf79c2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e0e9f0fe-dac9-47f3-a975-4333d5f630c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8e39326-4231-45bf-8e56-693650dba847",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cc065c1-67c6-41fe-8b09-4fa9bd3a86c4"
                    }
                  }
                ]
              },
              {
                "id": "56b1ef44-88e4-4ff3-a8b9-38dfb4e335e2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "47980838-557e-44a7-be74-651db907a3ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4f2f422e-22a8-4ca1-822d-eb881524f379"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b301438-4b9b-40b5-8800-728a0b72abdf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2b56b6d6-14d6-4add-84b9-ee21bce734f4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0d030f2-426e-4a50-b0ae-b359df09ec18",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6e1eefdb-34b8-47dd-a13d-0ccee7044cac"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aa41311f-39d5-4d1d-ae68-cd5a95a9068d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc21b094-13fe-4848-89d6-29e5c934cb9e"
            }
          }
        ]
      },
      {
        "id": "c941aa20-33b8-4022-b63c-c007e4fc455b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1cbff5d0-282e-40b3-9653-3383eaf1dbf1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "839bfffd-daeb-46c4-91d5-c29af886a399",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "079ae218-fb39-4a9b-8b77-9acd31c16fa8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1787acb5-14be-437b-a074-e1cb945bbad4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "739adf36-33e5-4e1f-967a-2b3c85b0e8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f47fea6b-8d7d-4de1-8977-fbeef9528c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1534157-2132-4308-8d1c-6a75f403d3d7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fc784199-24e9-4413-98a8-8f964dadb3b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd9b9046-d3ea-471e-a7eb-ff293978add6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "126ff5e8-20e0-462b-9c33-6baa1467237f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c6c6f3e-0428-4500-8267-a72cb0a44cc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "caf739ad-95c9-487b-955c-e251d45abb44",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "6d1d4d11-a40a-4dff-87cd-2e7398ba7def"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e6afaee8-5997-4ab2-b8d0-9604b0a39cca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "509d4648-8809-41b3-ab45-74024c0a433a"
            }
          }
        ]
      },
      {
        "id": "73a6e1d6-edc3-45af-bdaf-e3c3afa83e6b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "99fd218b-5d8c-4468-bb22-0a5a6980cd5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a2f351e-4ad5-4169-bf07-fa591616c2a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5282074c-e8b8-48e4-be7c-47e41b4c5182",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baab2690-f49d-4b51-80a1-8513c6de2855",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc421027-48f6-42c4-8cd4-87133da76204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4804ee43-a90c-43a0-8a35-bce982bc36dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "776db033-b374-4b9e-9f62-94ba6ad897cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3bc0cf1-a3f8-40d0-a5ce-3f1d1958c694",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eeeddc65-608d-4123-bbb3-a831311bb157"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1ec8960-295e-4e5f-9d54-f438b7322736",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44ab0cc8-bf5d-4f9c-83e3-cf04d273df44"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e90ab7e9-ca16-4779-9824-1086841e71be",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "813dd10c-9841-4c29-808c-f31bbb1ed106"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb378ef8-31e5-4e33-8de7-26c3d310537a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84d16574-af10-48f1-9417-dc4b790e3331"
            }
          }
        ]
      },
      {
        "id": "638c3d55-c74c-455d-b5c8-be1b8c3f7b3f",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e85d9352-affb-4685-991e-c165a755dffe",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2414de23-8854-4b79-a155-4450565dd099",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b8cc6ff-f378-47a6-a640-2e2d79b5bd2b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e787250-0b65-4ba6-b2a4-bdc509c00f4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c706fbaa-05ad-4e53-9ce4-15f467e0bb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df200ba-b702-4ca5-9f5d-fa65116b1686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d732fe4b-9144-43dc-a366-5908885febab"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec88faa6-0d42-463d-9cd8-a54ceb4d112d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc659113-85a5-455b-9d8c-a59b530c1883"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc1617a1-6865-4dec-addf-05df9eba16e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7a8790f-21ff-4c49-a197-a2d330f05c3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "295bd329-73db-40b1-a6d6-5e8b8c67ad4d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ccb82edc-2602-4856-a917-4525a818386e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37a64d94-d1ea-43f8-9eff-03a6e9972346",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f0e1b7f6-f000-45fc-a35d-8c0e823c24d2"
            }
          }
        ]
      },
      {
        "id": "d0f2e9bb-4c15-4ac5-8446-496c1ddc493d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8bbe4112-2e0b-4dcc-96d5-37c8c6d6c252",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c38b991a-dd1c-441c-a313-a1b57d71a6a2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "05f22cc2-6076-433d-82ee-49012d953bfa",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8451be5-a51e-43e7-8b97-2583024ea795",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbda8f87-6866-4278-b711-f2338cbfc440",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.09122807017546,
      "responseMin": 5,
      "responseMax": 11816,
      "responseSd": 773.5153558349868,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700786071338,
      "completed": 1700786113217
    },
    "executions": [
      {
        "id": "43981d3f-f721-4b75-bb29-b8fffe441465",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d4d53531-2422-4879-9000-8b77948323ae",
          "httpRequestId": "9286ecbd-3532-4fe8-a267-d2fcb02cab2a"
        },
        "item": {
          "id": "43981d3f-f721-4b75-bb29-b8fffe441465",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8b0f633f-2162-4631-b9ad-69f99a6c69b0",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "4149797a-7e33-4723-a4f1-e2b53b9a7bbc",
        "cursor": {
          "ref": "4f195aa2-a1a9-440d-8525-09dde419c73b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ab45ef25-b30b-4086-82f4-867c29a946d2"
        },
        "item": {
          "id": "4149797a-7e33-4723-a4f1-e2b53b9a7bbc",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "ad2ed6af-e946-4187-aa31-a0e25d78ba23",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e294a0f3-387e-4335-8a2c-80bbbb317b0a",
        "cursor": {
          "ref": "c68872ce-ddde-431f-b988-810a1e0338e8",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "49f1ef3b-1eb1-4d9d-9e03-f3df1b5926ac"
        },
        "item": {
          "id": "e294a0f3-387e-4335-8a2c-80bbbb317b0a",
          "name": "did_json"
        },
        "response": {
          "id": "55c99a21-01a3-411b-8288-567bf51d7bb0",
          "status": "OK",
          "code": 200,
          "responseTime": 317,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f748814e-5be6-40ec-ad1d-611bf7b3a827",
        "cursor": {
          "ref": "4cff8984-23b0-47e0-b308-8e102e2346dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3237ae44-ac82-482f-a218-55baba476b0b"
        },
        "item": {
          "id": "f748814e-5be6-40ec-ad1d-611bf7b3a827",
          "name": "did:invalid"
        },
        "response": {
          "id": "873d3f12-6c39-48c9-a7bf-c93bc1b1657f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 600,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f748814e-5be6-40ec-ad1d-611bf7b3a827",
        "cursor": {
          "ref": "4cff8984-23b0-47e0-b308-8e102e2346dc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3237ae44-ac82-482f-a218-55baba476b0b"
        },
        "item": {
          "id": "f748814e-5be6-40ec-ad1d-611bf7b3a827",
          "name": "did:invalid"
        },
        "response": {
          "id": "873d3f12-6c39-48c9-a7bf-c93bc1b1657f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 600,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23db43e9-de40-411d-b39e-dabc859fc839",
        "cursor": {
          "ref": "96e7298c-2568-43cd-8448-a03b85907a32",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "cc13cf80-bbe0-4c3b-b57c-345f37e7c031"
        },
        "item": {
          "id": "23db43e9-de40-411d-b39e-dabc859fc839",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b0ba506a-6de6-495d-82f9-2378ad457a8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abd76c1-b6ae-4bed-bcea-c8dfbc3b1252",
        "cursor": {
          "ref": "12f29510-3bf0-4f17-87c2-0fe85e58e0bf",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "437c23be-1a78-4fce-9f30-4eafe634eaaa"
        },
        "item": {
          "id": "7abd76c1-b6ae-4bed-bcea-c8dfbc3b1252",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c639bf51-476f-426a-82e1-8ac3c5d12e1a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a574c59b-f087-4801-a55a-8c871e31dbf2",
        "cursor": {
          "ref": "2258c2c8-06dd-4fc6-bff7-244bb38874ea",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "511c4fda-8b7b-4c22-a46c-db5f374aff2d"
        },
        "item": {
          "id": "a574c59b-f087-4801-a55a-8c871e31dbf2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "00f703d5-6787-4f37-9c53-7912bfb0bf5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5917cc9a-5b6f-4a5d-ba61-a929429a0cdc",
        "cursor": {
          "ref": "8ba4ea56-d550-4f08-9dee-d5279a9ce3ed",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "445f709f-dcf7-4679-9ef4-a90b761275b6"
        },
        "item": {
          "id": "5917cc9a-5b6f-4a5d-ba61-a929429a0cdc",
          "name": "identifiers"
        },
        "response": {
          "id": "7c02c86f-d733-43d2-b1e8-4423b99d9d00",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4485db62-0986-4980-9f21-ff18689df104",
        "cursor": {
          "ref": "e474d765-216f-4626-a664-5e0e599db7d1",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "e4698299-bfa9-4470-b469-54a20f0da5fa"
        },
        "item": {
          "id": "4485db62-0986-4980-9f21-ff18689df104",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "c4cdb044-cd2d-41f6-8eee-74a8e44e8dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9481f4d-99fc-463b-be5c-655872c6d823",
        "cursor": {
          "ref": "cbaf80ec-2c66-45bd-bc80-63701fa7abb1",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ffe460a9-c16b-4084-a144-847923299404"
        },
        "item": {
          "id": "c9481f4d-99fc-463b-be5c-655872c6d823",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "76ff0e84-f1f0-4609-8312-10114a73f25d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772d4194-a779-4224-9cb8-298f9eb39457",
        "cursor": {
          "ref": "f33ba2ff-72fd-477e-812b-92cbd091a511",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d0c82288-ddae-41cb-a3c3-d140a5b6a515"
        },
        "item": {
          "id": "772d4194-a779-4224-9cb8-298f9eb39457",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "87abeadb-bdec-46c8-b0a3-9cc6af08ad94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcecf90-f2c5-4081-9fca-d6c2d1762ee3",
        "cursor": {
          "ref": "37897820-f7fc-4ea6-942f-df5a8a2d2ce5",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4a2d9e2f-943c-4fd1-893b-08866d6d8377"
        },
        "item": {
          "id": "fdcecf90-f2c5-4081-9fca-d6c2d1762ee3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "82a31b26-f35a-4bf9-b296-1ce2cbeefe1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6065f00-dbde-429a-9e11-5965a61c6ce0",
        "cursor": {
          "ref": "10c29ad3-5028-41d4-9461-03bf4e03991b",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "63d0c1eb-2673-4b93-ab8e-754fb5e0c2ab"
        },
        "item": {
          "id": "c6065f00-dbde-429a-9e11-5965a61c6ce0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "73857bb7-2cd1-4d0d-9d36-6b32e511c70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9e9f13-1b0d-4e71-b5b8-1cc3945cd14a",
        "cursor": {
          "ref": "b4758187-cde0-4d9f-b9c9-7b52a682a708",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f5140910-c34b-45f8-a79b-e343d7152cec"
        },
        "item": {
          "id": "4e9e9f13-1b0d-4e71-b5b8-1cc3945cd14a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "75730035-bfd1-42c9-99b1-2779992ff3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bae401-0ce6-4806-a11c-4779866248d0",
        "cursor": {
          "ref": "710bd5b1-26bb-402b-8557-45c01a368ac5",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "655dc1e0-5b00-4064-9789-006aee4c519f"
        },
        "item": {
          "id": "07bae401-0ce6-4806-a11c-4779866248d0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "23812f31-2a3b-498b-82f7-93ceacbde4e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee734048-1fbc-4b20-9405-f1559791ff6a",
        "cursor": {
          "ref": "a62dac36-6247-4a51-94d6-39a13558e354",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "eb35dadb-3bf7-4b91-b9a1-402d63f1a29b"
        },
        "item": {
          "id": "ee734048-1fbc-4b20-9405-f1559791ff6a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cb726d67-fcb5-40d7-8ec7-cead570d167f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79233149-15fb-4451-a8ad-05d5abe6a07d",
        "cursor": {
          "ref": "7793382d-c3ca-4fb2-8095-5d3450f11021",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5bcf7547-c937-41f6-87d8-d90417f47826"
        },
        "item": {
          "id": "79233149-15fb-4451-a8ad-05d5abe6a07d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "0c3e40f7-dfd2-4224-8c71-e0615a18c3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c20ee0ed-8d02-434d-b579-52db42941c3e",
        "cursor": {
          "ref": "343cbd07-b51b-441e-b14d-75676b4ed25d",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "4efcda84-c4ca-4544-ac2a-5c092572d266"
        },
        "item": {
          "id": "c20ee0ed-8d02-434d-b579-52db42941c3e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4bfaf5fd-2935-4262-a99d-296bb482371f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9150b6f-619c-4f49-a510-be78c7da8aee",
        "cursor": {
          "ref": "e45dd718-d6af-4ea5-9901-94c094243685",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f4eeda81-1abf-4c76-8d12-8bb3e4fadbbc"
        },
        "item": {
          "id": "b9150b6f-619c-4f49-a510-be78c7da8aee",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "75f30617-f593-4ea4-a848-05fac94fbf42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e766b9f1-029d-4158-b83e-a290a45e660c",
        "cursor": {
          "ref": "85d66385-8070-48a9-9d81-c0912682defb",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d9edd5c2-f028-4a14-8afc-e200178f0516"
        },
        "item": {
          "id": "e766b9f1-029d-4158-b83e-a290a45e660c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e2bc2923-ecf5-4e24-b5db-eff445ea46b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4089654-38bc-4e02-9db9-2447b701f59a",
        "cursor": {
          "ref": "361b4aa7-388e-43eb-b462-992cd098765e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "138054c1-ef06-4d66-b02e-2dc4c003066b"
        },
        "item": {
          "id": "a4089654-38bc-4e02-9db9-2447b701f59a",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "fcfa6d3c-19b8-442d-9ee0-4f8990bddc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0682c65e-4c79-4d44-b066-9e8016edd83a",
        "cursor": {
          "ref": "aeef15a3-80e1-424a-89ec-2371ef5fcb71",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "bb1f01d4-6554-43cb-a60d-c93c7dec87b5"
        },
        "item": {
          "id": "0682c65e-4c79-4d44-b066-9e8016edd83a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "207ff862-b52e-44ea-b4ef-8ecd4fef72b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32e6537-2020-4cd3-b1dd-bdb92e608777",
        "cursor": {
          "ref": "aaacead4-caa6-4ab3-972e-2ceab094e177",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "e839fa65-50f8-4492-b0ae-27175f58ad6c"
        },
        "item": {
          "id": "e32e6537-2020-4cd3-b1dd-bdb92e608777",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8cac5e89-7107-44ec-b0e7-60a7b148868b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c47b820-044e-437a-aa8a-1fd81a31fdd7",
        "cursor": {
          "ref": "e463b131-6f00-41f3-b621-89a307ee039b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "169e02a3-9337-47de-8768-d73750067ebe"
        },
        "item": {
          "id": "4c47b820-044e-437a-aa8a-1fd81a31fdd7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "4f4e6f79-6924-4a6c-a81f-d659b69735b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cdae40-9d2c-401a-9beb-a62c07bcfe8f",
        "cursor": {
          "ref": "077d5898-910e-4119-88c4-43e1fb2b2ffb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b53b5bc2-3735-4759-bb48-9d7c54069c91"
        },
        "item": {
          "id": "26cdae40-9d2c-401a-9beb-a62c07bcfe8f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "67c037da-5df6-45b0-bc7e-fb5dc04969b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c495d8-b51c-4f16-9879-fc72161f61d9",
        "cursor": {
          "ref": "1d5418c4-26e8-4f85-ba75-8462ed7eefac",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "87a0e573-c43b-41aa-afd2-d90410a92afd"
        },
        "item": {
          "id": "46c495d8-b51c-4f16-9879-fc72161f61d9",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0ad539f5-19e6-4dda-a5a0-a88345b67974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631a29d4-5892-447c-b4b9-1ee0bac78172",
        "cursor": {
          "ref": "3cb7d13a-5d73-4343-ac78-5aa8c94ab5a2",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "968e0b8f-5cc7-4b35-bc8d-817a672abd81"
        },
        "item": {
          "id": "631a29d4-5892-447c-b4b9-1ee0bac78172",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c01ee153-821b-4ef4-84c5-ccadbf8d3b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f47037-95da-4809-892b-c76e69f35884",
        "cursor": {
          "ref": "1284b3e1-507e-4064-b680-05aec7d67bd8",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "81bebd1b-827a-4861-b50b-2f31fd757083"
        },
        "item": {
          "id": "e3f47037-95da-4809-892b-c76e69f35884",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "da22551d-5f9c-499b-9a3c-d418e672a1f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45168fbc-6127-4dc9-b5a1-d715b21c4c73",
        "cursor": {
          "ref": "369a3c28-8ee6-4ab5-a43b-cf5cace57efa",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0413ce2c-fa73-4e77-b5bd-8f028b2f85ca"
        },
        "item": {
          "id": "45168fbc-6127-4dc9-b5a1-d715b21c4c73",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d609c40d-5fa9-4f29-82da-234e6d13c912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be068f5c-e9f6-4c68-9bf1-c53eee3797c8",
        "cursor": {
          "ref": "c1918910-fbdb-49cb-b31c-20c54ea36f51",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "97b3a1be-dcca-414a-bf8f-2d020c82c247"
        },
        "item": {
          "id": "be068f5c-e9f6-4c68-9bf1-c53eee3797c8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2f10a2af-1580-41cd-b47b-4f97f6c0c88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf44843-63f6-4ad5-a01a-2e3eb46c1160",
        "cursor": {
          "ref": "f2d68fa4-c06b-4692-b175-2f18b4d8316b",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6ceba79f-aaef-47ad-8806-45c84419bebd"
        },
        "item": {
          "id": "9cf44843-63f6-4ad5-a01a-2e3eb46c1160",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "234afc4e-e7fa-43e4-86df-207ae80a3e61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d22355d-106b-4a4a-ae05-f929adeba444",
        "cursor": {
          "ref": "4d5f6302-7cdf-4f69-9643-6e0389e02692",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4fef5201-cf56-4136-bd40-4ca7db32038d"
        },
        "item": {
          "id": "9d22355d-106b-4a4a-ae05-f929adeba444",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "58067ef9-044a-4d34-9cb9-ee98cd434b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67969a6e-23a6-46e7-b8fd-905b77a1cb8d",
        "cursor": {
          "ref": "df792cfe-c660-4bb9-8a66-f52fa8a96d26",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "82ccd2ff-f05b-4add-b11b-a5da78c2174b"
        },
        "item": {
          "id": "67969a6e-23a6-46e7-b8fd-905b77a1cb8d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ce8ed6d2-1afe-45b7-a70c-533755996a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dbbaa5-36f2-45be-9bf5-9e3ddbbb4fee",
        "cursor": {
          "ref": "f33c1855-a275-4b70-b621-cdf60701c04a",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "37885a9d-a5bb-4e46-9ffd-e1d98a1c7ba1"
        },
        "item": {
          "id": "a2dbbaa5-36f2-45be-9bf5-9e3ddbbb4fee",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "535bd67c-3882-429a-8463-a97270796438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "925102d5-aa4b-42c6-95fb-6e553f154cfc",
        "cursor": {
          "ref": "7e8057e1-855b-407d-8257-f71f2b3940b5",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2e6d12e-9f4f-47ec-a8b3-749a93bd01ef"
        },
        "item": {
          "id": "925102d5-aa4b-42c6-95fb-6e553f154cfc",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c8e6a810-156c-4ba3-8e0b-aef0bd80dbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c03be37-8c14-4ecc-91ee-f8a15cc72619",
        "cursor": {
          "ref": "4fcf53ef-77b0-4aca-bba2-4191999b73b0",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9876782a-d77c-4b0f-ac96-bf7c22f58ebc"
        },
        "item": {
          "id": "0c03be37-8c14-4ecc-91ee-f8a15cc72619",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f32d91d2-eee1-4014-8a05-8345687e8bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da78029-f4c0-4136-8939-868e9c3ce42e",
        "cursor": {
          "ref": "a7e0c9a5-8295-4f6b-b30a-847e4dd9fa63",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c575057b-7c2b-4967-86bc-ab663337c9a4"
        },
        "item": {
          "id": "9da78029-f4c0-4136-8939-868e9c3ce42e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "213ba78a-ef83-4e37-85ea-640226780dfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e19f605-ed7e-4dda-ad6f-1daa5106e0a1",
        "cursor": {
          "ref": "23461cbf-4310-4b42-a457-fbb7800d6d25",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "79bf3645-6153-4783-9070-a08d88f5416f"
        },
        "item": {
          "id": "5e19f605-ed7e-4dda-ad6f-1daa5106e0a1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e19a77f2-ca26-4b7c-b47b-6ce4ac2bd601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f440f5-0f20-459f-9e4e-7ae09f3c6f71",
        "cursor": {
          "ref": "541e5ebf-9d90-4d63-b4bf-296368f51b17",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "05d68ec5-fb94-4e32-a860-7fe574515c0f"
        },
        "item": {
          "id": "01f440f5-0f20-459f-9e4e-7ae09f3c6f71",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "591d7b30-5198-4e50-8792-13ee57ec6ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f722e1bf-86ad-481f-ae27-f76dc5839eee",
        "cursor": {
          "ref": "c95f0002-bcc6-4c38-a5f6-016581eaa35d",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "53da8c70-ef63-4082-a4c7-931422a5872d"
        },
        "item": {
          "id": "f722e1bf-86ad-481f-ae27-f76dc5839eee",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "d9aaa128-130b-42b7-a726-fde0255ce3a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5536d151-bfa5-4803-9ca2-26aeac3ff80a",
        "cursor": {
          "ref": "d7caba26-b4ab-4bb5-834f-f696e2aa83ef",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "347c03d0-55ac-4537-a2e5-67ee79287487"
        },
        "item": {
          "id": "5536d151-bfa5-4803-9ca2-26aeac3ff80a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "80f16746-2a3c-4887-a086-e108dfc4da9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4dd670-a119-42c2-b44b-770d9b9b1d2a",
        "cursor": {
          "ref": "9948d019-96f9-4e7a-b404-5a32ed9b76ec",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "06a7cb80-3edc-4a8a-8eab-18fa960b442f"
        },
        "item": {
          "id": "be4dd670-a119-42c2-b44b-770d9b9b1d2a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "52b57d24-f31b-42c5-bf80-b11d5775b4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75b47a2-d743-4063-90ab-e2a46d6e1fba",
        "cursor": {
          "ref": "3372f581-53d9-4309-b4e1-caab39b36fa6",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e9d3b961-e57c-4b76-8b64-50c7fdc7cb00"
        },
        "item": {
          "id": "d75b47a2-d743-4063-90ab-e2a46d6e1fba",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "167f53ca-94f7-49dd-aa23-b984372415eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14c6d73-35f6-4df4-b375-3a7b4f5d7863",
        "cursor": {
          "ref": "c0c3e2a3-8398-4685-9e05-7923699700f3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "341616a8-1198-479b-a23a-7d88edbf5443"
        },
        "item": {
          "id": "d14c6d73-35f6-4df4-b375-3a7b4f5d7863",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "04897752-b401-4f9d-911c-33a628256db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5189cbaa-07d5-448e-8039-d3a39e1ff93b",
        "cursor": {
          "ref": "778e736d-66bb-4433-9035-d29951e2b4f2",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "af3320f7-27b5-498f-bba8-2206ba5ff737"
        },
        "item": {
          "id": "5189cbaa-07d5-448e-8039-d3a39e1ff93b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd77f204-332e-4043-82de-39c5c5873e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dee754d-307a-4790-b873-887534fab4ea",
        "cursor": {
          "ref": "2ae9bf25-8753-4fb0-ae3d-e4e1439392f8",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ade0d10f-856f-47f2-97f7-2ea09f1ecead"
        },
        "item": {
          "id": "0dee754d-307a-4790-b873-887534fab4ea",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "75f5e8d1-9407-4649-809e-fd8cea1ed838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0826bf11-f828-4668-8b22-e2b2174fe97a",
        "cursor": {
          "ref": "ebc542dc-276c-409b-aec8-f0485263c033",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7c1c9886-047e-4432-87fc-d21f1718bb89"
        },
        "item": {
          "id": "0826bf11-f828-4668-8b22-e2b2174fe97a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5087c5f0-9aec-41cf-9f2b-9ed93d9d406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52986b54-f248-4ef2-9946-2480b91ef7b7",
        "cursor": {
          "ref": "e442e78e-28f8-4785-b3e0-05f886ea5bf7",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5ba4e2b1-e03b-403f-8d0f-7ea2ed33827d"
        },
        "item": {
          "id": "52986b54-f248-4ef2-9946-2480b91ef7b7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "aee2ef98-32c0-4628-8113-5e6f83f26379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60cc3c66-6eb0-4f62-b267-632f6cd0d69a",
        "cursor": {
          "ref": "d54d2989-17e6-4642-a811-2d3add8741f4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d7feead4-9bd1-4a2e-b187-00f09e7a476f"
        },
        "item": {
          "id": "60cc3c66-6eb0-4f62-b267-632f6cd0d69a",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "ab21d0a7-38a8-4e0b-810c-6e9b55e03345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1ee01b-abd2-43d5-9590-77e6bcf88ffc",
        "cursor": {
          "ref": "b9aff23b-0319-4c5f-a347-88284d6e8460",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9b4eb748-9575-4ed0-9d00-d10961ae0255"
        },
        "item": {
          "id": "1d1ee01b-abd2-43d5-9590-77e6bcf88ffc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7f745c71-3d0b-4b48-bdba-7b21eec10750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dcc22c2-dbdd-4b36-87ca-2c29d7521e2d",
        "cursor": {
          "ref": "ecd04bac-c0ea-49f5-869e-8f4156e85e30",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c725fbb9-ddc5-4ff2-8273-683401055db7"
        },
        "item": {
          "id": "4dcc22c2-dbdd-4b36-87ca-2c29d7521e2d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "83008b89-3d01-443e-b575-7cccbe2860a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482d6355-cd0c-4a50-a0bc-9fcb9a5cedf3",
        "cursor": {
          "ref": "fd4135aa-d6db-4e2b-92fb-18493a14bcdd",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "66749b30-729d-4f46-b146-eae244cbcbec"
        },
        "item": {
          "id": "482d6355-cd0c-4a50-a0bc-9fcb9a5cedf3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cca34bae-9cfe-4610-a5b9-62c9b1041352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e43e0a5e-1905-4445-b0ef-614dc41de9b3",
        "cursor": {
          "ref": "7e922004-e3a5-4be9-a1de-dcd4ab7b1289",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6b2c0bec-b1ec-4803-b067-e2cd4b5dbc12"
        },
        "item": {
          "id": "e43e0a5e-1905-4445-b0ef-614dc41de9b3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b506cefe-9bf4-42f2-bab1-5400a0f3b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b5a256-5ff9-46e3-ace8-abe795497c4d",
        "cursor": {
          "ref": "d8caa61c-eaa3-4bba-9ace-163746bd2400",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2dba8137-f10c-4a52-9eef-103fe32a2948"
        },
        "item": {
          "id": "02b5a256-5ff9-46e3-ace8-abe795497c4d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "355f6e8a-04d4-4279-b210-cf8ae0d58589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ce777-43fd-4d44-8919-ab499e05ae65",
        "cursor": {
          "ref": "70cc3587-2534-426d-b7ee-73f03bb5882b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b4b0ffb7-1bf1-4eff-8d02-e53c90aeb478"
        },
        "item": {
          "id": "2c2ce777-43fd-4d44-8919-ab499e05ae65",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "91e9910e-6414-4f3a-ad66-44852a79fc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f85ff8d-4728-4c1f-bfb1-f70ac4e3d67e",
        "cursor": {
          "ref": "c178f11e-4fe0-4252-b861-d1a4fb327359",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "101577a3-8263-4826-b548-f18c323183a9"
        },
        "item": {
          "id": "7f85ff8d-4728-4c1f-bfb1-f70ac4e3d67e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "a74ca058-de5b-493a-b2b4-428b5e2160a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3766c54-251e-4b1f-86cb-37ef0a915e46",
        "cursor": {
          "ref": "8e3d5f19-882b-4047-abcd-754960c81eef",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bccfb69b-b38c-4111-847a-6528ba235adc"
        },
        "item": {
          "id": "a3766c54-251e-4b1f-86cb-37ef0a915e46",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f98d98b7-8609-4e8f-be7d-a72958399452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06fa6cb5-2476-4f55-bf37-ba02fcf8ab79",
        "cursor": {
          "ref": "3b65a851-728b-4d8d-9fd5-a38b43b02eb6",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "45baf322-8234-416c-8cea-c14b26e65f89"
        },
        "item": {
          "id": "06fa6cb5-2476-4f55-bf37-ba02fcf8ab79",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e74bbe95-b021-46c6-bd8c-1c3ca6a669f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b33bff5-4fe7-4b85-9779-540e88bd84c1",
        "cursor": {
          "ref": "4b047d32-fa39-41d9-a6c7-eb3e3caeef06",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1e6ed5ca-5349-4b4e-ba52-eaca9d7ea754"
        },
        "item": {
          "id": "7b33bff5-4fe7-4b85-9779-540e88bd84c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3a275cb6-757e-407e-826f-7a8a88640548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e8dfea-ba0e-46e3-9d79-7a68f7517620",
        "cursor": {
          "ref": "74e7c9e5-6869-4d51-af62-035e6536ecd4",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "67b46e90-bb5b-4916-9d03-e51c33b2de48"
        },
        "item": {
          "id": "70e8dfea-ba0e-46e3-9d79-7a68f7517620",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1704adea-ed72-46d9-9576-cc554f7dbc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ba8c59-ef50-4493-92c7-6bce417125ff",
        "cursor": {
          "ref": "140f3aa7-e0a4-4a50-917b-cb9651f3f744",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1c6e8900-0e98-4930-a6f0-6cb3eeba3527"
        },
        "item": {
          "id": "33ba8c59-ef50-4493-92c7-6bce417125ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3d630eb9-095d-4c3a-83c4-b686b0b8fe11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390e4e3c-750d-4c33-b5a1-0a7988ecd8d1",
        "cursor": {
          "ref": "fa37851b-6398-4c77-9aba-836cdd5670dd",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "23bc8742-7aea-4d10-b18c-3c7f23946316"
        },
        "item": {
          "id": "390e4e3c-750d-4c33-b5a1-0a7988ecd8d1",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b19d71f7-14f9-4153-a751-dadae11e4e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a2e2984-fe71-4741-b012-a471d104e383",
        "cursor": {
          "ref": "7a265930-a272-4de7-bb6c-3edff7ec5ab7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "fdcdc16f-cecc-42ca-b1bd-7f92c8a2441c"
        },
        "item": {
          "id": "3a2e2984-fe71-4741-b012-a471d104e383",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f68096c4-d16a-44e4-8f93-fd59a97c3464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059e3b4-7988-4c77-aada-3b5f0b394986",
        "cursor": {
          "ref": "b8f00c31-61ae-4e57-851f-7e44f5ef8a14",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c7c07ebf-a8c0-4ed6-89d7-3b03a0802a05"
        },
        "item": {
          "id": "3059e3b4-7988-4c77-aada-3b5f0b394986",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e0a799ec-a93d-4b0f-a11b-892fa9d780a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1044d9f-084b-4d35-bd16-38f21b9b30b3",
        "cursor": {
          "ref": "3541e665-35b4-4f85-a9d2-89b2fc57f9ed",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "3b6d54b2-211d-43e9-a8b8-6aaa4662f10b"
        },
        "item": {
          "id": "c1044d9f-084b-4d35-bd16-38f21b9b30b3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "81f4e041-873e-4ace-bbc1-94ed61e68e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea3f1fe-0754-486c-87b6-d3c7eb53bc38",
        "cursor": {
          "ref": "398cf59f-2770-4517-afb0-3d059fcb2d82",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d295dc02-e409-418c-bda8-6f24c54a64b7"
        },
        "item": {
          "id": "0ea3f1fe-0754-486c-87b6-d3c7eb53bc38",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "7a6c26cf-a107-46d6-a7d5-d01d296e608f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c866e568-b0ae-4f10-ac7b-a568a8a54b7b",
        "cursor": {
          "ref": "d551d04d-7f9b-40fc-9302-8d3ca168a850",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2b340232-9139-45ba-a63b-8e7c256a7592"
        },
        "item": {
          "id": "c866e568-b0ae-4f10-ac7b-a568a8a54b7b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "08448541-3156-4493-b450-a8d00fd492c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca44f62-b81b-4e84-a368-8202e5cd49a3",
        "cursor": {
          "ref": "3506302f-32ff-40f9-b633-957514aea835",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8a0c2408-d966-4db6-8342-6db87bc0b308"
        },
        "item": {
          "id": "5ca44f62-b81b-4e84-a368-8202e5cd49a3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "15f32113-8e3a-4c86-9ddf-d1eca1346839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee567e1a-77ec-4d57-8cc4-ed328a3291c9",
        "cursor": {
          "ref": "6f3532a1-1b13-4b0f-85a8-5ea8a3768dfd",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ae65b090-1174-4c3e-87bc-0e11651dca50"
        },
        "item": {
          "id": "ee567e1a-77ec-4d57-8cc4-ed328a3291c9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dad89b6b-2ce8-4565-925b-bf8625d6385c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83121a47-ae16-4838-b20f-a3823f49e19d",
        "cursor": {
          "ref": "c9de8556-acdc-4324-9ac2-a7f1b4a25ce3",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fcee8a30-1370-48c7-8717-b598d65c6cc2"
        },
        "item": {
          "id": "83121a47-ae16-4838-b20f-a3823f49e19d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2f1d8953-63d2-40b1-add7-fa45bb2cbbec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd215b0-3222-46fc-b6e2-73714150530c",
        "cursor": {
          "ref": "ac12a8b6-aac2-4ee6-bd41-4939169f7954",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "1db96ffe-7d2d-4248-b5cb-042c01065094"
        },
        "item": {
          "id": "9cd215b0-3222-46fc-b6e2-73714150530c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da092291-d7cb-4775-8004-8af6e34a256e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61320bf6-166b-485f-9914-44cadcd2b5c0",
        "cursor": {
          "ref": "2faa5289-5dbb-4975-8aba-83917d5bcc2f",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f70e8139-3238-429f-a837-61a9a4b94987"
        },
        "item": {
          "id": "61320bf6-166b-485f-9914-44cadcd2b5c0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4eb1b9f2-427e-47de-b5bf-8f3e971c382b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9401dec-c1fc-49df-921a-27b2bc318f08",
        "cursor": {
          "ref": "7d5c194b-3349-46fe-ad61-84bca11e3208",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "7f431275-a2f4-4aec-ac67-65098c064a51"
        },
        "item": {
          "id": "d9401dec-c1fc-49df-921a-27b2bc318f08",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3547adc8-c8ae-400a-bbc4-178bd3fecdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e94bf1d-380e-434d-9214-56393f9c34fa",
        "cursor": {
          "ref": "ec6c09e2-02cd-4343-8027-99ecdc1712b0",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "88aa6be8-c350-4377-b24f-e6666dc9d343"
        },
        "item": {
          "id": "9e94bf1d-380e-434d-9214-56393f9c34fa",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8e22b2c7-4269-4d8e-993a-a5b9c7438edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf794c10-b7fb-4e19-afd0-c8fd4ac91bfc",
        "cursor": {
          "ref": "6678fc31-4a48-4297-8da8-be5cd56d67c6",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "797416f2-ac91-46ab-920e-cf60ac3c1a44"
        },
        "item": {
          "id": "cf794c10-b7fb-4e19-afd0-c8fd4ac91bfc",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f404548a-ee2d-45b5-8e2e-0f25270adcf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af1c55e4-2535-4c33-b140-32c3e00d8d77",
        "cursor": {
          "ref": "14a4f5c8-fba1-45a9-b51a-c8f98a1c62f0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1b6ce593-fb13-49ab-8da7-8690ba04e43f"
        },
        "item": {
          "id": "af1c55e4-2535-4c33-b140-32c3e00d8d77",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "56e0b967-a5e4-4ace-8178-34bc4f43e795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd545bf5-8ad2-48d2-bf1d-28e8b24e6841",
        "cursor": {
          "ref": "98902955-a846-434c-8d72-c4d1e08f97fa",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2b73030c-72d4-4ad6-9acf-b81aa2df6374"
        },
        "item": {
          "id": "dd545bf5-8ad2-48d2-bf1d-28e8b24e6841",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "326963e1-ebe1-4e93-b295-e4e233ef52f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1bd138-01d5-4987-96c6-a056c7bfbe6d",
        "cursor": {
          "ref": "f733006e-5191-42ee-832d-f26a586693e9",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "34f93cf8-e3a4-4ec8-a9bc-8e95de9d1c5a"
        },
        "item": {
          "id": "1d1bd138-01d5-4987-96c6-a056c7bfbe6d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d11d552-4050-47cd-8baf-0f9c91c49a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3331b696-1e64-487e-b3e3-e0b9892618cd",
        "cursor": {
          "ref": "84b6e2e3-abe0-4a88-8df3-c4769662c17a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0bfc8164-b1a7-479d-8a1a-728b615e9418"
        },
        "item": {
          "id": "3331b696-1e64-487e-b3e3-e0b9892618cd",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "022a7f7f-6732-4633-a93d-dcf8300ef840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 175,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f07eb58-476c-4aa3-bcbb-402906b44e8b",
        "cursor": {
          "ref": "b90b6a70-b056-4166-84ff-5e0f9aff9282",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "05e3a0fc-ae40-4200-b4dd-67ed72760ecc"
        },
        "item": {
          "id": "5f07eb58-476c-4aa3-bcbb-402906b44e8b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "63e25ef7-2c67-4aab-b08c-0334fa6c13a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1342e0-3408-4e1e-a250-b9faab4a8280",
        "cursor": {
          "ref": "9e84a890-97c5-4d01-9b06-f41afcd543f8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "361ee472-e970-4744-a25d-b2b5a7de591c"
        },
        "item": {
          "id": "7d1342e0-3408-4e1e-a250-b9faab4a8280",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "04af874a-c987-4cd3-a99e-b0e278190ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1da2225-1ba3-4f13-bf4b-332ac18a3774",
        "cursor": {
          "ref": "fd348e74-2d15-4cb3-b1b9-5ca83ca3948d",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "67e18c50-86d0-47b9-aa0b-5ebfe18ea739"
        },
        "item": {
          "id": "a1da2225-1ba3-4f13-bf4b-332ac18a3774",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4fe1205d-6016-46c2-9dfd-cd414260f530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbffc23-fbf5-497c-8245-31eccdd58262",
        "cursor": {
          "ref": "2b3b2e91-00f2-4c8d-823a-479e750f6f73",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4f8cf87e-dc13-40a6-b6b1-a37d2a07b8f8"
        },
        "item": {
          "id": "7bbffc23-fbf5-497c-8245-31eccdd58262",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a271f5bd-920a-4edc-b608-988150537723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc112bff-8c80-4034-a738-8566b71593f1",
        "cursor": {
          "ref": "59e90cc3-5504-40b0-a0bb-d979bc0da3bd",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ca903cfa-47ee-4573-9a64-85e7a71e2440"
        },
        "item": {
          "id": "dc112bff-8c80-4034-a738-8566b71593f1",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a48cc72a-faf4-4d51-b313-87b4087dab24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8b4868-a7fd-4bc8-aadd-04a12d9680da",
        "cursor": {
          "ref": "82965472-4e40-48cd-8121-e67d69b11958",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "ee25f7cf-fa48-4e4c-83cc-6cd24910f711"
        },
        "item": {
          "id": "5b8b4868-a7fd-4bc8-aadd-04a12d9680da",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "450bd80f-0bfd-41f0-80c9-1688174ece58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af882cd8-e702-4e74-af01-2e35b217d1f7",
        "cursor": {
          "ref": "7a59c7ae-6da0-4526-865c-2219d21b014d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d8ba8101-4e0d-42e5-aaf8-984f7753cf67"
        },
        "item": {
          "id": "af882cd8-e702-4e74-af01-2e35b217d1f7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d9e56841-c856-4840-b982-35ddcacfde2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9b5b15-44b8-430d-813b-1ea1fea0785f",
        "cursor": {
          "ref": "d2ad97ad-6e59-44c7-b442-69d4653ee9b3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "4dd654da-361f-4913-ac35-c42e2a367720"
        },
        "item": {
          "id": "ad9b5b15-44b8-430d-813b-1ea1fea0785f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1c43cce-3875-4a74-86d0-1c930b938dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688ae991-9748-45df-a722-b5ca8730b310",
        "cursor": {
          "ref": "acc40e3e-2337-46a1-abf6-cfbb0ab824af",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "2334e500-8ca5-4e28-b933-7a3b927f5783"
        },
        "item": {
          "id": "688ae991-9748-45df-a722-b5ca8730b310",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce1e67ed-b1a9-41fd-bfc7-66ec22f536f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4fe364c-e320-4117-bf1b-25b3c4030f09",
        "cursor": {
          "ref": "eba9dfc0-2b6d-40f3-9e04-6f7c2b2b6d03",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "19b35ca8-2285-45df-afb5-e41d0a35d781"
        },
        "item": {
          "id": "d4fe364c-e320-4117-bf1b-25b3c4030f09",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "35591b4d-e3c5-4275-ba2c-1a76b5273e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9540a9-f3ee-471b-842c-ed6e892ab525",
        "cursor": {
          "ref": "5d158668-35a6-48ec-83ef-3b874278de9c",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3e89be5d-6053-4b23-9a5b-1a3e4a8d80eb"
        },
        "item": {
          "id": "9f9540a9-f3ee-471b-842c-ed6e892ab525",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "6a3bf195-14bd-4654-9d2f-81bc4b6b1559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae3292e-0c14-4a7e-8491-431d332b760f",
        "cursor": {
          "ref": "6bca1cb1-797b-48e3-98fb-c2541b4a22ae",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "905a0f5c-4aab-48c0-b835-7642d2d7c728"
        },
        "item": {
          "id": "1ae3292e-0c14-4a7e-8491-431d332b760f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3d8795ec-9d68-4a7a-9508-f99fb78c9f57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4187978b-edb4-48cc-bdf0-455b48306ed1",
        "cursor": {
          "ref": "29878f41-897a-4e9c-8c22-fc5dddd727fb",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06a7abeb-3ae2-4f4a-9745-b89cf0b758fa"
        },
        "item": {
          "id": "4187978b-edb4-48cc-bdf0-455b48306ed1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fc6c9d7f-323d-4bbb-8a64-8309f78a29f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b63f2e54-29d5-4b99-9452-05d085de21eb",
        "cursor": {
          "ref": "22ee9bbc-d229-40c6-a4ef-0c0f62e42989",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "bb3021f0-f06b-4fea-93de-f15b751d069b"
        },
        "item": {
          "id": "b63f2e54-29d5-4b99-9452-05d085de21eb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "384b481f-cbb6-4d52-a2fc-6474187e7042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b5873e-bc99-4b9f-a289-44f97ad13738",
        "cursor": {
          "ref": "8da8ca23-91d3-42dd-919b-44ec50e92ac1",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "209bc5f0-2f05-4ad8-bee9-834c46cd5208"
        },
        "item": {
          "id": "e4b5873e-bc99-4b9f-a289-44f97ad13738",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "53d63160-6b5e-4456-a29d-98d1d1017097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb43f6d-3f55-409c-9be5-6844908084a4",
        "cursor": {
          "ref": "7b59e30c-f714-45c8-8a63-acfcee61ff08",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d55f332c-94ae-40b7-a7bd-a70434011386"
        },
        "item": {
          "id": "ceb43f6d-3f55-409c-9be5-6844908084a4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "28cd2679-cc1d-498f-971e-dc0209bf83a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "827ec816-8759-4c56-9f02-6ac774b16936",
        "cursor": {
          "ref": "0d81799d-6275-4019-8731-e5e678794e59",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b8d71442-0618-4e04-9cf0-a4be94bcfd44"
        },
        "item": {
          "id": "827ec816-8759-4c56-9f02-6ac774b16936",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "10ef1fee-8cbd-4f2a-9710-e483440bf5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79ed410-5d9e-4eb4-8630-6c2b4a1ef095",
        "cursor": {
          "ref": "8ff45321-f8d3-42c6-a822-4dd80c63ece9",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "ec205d8b-1a4e-482d-8196-0f0db7b29232"
        },
        "item": {
          "id": "b79ed410-5d9e-4eb4-8630-6c2b4a1ef095",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3fbf8c11-856b-4154-a195-4c5c3b993a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1438a00-b77a-474f-a50f-de389b18e431",
        "cursor": {
          "ref": "f85b4aad-7c49-4640-93e6-e962a59b81b4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "43d61b55-663c-464b-96be-53151a91d059"
        },
        "item": {
          "id": "e1438a00-b77a-474f-a50f-de389b18e431",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "84d3f4be-1e9b-4cfa-900c-376abf14fefc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2fcbd21-5e99-4563-a8ab-115f63b3fd96",
        "cursor": {
          "ref": "aa67556d-abbb-47f0-afed-2c91c800e80e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a4b0f55c-2cb1-4ae4-9d92-972a7353b727"
        },
        "item": {
          "id": "a2fcbd21-5e99-4563-a8ab-115f63b3fd96",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "eb64cb59-85ac-499e-a538-97b867f30121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7030436-71eb-4c04-b744-29198d9a2efe",
        "cursor": {
          "ref": "1190e158-89fc-42d2-97a4-200aa9c0c8cf",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e71cf6ec-8a49-420c-b170-cd31023eb771"
        },
        "item": {
          "id": "b7030436-71eb-4c04-b744-29198d9a2efe",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "87d75a65-59e5-42dd-b9ec-733ee1809630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73152e60-0db2-4a6e-a5b0-e0d3b7841c28",
        "cursor": {
          "ref": "aaa883ed-5857-4a59-9b3f-a8f27a13be5d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "be2fff6d-9ca8-40ae-92b7-1b4b9555da16"
        },
        "item": {
          "id": "73152e60-0db2-4a6e-a5b0-e0d3b7841c28",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "aaa86552-52be-4bc5-8dc5-601c2a2894a1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dabab5d-7251-45f3-9da5-198c2fb2cb55",
        "cursor": {
          "ref": "5021e94c-2950-4f4f-aacd-cd09d0f4e5ac",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9f4303c0-d713-4634-aa29-e77fa7668838"
        },
        "item": {
          "id": "1dabab5d-7251-45f3-9da5-198c2fb2cb55",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "6fbcb1fb-716d-412e-8c3e-e9463fc1c841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "72e7eb4d-e609-42f5-a2ba-13371fc7e68d",
        "cursor": {
          "ref": "6cca46e3-e18b-4897-974b-3a6987f22302",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c40ee108-9097-466c-9104-653877b341fc"
        },
        "item": {
          "id": "72e7eb4d-e609-42f5-a2ba-13371fc7e68d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "f59d58b7-bc26-4aca-a6d8-9ff0432745e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a6de9819-02fd-42d3-b1fa-5f6cd9554734",
        "cursor": {
          "ref": "7b5c8ab4-98a0-44d1-beea-d75892eb687c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "84897071-5bfc-4354-8899-5995e4824392"
        },
        "item": {
          "id": "a6de9819-02fd-42d3-b1fa-5f6cd9554734",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2ffccc78-9383-485a-a094-682607406030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "6031ee9d-148f-430b-986e-8a2c42f585ff",
        "cursor": {
          "ref": "e4c9d65f-6fc7-4fa7-a84b-0ae4a8cfbc66",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5c3008b0-7f5a-4f28-86ee-7d2639420c78"
        },
        "item": {
          "id": "6031ee9d-148f-430b-986e-8a2c42f585ff",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a4d4ab01-f07d-4eb8-8ee6-67bbae2e6ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "40aa20b5-c566-4dce-8561-6ab512556267",
        "cursor": {
          "ref": "153d8fdc-857e-48d4-8d67-13dfccfe8195",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d6e95df6-a6f6-4738-9b6e-618ee8647d61"
        },
        "item": {
          "id": "40aa20b5-c566-4dce-8561-6ab512556267",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "96239bc2-52dc-41b3-bc2c-677e8e4ab338",
          "status": "Created",
          "code": 201,
          "responseTime": 11816,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "638c813d-f420-47ec-8c90-76acccae9efe",
        "cursor": {
          "ref": "1c81c977-a965-4a3b-bd92-c2f933ce486e",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "85d43e22-c6bb-41bf-8236-4c535d1dc835"
        },
        "item": {
          "id": "638c813d-f420-47ec-8c90-76acccae9efe",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8da552e7-7d33-41d7-96d7-98f445108e60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2da5d77b-9e60-4378-9e5d-37b9da1f399c",
        "cursor": {
          "ref": "26028fbf-dab8-41d9-8d21-aca1b07a1965",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "fa0b98fa-5f77-4512-ad10-2164e15b3120"
        },
        "item": {
          "id": "2da5d77b-9e60-4378-9e5d-37b9da1f399c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "17e377a1-6921-4f71-8f07-9dc589b5a2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7ed7c1bb-1455-4d7b-998a-9e2598c25f19",
        "cursor": {
          "ref": "bac846e7-9474-4bab-a938-4ba4e3573045",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "7a5c6828-07dc-45e4-be7c-b5839f0917f9"
        },
        "item": {
          "id": "7ed7c1bb-1455-4d7b-998a-9e2598c25f19",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "446e7a43-ad75-42cb-b512-e0ed7289307b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d83a928-0c8d-43ea-84f6-112c19e59f0c",
        "cursor": {
          "ref": "89aadeee-2178-43e7-81ea-046f18fd5f9d",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "cddc2eef-90b7-4b16-b2d4-aa992de890e4"
        },
        "item": {
          "id": "4d83a928-0c8d-43ea-84f6-112c19e59f0c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a807e20-11fd-4457-9162-521bd105a089",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ec17a8-f36c-40ad-8e0a-2be081d0cd34",
        "cursor": {
          "ref": "21d70aee-28e5-4cb3-b115-96d62ffff345",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c7c20ec4-233d-40f0-8321-90d6b841aeec"
        },
        "item": {
          "id": "a2ec17a8-f36c-40ad-8e0a-2be081d0cd34",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0aa07dd6-949c-442c-b4e9-e87b6cb15675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc20c81-8009-44d2-8324-259660008466",
        "cursor": {
          "ref": "2796f580-ce9d-4b05-8775-157b21e912cf",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "b7c1b13d-0df2-4d07-a8f3-2b8dbcc45d8d"
        },
        "item": {
          "id": "ffc20c81-8009-44d2-8324-259660008466",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d5f5f88d-20f7-45cf-a020-79e2332d1013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3104c67-0cd6-4b5b-b9c8-87cd6b430edc",
        "cursor": {
          "ref": "2b8017da-45d0-4a56-ac62-9e969ec9ee49",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "9d31e36a-e9a3-4cd6-a0a6-3d63ddc98232"
        },
        "item": {
          "id": "d3104c67-0cd6-4b5b-b9c8-87cd6b430edc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "56741af6-dc04-4584-88e2-df67ca3249ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3c691aa-66a5-4aa0-8a29-214957a62985",
        "cursor": {
          "ref": "2a64ff98-f963-4482-bb29-0f4b0f1568ba",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "48b38465-aebb-4451-8dce-4043eb1beca0"
        },
        "item": {
          "id": "b3c691aa-66a5-4aa0-8a29-214957a62985",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d2ceaba2-036f-46cc-af48-ed9f46753dff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a43c23-0409-4794-9f47-2512f6b8f9b2",
        "cursor": {
          "ref": "d34d9bf9-adae-40e8-8e9c-436d56abb447",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "96fc4b83-acf3-4508-9b25-e2cb334bea78"
        },
        "item": {
          "id": "63a43c23-0409-4794-9f47-2512f6b8f9b2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "85793f13-a94d-49d3-a4d6-37fb1cae2f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465e01ba-30b3-4193-be67-4dd8ef86ba7f",
        "cursor": {
          "ref": "a17c29cd-c6af-4a47-9126-809d21e75d73",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "81c44c05-4d51-4036-88cc-b9b5b0a5b6a7"
        },
        "item": {
          "id": "465e01ba-30b3-4193-be67-4dd8ef86ba7f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "587bbbe2-384e-4e0e-bad9-08c27c93d256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9225fb3e-e0d3-4724-947e-edd2964c9d70",
        "cursor": {
          "ref": "541d9df3-58ba-466b-9877-a5d6ed66d97e",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e109198c-3f45-4321-84d6-54e31f05071e"
        },
        "item": {
          "id": "9225fb3e-e0d3-4724-947e-edd2964c9d70",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2a2ed857-212c-4ffd-92d3-c7ccb8d600fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39e29af-e9c2-4474-a93c-e740d9f5f591",
        "cursor": {
          "ref": "7b29f262-c49e-4c73-b18a-a85959b073ea",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "9ef7e2fc-f08b-4256-9e7c-1fd3f2ab85e4"
        },
        "item": {
          "id": "b39e29af-e9c2-4474-a93c-e740d9f5f591",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9534fe7d-ede4-4d5b-857c-7f0d2d018b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58713c56-f965-4e27-8e6e-00ed962a2977",
        "cursor": {
          "ref": "ff48496d-d01e-407f-8466-0bf4a566c3e8",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8670fc53-6a3b-4524-aa01-01da3fdb879a"
        },
        "item": {
          "id": "58713c56-f965-4e27-8e6e-00ed962a2977",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "96402dee-5103-4fc0-b18a-682dc229d637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ce8d6e-350c-47bd-956b-ab0b79dc9956",
        "cursor": {
          "ref": "49785f0b-bf15-4a88-8136-293dbc599f9a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "31544237-870f-434c-8f19-60c16dc09d44"
        },
        "item": {
          "id": "69ce8d6e-350c-47bd-956b-ab0b79dc9956",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "ae5cdad5-eae1-4f73-99fe-9f80a84d387f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a6bccd0-f1a5-4bf3-8d14-f96858fe1ed8",
        "cursor": {
          "ref": "b07ed5e2-ab35-4727-9787-56997b38996a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3f22e44e-5d54-4604-ac69-87dc73c21d86"
        },
        "item": {
          "id": "1a6bccd0-f1a5-4bf3-8d14-f96858fe1ed8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "82f7043d-f16a-437b-996d-254d6b8fc4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c560e4a-f9f3-42ef-9e66-8e4321eda97e",
        "cursor": {
          "ref": "0fc467bd-13c6-47ff-8d6e-e06586ea9bb1",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "cccf8bad-b1f2-43a8-bae9-eb761372680a"
        },
        "item": {
          "id": "6c560e4a-f9f3-42ef-9e66-8e4321eda97e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f921f76a-ff11-40f0-ad18-1d9ab603207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0bd274-b2ea-4292-a943-9c84b4399b2a",
        "cursor": {
          "ref": "20fe7f74-2b10-4b1a-a4dd-ee03c60b1ae4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6cee8dc0-760d-4c34-a67b-b1d36dfb9e71"
        },
        "item": {
          "id": "7c0bd274-b2ea-4292-a943-9c84b4399b2a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1174c748-af99-41fa-9a4d-67d70f43af3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60b760f5-14ad-4d64-acfe-6b9039c315cf",
        "cursor": {
          "ref": "7ab61806-1619-4712-8dce-2c9fc2a50ead",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "550474df-f11c-48ff-a862-fe68c625e89a"
        },
        "item": {
          "id": "60b760f5-14ad-4d64-acfe-6b9039c315cf",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42596b4a-6ca7-455e-b901-e90c3717ecdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd116103-dd05-4fd7-8d08-f78011b6902e",
        "cursor": {
          "ref": "3cb6d59b-f0d0-47ca-be63-e9772cb14442",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "7539df31-b714-4678-a89c-7a281fe20479"
        },
        "item": {
          "id": "cd116103-dd05-4fd7-8d08-f78011b6902e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "77c74a2f-4eef-4c83-b5f4-8e1ff94f8a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d890279f-3a9c-466d-9289-c44fdf5d3fd8",
        "cursor": {
          "ref": "37479714-b4c6-40a3-b9ba-1afe0036ab03",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "afc8b0dc-79a5-4807-aa6c-77958c2cf3a6"
        },
        "item": {
          "id": "d890279f-3a9c-466d-9289-c44fdf5d3fd8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "80a21714-e85d-48bc-811c-ba8b5be7109f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36012854-2cd0-4ad9-b9f6-531ab806e054",
        "cursor": {
          "ref": "cf979fc0-92d6-411c-8b6d-1c75a4490cc9",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "5782be5d-8c87-44ee-9019-76020563f5cf"
        },
        "item": {
          "id": "36012854-2cd0-4ad9-b9f6-531ab806e054",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "01454f36-2846-41c6-b799-43a7af8f0485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab4b3dd-1266-4f57-9a5f-8f0c74580809",
        "cursor": {
          "ref": "396bfa6d-d0a7-4fd1-be47-fb8bd6a8ebe2",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c06aa3e7-f478-4cc7-b453-a0697e0e3a47"
        },
        "item": {
          "id": "fab4b3dd-1266-4f57-9a5f-8f0c74580809",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "afe1a9a6-acd8-4994-8b37-18f549e02c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c67d1-4c85-47bc-bff7-52f2b2887414",
        "cursor": {
          "ref": "acfa00c1-a500-43d4-aa0a-45d276550cc6",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "da3e7b79-8cf8-45fe-8e0b-3d4e0ba3ee87"
        },
        "item": {
          "id": "141c67d1-4c85-47bc-bff7-52f2b2887414",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "70edd34a-d153-4a64-a203-b76ceda9682a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1181df7b-2936-4cf3-aa94-baccfca89316",
        "cursor": {
          "ref": "f4cf688c-af3b-44d9-bc1a-5dddba82e573",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "31ad6b47-20fc-4383-a98e-28f43c33b57d"
        },
        "item": {
          "id": "1181df7b-2936-4cf3-aa94-baccfca89316",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "f420d3b2-b493-45fc-98d7-d3f3bc3f6351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23841553-d2b9-44f8-b0f4-2dde26e9192b",
        "cursor": {
          "ref": "d4726355-00bc-4099-8153-4e404fdd1ed4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "144fe723-b4b3-4cbe-a2e7-443af928098f"
        },
        "item": {
          "id": "23841553-d2b9-44f8-b0f4-2dde26e9192b",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "703a1cb8-fe57-44f1-83b8-4bc7feca4472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f81560-b20c-41d9-ab34-ddbb8f669d37",
        "cursor": {
          "ref": "69c544ee-6b8e-4ffb-9c8c-8c5dbab87f77",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "08cd359c-bfa1-4f9d-83ef-bad0592092fe"
        },
        "item": {
          "id": "c8f81560-b20c-41d9-ab34-ddbb8f669d37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "58c3fe54-d904-4485-b30b-4bee472c93a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e682e43-53c0-42f5-a3dd-0aaf337815b8",
        "cursor": {
          "ref": "6c4e5e9d-c034-4184-81c2-e9352a99860b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "425a1ed4-4088-4432-bcd5-6c47384ff7bd"
        },
        "item": {
          "id": "5e682e43-53c0-42f5-a3dd-0aaf337815b8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88d45e4e-eff2-4e87-ad63-96f3465af4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06040ec5-0177-4501-ac24-8048e153381b",
        "cursor": {
          "ref": "87117910-efda-456e-86d9-80063930debf",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "71666707-acb8-44e5-9dbe-9977be9f6844"
        },
        "item": {
          "id": "06040ec5-0177-4501-ac24-8048e153381b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "680d0af8-a056-40da-ac5c-e6d78af2733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caa2b601-2016-44b2-bd18-c195517ee0d3",
        "cursor": {
          "ref": "ea7cd3ce-6329-46de-96fe-968f55e3c852",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "17dd28cb-ef83-4fa5-abd1-015cd773664f"
        },
        "item": {
          "id": "caa2b601-2016-44b2-bd18-c195517ee0d3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aa9aa948-a1c2-446c-a22b-c95a5ff40215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b398a426-88d3-4227-b563-6ee9f72572be",
        "cursor": {
          "ref": "844d1ff5-ea91-42d0-ba00-a7f859ea05f7",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c7040b46-dc9f-4f72-8645-c8c70a2eb321"
        },
        "item": {
          "id": "b398a426-88d3-4227-b563-6ee9f72572be",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "62bccabd-8551-4bc3-9801-c1ec7af69194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5af093f-8548-4f4f-b00e-ff6318bdb474",
        "cursor": {
          "ref": "4923798a-f0b2-45ea-9d04-7c1e18ba52c1",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fcb3ce69-3077-44b8-8410-098fb7c9e2f8"
        },
        "item": {
          "id": "e5af093f-8548-4f4f-b00e-ff6318bdb474",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "58a335e5-fc49-4b29-964e-cd2b7c96d635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b795b9-a303-4a5b-9d9b-30672aebcbf8",
        "cursor": {
          "ref": "26a6d03c-d6df-496e-90e4-cf8dbf73f277",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6a8181e9-f88c-491c-811a-8f9feaa1c485"
        },
        "item": {
          "id": "56b795b9-a303-4a5b-9d9b-30672aebcbf8",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8203c8b4-55d4-4998-9493-33136e13ef2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf44d0f-ff7d-438a-9f25-95bc4451f477",
        "cursor": {
          "ref": "8e4091b7-012d-4e59-9b21-842744e06ee2",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "142ce4f6-033c-471a-8268-7e6843817eb5"
        },
        "item": {
          "id": "eaf44d0f-ff7d-438a-9f25-95bc4451f477",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "441837d0-f2a2-4eba-9478-6aae42b738c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f50ebf-4801-443d-a3fd-1a23580f865b",
        "cursor": {
          "ref": "da346050-c805-4773-bcf2-e340779cd012",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c44b4588-f7e5-4ff2-8085-7b84cba56145"
        },
        "item": {
          "id": "65f50ebf-4801-443d-a3fd-1a23580f865b",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "6d5997c4-e019-4e22-bfc5-4b207acb73d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c807178-c96d-4bff-873b-a0d68007dbd3",
        "cursor": {
          "ref": "84558095-8d05-42d1-ae8c-97b07cab403f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "49640694-231c-4257-bda9-ca8b4ece4058"
        },
        "item": {
          "id": "9c807178-c96d-4bff-873b-a0d68007dbd3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f92fec3d-c17d-4ce3-86f8-2336712d6d54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108f0a94-c6c4-4406-b631-a592e959e99d",
        "cursor": {
          "ref": "43c9cbfb-a6a5-4185-8e3a-e371559a2abb",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "633243a6-c137-44f5-8d9e-0aab9267c761"
        },
        "item": {
          "id": "108f0a94-c6c4-4406-b631-a592e959e99d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ad436ab4-ef66-43d3-89b6-dbfbd2b6a2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a0faf2-0778-4489-be3f-5257bb097db3",
        "cursor": {
          "ref": "0cf0d8ce-b8ec-4e21-a0bf-ba95f00cd995",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e570951d-fa8c-4526-9785-00e64d4d24c7"
        },
        "item": {
          "id": "c2a0faf2-0778-4489-be3f-5257bb097db3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "145b0dcd-0aab-4114-a466-4948bab1e7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ee648e-e97f-4c13-b921-4c573c421a4d",
        "cursor": {
          "ref": "00122a54-483c-4da1-82b9-655eaf76b33b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5d3c4743-ccc7-4872-be8f-d79fa366fe1c"
        },
        "item": {
          "id": "40ee648e-e97f-4c13-b921-4c573c421a4d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "748b2393-568c-44fb-9267-56af5979ef0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f27ee1b5-3992-4bf3-a293-42a151885091",
        "cursor": {
          "ref": "c8f5cab3-f0a3-48d8-be7d-c7ed4d50d833",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "95386e66-ca9d-4508-95fb-b4b7b67dbb51"
        },
        "item": {
          "id": "f27ee1b5-3992-4bf3-a293-42a151885091",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f483a80b-c676-4464-87b1-a343beff2a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27950c67-9137-4999-b035-886d30cbaf10",
        "cursor": {
          "ref": "dbe0a06b-b7fb-44ca-b9ba-c57b0e62f103",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "43a071fb-7f66-454b-ba91-0a1b1608b18a"
        },
        "item": {
          "id": "27950c67-9137-4999-b035-886d30cbaf10",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a84b4b27-f42d-4d91-8e4c-9e74d8cc6da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435d6600-46d7-4859-bbad-cf92ee2f5f2f",
        "cursor": {
          "ref": "a04d48f0-5bd7-42fe-b381-94200b927b41",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eeb352e6-d7e8-4121-b126-c50bf123a744"
        },
        "item": {
          "id": "435d6600-46d7-4859-bbad-cf92ee2f5f2f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba8c97d4-e96b-4d2f-a3a6-dd2bf23ea0f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a632c790-d17a-4882-bdd9-08f240f81965",
        "cursor": {
          "ref": "268178eb-62d0-4a0c-bcd7-492e5f9f89af",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "baa43870-33bd-4b1d-b6dd-46bb96901fca"
        },
        "item": {
          "id": "a632c790-d17a-4882-bdd9-08f240f81965",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "93499b0e-cfe3-40d8-86f0-34de64fef4d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5d1e5-7f3c-444e-a404-fd402a50359b",
        "cursor": {
          "ref": "85d33ad0-f779-4443-91db-90127ad4cdc0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "952144f6-cf81-4ea0-a349-ae402092a82b"
        },
        "item": {
          "id": "04e5d1e5-7f3c-444e-a404-fd402a50359b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c89d5f75-4559-4963-a597-dc2ccb280a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b641730d-357d-4948-ae76-9fb45c7517f0",
        "cursor": {
          "ref": "d8fd1978-5b17-4de1-a2cf-fd2bfaf8fe8b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0174ad45-e04b-4f70-b60c-0487ef65840c"
        },
        "item": {
          "id": "b641730d-357d-4948-ae76-9fb45c7517f0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5a811616-1790-44b6-99d8-dedadbb8ab9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cbc320-40c4-46c5-b027-3acf096a16d7",
        "cursor": {
          "ref": "952e54d3-dc7b-4bc8-b3ec-8ec1cf896510",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "472a41f3-76fc-43cb-8302-3844d44827c3"
        },
        "item": {
          "id": "a8cbc320-40c4-46c5-b027-3acf096a16d7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "fc3ff3a7-ec95-48e8-9f2b-b57751523433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d114ef1c-f0dc-482f-9fbd-6107e909dcc5",
        "cursor": {
          "ref": "518329f2-761d-4164-9cac-336eafb05072",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "06466853-1b27-4a8d-8e5b-492af1dabd2b"
        },
        "item": {
          "id": "d114ef1c-f0dc-482f-9fbd-6107e909dcc5",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2e8aaec2-31cf-456d-9d78-8bce90d6e9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59743bdd-8f9c-44f1-8bb1-f3d8971d5a23",
        "cursor": {
          "ref": "349819be-06dd-4db5-9550-56200a3d98f0",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "83764ce0-2d92-43cd-b8ea-d0f952f50aef"
        },
        "item": {
          "id": "59743bdd-8f9c-44f1-8bb1-f3d8971d5a23",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b2f190f6-d45d-45c6-a989-ee8e6b10890e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfc9f88-4536-44a3-b06b-0e4e962fd7d3",
        "cursor": {
          "ref": "42279a09-6dc9-4c96-a646-99899b967caa",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "57198757-51bb-4d7e-8a76-842caecd719c"
        },
        "item": {
          "id": "ebfc9f88-4536-44a3-b06b-0e4e962fd7d3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ed42675b-d579-4113-b030-bd08fedb3b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312adad-1807-4dcd-bc16-9f77b92d9134",
        "cursor": {
          "ref": "da94886e-8ba2-419c-8ae0-21d3896f6b96",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0f4b2f3b-eefe-4fa9-9769-c21a1a4d61ba"
        },
        "item": {
          "id": "d312adad-1807-4dcd-bc16-9f77b92d9134",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "efe236b9-ca28-4933-ac92-92a17b2408c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3e36c1-110a-404a-9031-fa55e7ee0a7a",
        "cursor": {
          "ref": "aa84e6e8-1425-46f5-ab0f-6da546923d64",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1cb84e5d-d337-43dd-b989-77d9c627c00f"
        },
        "item": {
          "id": "3e3e36c1-110a-404a-9031-fa55e7ee0a7a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d4838d93-9917-4272-b60a-35dbb49eac32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37538077-5192-41ca-a033-32320f6f47e0",
        "cursor": {
          "ref": "5bdced40-dd73-48ee-bd13-15c52004045b",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5712fb9c-eb22-41fa-b039-6a8800ac81ac"
        },
        "item": {
          "id": "37538077-5192-41ca-a033-32320f6f47e0",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e90939f4-0370-4ed4-a273-f611b33cb09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b49b39a1-7b4f-4e28-bb5b-c1eac4405168",
        "cursor": {
          "ref": "71e7d361-bf91-41e7-895f-87958ad953d6",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ac6b24c6-e8d4-407c-a962-16366451bda1"
        },
        "item": {
          "id": "b49b39a1-7b4f-4e28-bb5b-c1eac4405168",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2c1e638f-247a-4b3e-99a7-62b933106c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec62cf6c-691d-479e-8efc-42c6c82a6bb3",
        "cursor": {
          "ref": "f2fe3ac1-01b9-4994-8b4e-2bc4c59f38be",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8a2d064d-9931-46a2-b469-65a7e5e4435d"
        },
        "item": {
          "id": "ec62cf6c-691d-479e-8efc-42c6c82a6bb3",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c659d408-0f1a-435d-b85e-a2c38d5a8f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd141cde-80ec-4a70-86da-40e11047dc60",
        "cursor": {
          "ref": "abeb67e8-bca0-4078-ace9-0e4c3c6e48b9",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6e5c2a3e-8db9-4c4c-bb25-92c0c6d1f11e"
        },
        "item": {
          "id": "fd141cde-80ec-4a70-86da-40e11047dc60",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8a9ae7bb-f1e7-42f5-a803-e01f2e1d4912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee5a3d4-faf8-4019-921d-ead6976414fa",
        "cursor": {
          "ref": "bbb07d7f-ef66-4ad9-8056-169f41f2ba9b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a006dbd3-c19b-4ea6-bbb8-664e7d3b7853"
        },
        "item": {
          "id": "6ee5a3d4-faf8-4019-921d-ead6976414fa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2e3384c7-8276-45c8-97a1-7f1db2a642f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8c277a-08ab-4530-83ea-7c9cf9b405e7",
        "cursor": {
          "ref": "858050fa-b4d4-493f-9d59-dd429aa414d3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2d3f5e7b-fe01-455e-bebb-2979efa0183e"
        },
        "item": {
          "id": "5b8c277a-08ab-4530-83ea-7c9cf9b405e7",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d51d40e6-a425-4323-a393-eb3777862cc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619d0b92-8204-46a8-8711-f3d01a7d4037",
        "cursor": {
          "ref": "2b59fc06-bed9-4123-9b87-7fcc288f12c9",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ed7fd824-a5cb-4c8e-a1a8-f067acbbabe3"
        },
        "item": {
          "id": "619d0b92-8204-46a8-8711-f3d01a7d4037",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ddbfa1fc-a36d-4478-ac13-651719522dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b67d90-8e92-4c07-8a76-7dbf26591c65",
        "cursor": {
          "ref": "6e43b94e-3af8-4b7a-9b77-4dcc39a13e96",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "cdb902c7-7078-4725-8193-12060528c06a"
        },
        "item": {
          "id": "83b67d90-8e92-4c07-8a76-7dbf26591c65",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c926e7d6-d844-4d16-bf7e-d8f6768d18a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "048778ab-3657-4f67-abfb-d9032ec2890c",
        "cursor": {
          "ref": "4f77ff91-397a-4d61-a258-5552c68323ac",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "db1fcc1c-5532-492f-9c34-8863878cca60"
        },
        "item": {
          "id": "048778ab-3657-4f67-abfb-d9032ec2890c",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "48819a01-e429-4545-b643-62bf3804a407",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d1792f-246e-44a2-b7dc-4a4f4e18d849",
        "cursor": {
          "ref": "9593a2a9-8e9f-4883-9b8a-ba47cfe17207",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5f2f4e3d-f60e-4569-a11d-bf10a805a8aa"
        },
        "item": {
          "id": "f4d1792f-246e-44a2-b7dc-4a4f4e18d849",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a571bb6f-cda5-4da0-b064-12cd770e4e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c431f820-3c29-4015-85f8-92ba80d3fd1f",
        "cursor": {
          "ref": "f0f5363c-1258-4826-be17-6b42ba52045e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d823fce2-b52e-403b-8ccc-698af654a9e1"
        },
        "item": {
          "id": "c431f820-3c29-4015-85f8-92ba80d3fd1f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad7ba2a6-85e1-471f-a81a-8b8a8b1adf07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a43ad09-d74e-4b5a-8449-a43c5c64d7fb",
        "cursor": {
          "ref": "dd18de67-d665-4dfc-b4b2-3289db4012d3",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "813cc6e2-3a29-45a0-bd44-e1c72d85d78f"
        },
        "item": {
          "id": "1a43ad09-d74e-4b5a-8449-a43c5c64d7fb",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a00bdc14-e507-4097-9ebc-3a826ccd157f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6a39f-c654-4867-ae62-5facb40ea74b",
        "cursor": {
          "ref": "16ad3290-821e-4945-886c-ff35035a7b07",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5eafb43d-0649-4319-b016-c8be3b16eb3e"
        },
        "item": {
          "id": "9dc6a39f-c654-4867-ae62-5facb40ea74b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6968d42b-d756-49de-b70c-3080af8b8fcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6c2cb4-2fa0-429c-9214-ba54ae561125",
        "cursor": {
          "ref": "3f0a8662-5f81-4c1c-9668-bcd8f26aaf88",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "54f8b4e7-d9fe-45ea-bd3d-b930ca346320"
        },
        "item": {
          "id": "be6c2cb4-2fa0-429c-9214-ba54ae561125",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cf343923-5ae0-4c05-aaff-0fab14e3cc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51468704-1a6c-4192-9a88-86069601bf46",
        "cursor": {
          "ref": "89886317-29ac-4f2d-a9e2-8110d54d7b18",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c5006b6c-5570-4783-90d1-2f6217020634"
        },
        "item": {
          "id": "51468704-1a6c-4192-9a88-86069601bf46",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e8d42596-512e-4731-9ba6-1dc5d015fd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21fda49d-e918-4e25-9a8d-c0dd4ded7667",
        "cursor": {
          "ref": "5cd3ab22-ebc8-4977-997a-c69d647e8c6c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "69506c37-8ce0-4be4-9a7a-c9689f06b8e4"
        },
        "item": {
          "id": "21fda49d-e918-4e25-9a8d-c0dd4ded7667",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "aa6d72f0-d25b-4f97-a3de-b59ebb46e122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d0740d-2c3a-4d13-b0a3-e2cc16f82b2f",
        "cursor": {
          "ref": "823d4f5b-de2e-4802-be5d-3d28f5ae571e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "35f4231a-a00d-4dbe-a1e1-586d05c4c0de"
        },
        "item": {
          "id": "d8d0740d-2c3a-4d13-b0a3-e2cc16f82b2f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "0febcbd8-914c-4158-8572-bbddc8041173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57ac238-3f2b-420e-80ac-77146ca57e50",
        "cursor": {
          "ref": "d1d29599-3f93-4ce9-922e-5ff93432dddb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a8e0e485-ac6c-4718-a5cc-13cfa5539aca"
        },
        "item": {
          "id": "b57ac238-3f2b-420e-80ac-77146ca57e50",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "56f9f954-124b-4470-8419-f78f1cc0b963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b784d9-0b11-49c1-85d2-c126f0dc5f7a",
        "cursor": {
          "ref": "30fe056c-e9be-412b-b12d-b43745207990",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "db57f656-1ee3-4e59-989a-48e0aec5a4ad"
        },
        "item": {
          "id": "a4b784d9-0b11-49c1-85d2-c126f0dc5f7a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "de59b8cc-52b7-40ca-a33a-ab85f0f4bbef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93cfba4-4993-4a16-8119-e91bcf9aca06",
        "cursor": {
          "ref": "154ac405-3032-427b-bdbc-93caea9f69ec",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "44bdef62-5376-4d2f-8f27-b14cfb38d9e6"
        },
        "item": {
          "id": "e93cfba4-4993-4a16-8119-e91bcf9aca06",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f618a578-cc30-4f92-9c65-aa0119cd8ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e507ff56-e55c-4418-81aa-63420f7b3c0d",
        "cursor": {
          "ref": "705bedcc-4074-4000-a598-d9de7cd76a1b",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "4194489d-845a-4754-a7d3-45d9c4ffc370"
        },
        "item": {
          "id": "e507ff56-e55c-4418-81aa-63420f7b3c0d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "2d8a8602-01a1-4dd7-9540-bae367193a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f5276b-b65c-4932-8ac3-849e319b1d1b",
        "cursor": {
          "ref": "afb1afef-1f30-4c29-b4b5-d01901be2c74",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b3329cad-2537-4746-af97-e588f2af967f"
        },
        "item": {
          "id": "15f5276b-b65c-4932-8ac3-849e319b1d1b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "be40b644-9fc5-42d7-851a-605915fe61d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558b1264-7d71-462a-b9ca-1d98de782fbd",
        "cursor": {
          "ref": "c6091219-f740-42c3-92b7-4086f20d303e",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d08e9680-69e8-4b3f-9157-4b1e9f597ea2"
        },
        "item": {
          "id": "558b1264-7d71-462a-b9ca-1d98de782fbd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f7ab2fa4-c80b-4ca0-953f-16a0663624ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e425642e-5256-424b-8833-7919da71f61e",
        "cursor": {
          "ref": "b9226596-064a-4520-bc95-41b583c6fd49",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "98ea12f4-f3e0-43ab-9b18-edcc7026a9ac"
        },
        "item": {
          "id": "e425642e-5256-424b-8833-7919da71f61e",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8e9e1e6f-9b81-4709-b517-d6f572855953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a52d6c-68df-47de-be30-d0b8baebfb97",
        "cursor": {
          "ref": "0481584f-3cf6-47bf-a55b-0e945a866bc6",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "c4ae0ccf-342e-4c04-96ca-eb6e7edbc8ca"
        },
        "item": {
          "id": "f7a52d6c-68df-47de-be30-d0b8baebfb97",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "326f30eb-8194-428a-9b60-3ef9f431b7ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2d2632-36cb-47c1-b012-5fdd10cbb96c",
        "cursor": {
          "ref": "22e4ac69-2a7d-4057-aef9-95e0ae66dcef",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "7eb5b8e6-6e60-426c-99fc-f6fc14c56d9c"
        },
        "item": {
          "id": "7a2d2632-36cb-47c1-b012-5fdd10cbb96c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "d8483571-120e-4863-98a6-43415ef70ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcffd95-5371-4433-87d3-1f33a5c8dda6",
        "cursor": {
          "ref": "3603426f-5f83-42ab-a6f8-bebfa40ccdc1",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6297131b-a4c7-4366-aab2-a9fad7436c13"
        },
        "item": {
          "id": "6fcffd95-5371-4433-87d3-1f33a5c8dda6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "342d5c0f-2c48-41fa-9850-19e40f1f87f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2e11d6-9f53-40b0-8bd1-6a745afd88d5",
        "cursor": {
          "ref": "76c5feb8-ef66-4730-b86c-9ad1465ea796",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b785a305-6a3f-4667-8578-c2b4790e547a"
        },
        "item": {
          "id": "0c2e11d6-9f53-40b0-8bd1-6a745afd88d5",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5017711b-958e-4183-b0e8-0c212fd5b1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf69668-374e-40cf-9c49-954cb6c3b200",
        "cursor": {
          "ref": "7ac2e95b-2756-4abe-99e8-80b6f3650b5f",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e4f00fea-edab-404a-817d-2a146554edfe"
        },
        "item": {
          "id": "acf69668-374e-40cf-9c49-954cb6c3b200",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f7f68aec-5e4f-4da9-9642-d0360af64728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b272db0-d1b9-41b5-9c66-149869bc507c",
        "cursor": {
          "ref": "a4e4e4d3-c9f6-46b5-8842-61b5baa333e6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1090c6be-3122-4275-9bab-32f3f1a791f4"
        },
        "item": {
          "id": "4b272db0-d1b9-41b5-9c66-149869bc507c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "39721de0-6b46-4977-b880-f35544b5b948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9e82fc-4d3c-4a4e-ac8d-4f9d226e100a",
        "cursor": {
          "ref": "7ca6eadb-5d9d-41c3-a54f-28679f25c1ac",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c1eb5bf3-b6b3-4bb9-8394-285cac2f62be"
        },
        "item": {
          "id": "7d9e82fc-4d3c-4a4e-ac8d-4f9d226e100a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ffcd129b-ac09-4d1e-9515-dbf7b41a3881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d1d693-f9c4-4dfc-b1e4-c7de7ac44c7c",
        "cursor": {
          "ref": "52aaec83-acbe-4b37-82bd-6d4510b3f63b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "02863924-d8c2-4d70-a6d3-16c705a4cee0"
        },
        "item": {
          "id": "93d1d693-f9c4-4dfc-b1e4-c7de7ac44c7c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "11c7fb98-1dcb-475b-be93-6a30728b1a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "823adf08-ee30-45f2-9d07-c83190316ff6",
        "cursor": {
          "ref": "39e23e0e-825c-46e0-94ae-88db7fd72031",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "22adf765-b12e-4057-836e-d13ed5a4369f"
        },
        "item": {
          "id": "823adf08-ee30-45f2-9d07-c83190316ff6",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0537b5a-af3a-453f-8c23-1cf93c5c730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c61b79b4-c667-4f45-9d14-e1c30d897cd6",
        "cursor": {
          "ref": "512940f7-9747-40fe-af95-689f777f0001",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "cf53ef55-64ad-4f42-94f1-dcbea6c90f95"
        },
        "item": {
          "id": "c61b79b4-c667-4f45-9d14-e1c30d897cd6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "305dfb70-a8a2-49c5-9ca8-0f2dcd926e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aa26e4-eb05-4cd1-817b-fa630ebabaa7",
        "cursor": {
          "ref": "60d55943-56d6-4c73-9c20-4e875273fcc6",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "919d2874-61d4-4eb1-9013-c2bc8352ba92"
        },
        "item": {
          "id": "03aa26e4-eb05-4cd1-817b-fa630ebabaa7",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a48a5305-f29a-4ec2-9efe-b4577349f30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0006d90b-ed2a-4e8f-80e2-29fe2c4f1bf9",
        "cursor": {
          "ref": "9bf4f7f8-5008-4b2c-b581-c6f6037d1933",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "704591f2-60a4-4ad4-a7a1-0900afcc0703"
        },
        "item": {
          "id": "0006d90b-ed2a-4e8f-80e2-29fe2c4f1bf9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c33d52a1-5c25-42c9-90b3-4ccbac8977e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6be7b85-8d5c-4d65-83c5-c1245c52dff2",
        "cursor": {
          "ref": "1c9b7d0a-7d66-42c3-be30-fc6d8addc950",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "babaff89-991f-4fdd-bc3b-123877c8349e"
        },
        "item": {
          "id": "f6be7b85-8d5c-4d65-83c5-c1245c52dff2",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "ed95d184-4491-4b67-a59a-586cd4c8d902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cfe8e1-6ca3-4eb1-8a73-a63b19f2fb36",
        "cursor": {
          "ref": "239b35ed-2eda-4d7e-bd08-148faac9c1bb",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "20b0b149-114f-4646-ab87-0416a60eb902"
        },
        "item": {
          "id": "64cfe8e1-6ca3-4eb1-8a73-a63b19f2fb36",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "364ad4bc-7912-4a36-a794-8337864abe83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649424f1-73df-4f74-bbd2-e11f1c70447d",
        "cursor": {
          "ref": "a15637db-b22e-4ad7-acad-943593bd4595",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d4d85c6f-f818-4df9-95be-13db121c5b89"
        },
        "item": {
          "id": "649424f1-73df-4f74-bbd2-e11f1c70447d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5b91d3aa-aff9-443b-9e78-f8609936b62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db6915b8-fce4-44b1-a4fc-a16fcf50afcf",
        "cursor": {
          "ref": "5855f35a-3554-452b-8019-b40a199300fc",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "94d3785a-8722-4d05-985d-fb58221adb5e"
        },
        "item": {
          "id": "db6915b8-fce4-44b1-a4fc-a16fcf50afcf",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "10d53ca2-8824-42a7-b2c2-02e6bdfe3967",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "b063c320-cc54-4141-8aed-8ce10dba9407",
        "cursor": {
          "ref": "e087c5cf-a1a8-4031-bad7-ccd7d378b2ba",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "d1b7e3aa-c091-4e1d-ab1f-525dadcdbd52"
        },
        "item": {
          "id": "b063c320-cc54-4141-8aed-8ce10dba9407",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "af21dc6d-db3d-4462-bb06-afa4295162e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8daccdc-6b1d-4d46-8669-d5753917024e",
        "cursor": {
          "ref": "f0c97279-cc4a-4ca4-bb65-cc9e17b10037",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8f3450db-955d-4319-baa7-c8abc3d1cd7f"
        },
        "item": {
          "id": "f8daccdc-6b1d-4d46-8669-d5753917024e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "83a9e029-834f-4bf8-8d92-0d9114bb5faf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb13265-6c36-4fde-b946-aa90554541d1",
        "cursor": {
          "ref": "d2c4accf-69f6-4f88-9a3e-5e23d8469119",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8125478-49b8-4fda-9c0d-bcf7954a410d"
        },
        "item": {
          "id": "3bb13265-6c36-4fde-b946-aa90554541d1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9648309c-ff71-459c-8f2a-7fc7ff9abcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7517ca60-5e18-402c-a455-668326a3c260",
        "cursor": {
          "ref": "f6643d41-e10c-4641-a557-e8a5145554c3",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0336747c-7a0c-41a3-803c-a15eaab399ec"
        },
        "item": {
          "id": "7517ca60-5e18-402c-a455-668326a3c260",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0c968a08-f34a-4b2a-a8c2-253de25a9d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd9b7f1-65a6-4fb5-85e5-46937173c7d4",
        "cursor": {
          "ref": "749460e1-51fe-4ff3-b6e7-558d8d5bc0b5",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4ac68179-a5fa-43dc-a65f-5182db47e088"
        },
        "item": {
          "id": "4bd9b7f1-65a6-4fb5-85e5-46937173c7d4",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "481c6bfc-c645-4cfc-9a0e-06bd67380626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b33d45-1ec4-41f1-8866-5caac9e56159",
        "cursor": {
          "ref": "1d88f44f-3d51-47b1-92b4-c4476fba8fac",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9c740f55-b787-4e7e-b088-0c742c7edecf"
        },
        "item": {
          "id": "04b33d45-1ec4-41f1-8866-5caac9e56159",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e3dce64d-d3f1-4004-b2f2-d024163148b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf8a1da-91ef-47e6-a09c-c8f664c9d614",
        "cursor": {
          "ref": "6bd57d41-7f5c-4086-8fcb-da4aa92bffcd",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6ca9a15e-4d94-47e4-87cd-37a9f5654602"
        },
        "item": {
          "id": "bbf8a1da-91ef-47e6-a09c-c8f664c9d614",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a463b15f-064e-41b5-b230-0f11f296328f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481745d7-98c1-41fd-afd4-5f297be50f39",
        "cursor": {
          "ref": "fc2207e5-200e-4ef2-bf45-d7672234f03d",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "62634cc1-ad88-4618-8346-f198cb9c8358"
        },
        "item": {
          "id": "481745d7-98c1-41fd-afd4-5f297be50f39",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "48bce236-4c2d-4a11-9c89-451e5cdcf9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7a1c21-a848-4e8d-b2ec-d8a981184cdb",
        "cursor": {
          "ref": "d98447af-ec7f-4913-9fa8-66f8d0c3b2b3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ad8f1557-5b5c-46f2-9155-80a7417c5255"
        },
        "item": {
          "id": "ee7a1c21-a848-4e8d-b2ec-d8a981184cdb",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "da1c725c-4a89-4ea7-80d6-11aec44482f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d554f904-81e3-4ea4-a93c-cac55d675bdf",
        "cursor": {
          "ref": "d192bd1b-fbcb-47a6-a61b-32493566878e",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a049d01f-113c-4210-b4f1-56fc92b14a19"
        },
        "item": {
          "id": "d554f904-81e3-4ea4-a93c-cac55d675bdf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d83a4a5-4059-4fba-aeef-8959146a3185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa10d5bf-9864-45e7-a352-d0b3bdc03539",
        "cursor": {
          "ref": "7eb33f83-16ed-4fd2-84ff-8648205ece63",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c404c4cd-f185-4b38-873a-8a13b7abcdcb"
        },
        "item": {
          "id": "aa10d5bf-9864-45e7-a352-d0b3bdc03539",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "41197277-7b19-4b42-80dd-5e477471478a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4771ad27-d5c1-47d5-b2f1-eb8c8ba92610",
        "cursor": {
          "ref": "094bb40d-c373-48b4-a5f6-1fce349910ba",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5214ca3b-eb0c-45cf-b7c7-640195eb1615"
        },
        "item": {
          "id": "4771ad27-d5c1-47d5-b2f1-eb8c8ba92610",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "5b5c4300-9660-47e9-be19-118da90fd8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae868fc5-4391-498e-a71c-42fb6d92eb7b",
        "cursor": {
          "ref": "3f52b653-2fa8-46ef-b29f-300a51a580bb",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "421569a2-a19b-413d-9391-2e868d3c7bac"
        },
        "item": {
          "id": "ae868fc5-4391-498e-a71c-42fb6d92eb7b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0fc8fea0-d604-4236-9b32-3cf9ae9e19f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555605e5-48ea-4921-b910-9bbe281a719d",
        "cursor": {
          "ref": "6ecc54b7-ac78-46c8-a97e-adde168864f9",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "90d56474-36f5-475f-884f-5d53495d3bc3"
        },
        "item": {
          "id": "555605e5-48ea-4921-b910-9bbe281a719d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7f6ad4fd-fc04-413a-900c-79808fbc244c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bf906b-8c39-4f51-b9fe-1e0c9c7115d2",
        "cursor": {
          "ref": "11527588-922a-4a03-b7e3-eefe47607295",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "fa550d23-348e-4c65-846f-a3173cfee30d"
        },
        "item": {
          "id": "09bf906b-8c39-4f51-b9fe-1e0c9c7115d2",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "0925af8b-5c2c-4550-941d-d2bec8b81ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670aa2b4-1d1f-4797-9e6d-91000e0be04d",
        "cursor": {
          "ref": "aabfd6fe-70e2-4f25-89da-fb852a6a687e",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0cebcfc7-0ec1-4867-9c3a-ed9861cd00d8"
        },
        "item": {
          "id": "670aa2b4-1d1f-4797-9e6d-91000e0be04d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "650ef389-c003-4d14-86a8-084b87dfa35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5597c2-38f9-4616-9ce0-77de6da3125c",
        "cursor": {
          "ref": "da59f9ce-6621-49c0-b279-002a815d364d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "324bf58a-bffe-4ca4-aed8-f8403550c418"
        },
        "item": {
          "id": "1b5597c2-38f9-4616-9ce0-77de6da3125c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "0aaa17e3-bd83-4734-bd0e-aa11a791a11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94aba1cf-2faf-4861-af6d-b59a56c76bf1",
        "cursor": {
          "ref": "287f0445-2896-45d7-a902-50b621085e51",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3dcd3c66-f525-4c8a-a086-e352a1344890"
        },
        "item": {
          "id": "94aba1cf-2faf-4861-af6d-b59a56c76bf1",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cd83e9fa-49d3-4d0a-9b6a-022ba579a62b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1d7fc8e-2a30-4620-bec7-47566e2f9501",
        "cursor": {
          "ref": "6c2a10cc-1d0c-40a2-91a2-d52ec06b7968",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "06e6ffec-9120-42e0-8002-a33f2b72c32f"
        },
        "item": {
          "id": "a1d7fc8e-2a30-4620-bec7-47566e2f9501",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "34f5707c-44be-4c59-aecd-22c1e2a365a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88caa5d8-ef6a-4602-a060-8c0f1fa4bd5d",
        "cursor": {
          "ref": "860aebe0-09d7-4ae9-bfcc-736cab2a14ca",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a20be80-61a8-476c-bc92-51e43f0640d7"
        },
        "item": {
          "id": "88caa5d8-ef6a-4602-a060-8c0f1fa4bd5d",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "abf33d38-2f3e-44f5-ab9f-9b6df7506570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c2afb8-d095-4142-a858-5353403fa7a2",
        "cursor": {
          "ref": "9baae857-19c2-4caa-bc06-1ef4d98f97fc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ac711411-c700-4692-9543-b4ada39f9b19"
        },
        "item": {
          "id": "d8c2afb8-d095-4142-a858-5353403fa7a2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "04ca506f-602b-4a7d-b2fe-b4098823fbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25061aad-7891-4463-8df7-b400e0146157",
        "cursor": {
          "ref": "5bcf2887-aed1-4766-80e4-eed7ccf9c4b3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "83500353-e766-4db4-a7dc-e5e9e252c155"
        },
        "item": {
          "id": "25061aad-7891-4463-8df7-b400e0146157",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a74d0f6f-1592-4ac2-85ab-daa21fd2735e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c227a32-7d67-41a5-99ec-3540fdb598c4",
        "cursor": {
          "ref": "acc382b9-afed-476c-9033-dd431235efbc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2e46fd99-3ff3-4908-be6e-ccc2331a8709"
        },
        "item": {
          "id": "5c227a32-7d67-41a5-99ec-3540fdb598c4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2161fb1d-b89e-46a9-b581-ede3866db06a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c989c3-dd36-4700-940c-95f6ab89530f",
        "cursor": {
          "ref": "6fa707c5-44bd-42ef-8eaa-e5482b3a4d39",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ac2c0035-5971-480d-bcb4-49868912a19d"
        },
        "item": {
          "id": "b7c989c3-dd36-4700-940c-95f6ab89530f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6d2dcb6d-8f7f-41b6-9581-51d5dfde0d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4631f0-df80-424b-9f27-606002208f02",
        "cursor": {
          "ref": "1f096515-37d6-4091-8274-0fbc0778cb44",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2e7b0b02-a16b-4646-8426-1b68b75e0d48"
        },
        "item": {
          "id": "5a4631f0-df80-424b-9f27-606002208f02",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2de19284-8dde-4f38-af04-cf287a065ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa175c7d-7c25-453e-bf7f-31e0f00731fa",
        "cursor": {
          "ref": "51485a11-827c-458a-8429-da3ebef35674",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "31bd5ee7-1e1b-4919-9866-d1781c70e6b1"
        },
        "item": {
          "id": "fa175c7d-7c25-453e-bf7f-31e0f00731fa",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fd48cf8b-ff21-420c-8368-455affa92dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e5e357-5d14-41be-9777-c3ecdaf45136",
        "cursor": {
          "ref": "76fdc64a-95d1-4441-b089-bfd803432e48",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a3cce242-6340-4e4f-9c8a-d2cf6f025d4c"
        },
        "item": {
          "id": "96e5e357-5d14-41be-9777-c3ecdaf45136",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "83d78963-c581-46e3-950c-93baf0f49b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0179cf4d-50e8-4b07-bbd8-82a23cb409bc",
        "cursor": {
          "ref": "d47f5995-0a3a-420b-8499-d30226416d4a",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d11120a8-91f7-4055-a6c9-93bf01034b16"
        },
        "item": {
          "id": "0179cf4d-50e8-4b07-bbd8-82a23cb409bc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9e926bf6-3a28-482c-9b5d-01f7b408e366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2386c-71bd-45ed-bfb3-be1a3449f95c",
        "cursor": {
          "ref": "9615d3a7-c7db-471e-8ff7-2a47f800b567",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "5f0b820c-7a92-4f18-8f8e-e8c2b9111772"
        },
        "item": {
          "id": "99a2386c-71bd-45ed-bfb3-be1a3449f95c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "ca908c4a-156d-4133-9e65-bd453a6e3c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b3665c-0bb4-4671-ac51-1b77d6a897cb",
        "cursor": {
          "ref": "f64ff052-7059-4535-a967-0ecfcc818f1b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bf51b3ba-c5f7-450c-a745-efe863cb24ef"
        },
        "item": {
          "id": "43b3665c-0bb4-4671-ac51-1b77d6a897cb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d490d507-87f3-4786-aac9-8a882bd6655e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf4d38d5-a152-409d-8ed2-ecdb9b9b9cb6",
        "cursor": {
          "ref": "1db72aaa-b5cb-4b68-8337-bec10e8052ee",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6073895c-9a2b-4dc0-9f6d-32626c00134e"
        },
        "item": {
          "id": "bf4d38d5-a152-409d-8ed2-ecdb9b9b9cb6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "14489e73-7203-47ee-9d2e-8b3bc37a57fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de317eb-0c82-406d-8de2-e0447857b3a7",
        "cursor": {
          "ref": "ba37938f-0a81-4d79-8c39-f4b2856a8205",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "67ad55bc-2885-4cc5-9b4a-8de9e292909d"
        },
        "item": {
          "id": "4de317eb-0c82-406d-8de2-e0447857b3a7",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "90c364ef-6970-4dbe-902c-6165bc93e2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "588d3b8c-ffad-4a70-b190-065190938362",
        "cursor": {
          "ref": "471558c3-603d-4510-bbd4-9e170103bd94",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7d911614-5b59-4554-b5e5-006cddac78ea"
        },
        "item": {
          "id": "588d3b8c-ffad-4a70-b190-065190938362",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2cd2a816-7b12-4c4a-8ee9-d841ad39c2c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31808c55-0dcf-480b-8f80-60f46a77216b",
        "cursor": {
          "ref": "71fa833e-f0d4-4514-96c8-8032ac3abc72",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "704c4051-df58-4986-9568-b6ba0b8c6f46"
        },
        "item": {
          "id": "31808c55-0dcf-480b-8f80-60f46a77216b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "eb44df21-cb96-463c-ac3b-4c74ed5f7ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62bbf05-e4fe-49e8-85bb-afc6e7ae01f4",
        "cursor": {
          "ref": "cd7e0ba9-7627-4acc-8f0f-633f46e5cd20",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ff8dd203-2998-4686-9caf-9cc91f8c6a4a"
        },
        "item": {
          "id": "c62bbf05-e4fe-49e8-85bb-afc6e7ae01f4",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "12aa759b-252f-40d0-bb2b-2cb27e7863f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e2325-2a27-47fb-9837-35379a1a7132",
        "cursor": {
          "ref": "679e7c56-393b-4398-82dd-5de5d970b680",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9ed0c7ed-7b9b-44b8-9ef3-a209e9afbcc1"
        },
        "item": {
          "id": "e98e2325-2a27-47fb-9837-35379a1a7132",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f9c6b099-2672-43cb-8dc7-6b7cfe218edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a43a691-9f33-4ab9-a169-0e847ee540a1",
        "cursor": {
          "ref": "7cbc1f1e-eaa9-4803-ad98-88d560dc6163",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a61d0bf6-17ca-4790-9fb2-12e3d40be4c4"
        },
        "item": {
          "id": "8a43a691-9f33-4ab9-a169-0e847ee540a1",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "026db0e7-d11e-40a1-903f-fc71fb45a2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a471aa1b-5cab-46df-97ca-215f922cb3fe",
        "cursor": {
          "ref": "22fc6d16-963c-4734-b82e-f4cc589c6010",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "af982025-35db-4731-b79d-be496a971638"
        },
        "item": {
          "id": "a471aa1b-5cab-46df-97ca-215f922cb3fe",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c742a4a7-7565-45c1-8b34-dc4f35188afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327fc0da-526e-4a3e-ad58-db92212ab9d5",
        "cursor": {
          "ref": "c948885e-8a89-4a51-bbf5-8d5399a7cc92",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89fb1fec-0677-48ea-bfe9-fa0e90b80954"
        },
        "item": {
          "id": "327fc0da-526e-4a3e-ad58-db92212ab9d5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "83f88b31-aecd-4411-8e40-11455326123e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d884137-ac43-4ee3-8dbb-d9a78a920fc6",
        "cursor": {
          "ref": "d6a90e0b-60b2-4418-a3ca-4ca9d96c3e89",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5b1d3173-31b6-4ac8-a57c-7cbf677d5cf2"
        },
        "item": {
          "id": "4d884137-ac43-4ee3-8dbb-d9a78a920fc6",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "42d312de-1110-4f11-959f-9ffbf005911c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ca6891-43ad-4eec-b8e3-1cf05066ee39",
        "cursor": {
          "ref": "84ff1229-e4f9-4306-b420-82a91cfc5b5a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "566a861c-48ee-459c-a60d-0a4aed94383d"
        },
        "item": {
          "id": "f1ca6891-43ad-4eec-b8e3-1cf05066ee39",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f636a49b-1c23-4936-b4f2-2b46c3ad8551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6052db96-196f-44c2-8b9b-d317f7d22c42",
        "cursor": {
          "ref": "13b909f6-30a7-4a36-b0ac-7a977bda7bba",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9dfd5fa7-62c7-4534-a02d-c6e5e7d784b6"
        },
        "item": {
          "id": "6052db96-196f-44c2-8b9b-d317f7d22c42",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "28db79be-47b3-4547-b8db-e4d2cbf24f8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8193a737-9570-4f72-9ec0-c114f6797fe4",
        "cursor": {
          "ref": "8f86f5ad-a273-4036-9117-b14b0c108862",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "63e9691d-a11a-4f0f-8619-a1ad3fde3060"
        },
        "item": {
          "id": "8193a737-9570-4f72-9ec0-c114f6797fe4",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7cfedc5b-c063-4e99-a9f6-c874311fd0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae066e1d-076b-4bc7-b17d-cf44ee4ac511",
        "cursor": {
          "ref": "6fea11ac-b0ee-4c4f-8217-b9d059679d48",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6929f34-67a9-48cc-a656-af03e44c93c2"
        },
        "item": {
          "id": "ae066e1d-076b-4bc7-b17d-cf44ee4ac511",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "214238f8-9496-4d13-a2c9-8bfc9958ac60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b614d58e-7c03-4781-9557-c7016b1e7e69",
        "cursor": {
          "ref": "df2b88ea-0d0a-47cc-8d7b-35f2b77d271f",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "7b383746-02fa-4d4e-b670-30fb9eb3f370"
        },
        "item": {
          "id": "b614d58e-7c03-4781-9557-c7016b1e7e69",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c1982599-bbfe-4c5a-95b8-f4a756e700d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06161668-63ed-4292-90dd-73f1b6f7021b",
        "cursor": {
          "ref": "8204427b-7285-4ac8-b511-868a37d53fd9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cdc7e8eb-1da4-4363-a81a-7811bb0a38af"
        },
        "item": {
          "id": "06161668-63ed-4292-90dd-73f1b6f7021b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c8e9de83-1c34-45b5-9465-fd730d8aa640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35092d7-e72c-4abb-a8ae-719eaac64a2b",
        "cursor": {
          "ref": "4f993f59-4304-47d9-9290-895f83fd35a1",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f95533cd-aff3-4cb5-ab25-27f781572dfc"
        },
        "item": {
          "id": "f35092d7-e72c-4abb-a8ae-719eaac64a2b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dabc2a2e-f4a9-4a88-b68b-13297debf48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68a5b75-8024-4c3a-9054-7cb17c6043d9",
        "cursor": {
          "ref": "c48406f9-14c5-4d6f-9adb-a9d805f3d599",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f7483d06-2ea1-4cd9-9216-3b97b02e3386"
        },
        "item": {
          "id": "a68a5b75-8024-4c3a-9054-7cb17c6043d9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "7592af11-c04e-4a80-9045-c8721f1fbbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52be3c9a-4264-4b89-9119-cd79b8e118cf",
        "cursor": {
          "ref": "b74c1e7d-ad7c-4b0d-9984-3c368e809323",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "797186e6-5589-4cb8-bcc6-0cd5843b105a"
        },
        "item": {
          "id": "52be3c9a-4264-4b89-9119-cd79b8e118cf",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0343d631-86ce-4da4-996d-d196f4bedb64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1df0c2b9-0c51-46cc-9da4-032ef481f546",
        "cursor": {
          "ref": "eb82c1c5-8506-4a67-bfed-67251ffdc37a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ec475a37-94ed-4f59-bd7f-4084b1c812a5"
        },
        "item": {
          "id": "1df0c2b9-0c51-46cc-9da4-032ef481f546",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "291009e9-6abf-4610-b0d0-2676edcf6497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2454060-6a69-4092-aad9-b036e85d97ab",
        "cursor": {
          "ref": "28482b95-c197-41ba-8abb-512791b0d8a1",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "20f691be-e457-4fe5-8257-9ab917434ac9"
        },
        "item": {
          "id": "e2454060-6a69-4092-aad9-b036e85d97ab",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "496a7991-7b8f-4abe-a4e8-f7b2e9857a7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e46742-6d85-4777-b99c-0e096238d916",
        "cursor": {
          "ref": "52e2d090-fbfa-40a1-b486-c6bc152e955f",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e2cd2338-4fb7-4b51-a5f6-b27aa1e2e4d6"
        },
        "item": {
          "id": "a8e46742-6d85-4777-b99c-0e096238d916",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f1adcc2a-c611-442d-bdf1-2479a0962b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e15999b-d5ef-4eac-8c2b-cf0cd8baa408",
        "cursor": {
          "ref": "fa34b07a-02d9-480a-acd7-666cc474f930",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8aa055b9-c175-41ed-abec-5b7d45e204dd"
        },
        "item": {
          "id": "1e15999b-d5ef-4eac-8c2b-cf0cd8baa408",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "807d3ebf-1e79-47d3-9eba-516aff0f320b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fb8ae6-b492-4498-9266-18bd3c54b8f9",
        "cursor": {
          "ref": "b6d09801-5fbd-4ad9-a2f8-92dc4520116f",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b150d76-0709-4ad5-ba8f-076c74868ef4"
        },
        "item": {
          "id": "b1fb8ae6-b492-4498-9266-18bd3c54b8f9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0da0cd80-7fca-4ce7-846c-f951bb41c421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4c97fc-1b6a-43a4-a2a8-f4c6afcd3c62",
        "cursor": {
          "ref": "f77167e0-5861-42d0-8a78-f99cc086c673",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c8d9cea-a5e5-4619-a9f5-a3ee728ce815"
        },
        "item": {
          "id": "bd4c97fc-1b6a-43a4-a2a8-f4c6afcd3c62",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "45daae05-2143-4f51-89bf-03e3870a8d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81656106-67de-4c3a-8158-e73dba232ed0",
        "cursor": {
          "ref": "47fd880e-b144-42a7-aada-63ea9db97b75",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "7fa64f57-9ef2-42f0-a8ff-99386b923267"
        },
        "item": {
          "id": "81656106-67de-4c3a-8158-e73dba232ed0",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "915f81cd-c06d-49aa-b3ba-6d3ced41f45a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e4eff5-92ba-4fff-b9ed-edf09fb6aac9",
        "cursor": {
          "ref": "2eac09d1-4c20-4687-b370-72606cbfff7c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "3002be7b-74bc-4fe4-bdb0-a8a173af4241"
        },
        "item": {
          "id": "87e4eff5-92ba-4fff-b9ed-edf09fb6aac9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f4c66839-1de2-43bf-b84e-a699dd076a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2ef1f86-1b0f-40ce-b2ea-b67e743ae975",
        "cursor": {
          "ref": "300976dd-385c-4e38-84d4-cd77b1203300",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "9c3f7513-3593-49c2-9d35-39ac7a40d01b"
        },
        "item": {
          "id": "c2ef1f86-1b0f-40ce-b2ea-b67e743ae975",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "a1db4bec-0ca8-4196-8f6e-90c2471a906b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1942b6a6-faff-44ee-bf3f-812aa6a195d0",
        "cursor": {
          "ref": "e9466474-0e01-42cd-9b88-9a1d642d4ad4",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "538b47a8-d0f4-47a5-a68f-a4952affe943"
        },
        "item": {
          "id": "1942b6a6-faff-44ee-bf3f-812aa6a195d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a91ff8db-cdc7-413d-927c-cf8fef7657fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be16b8d-a756-4377-b983-b6ea1aa9b130",
        "cursor": {
          "ref": "31b81616-96c4-411d-a57e-7daa25581f01",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "17205b2d-6ade-4856-8fc6-d2de1e467588"
        },
        "item": {
          "id": "1be16b8d-a756-4377-b983-b6ea1aa9b130",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "409eec82-51f8-4757-860d-fabf477d8d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71487b42-4beb-44d7-948e-ebdf27c04097",
        "cursor": {
          "ref": "5645098a-3835-4d05-b3c0-2ab9001840dc",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "235905e8-ce44-422b-ba9a-cb8441d5fead"
        },
        "item": {
          "id": "71487b42-4beb-44d7-948e-ebdf27c04097",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "3e664976-0983-4865-9b09-47056f8fa015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2ae6a9-92e5-4d33-8415-426a5b9b94dc",
        "cursor": {
          "ref": "05646d29-ff45-4370-983f-9790efa12b5b",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "7dc7b3cc-c917-4fd3-828e-f387bd950a9b"
        },
        "item": {
          "id": "ac2ae6a9-92e5-4d33-8415-426a5b9b94dc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f47f37b5-2aff-4ebf-ac26-3b82f41fcc76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f97663a-592c-4d06-ab4d-e3e7d51d4d84",
        "cursor": {
          "ref": "81f3b357-d6e3-4b72-abb1-294fb236f4bc",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c0587b2d-b5e8-433f-9130-fedf53fb80e5"
        },
        "item": {
          "id": "4f97663a-592c-4d06-ab4d-e3e7d51d4d84",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "819cb636-5572-4a35-8ee2-7e4e63f3e749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4291908-cfca-4724-bb75-ebbc8a0e3438",
        "cursor": {
          "ref": "a90c8919-0061-43c5-ae5a-5c093d81e065",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fa07209e-336c-4608-a192-89526fac8910"
        },
        "item": {
          "id": "a4291908-cfca-4724-bb75-ebbc8a0e3438",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4125df38-4d9e-4377-b8b9-5d49c4fa6465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7e61e5-fc5f-4f6b-b837-ae647b9801db",
        "cursor": {
          "ref": "a166fee1-2aff-41fc-a062-eacdd548b936",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1fbe00fb-28a6-48f6-8e98-175281c0e11f"
        },
        "item": {
          "id": "6a7e61e5-fc5f-4f6b-b837-ae647b9801db",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "22daf12f-6cb6-4a6b-829f-ef51a247e783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f776c0-e6c8-4aad-a4fc-97af450eb1b7",
        "cursor": {
          "ref": "bebe1652-86c8-4f38-ad9b-09ca27b96d48",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "750b171d-f009-481e-b978-bb4909db1437"
        },
        "item": {
          "id": "91f776c0-e6c8-4aad-a4fc-97af450eb1b7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "84e2b397-fc05-4015-8042-d6b3fa0e4df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49562f94-6d42-4095-b0b9-9d8b9785276e",
        "cursor": {
          "ref": "6c5a4a5f-2241-4814-8ea2-471703bdd355",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f63e7920-9533-4a8f-a036-3bd0eb31aae5"
        },
        "item": {
          "id": "49562f94-6d42-4095-b0b9-9d8b9785276e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e3462f60-943e-44a8-bae6-72caf519d597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b95e0e5-cc58-4bed-89f2-be0c50579f4e",
        "cursor": {
          "ref": "b49e7659-016f-47c0-9d96-b1953b95d727",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "302c81fe-a155-4f47-90a7-0e2e64307ede"
        },
        "item": {
          "id": "9b95e0e5-cc58-4bed-89f2-be0c50579f4e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2752af2f-a7ad-4294-8abe-e2e8a8b42f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a9b769-984e-42e4-9100-12066d49056f",
        "cursor": {
          "ref": "bd61d2ed-dc3a-4541-bc18-6ff4ad34d4f9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "73ab64cb-47dc-4749-a3fb-48e5cd66fd1b"
        },
        "item": {
          "id": "59a9b769-984e-42e4-9100-12066d49056f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a1b369b5-761b-43db-9a82-085439e340dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21c0731-eea3-4e75-8e36-e2c086d7dfe1",
        "cursor": {
          "ref": "bfda39a4-9dc3-4b8c-b97f-6ac724d5b689",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "175fee9e-1641-4846-b1a8-c9b2c733a3e6"
        },
        "item": {
          "id": "f21c0731-eea3-4e75-8e36-e2c086d7dfe1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4b908287-4a73-4148-96da-1686b683c873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9541367-11b4-455e-a5a0-5aa4ab408b51",
        "cursor": {
          "ref": "d91ef6cd-4068-408a-a2b3-c2aa2517443e",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "03066266-0753-437e-9a96-64fcb3b49572"
        },
        "item": {
          "id": "d9541367-11b4-455e-a5a0-5aa4ab408b51",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4cad1327-f37a-445f-a4ab-e942511296b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc03cb5-6404-481e-92d4-b6b5dfb247e4",
        "cursor": {
          "ref": "7c6e02ac-b041-4fed-9257-0500398bd08d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "62d801ea-753f-4410-90fd-06d6ca237d90"
        },
        "item": {
          "id": "6fc03cb5-6404-481e-92d4-b6b5dfb247e4",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5f329e96-81fe-4b3a-8082-89346ac98b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93976cd-242e-4f24-b1c3-6d663e69cbb6",
        "cursor": {
          "ref": "11519866-b9d1-40a2-8e44-e5579f4867b4",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "4177f040-4249-4b2c-98e7-f1766b3dd26f"
        },
        "item": {
          "id": "b93976cd-242e-4f24-b1c3-6d663e69cbb6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4159d663-7da4-4f86-9b6e-d78e81c224c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dffc01c-de52-450c-94d4-14327a663f8d",
        "cursor": {
          "ref": "b88ad6b8-191d-4d70-89c7-39395dfdf1fe",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "863b94ae-7501-4978-bd2b-1114213c6e8b"
        },
        "item": {
          "id": "0dffc01c-de52-450c-94d4-14327a663f8d",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fdfd2576-bb7f-47e3-bfe4-c2c9ef7022dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fb9309-07b8-4eaa-a8bb-57da2e8dba24",
        "cursor": {
          "ref": "de8b7152-d092-4138-908a-a5a942090467",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9434fb4a-8f00-416c-9fda-991132198470"
        },
        "item": {
          "id": "50fb9309-07b8-4eaa-a8bb-57da2e8dba24",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "26707dc9-3e95-480e-88d8-41e96690d3b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7015e6e5-af8f-4057-a1a0-75323e97c64e",
        "cursor": {
          "ref": "e96e7367-84c3-46ff-b125-878996af3dba",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1c676984-e55c-42f3-9974-f955685dcb6b"
        },
        "item": {
          "id": "7015e6e5-af8f-4057-a1a0-75323e97c64e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "581fb137-5f39-4d9c-be53-584f36a99396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8c7402d-d66b-4720-b272-4668fda71631",
        "cursor": {
          "ref": "fb85b082-62d8-4841-8ae4-95eeb21ffad2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a7f94b70-a5f3-41b6-a183-56525c873419"
        },
        "item": {
          "id": "f8c7402d-d66b-4720-b272-4668fda71631",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "2873fdbc-cb51-4074-9d8d-ccecd4d11a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36dba06-0273-4454-896b-8c6531111b84",
        "cursor": {
          "ref": "89e10c95-165d-4907-a8f8-c67c08e57f6d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "7773be5a-9752-4e76-a264-a49be472b460"
        },
        "item": {
          "id": "e36dba06-0273-4454-896b-8c6531111b84",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "30f4afa8-d481-4cfc-a842-6f0f3019c984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db9c709-64c0-4679-94d8-45c77dca1b51",
        "cursor": {
          "ref": "0cf130ef-af42-4470-98f5-e9f3f7842c33",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "2b4fa76a-b298-482c-bbea-f7519e323862"
        },
        "item": {
          "id": "2db9c709-64c0-4679-94d8-45c77dca1b51",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb46f4b9-96cb-4f70-9c07-1ba5e2382bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a515cf-dcbe-400c-a5ca-961d54424ab6",
        "cursor": {
          "ref": "00e74714-da25-43c1-b1a0-802821c0382a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "aa6b19fa-2f93-4aa2-85ca-8a066dd809b8"
        },
        "item": {
          "id": "a8a515cf-dcbe-400c-a5ca-961d54424ab6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4008eff6-2d75-4bc9-9743-3eb57e3b976d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95b65eb-bee8-49ea-a656-9776fa9dd2f8",
        "cursor": {
          "ref": "61158c61-b09a-4c70-9d1f-231c552675c9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bb43b8ce-5b24-4d37-8665-b03ecc656a5f"
        },
        "item": {
          "id": "a95b65eb-bee8-49ea-a656-9776fa9dd2f8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3ce80685-3704-4fce-ab2c-31869ac45dbf",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 19,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d16d8202-a310-4715-921b-700daede27b6",
        "cursor": {
          "ref": "579759fb-98f4-423b-becd-ea9cc417bb17",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "69730445-5c74-4916-86c4-2f122218b1ac"
        },
        "item": {
          "id": "d16d8202-a310-4715-921b-700daede27b6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "06c3c3cd-9af5-4a1a-8bef-0a00a1a1ec3f",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "02eddbc3-7628-4839-9264-2d61dd5285ef",
        "cursor": {
          "ref": "962c4d29-aa63-4a24-aae6-51620b560621",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b9dd4380-e393-4763-ae53-3ca56a31558c"
        },
        "item": {
          "id": "02eddbc3-7628-4839-9264-2d61dd5285ef",
          "name": "credentials_verify"
        },
        "response": {
          "id": "058935e6-4721-47ac-bc94-0bb9b4114905",
          "status": "OK",
          "code": 200,
          "responseTime": 4797,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "56b1ef44-88e4-4ff3-a8b9-38dfb4e335e2",
        "cursor": {
          "ref": "e5d21188-3d85-41c9-850c-3e03e52f6ba3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "8684709c-6c5d-4dc6-b90f-ff3f8309a54b"
        },
        "item": {
          "id": "56b1ef44-88e4-4ff3-a8b9-38dfb4e335e2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "11261e32-330d-4f5e-8eff-aecf763d3d94",
          "status": "OK",
          "code": 200,
          "responseTime": 2717,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "079ae218-fb39-4a9b-8b77-9acd31c16fa8",
        "cursor": {
          "ref": "95176bab-a355-421e-8e88-ea48fc33e33b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bcc495e2-67ee-4c44-a334-29910d15ade4"
        },
        "item": {
          "id": "079ae218-fb39-4a9b-8b77-9acd31c16fa8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e0af886-0fae-4c4d-b386-869488e1ef50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079ae218-fb39-4a9b-8b77-9acd31c16fa8",
        "cursor": {
          "ref": "95176bab-a355-421e-8e88-ea48fc33e33b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bcc495e2-67ee-4c44-a334-29910d15ade4"
        },
        "item": {
          "id": "079ae218-fb39-4a9b-8b77-9acd31c16fa8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8e0af886-0fae-4c4d-b386-869488e1ef50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5282074c-e8b8-48e4-be7c-47e41b4c5182",
        "cursor": {
          "ref": "8c1b1757-58ea-4467-a15b-d7a99ce26d95",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "af38c95f-804f-4362-815a-267f05e89e97"
        },
        "item": {
          "id": "5282074c-e8b8-48e4-be7c-47e41b4c5182",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "90619caa-971b-46ef-8dfc-e5260f077f5f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b8cc6ff-f378-47a6-a640-2e2d79b5bd2b",
        "cursor": {
          "ref": "74a4a712-60d3-4088-b468-29adfc078d4e",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "3b2eb08c-afa4-43a1-9e4e-951214b310e4"
        },
        "item": {
          "id": "4b8cc6ff-f378-47a6-a640-2e2d79b5bd2b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6d5864bf-15d0-435c-a62c-f0b961bc7800",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}