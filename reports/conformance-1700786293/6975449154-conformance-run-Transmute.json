{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "6610ba85-4cef-4b80-b8df-036faf5878c6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "357e5129-9324-4f69-a575-e851ac9fccef",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4341a17e-3104-4491-9d9f-ffba6fae9382",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "22516acd-b9ab-4b6e-95b6-82750d26ebb5"
                }
              }
            ]
          },
          {
            "id": "567c9b0e-61f8-4a21-b9f4-9bb29160d2ef",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60fcb330-b559-4252-b983-c2799fd7d3ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8a09a211-8d23-4b95-a75a-1857e365cf0d"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1f83d901-2524-44ea-873d-e030029bce66",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fd39983e-8404-47a6-a7d8-aa33c70e2976",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd8e4d33-d158-445f-986c-0bda92751de2",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d46727-e5f0-48f6-92a0-08b1c69d558e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "54dc70a7-0ba1-4d78-b622-ba9f690ea5dd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9a919eba-b0f4-4af7-b3b2-f8bad6940673",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0228a409-8457-48c1-bc9d-3c09c2aee45c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "05d83a18-f5ae-476c-8e42-5e7b63d056d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18f24aed-bd67-4f4f-9626-fa2b0ca1ef4e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d969da8a-b3b9-4274-a9a4-074ed980bf87",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "9f3a8c1a-9a96-4cbe-924e-a40218a68e3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1acad664-b144-4fd8-88ee-d2304dd97984",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "908a5d10-fac7-49de-9902-aca6debf72e9"
            }
          }
        ]
      },
      {
        "id": "a809a2ae-c255-42f5-bc0e-ff48a0514d76",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa28a839-5bb1-4bc9-aa0d-cad2516ce16c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1aa151d9-3fb7-4452-8d44-bef5a253fcb0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a50c029d-ed8d-4743-8eaa-3f12a08b1228",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39b5854-270e-4486-a3d5-aadd58ac4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa5d222a-546a-4911-94be-afeb36af47d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e1b563-1cce-48d8-a1dd-73a34d230bab",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8be099-7b95-4674-b939-676f7607beba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df1266aa-62d6-4db4-8975-2ccc0ea86509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63640fa6-7353-407a-91d4-af3eb5f21835",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626a4a52-77f4-443d-a9dc-78872bc75cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c6d942b-d1b2-434e-b3dd-32a76d9a8282"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ebeaf9d4-5fe3-4dc5-a6df-7e36b228f1aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "da09f0e9-9add-4366-a748-6081457aae1a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8162151e-918c-4b5a-8cb2-671b2b566789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd383261-1645-4a4c-a27b-b3173b3fd720"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7686469a-20fb-46d1-af71-fdb7e51666bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387eb202-c05b-4efa-afc1-0d62c0cf73cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e929165a-7863-4b03-a5dd-76072fc7f4ae",
            "name": "Positive Testing",
            "item": [
              {
                "id": "afce287a-c188-48ad-bcb3-d317e4f21848",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1c6003f-0f85-42fa-970d-1b83ece5ddfb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b4f25c79-1be8-4115-be6e-ac1b6cae0d14"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff2ae487-2787-4a17-a5e3-38eded913c79",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "67b2e4de-544a-4819-9ab9-672d83795d1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5f2dc58a-c0e7-4712-995c-4629ff4a8712",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b332994b-dc86-4186-9dad-9c52c90f8e9e"
            }
          }
        ]
      },
      {
        "id": "0b23f459-83ff-4ab0-858a-fdc0623781fe",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c440610a-1380-454d-9b2e-ae8de7c433e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7bca413-7c56-47c8-9b4b-213d337fc6b5",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "62fa0852-2aac-4ce2-b04e-50b6a64e08e8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f13c9b0f-de7b-479c-8f58-9825a47de61e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0869921-afe9-44d7-87ed-74b45758c612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2b6def-fcfa-4a42-814b-3ee6eda2dafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "057cf333-de3d-47a8-8a6f-7981d7c06c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4026b8-5b00-4dfe-97a2-5b9b960f0757",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d829e-99a0-401f-9ba0-6206304ffb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cae5b442-0121-480b-b16d-ef47575b798c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968641c6-fbf0-40d4-b8a1-854e7906d2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72003fbf-6c31-498b-8aab-bbb122bb8f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eb69fc8-4f64-4c5a-a2d9-a67832b39950",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0971825-db27-42f9-a9b6-5f2d3bc551f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88563a37-ee83-42bd-bc7f-6646b73a32a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c263d3-a563-416c-b59b-1f613ecae5d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bddba1e3-4aff-4765-b0d9-8c6a29a992b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47fff26-b61e-4e17-b7e5-d2e2e3dca4ce",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4470e35-18e3-4c7e-a623-da12b4a35079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d9a91b2-cac0-4b38-8ebb-0aa0790cdc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b84e71-4f8f-4a5b-be16-84f4c34644fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c462f00-9289-4b2d-842c-af11705eb5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfaa0c0-782d-490c-8ae7-5c05f9b2b38b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c2df0a-f120-4a4a-b60f-a566b8eb19b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee332ab9-4158-4100-963b-343ac2ca778c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8dc389-b82f-4aa9-90a1-b0b60d7009e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59843a44-aab1-4007-b741-82090001aac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0167f00e-7295-43a4-a525-4897b8123746",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539b6685-ef0b-4b66-bf01-971689cb4c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a517c6-3810-4347-a0fd-bd2f6ec29167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e723a2-4f85-4fca-b30d-2e932569d0fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3aa88c5e-ec79-4c3b-b287-5508e798607a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816fa995-959b-468c-b5d9-5bbab15ec259",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad7641a-335f-4a2f-ae37-36ba00b8b436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0382c59-818a-4a17-a86d-1e864654afa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9599ac5-b81a-4ee5-887f-e35a5c5f0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c687a4bf-ccb6-43b9-adf2-fda11fa8467a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cff4c6-4ad0-49a9-9078-f316ed64ad4b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f46432-650c-4a1a-9595-db140c0d7bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3802e8d-6679-4f10-a58a-a7ee3a1fbcdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e89a8ce6-e5d3-4a69-ba4e-4fab5c9a2c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29482b6c-635c-42a9-96bd-f2019a7b02ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2692d8e-8e57-47c5-aa9f-46beb610cba2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee9161-5855-4b95-a707-2ea16432fcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b20a2c2-c50b-4d27-b491-3f20c5262e48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac814bf-0bf0-4baf-b3b6-2ea9af221149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b094916-05a8-4bd5-b457-267ad7a8fbf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd3acace-2ab2-4fbf-8c9a-0316a71d1a3b",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e369bc-8560-45cd-8884-29f5f1b1afe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab66e0b-ea4f-4445-9c00-933923fa8d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5201417-2f20-485a-ad85-d488eca7ed08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85b8954f-2a8a-4a3d-9aa6-d3cedc9ec8fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9f53652-cfb4-434d-acaa-51abb375f327",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e05fd01d-9015-4e3b-a871-544150ccffc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc5c4d8-b310-4ad5-a58d-68aefd05309b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87ae29c-8a2e-46ff-854f-3f2cb7e978cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d4643bf-5ab1-4524-8bd1-a8243e35875c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8322cb9-351d-4ef3-be8f-118a931dfe01",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c4575e-90b1-4e66-b4d0-bf1d475fc18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10899dc3-9311-493f-a19e-f3b8bb79b18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d9c098-2a34-4b16-bdbc-2c9e79fe14e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83b78eb5-6f2f-4479-a641-37c84f53457a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45d5ced-e0c0-4211-81f7-5aca12fa548d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496acf28-72d9-4644-8384-bc12f9ba88a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "201484fd-7227-434a-904a-e25464472231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f56742-2a6e-4ec4-bfca-80708bd1050b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ebb9fab-234b-42e8-b3df-1415325c76b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ab6ea7-176a-43db-bcd6-046dc09c03a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d147c2b3-6361-4eb3-9492-2b710be8a764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac956080-4c08-4eff-b8aa-3c00c2c75ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4081e1-5e3a-4552-8f03-956cd8d57763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cc27b81-8253-47e8-a8d3-06728551e253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d55f4c76-2a45-4f43-ade0-6bbf84c399d3",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337a2cf3-839e-4f74-badb-b08a0447c69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b540c3e9-a245-4192-bd3d-a2f6d1bda1a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c17904f-b3d4-4a70-8e0e-5aca56c5ebaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0feade98-9464-4136-8f5e-f3946954229d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca35c1c1-1354-42c8-866f-15b33d7e940e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b542bb8-a28b-4b57-b535-ecc0190c1a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a7e4249-98a8-44c4-8346-ef176135722b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6575b91-5f01-44e3-9a1b-d4e52d827306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "557aeffb-81e1-432e-9ad6-6a169fb19db0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bf456a-6b4a-4da4-a26d-dfc1cb067435",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc5ce01a-120f-4a5e-b6a1-2a1c2c601600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c7a0f4-678b-467a-9ddf-32e515e0b27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707e7ec2-c7ca-4f96-bd8a-831627d763e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf1247d6-f3c2-4b18-9616-4dfdf7627197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5768b7-cda6-4bad-a20d-80e90e97613b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11235ce4-4862-4bf0-94aa-a2856e6d0cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c3b62c-e82d-4ca0-9c79-294998f1db8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99719fee-fb48-4ac1-9381-8a9e086ec874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7fed8c6a-86a8-491e-96cd-b8e33c2d8abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5377cdf8-d551-49db-ae51-7dd9869b8089",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b71180d-4e4c-4265-96fe-c1ffc0fa6f5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "521a6580-0e51-473c-9101-870da05121bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f8d2260-a6bd-48c7-a0b5-77cc78af0b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9b271b3-f64a-496b-ad13-07cd1702022a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39868308-20e7-4743-bac1-d7292c67f086",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "542786c4-9dca-42df-84ce-de255f6e0752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b494702-f398-4020-8971-0cf3873ba9b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c526ebe-d2d9-40f1-b342-aac70313e325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9474430b-3467-4bfd-9346-2ce8f8197715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893db550-2a11-4b05-b8f4-610c1934701f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e7ecf7-71ec-4247-add1-663fcf5c52f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "277bc9be-0f5f-4475-97ee-e4d26be15a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d158a70a-9dfc-4528-b9eb-596b1ae88d44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bceb363-5377-4574-8c6d-b0bf8a8f74da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4650ccfa-4618-4f07-baee-0104701231f2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cfdbb0-24a2-4357-aa89-b9786a599813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb48c779-c68f-46e6-8fdc-df3d17c8487d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1806aa31-f67c-4eec-9a02-bf539d41838e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef75870-d9af-472d-a672-1c4046f59f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1222f8-ac4d-47b8-baba-1f032cc7ebd0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7744ed51-a2b4-4457-a195-4a918a222113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6815c83c-7fbe-4bb5-a66e-996599283263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "662a757d-df1e-49e0-bbb1-718b6c3c2fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b93aa2b-f2a9-4e35-9e98-13a5d760edac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ac0ce0-9fd1-40cd-931d-56572c16f864",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3010ece9-1de8-41b9-bc44-0c3bec0e1af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46589f12-ef73-43b1-a126-93ef81b146cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6a2d1-6453-468d-9bc2-b566c2c6fc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "019287ed-7675-4813-81ab-b9514bab2791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6f15b8-235a-4482-90bd-98011b072387",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9c1f471-7109-4972-bc0a-8eef23852042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a09e0d-f901-4c64-8afc-3c60e7d1b743"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edd878ec-deba-4ed5-9132-4dd89c20bd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d5d088-7c10-4643-b515-ae4d38a9f0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ace5ed7-8e95-4929-81f0-87ae71b6e127",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9210067d-6b63-4a06-9c6b-bd47fd9afc29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95d1e969-b654-43ae-b0e1-ef04f850dac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47657075-0379-4ff9-a60d-e0dcddbe504f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5cffb59-da93-4957-987b-63ee487d6132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba973674-7347-4e46-be68-ecd11e44480f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5ebf3ea-924d-4679-a748-0963b719deb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cef679e-4d17-45c4-aab3-ffef2acfa2f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a59037d-f168-42cf-89e3-b1e64d81c538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a62ecb-62c6-445f-b432-c2f8ea85a29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ac8cb7-0808-4260-8772-9c88ff319ac5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c2361a-4c36-4a93-8f47-8bbd4f0dd1c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695ca914-3517-441d-a80e-c64033b4a3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43765016-b0f4-4168-a3af-0f3ba8cfd9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "841fc99f-b25e-418e-8295-d134f90b5175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "631c5701-f1c8-449e-859c-b4cef5853c42",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c19186b-d08a-4da3-b844-206d1ec7d901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc7a6c4-3df6-4f74-89c4-2dafaf9a8521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dc7f50-a787-4689-98fc-2b68703e700e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "082282b3-69e8-413f-971d-e02997445abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64736767-cf7c-48e1-a024-2bb159f8aff6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7ece47-4c76-467a-b689-0fb90e4f51b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e278f16-9935-4e33-a165-331bc7f3a8bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa06514-aa53-4343-aa65-179dcfe9e623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "dce676d7-6e12-4728-8e28-89843cb3f328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db71059-5457-4a7e-aa2b-068d1c36532c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44148f8f-4e68-4b9b-b9c8-c6ef8487853f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d390696-815d-4123-bb07-57d08a8b5f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b0adbb-ff4d-42b5-8059-b9ae922a6d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5bc9672a-16ee-43a5-8999-4dd880d0b1fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94c2b8-4e9a-4bf3-8fd7-cc0483a7d0ce",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39b7857-8e4f-4589-af9e-7977470029a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e610f-30db-4c7c-9d83-70d3ef6ca8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "962ff87f-c577-4acf-9ecb-dff8b2579f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e028066-4d4c-4722-a4ec-e6248ba72db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6cc2c6f-e20e-4486-aabe-9a83c293238b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e9c383-adb3-4990-ab37-85664643e881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb42c38-6b09-4de8-8d13-7a130940d180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed7604c-719d-4d5e-bd1f-705ba18ec0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e28b1e-92ed-4f21-99c6-f9db71b52b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10ea9268-fd28-4827-8a27-0f4a6f369fc9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b5e448-6837-4d2e-9ae1-cf8677f97d73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a71578-8521-40e9-b381-40c5e32d74b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495c9397-78bd-43ca-892c-d97e87b20a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5cee23-0554-47e8-b2b9-b7fc0e67f205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddc917f-d5e3-4a03-ab0f-56f4c15e3355",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc5dfc2-182e-4cbd-92a4-b995978dd160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba16b30-4526-4c55-bce6-06f63a16fd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16575e1-d42a-4616-af87-f0c8304a71ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cfde122c-fb7a-479a-99f3-34b04f5068d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e67997-8ce3-4891-b639-071f3b674f1a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8978d806-5766-46ac-8247-f66f7e10def0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c0bda427-5332-49e3-9915-e12181c11406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96c83eb-d206-4b22-b6a9-c8d6fc512d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe37226-008c-49e3-a946-a9c90eb5a565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc2e1b4-3db2-4f96-95c9-b6a6c3bf9069",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00eae066-c8c4-4d50-9725-a86a1a1f785e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5050c320-8fb6-4f45-bbb2-bdf89ee08539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8cb10fa-8c9f-4d82-a7ca-01a925c97170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3e7864-ae16-4507-a402-1701e2ac574e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fa426e-0087-48bb-833b-754aba24cc30",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4dbca7-f09b-4d14-ae4f-e5b7d7584912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ad18d1-ba2f-4cfe-ac7d-dc690b221560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d853636-5c6b-4cc8-8f6c-7c121c645cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f687cb9-2cd3-43a2-bb8c-b2c99a2fe95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585f2327-fc02-4ac2-9604-788d672daae2",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547a18e-7be5-4f97-abec-830df507e064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076e9f6f-d2b5-41e6-bc4c-2ecbef6526bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "142d4b2e-e72b-46e7-af0f-ad2083746523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb2e4175-6620-4c37-a84d-190fea4d06ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20bc7ec-87b6-45bd-a0e4-10d3cee0e818",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2929ffb9-811a-4ac6-b322-466b42ed4575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afc3582-3b14-493c-bf48-f21868841df6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69879187-e8bb-4818-8190-3ecdaad0b52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ed5d13f-2021-4483-8fc2-32f6675afcd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8920e003-1228-40fb-9b8e-d3653e5dc24d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913fa239-028c-47fa-b7e2-e55c728d8a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dbd9131-1e6d-4944-9342-8750103bfc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9954eb84-757a-44e8-a099-8201abd995f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d416f27-e053-4d37-8164-c4ca6ebf9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59338acb-3733-4e01-81cd-ae3732ef9e5e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c20ff9c2-fd26-43c0-8b64-c62a9eccd69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1211b1a0-77de-4f78-a272-0ff7e657b51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a18f89-6eb4-4d2f-8ae1-dd0a75790c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae8c9c8-63b3-4dc5-81ef-e215c412c559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe77d8e-d65d-4d05-b5e9-8a0b7a5f9a5b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a49359-f654-4724-9270-6e52bb257ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e9a778d-32d4-4941-9dae-11655cd49d3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229f8911-87df-4b8c-8819-722e826693c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "341b2881-3acb-4c4b-823f-b3c9211944cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b5f7c7d-1b30-45fe-a268-d1f4eadf77ec",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23dbc902-387f-4e78-b13e-2cce26f7c046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9133d398-762b-4133-a7f4-06be57280128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c771d146-4a23-475f-bcb0-2de8c0c84b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "13c818b4-8e6e-4fe3-b166-672d2ced3950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17afadbc-6b66-4d55-bf4e-305c6a49b719",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddec24f9-710f-45bf-98a0-e5263f5b49b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110ba004-4cc7-4819-bbb4-096ffc321f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d744fbc6-df50-4be1-b504-0223c5b2a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5756633-367f-44e6-a988-c3892d29a60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053cc769-2ac8-449c-aab9-9216a42a724a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f366b4-6129-4bf3-aa07-42ed726e5c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06b5121-0084-438d-b9e7-39aba4bb12b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b83c58-768e-481c-9ac5-82d80c1bf806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9831ac3-ab5b-4051-a7de-f12f34288597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e969e5-a140-4277-97ac-90dd82f5c689",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7613577-d347-4551-8f7b-7b5277cf1f6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cbc45bd-b6d7-4d4f-8f4b-e57c3051000d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf6a3d5-bfe0-4e4e-a255-7f276840ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2dccdd7-1d44-46b7-b352-23344173b9a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752c6a5e-5f07-4135-a3e9-389452cd6213",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d20c4f5c-ef4f-4856-9f6b-4dc0703e22f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0edd06eb-67fe-4ebf-9f78-d54ad8eb6313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d983ccae-22f9-4323-aa6f-dbb2c51d8c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "09eec69c-f162-4d01-8514-23925addb391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c80bd02-4f12-45d8-969f-a41cb6eff9a8",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86b3898-e06d-482d-8544-0dc6a5a819fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ce15b0-53ae-459a-b545-80d2985f07c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50caf983-8699-4904-80d9-16af7fa9251d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38c2823a-dd15-44fc-bd2a-b512dc744db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d42d5277-17f0-4f73-ab1d-8e31348b2099",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5615fb-4934-4718-9fa6-a4cea5bf3d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86395610-d44d-4545-9437-c50605a95795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d397780-5279-42dd-be95-34e440b18c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fecba973-04e2-4624-a0c4-9ce6d93c2cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a2c489-acd7-4ee5-991b-54b9d47a97a6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0397ccd1-be3c-4836-bab3-864344237a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7b8a07-fa95-479e-8b06-80b66f36ca9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263075af-302e-4525-9721-3cd97002f0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ffc7ad-267f-4e9c-a421-f6e124aed324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "579a022a-341c-4cc4-8d6f-cf2df8039598",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3484c710-a816-4b60-a054-dbb9d11d1fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "982fee5b-9674-4316-9cb8-034634cf06a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97b389e7-2dd1-4ad3-bc71-5b67102a1418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd7b7cb2-b3bd-450a-aa5d-4f7004826fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e4ca89c-f191-4c61-bc7f-efd48e2738f2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c603bc29-fea2-4a2c-8599-fa37ef15f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e45e47-c79e-41e3-8951-f71f84ac6467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c5d6205-dee2-4c30-af9d-667beba59d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2565303-a354-48f5-af87-f2f836b1582f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6dbc86c-6bc7-44fc-86b3-de7508292bab",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90ff0f1-2fdc-47fa-b66e-0dd432927f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffbc8d59-9e92-449d-8597-407522a5bb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b34b9db-fa3c-4a18-9f1d-734d0dd22b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a174c27b-2ae6-4fe9-817f-546733cdce60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4388821a-807f-4c38-a492-e6ae08c24bb8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd2e00c-6b25-4fb8-8bc5-8e197cc23423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c6a9d8-c44d-4dcb-bf9b-9e5d532491cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe923467-97a6-438c-839c-d5832a4d8a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5f16752-6f83-430c-b535-c50075498f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd31484-1684-42a0-98a8-cdfd4d4c0d54",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454dfc8c-c0e7-4b64-afa9-33cec0bfe1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "474ba07c-9775-413f-ba61-1db6a8742d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47e9ce8-ab88-4126-bed5-b1bfb2504428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1293ec6f-d0d1-44a2-9d1c-d30b986226db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e63cdc-c52b-43bb-ab3a-9edd4f3a9ebe",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "442b4b65-414e-41a1-a42c-336950c3df0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ddb0711-1882-409b-af40-403b5b83ef4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3956dc1f-2e94-4889-96db-bf2632451278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "14cd3835-9d27-45da-8591-e7cdadde9649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7a0720-3fda-4ac2-b67d-b5383de6c43c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42a9ce6-4c6c-4d85-beef-936ad9f51289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4344d0e1-5b88-47d6-94ce-8a4087bde284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e21845f-40a7-4f0d-bd67-3360bba7efeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02107db9-856e-4dd6-b2be-77027e7423af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb0b2e1-e900-46e6-8fae-9845ddbb8d5d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcb4227-55ac-47f3-ac19-9290d856f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85c081d7-21b6-4531-bf2e-6aee1722549e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a644ae7-fb4e-4e45-bbd7-0f0580b59fda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7803bdc9-846b-499a-9535-e633ab8cb50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba1dd24-033b-4965-b0fe-49916588adb8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a359388e-84d9-4b85-9f80-135348bb35e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef464af-ff09-4590-a67a-8d3924ff769c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a87103f4-b64c-4a15-bc12-7bd8c4184af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1212fed8-b035-4325-bfc1-0d25b9b67441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be79647a-1af3-4cbb-be94-9d6aab611021",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8ceea6-9ed2-40bd-8909-2eac5c710e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca9b76d-6206-4b43-9a66-83d141037e40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4afe3e4e-8111-4d57-bfaf-9452b7341cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2711f9-fa7a-4d7b-b6f9-cb8a1dbd357d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc11748-056a-47c8-98cd-290055c7a6e1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee048d01-40d6-408c-b9b5-8ce6d62157db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80821a4-5a25-4d83-aeb4-c4a3152d96d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0abf1757-2134-4422-beb8-747280ded4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "64dcc31b-d669-41b7-bcb8-cd3277ef5dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d422b9-0ff3-4f48-8061-40fb191a734b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494c80be-0198-4dd7-be70-a7b5a3cce5b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eacac61c-a551-47bf-9731-8955dade45b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41805b46-7c00-4d24-87d1-4ac24c8e3d0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9cae1f7-29ca-4b94-98b5-5b8ad2998a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d04845d-c9b8-4208-af40-4db282a1ea54",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797f6695-dc6d-4ffc-8325-c2bf53c2105f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6852f055-85c5-45b9-9595-97298a871c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a06df0-ac5e-4d52-9f8b-4d29ad503bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4d5b56a-fbf4-4b24-966a-261b645bf81e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e2735b-96b3-4158-b7b4-b66f9a91c731",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a49c4d-067f-42e7-9951-910b14511eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee8e572-cb0e-4c14-ad25-2fcfa7099652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e958f5e-a120-40a0-8260-935b63016291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f24af9b-6adb-4690-9ba1-6274b274554c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbafa7c3-6f62-4cc9-b640-a317b9cbe7ed",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "139b6357-6e24-4874-9793-2d19544cbfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcea9f35-24ef-49ab-8eb0-02f1349dea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2f0227-be52-4810-98ef-7806a67749b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0db1d0a3-855c-4c20-8b08-aceaded0ed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487eb534-3efc-419b-894d-076a797644ef",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e1673a-6e63-4e53-b817-5fb172251b4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d61a13e7-c0d0-43c3-8a31-f2f41a3d31ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61889b42-04bc-47d1-bf01-ef664a073339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "13da9bf4-ca82-4363-9d19-bc601eb1d45b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b5fd88-e581-44b6-b53b-32b0e06f56e2",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286d6f50-92a7-474f-82c7-1c4dc0a5fa6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941c2572-4050-41a8-b67b-71c15972147a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa58d35-bcbc-48ec-a509-20c741305794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5513c0-9ecd-4b7e-87be-5b47257dae36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abb607bc-f124-47e7-9661-35248b629f65",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0325123-7102-4112-b1bd-9668e51b8921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f5bcc3-f6b1-4e11-90ac-0abf3eb4a694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0a617e-7350-4012-bcae-345146dc05dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5551fb34-4859-42a9-a87b-3e68b5dbadd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3662b85-4707-4880-b9cb-02715a39371f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1201c638-ad93-465e-94af-3256c9fb47d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "304796b1-0b62-46b2-9c87-e00c4a6a5e00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6745f48-9056-480e-874f-85314d4bff08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe69662-28c5-443b-a61e-508677e74211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886497dc-b111-4c33-a8e0-b82daf175f71",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347ff612-1fb0-4fe4-8294-ee562d4752a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef84ce11-a12d-41f9-b907-adeba56ed725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c96383-a721-41bb-9f55-1994cb3af690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7daf9d8e-d9ed-454a-abab-b982191c8457"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30618383-594e-4001-b495-ff51e2b4fcbe",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d60d05-7699-4055-8459-c90b8dae588c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d646025-5e4e-4263-abdf-4151494217e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9339575b-af0b-4209-b010-3881c243e1b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad648c4e-a36a-4fc0-9286-e413a64b7bb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e6e089-cb3a-4ef6-a4a2-0ac49f70f660",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877a5a3c-26e2-4cdc-b1b4-8d5883cf6274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195973c7-9221-4fc2-a852-8a95647e3d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be183d2-0c36-440a-8c06-bbd620324655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b1e0b1e-f3da-4f81-8521-166abe17a69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d125010d-5fa4-4675-8d49-55312d6bd86a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c79e76-6a1c-4c3d-98d4-a4437cf0414e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e2be9c-0539-40df-ac4f-40c9262afe3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b077e26c-5ec9-43ba-8135-71ac28b6f940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "483a343b-ff09-4e74-9969-037db02a9ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64424488-d5d4-4a37-969a-4ebfb9d86b5a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ae5f42c-83af-4f65-9333-bebe365c1261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ab75b4-8b0c-4c49-8730-7a724d79cb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae67ac7a-62f0-4733-b73f-f3b2aa4ce860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f73604b-564d-45b5-84b0-dab55d006158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717a90ed-85c5-443e-9cfc-1d8cf1632f19",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "256d5235-c87b-4b90-8337-77101366a9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1444db2-da81-488f-b90a-6965e8702978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae41e51-be5d-4501-80f4-170610ca71bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dd2a237-da0f-4763-813f-01722f15a039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147fb0a7-4afa-41e9-8453-3e4ded23ed85",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644ab0ae-fd8f-4bc3-9895-f3c0c3642fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2683a3-a3ea-408d-8126-8b990ae6e63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d136751e-ff05-445e-9b43-b0d7bc494fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43db1a44-1690-4b4b-89ff-025cdc93d4b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52c65f11-0cb2-408f-923e-a5135827d55a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1264e928-4a55-4f65-b534-09d6d1b4c98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8784407e-a720-417d-bc52-7292c3b55fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f2ce0a-33c2-4ed3-8fe7-97c2050b9514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "08f23990-ab38-401c-b987-58cf7c322d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d2abd4-8e0c-4c47-ba31-230555f9f406",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c1f45c-989e-41f3-87ce-0db702447131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ef889d-662e-4ac7-aa3f-c2db28a50276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27d6c0a2-3f14-42bc-a877-85ccc2d7bb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df02849e-a8e9-4c9a-b573-dd933df94e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0071c298-f8c1-482c-a45c-8f9ebcc6a47f",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77405b1-6f41-49b2-8e48-03b192ebba74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f326a1e8-894b-4b82-979f-086f69b7efed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81041290-e9c0-4113-a20e-669d91a32340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d7a0fc0-feec-409a-8836-ba020a98f01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcf7346-6177-41bd-93cb-0ff5bf8c73d2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df03e763-7bcb-429f-a1b5-9eca487ab6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f65f28-b9ae-4f39-8f1f-ce592383f027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107b6891-14ef-4851-a8f0-5e82839bebc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f096c364-2b46-423d-ac03-581c67119edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4927700e-419f-4dba-9c79-a8e1877fab70",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "030d5250-b0ae-4b86-90ed-dae5e85edfd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7463c391-d01e-4e29-b9ac-ca9157101ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b49a071-d75b-4fd2-a704-529e1f1b307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a518e300-886f-4035-ae03-a46b0a9bfc7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494df900-0b3c-4a7c-a7fd-df29f3435c6f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677ac3ef-f6da-4c54-a3ac-af96e8edb1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afd0824-a96a-4e28-aa99-cf86ebed9e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec88bbd-428b-4335-92ea-4a2a3298ce22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22abf8e0-6bfe-47bc-869c-167382d4efad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21909465-a3d0-4a46-9a16-556e51a82136",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a808e11d-86cd-433c-8061-0c037be818d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fdad89c-eb4d-402e-9399-1921ddb41182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c99ba4d-697c-4866-9e5f-fedca0731e70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "95dfb097-8e5d-4a57-9522-55568b9fa378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9262a472-4ff2-4914-a926-e1c9f179101f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cebf886-62df-44bf-9bac-61892d68fb21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64d65f7-9d99-4dcc-8943-bb6199f461b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ed8bdc-905b-48ad-8eea-5ab6859d4b89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03ee11a1-0ac0-4099-bcc0-98fd5f9413f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76aa588-648d-4860-be55-0688e273b883",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dbd0cb-7f24-47b4-acaf-b26394ce80a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1163ce02-ba53-4785-88a8-e6989a59cf78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74c4809-573a-4b98-83d6-dc9107a68ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf658cc4-e8d2-47c7-871b-bb25ba2a9211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57c21dc-057d-44ab-b47c-9eac10bd279c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c65e1f2-40de-43ac-8598-8e14e8650abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c80c32-fd0b-4ae6-8584-e45b8ca561e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2c238f-aed7-4052-860b-959b39d30989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc5221e9-6d4e-4385-ae12-2c3c35377709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b52f1ad-09e4-4437-b302-87df654ba006",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87f94595-2d12-471f-b0dd-9f458dfd9cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96c6a0ea-d0ba-41a9-a0e5-2f1dc61372ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775676db-3a28-45b3-a575-c518af7d606b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "04194b1c-c923-47ea-ba25-b0588a67a85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62a6f00-f4a0-4027-9264-9519c06c28ca",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b535e2be-d7e0-4f67-bd57-ec7418acd216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb4c0233-292a-4561-96f8-f4d5220959d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5100eab5-4802-407f-876b-b853eb7a6122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0db987a2-5bf3-46a1-bead-47f369c87612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fccdf850-1aff-44bc-960f-3a6b5bfb4ec3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08096eb1-9467-4a4d-b181-3428779aa61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7f4603-ba86-412c-97c4-3fba3377e5ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53de0e6f-ebeb-4aef-9296-ee1cb15a5f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "353a81aa-1d1b-46a1-ae4d-85a487c07907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ad5889-19a6-47ec-8218-df2c0038201d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7282d6ff-18b3-4767-b47a-3c12f2cdf078",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da63514d-1142-45e9-b916-1130290dd5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c02509-a9ae-43b8-819c-8efe8562ca41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "814c6f6d-751f-4181-9f5a-4cd2a9d9564c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7d129c-e896-42b0-90c7-9f77af596623",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005bee36-906a-498b-9e27-36b68c31dcd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "526a1cf6-95d6-4f82-8e02-40c97e60b33c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de71e766-2c23-405c-a487-2641a07885bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d9bb7a8-2a7f-4556-9779-55fba0078dd1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "61a48635-de35-4924-9609-b1e86de89e59",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0f764944-f36b-4b4a-b0d6-623592d1d0a5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b7bc43-57a4-4bc9-8bc8-919ed5a3bc97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e49072f-ba2a-4933-9253-aa709533d519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4d77c7-621f-4356-b70e-ffca59901d83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac3d916f-47f5-4f53-8692-044eaf312b38"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c332664-2acf-4f86-9320-3cabf1364c54",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "939c8dbc-b8d7-401d-b013-e117f4613f37"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bab41bc-663c-42a7-afbf-621cfe5a9c09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ec24a3d-9c7f-4a99-a97f-03d1965db306"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73e9c536-d8aa-4111-9577-162f57d6acec",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c4c859e5-1aeb-4f1d-992c-cda0fe1239a1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "24852173-fbbf-445f-af56-a8fa32e672f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "586c692e-c880-40e0-a706-03fe3e9f3f7d"
                }
              }
            ]
          },
          {
            "id": "9b6e3530-b651-46c2-9b61-c23d7b25e45e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "438741f8-ac01-4963-8f7c-49a3b68afd5c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "c2d0aaf8-4896-4ebb-bac5-ae9857947ec5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b377371-514e-4235-a2c8-767c19472e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1eeaad43-c924-4f31-83c8-88aaf02b2a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d564a6d-e082-4bb6-aef5-fbf34594cbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12de47ec-3b7f-473f-b9c1-80eb7338f401"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "45dad8c0-d60a-4491-86f2-be7cc0ce8d5d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb48e464-3879-4ad9-bd41-8fe441d57fe0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06af8938-30cc-4e7a-acbc-b8849ffcc899"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f575f7c-2f35-421c-8128-74ad7805d35d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dd3d74b-5f0b-408f-a2a2-26ec3309f548"
                    }
                  }
                ]
              },
              {
                "id": "da0735e8-18da-40d5-8997-17c0f8dcbd48",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bb468c0-d47c-4b64-a663-63cfb84f9d5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "132101d5-7cfc-4346-a80a-8ceb4617b623"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1347dcac-3d04-4fc0-9d63-1ddd10b89466",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d82f0a6d-36ae-4fc3-84fb-c3a8d4a77a6d"
                    }
                  }
                ]
              },
              {
                "id": "8f9d1685-4c32-4a2d-923e-0e97d3153370",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c33fe363-febe-4982-bd8c-719d850cf232",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78210953-2603-4b67-9bdd-7dae8f32f389"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52e0cb16-5347-423a-b2df-b03adfe2a4d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04316d0c-433d-4a00-999a-7c5d31de5a14"
                    }
                  }
                ]
              },
              {
                "id": "b2feb651-9c43-4573-ad4f-26fa90b44fcb",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b83dc6e-b006-4e05-ac9c-b4bb4db38902",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f0b26685-3db1-4a6e-b4d3-20fc7aba1fad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6a794da-1eb6-41c6-83a6-669afd5f1371",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ce93b5e9-f93a-4f15-a487-66e829fca088"
                    }
                  }
                ]
              },
              {
                "id": "b84e1e06-43c1-4814-8bd4-a3f1d9995fcf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b66f23ce-e162-4980-a791-3aa71b2145e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "befff63a-e140-493c-808b-13c8c61bb72f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "693a4174-3e11-4d43-9bdb-91d7862bc28b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "5e81eb34-3328-4676-8a65-d18c9f3e8ce7"
                    }
                  }
                ]
              },
              {
                "id": "56a031e3-8947-48ca-b67e-e2a46674d9fb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e6d4e69-cc29-49bc-8a03-7e4f4a7965f2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52aa0bdc-b871-4423-92c1-6720b3cbe685"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cb79b75-0db6-451d-8100-cf7f544b9ecc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "90118590-a25b-4732-b32f-ae9578897d50"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51031804-4e8b-4cb0-bf5c-2dd6ac772136",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cba45d4-76de-4b21-8d4e-b89b58d4a2b8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "18a360fe-f16f-4784-8b5a-72804651bcb1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6f83b44-8e12-46ff-8c55-9d2e424c864f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa2349c5-e56f-4b2f-813b-e8c3c5384018",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cb4a00b1-a611-4d2a-8f2c-b0cda5cf3c42"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13f876bc-2179-4c96-a923-1598ed24b761",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4e15afe-0be7-4617-9c67-3f79585f139f"
            }
          }
        ]
      },
      {
        "id": "31942e8e-f030-4906-a8cc-ebf167fa3ec2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e611711-1637-4e7d-bb0c-1401897e85b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "55628156-abe6-4c6f-a4d3-4c5a082a170b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a589c027-fb42-4545-9b7f-3d77aa5c490c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6bf5b2-01d1-4363-8bc4-30ada1158606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27a8aa2-1c78-4e85-ad70-9139d5987986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fd1bf7-e89c-4c1a-9f5e-29618ebf601d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a848bf04-6c39-4d44-a6b0-ad413aaa1e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96935120-39a3-406f-89fb-78e738758b79",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48c5912-2733-4415-ab14-d57fd108ff16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01e2cb6b-47de-440a-a5ab-5019b8edf77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c286a44e-7310-4991-b07c-9c4f8974b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a38397d-fa1c-4375-bb85-72d1e8d7b4a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e25e7453-3da3-406d-8bca-479860b5b24b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0628fd6-7807-41f9-855a-e30568143a95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea7d4c42-57b6-45bc-a8eb-7fafa512b08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0868e3ea-d4d2-4c5c-b998-8d803e9d94d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d47f347-20d7-49c0-92b1-305266fc51bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ce5d01-b6ac-4182-a386-bde1cf26155a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1ce5f9-39b8-4521-930b-e4332ca8a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57634baf-f7bd-46ee-b2e5-e888714103c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb1dc68-b8ea-4561-9580-2e43603d7014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "704d43d4-d22d-456b-a84a-21968384e151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671f75e1-65a4-45d6-ac1f-43b0cfecaf0c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2eaa27-c217-44a9-b44c-d7d26b50b4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094fa9a6-aaea-410d-b155-958f1fd9941b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530d355-6c06-43be-a9d5-61043b98db81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec49a65-e1cd-4dc9-8fcf-8f22fbd65e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88420b3-d312-4461-8c2b-3c395e958946",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c487a-9d86-45ef-aa50-13365ae712ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bdaabff-65b5-42ed-8d28-6298a698d718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c363685-12c9-4143-bffe-67400b3589a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5110a52-32a1-40ff-a398-065270465298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c33b13f9-7af5-4fbf-8614-99c9d81bf34e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1648764b-b6bf-4854-a64c-b181747df364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5257d330-19da-404e-b860-3cf0ebf7571d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e03449cc-94a4-43b5-a28d-e2b51e1cb428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5071bf8f-f05e-465e-8db1-40c2019160b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf969936-2f9c-48a9-870a-78b9984d61e9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9bcf8f-718a-4ee9-b5a1-c8d5f1399490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e6b4ead-4bd2-470a-813b-c07a810576e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1def94c6-8131-424e-85ce-32d502987a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "839574af-f222-46f2-a31b-e95369c090cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f32748-08b2-4d4d-95c7-9ced4932e646",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe71ec5-3ab3-4528-8968-b90a20e9bd78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "403a5758-a605-4c1a-a394-785fe0afaad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2638da9b-1a84-4b61-845a-9623a0add5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55e2d75c-b409-4028-90ab-3d545dd46945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c340b014-fd88-4ad4-ab49-e94b5cba44f0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01109d42-f250-4b79-ad84-8e35738bcf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc922632-42d2-4d9f-aa93-99f6e14fda7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef487fad-99be-45ed-92e8-1fe7cb54e7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8afc87e-ab5a-422d-9284-980d86725e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc083c15-a6d4-481e-9911-0f580d753c05",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d9828-4d39-44e6-8e24-93f7764f66e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "123ab6a6-b675-4924-b4a1-742969ab9ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1563d9-c9a3-4f9a-81ef-858e4e56bba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3272a5-8f16-4b7c-bda5-0b4d37b4d6d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bf9443-54d1-4560-9d42-af1f4b8e6f02",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13598c3b-f8f3-4e51-bf04-28cb31409a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cad4167-26dd-43ea-bbec-a75696c6029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a8ca14-7125-4c4c-934b-d3975fa37bb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da1d7bee-e5d4-495c-b3c5-e88d538569e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6e38ca-60ca-4938-a706-b356cd0adf8a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f7c709-1e0a-444a-9285-0187960c4a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a00428-6575-42ee-b2e5-1d55d71bb534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d17d00-036e-4592-b573-15db9d5557cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5a59c3-bc4c-464b-a31e-4bac67ad14c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2edd68-b640-4064-98be-b206ca87b0fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e74903c3-6626-4b7b-9ed0-a00c69bb6ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8af418-6a47-4c21-a93b-155443b45f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f9548ef-bd28-4108-885e-e34225e8710f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f35e24e-c7eb-4adf-b200-04b99422bcd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1740a6c9-8d99-4b4b-afd5-9d6a8b7bf13d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efa58bfd-4ba1-4287-b0ea-fbde05ae1fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c43ccc32-dc18-40c1-b03d-131e2d706ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d2f3d6-f7bf-42b0-af26-a6aecdc390d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb723375-bb1e-4d1c-bbdf-d4a322f2edd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e3a4401-3eb7-42eb-b8bb-69ef484cf730",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be628aad-ece9-4642-96d4-a96b2321edea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05734f95-b64f-4e8d-a93c-08ac1009bfb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b70933-64e4-450d-9cc4-dc7c5afbc5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab0416be-7041-4947-a8b0-856c6abc7737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f3090d-511c-483b-bd90-6bc4e1f9f81d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b62115f-ad7d-4c47-b5ac-2696e7ff8b5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ffe9898-0502-4446-af3d-1479f9965ced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e6eb41-7516-4935-9d32-e514b6afcd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "536693ee-c8de-42d4-b985-932bd15092af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83192f38-e64c-4862-9114-32badd32563f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c610dc90-d384-4fc1-8196-d64e7df0b451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5abf4ab0-601f-4319-aad0-53df9c78e3cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e1d7c4-8601-4654-b481-ce73a946c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be865933-3057-48ad-b081-c10dfe2f69be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f51270-43eb-41ee-9b57-8c48908380d5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b113c224-87de-445c-9f00-46918e4891ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076a19dc-92d8-4ddc-8f04-29f84943afd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bf65fb-2736-4953-9e1a-5f1d8e8fbe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7cf9c68-d166-4a88-b58d-dddcb0cea02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9d9a66-3d11-4ce7-a4a7-20c633c473fc",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bab0ad4-41f3-44b0-8b46-379301010a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6ba080b-fe9b-4d82-9178-bd4ae53e3c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961b90ae-45ce-4866-953d-b51240fc3f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd7fe42-717e-4e7b-b375-3daa65d14fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8f3b20-c262-48ef-8ead-6b27b2b4bd26",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a33094c-4ade-4141-9eea-3f6a3033bbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8579e532-e7d4-4b6a-9ece-8842d22fec24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc2499ff-170b-4092-8e5a-417a4d78dbf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "330b8f67-1e74-4941-8c90-cd31b08db735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e01fcb-14bb-4136-a319-5f055aa0d27d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb1ddef-ea8d-49bf-916b-593e4d761a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e9d904-a552-4194-a487-1e37b4d0903b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d7fe78-3c1b-4b53-8d5c-a0a1441c83bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b19b939-8020-4e3b-a89c-aec91ecfead5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90484380-6319-470a-99fb-401ebb4dd00e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1b85526-5848-4a83-93ec-d8d08a0081d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "545ec703-7fb5-4b18-a4bd-9487e69f64aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e295be3f-f967-441b-8387-c67c1da6f6d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13ed863f-f77b-441d-a549-1c2179cb57da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0338ea2e-7729-42be-a00d-084884617a38",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040b84bb-0b1f-42d9-bac7-6568384830cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34dcc7a-5a71-461d-b3fb-966bcc747c05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e26aa53-e03d-4287-af5c-15bb3720805e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a4a6c4-0f98-4792-883c-0d0c8fc5656a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f1ffd9-ca75-482e-b104-4651a4abac60",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19d4143-35a9-4b69-ae8a-fe10fd9cf2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7872b4-fe68-4b59-bce3-e61fb56961b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4917172a-4c54-4433-a6be-1a5d5d72e324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7394ff3-d715-43f4-916d-691543784bd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21d70817-c909-4725-8897-1d7f7beda04c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7e45640-4653-4229-bab7-0fc9fc1029eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1efe57-704e-4bc1-84f5-5d515ca372f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937a6502-874f-4db8-b40e-4ab6ce6da473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6942884-6f22-466e-9890-ebda73d55e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cfb172-c8f8-472e-97e4-8077595d3ed1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9144d076-a372-4f4d-8d40-55dfd640a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09672328-f82f-4547-824f-75f4eea3e860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a0f2c5-e34d-4db2-bd7d-5dd6712de3f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec64a7d-7443-4489-a813-077a0907842a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00182be4-8a2d-4531-89e2-bc25c83f0df3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da8ddf21-b736-474b-a159-32e8c2913df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70771c56-3d95-46eb-9651-ca4c3e626612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d79d67-684d-4421-9240-1c434027cbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "adeb6f3b-39a1-4452-ba40-6237d2f29d20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebbaf383-15cd-4762-9693-5de66e35ada9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe148aa-4b0f-40e7-9f8c-4c17a1cd76b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0dea669-1a12-43fb-b5da-8d9e0c5a5e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007e0551-b6a8-46de-889d-a60ff5074ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fe906b1-2a84-47c6-9020-0f77d1d0cdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee6d7a2f-5642-4015-befe-7c2f30ff26a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559bfd22-3247-453f-8e1f-aa40b6deb23b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "def2f5c4-8875-43af-8d08-ac7cafe5359f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498d3fd8-63f7-4829-ac2f-b203ff842f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a06e513-6760-46cf-8017-55767d39d9a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3065d1de-f047-48bc-b27f-245037df4694",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724a8639-fa32-4d29-8c38-990d0f21a15f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deb0b6aa-67b2-4aed-80b3-9f67796b2f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7e954d-a03d-4c82-89ef-d4f068a30548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ec68d70-d4d3-4efc-a726-cf3ff26a44cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d4d185-cda6-45d8-820a-86cd659d4ea3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa78bb3-0270-4006-974d-fdcba9a9c17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fb4111-ac0b-4cc4-9d64-844572431f5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e870f47e-39fb-4e19-9424-9fca3337704c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fee5e47-2825-4888-9f37-846ea6c06d20"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d458704-78e1-48f3-b0c2-2f68054843d9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a8c62285-81b9-4ec9-8b4f-07f17669a553",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4932c42d-a1d3-41fc-9d05-f983d332d3e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "04306cec-56bc-4f22-994d-2b8c9ede8d6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab961d6-24b4-4937-b8b4-797de49079ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7350546e-5420-48be-a508-4060a9bb9ade"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7c98819-2bd7-46ea-ac65-9fe795a813f0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "524ae522-5e7a-41a4-a6a2-0d309876e19a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "007b7dc7-025c-4ac9-aeba-afc750775eb2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0893d8b3-69eb-4cf9-9d32-2b79c95aa4db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d44a471-ab25-4c62-bd8b-39cd88386709",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a0386d4-721c-4603-9650-22a8beafeb3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2231b981-3360-481e-8d42-76f0e5903c4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e03d7053-afa0-47ce-9582-7c6b559a0eb0"
            }
          }
        ]
      },
      {
        "id": "f6840e0f-e2f8-42ae-86a5-f0c0672d6218",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1ccd290d-15f9-45c1-a740-90768730f0ba",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c44913b-46e8-4e96-befc-3d52fdf6bf38",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "949608e5-8dc4-4436-bbc2-774eee55731d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84423cb8-8703-450a-9cf9-9b8b051f2ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c95f3db-c4ec-4cbd-a041-ad6688240b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd79c19-9c6e-4ff7-8f64-96bf3ec66a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4674f20f-821d-4478-8616-034b22dd878f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b4355f7-b380-4bb2-8d04-838cbb70c800",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d243fa63-a2c5-4b48-aa9a-82ff67a0e725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b691a437-1a2f-4106-9aed-828349b353ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d94d851-a987-4257-9576-c66350490f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "24fb236d-83e4-444b-aedc-9951c047686a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7c4df8-653d-4e19-8d69-7b8dc85e4f1c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3112414b-f344-4357-b3cb-44c15cb2ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50178ffa-2ea9-4efc-81ff-ccf2b3ea2bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b107044-c49a-4ac7-a1e7-fca31177a1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "671ccec3-55e9-4ecc-b54b-332694df465e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b6d5a0-0144-468e-92bf-8c7abad58f06",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4530cfe-c603-4650-8413-88389770628f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e13dd59-f64e-4776-b17e-2ac777f0cf5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68539b0-2a5a-490f-9d99-24e91977e0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09814504-5868-4c04-ae67-4926962244de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2224bc-802f-4f7c-bd4a-67b22e56cef7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e694335c-0446-4e90-abee-cf385a45d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a18cb5-ffc7-4837-9590-a9f2afddfd5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d68c5d8-c954-416c-bc6a-c4ad61054017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2832c972-788c-41b9-8251-6b43ed5fafb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "469dd9e9-1079-41cc-a5af-046c85c49af1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b49ae6-e6e9-4b8c-a5eb-866c04b2dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4564f0d-77ba-43a5-8f62-5ba73325754c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a65912-fcf4-4659-9604-286074828106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "755b0663-80e1-4053-b465-05f88f2c0fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc21dde-5ca0-4102-83a5-45d13b39c2d2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b31a2e-ca68-4f49-9a1c-97bcdec87d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec287dd2-2af0-4bf0-8c1c-5bbf48f33158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14fc8e7c-b622-40df-8a8c-807face2965c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb8f4fdc-177f-4fca-a7c9-a929505eb008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2caa021-581e-4954-b376-d46de390624a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d224ed56-5d50-4afe-8f55-4af4157b2e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6e6b73-d4d9-458c-a323-bb4f11781047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a50b73-b97d-4a6c-be06-77c8ff85d2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccc2911-a536-498b-9d83-af278b5bd83d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c733d0e6-5763-4935-8956-3fea47388d1e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0e6566-be74-435e-bcca-a0e138f7078a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99e7a089-2e82-4e47-9e62-27d2ea261169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c12518-2e6a-40db-9e5d-39734034bd5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "989408e5-9126-46ef-a412-363308a4dcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab6f390f-91da-4217-a9b2-50943245c0b0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499a7cd9-1723-4883-8203-84e0a03aae3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "695bf72e-03f5-4f2a-abda-a4de4fc6f1b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e110663-ba39-4a34-ab7d-1c5077f14e50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ddbae6-b57d-4774-8f47-6250e197c219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df9257bc-f0bc-4aeb-91c2-7925916e0845",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebdeaace-bc28-4a8d-9314-ea366b7a2a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a832973-faee-46a3-9c6e-a28d6cbeafa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af155b2a-0900-45d0-8b8e-f2d6fdb28714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07f162e3-f6df-43c7-a710-1658f49e9d18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac602d7d-4028-446f-a0b3-1970519c366c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03bf61ff-4dc1-437f-b763-87c08a1c9363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e644fa4c-8719-4467-8680-1fafdbecb4ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c826437-963f-4b42-8fd9-ed6ce369b03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "80080737-bc69-4a33-be0f-87124edfeaa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e0dad5a-79f2-4b03-8d8d-17043107f07f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923755ea-5296-4a8b-8c6b-91eecddef1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aac76774-bdce-4887-8723-9c09460a6b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8f9222-be58-4e84-88ad-b15bd0af6cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f28b425c-f9b6-433f-9e6e-60be39b164fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d7bd98-7a0d-4a60-9e25-2a67dcf15c4e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cbeb233-6eb9-42eb-aa82-f48d7c1d29c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "915d9c4e-1393-4b3e-9dd6-1928dd238934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69234d35-d334-4135-acf1-96867140d9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e22ce3b-c34e-4540-a085-22a19d344565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9496f78f-7c9b-42c7-9b7f-234ad493f6a9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d576ea64-f598-4fc9-a040-2a5096581235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df1ef121-c658-449f-a727-ae9433029cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aea9b0b-40f7-4f96-aeea-5c6b1f5f4231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "df1ed851-ef2a-4169-8535-1fd7a9f7e2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97c65e3-7aa6-4271-b71d-1cb8a4d90861",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc35f53d-9382-470a-8f1a-b637a8cbabc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd8064e-88b7-490e-83ff-65c5e68bd665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b0f25d-5362-46f5-bf1b-1f88a8c675bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f682344-7d30-44fa-958d-cb151b8c1ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7123e188-6244-4dd1-91d1-800dd548ab3a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c5267f-4a3e-4edd-957a-63d19ea87219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8fac0e3-4b29-44c2-9986-c9376e7bfd6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c2aaa52-f355-4400-a12e-de37bb7a76ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0a959a-b1e9-4f82-9d82-67192098bafb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3eff25-95d5-4cc6-90ce-28d7a5364c45",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e94adec-19df-49b9-bb25-9c9c928de837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9762777-d283-4423-ab7c-a99baee258c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9aa5a79-67c3-4dd0-b0a5-3edae417f402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "897e996f-44fa-411c-a771-6bfaafc31fe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b0e575c-2738-48ad-a0c2-33fe86c196e7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd3ebd0-ef78-4a9b-8340-f3cfe6bed2ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2e07789-5c25-43c4-bd7d-32dfb1aa9c02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9995288-4153-447a-ae49-00c692fe2f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aad9ab1-750d-4f2e-bf0a-f149b4f938da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7a0130-650d-45b2-bb1d-3e2de4bde98b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7fc312-42ce-47d6-8f96-b5d6b113c22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f93e1fc-561a-4754-af98-5b2149ae37e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7204ff9-f291-4a8f-b312-1b80f2c32d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3536df61-0b82-4a47-ab35-2fbce7a1294f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362e6fc8-1235-4b0f-9942-d744f85ebae6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3835de-507a-4cf4-b9ab-316f79ac57fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f0f0e5-9f03-458e-bc7a-dfcbb9317fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea13725e-b425-46bb-b06d-34ef8c845a00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5dc8a855-b8dd-44d3-907b-7e3fa8fa2ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf75fad-e1b8-4b40-8067-68dd53d7f450",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a192e13a-2834-4686-bdcd-409daba6563d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952ec864-f026-4811-a47c-8930dae358dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cbc240-949d-444f-be26-e3ba349844e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3deb0c32-0f1f-44b8-85dd-523d96baea25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fa9c09-d73d-41e9-8c13-dfea7449ab11",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e0fe48-d1d6-43e7-93f4-a75ffe643ffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9a090f-c22a-4bfa-a146-8988904a2883"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6114eb-e1fd-4ec6-9d62-5da5478fd5e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f2fc8f-7d9a-4d74-a008-6c16ad5316fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dda59cae-4ab0-4106-bd99-bc4ec9abefeb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa0baea-6db0-4f59-a887-ace09946f242",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39479915-c838-4486-babc-083c27599942"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4baa8f-a546-41aa-b4e4-9c6744b4c629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13aa630e-dab4-4fc1-b0b4-868910f20b35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1706cf-fff0-4bea-a4b1-b234a612befa",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "464dcfa2-5732-4da6-b277-18b8f2035430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d38aa1-466e-496c-b074-96ae79e7041b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08942a09-5f3b-42e2-935d-abdef37c00be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "afa14275-c6ad-4fd2-93ff-c13f033367cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcdea255-9630-423b-a6e8-4056e3cd27a2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9c9591-0150-4703-90bf-cff6f12402e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecacfa27-318b-4a0d-afc9-ad0bd1a757e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e19312-e6dd-4637-9cf6-c818d178498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b149fd7e-7e23-48eb-8c62-2c6b7269a6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4bd579-8ca3-4f9f-aba5-847ad294b11c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5410d84f-6bcb-46d9-8fa7-9622d5246d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84baa10b-b7bb-443a-918d-e11776e33f76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceecfa5b-eb94-4c86-b093-8c522e403baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "372fd187-0b86-4646-84f8-2ba1a605a3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fb092f-dc56-43f1-baa9-14ef4e2950f2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7ac974-76b0-42f0-8c22-e83591a60f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7d4a7a-1cc3-4606-a989-b5a350c2afa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1769c7a3-7f39-42db-883f-5764ae8324e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00746da9-4ba6-48c0-b272-3bc23db4be4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f09752-577f-4cd7-8667-d49d1fcf1d18",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4471038f-ea25-44eb-90ac-9740c1788241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daf6ce1a-1324-4e01-8f6c-227f9e3976c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fdaf230-9aaf-491d-89f7-c382f7a9284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16266d35-00ba-4398-9f0b-06a1f45b5f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec5bf54-8117-4c8f-9bf0-5665fb167617",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1818b127-3506-4169-8ef2-b3112907db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86ef0e4c-663d-4ee2-874a-d2a8892892a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eaf4ce-28db-40af-abef-b736b5eb3918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49ee71c6-d3c3-4c9e-8a7c-e57354790f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acab72e5-9310-4eff-8d8e-983a0340cf02",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc7e930-4c18-46ef-8276-4f26ed5be06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7388b729-11dc-4f4c-98ee-685e06f00932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f033fec-6cd4-4598-9220-a31d14c43d3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a54d579-c324-4693-bb33-c65508041426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e738e4-8ff5-4dcf-b513-121e18d7f234",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2807470-de39-4843-afd8-189fac42dcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cde00b39-e8d7-4108-a32c-e3dab3102fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548b422a-1dd2-4a4b-ad6c-6bac0103d16d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8987820-9777-410d-887a-9cba6dc34204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71faee57-308e-4eb0-be1a-d6948c317635",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3a3b88-8719-47c2-ae60-7e2acd2b01da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7256a6bc-5006-430d-b9bd-056f329b5453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "320127dd-191d-4ffe-b58c-f0c59c1972ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "000e5496-d2d4-466a-ae90-59684738bcb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f685f5-975b-4858-8d8c-d5197d3fed01",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5884ac-4252-47e7-b711-b89c7ce0647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0276b3b-59e0-40e8-ae4b-b438f255f0e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48215856-2e87-43a7-a6de-4e62864253f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09e2a248-05d2-41ba-a78a-9a683ffb0ff7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de91ccd-5fd8-4bf9-8783-44c091fc3997",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a5a20b-560f-4f29-84a0-e8af2b83b042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "542f2352-a76c-4d80-bf7e-87ce6d5adbd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad0327c-c071-4669-8324-91e9e3be04f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b5e4d2-09d4-45dd-bdc1-6a92ca06b203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64eda0a4-1370-4699-bf29-7eea2da9f888",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a603a914-6118-451b-81f8-c2027295f6f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b0d6d61-30b5-438a-9b24-d622b3cb21fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d1ca298-5443-46b5-aca9-bead04a1a799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "910562a3-99ce-41d0-8687-7d6856bede33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4df7db95-2201-49d6-b7b7-c91bb57f361c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8568b60c-0a71-4596-926b-e14e5b438712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2843ee-d4d1-40fa-9077-403e77a2b471"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe11ba08-a2ba-4d67-99c7-3ee7171e7b2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0601e6-3471-4ead-acfb-95e3a58a7309"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c6aa4692-4d87-4733-8717-e18a34625ee3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c7d6620c-c65f-460d-8f9e-ae8325dccf1e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03081724-a6ad-4cc8-ba24-d6fef97c5da3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9f42e831-8cb8-4dc3-99ac-a18155ef5f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a9f493-8b67-4fb7-97bc-8a0927cf7e41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d94045d-b7e5-47b6-bd52-f52b050765e0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4228d8f8-5257-4a37-b1ef-8a84db221882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ee7bf92-82ec-4f95-a260-b4f4e89ebd47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75d9b901-5e35-4b93-b756-bbe2b5efc1a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28a70b03-207b-4ab2-aa9f-200dc7df20aa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5d7c6c59-ca1d-4b50-a88e-84c47c5d3e51",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cc36022e-61ba-467c-a323-380d0f493a52"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d40189f7-34e5-4899-944f-1b93fad9df2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cc306bb6-cfb8-48d1-96d4-7b1647e6bcb1"
            }
          }
        ]
      },
      {
        "id": "d09c32fc-1500-4a39-8f8b-cb17fca02e4e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "ec62529d-6b21-4aee-b980-6fcd893795c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1064d2ab-16dc-445d-800b-275299aff3da",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "500e3f7a-daf0-4cae-9731-be2da4ac9a64",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec29e50e-04e5-4ab3-9c1e-8b28f8b69a96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1246c8-2772-4be3-9cc1-efa42c0dff43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89519871-362a-4bad-ab8c-4c068ae8a04b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f2194f-5e30-4cf1-88c0-a3b05380a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922334a2-98ba-458c-81eb-724c6203df63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8aea0ba-654c-4e32-85b1-571074f07ff4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb3d8016-0aed-49e2-8926-78598fafe4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e837e06b-2f01-418d-b92a-f304a01aeda2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9125ab5c-f1ad-4fad-a023-c1606285edc0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79c12e31-f28c-4ef4-8a10-80c67f9cd3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9a8e22-252b-4a30-a031-f8034205d694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484c82c7-b585-4448-a80e-a7ceb07403c6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02ceda3-4ce8-434e-8fdb-d7164bff031a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8449ef7-52a9-4454-8901-e9d89bf1561d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6beffb55-293d-452d-a2e8-7c1f250d8909",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd895a95-39f0-4afa-9002-1ab2e12e0b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfaa62a-c4bf-4f38-ac46-5c8c0d61194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ac677c-76d1-454f-85dd-e63862b59d40",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632ca32f-445a-42f6-b27d-296bc8c77b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde2428f-60fa-4393-9a3c-e754c0f4141e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8911abb2-fa9e-41c5-8257-b6a3c446b2cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6721d1-0714-4c4e-9c95-e991d3ea1fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f537c011-013b-4ddd-ad26-c2ba2cb0bbbb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5933ee9a-f198-40b3-85a0-ab3021ec3f6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "534e677a-7e9c-47f1-a19c-a63eaaa03ffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e572fa88-b277-4fba-b3b6-5bf6a56c7b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c64cd36-74f5-445c-b2ff-cdf17ae62416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24079f69-e986-43cb-9bf0-2cd21fef6493",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4030a03b-c534-4a4a-8a5b-23c07a734227",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab55da9-fe4e-4bac-ada4-9a07c8fba46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb7f62f-bdc4-4ac4-8930-a5ea0fa431dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95bd0b5-214c-4956-ac18-cb3b1a560b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf1a098-7b70-4d62-9a89-87e5159405a7",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8547ec1-97a0-4e52-8420-2adb23f13cf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82072c56-935f-42e0-bd1e-ce89db436b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "990cf826-113e-47c8-95fd-25d6f0f9bb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e5c2439-1c25-475c-85d0-a64b6d24d799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a573732c-0439-42e0-820b-02dbb1d461e6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeaca5ac-403e-41ff-a08d-cce5c7fc0e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f186d2df-62d4-4997-8aaa-ce4b9c64a9c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eafac8-b84e-40d7-a5bb-9f4b152374be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0678e046-d9dd-4869-b096-b5097ffac12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a07917e-2568-4cad-980b-0019093c5bba",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc37743-cbfd-4069-9cd7-51612a223726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d95ce5-a90c-4f0a-a823-14e3185ff6bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7418d323-3e97-4f2e-b04b-c1970d441c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b079b7aa-9336-4709-914d-352a89204761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b7ae3a-24b1-471e-b575-170492b930ad",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "247312ff-8e28-411e-b7df-75abda288f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74dee51e-f446-4ea8-a140-b364bbb2c06a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5349b8a-69a0-4bb7-98fe-53ac5e409a8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bad1652f-9490-45e1-a372-f85a744d2632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a43dced-5bdc-4107-baad-d4cdadb7868d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fbb44a-6461-4660-bc47-94796c32d525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8345359c-6d32-45a6-afcf-1afd98f5450b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24754483-e3ab-4b87-9fe1-7d2cd550d741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d67eaa-fbbf-4228-bc58-625348c8a63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67be7557-65aa-4ecb-9d42-628d41b0983b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4d779a-c3c1-4d45-92b8-6810fccab2d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df53ef3a-03d3-4b54-99c4-15c24274e881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af9c569-5e8f-4fce-8d5c-8bfb6689ff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b01fb0-4db8-42f9-8e1e-d959bed78451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d47e6289-cbfd-4fbd-96c1-e2748314a161",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a6d560e-b18a-48cf-81b1-5cc467fb0474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d34deb55-6f93-4203-998d-1dc3e9547199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d1d164-2e0f-451c-a59f-665d8c8c66da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9ea7e8-7a7b-4a9d-9652-ec28fb73f83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fc2032-67b7-4053-a5f2-8b21af7ab085",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe384a2-ff7a-46ca-bfbb-871941e836b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1216e30c-0b0d-40b7-a1aa-90c8f74c8e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8023f2-dc93-46b0-a286-da83a54add74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e572f0-2c50-4238-a28d-2b623a383201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e601a23-d16a-41fd-8850-2db7dcf2ead8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "064889a8-33b9-404b-8e5f-cce4c5e4bfa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf45264-3f4c-48c0-89c5-5e8adbb160fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee83bfc-f678-464d-b1be-1ae476c7873f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9582c6d-d64e-4e62-8c8c-925175457b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb92830b-83a3-41f9-be5a-56b0b8a8d685",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d86a4c6-d906-4ae4-8032-eb9f96e044d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e6c6b5b-12a2-4b14-9c07-bb38d679fb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea1efaf-ed73-4c9c-8431-9b8195bca331",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844560c2-9b09-4881-878d-627f4cf6f44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4495dd-0d8d-45d2-8548-17a3a87d8152",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98da0c24-3b62-468c-8c4b-5ab67777f9c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ed2629-f4ac-45e0-8870-58625e287455"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd24a8-d9cc-4c58-8041-055eba27f0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cae7aa2-535b-4275-aef9-da89e62ccd18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bbb291-dcd0-4d92-a9db-24ae985b3175",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d603d1-a115-4fa5-814d-1dd64f36e341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2113a49e-8ffe-414f-b52d-2ee42ef28a18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01881a47-9f08-4207-a2c1-2d8f3e8c64bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546ab880-263c-4762-8ebc-b3927b514432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa37a814-aec2-45c7-89ff-2fee5b0e21e7",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25634af-42e0-40f2-9d88-d34b4bed8349",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7892aa-27c5-4cf8-baac-cf33b6e71e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa9d5f5c-c764-4ad9-9a22-69d79fc9350f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13f2713-e967-4208-8b76-249cd9bcc272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8346787-e8ac-4edd-b7a8-1aa7303e9abc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f6a47a3-ab43-4ea8-ba4e-07f459c52f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5ee1d1-c089-433f-a4e8-87dcdf4c7bdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e66375-3cb5-463a-99b6-cf7372a61096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7bd6ce8-623b-41e3-a6a3-cecb63ae2349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97762164-0263-4ab6-be5c-104030c8c4e3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ee1a6bd-77aa-4e86-a4cc-2e440fe63e34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31e0a5e1-f02e-413e-afdb-74bc89f2109b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c5e0cb-04c5-4c19-bed7-5827115b5cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22cfb5a3-aa51-4ffb-b090-dbf1aec76077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cacc6cc-7494-4912-bab4-aca43ff811bf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8abdc04e-13ef-4220-8974-aeefabc10242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94ec621-a094-4a56-a854-7c2c2cdc9e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bf673c-98e8-4957-81fe-24246e5fc997",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cf393b-cc83-472f-99a1-36a3d32e66bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac01dd2-a5a4-409b-a77e-a4e989d8cda1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ccc4de-9aa6-4b46-9b6b-6ed1655cd6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de6e8cfd-2090-4a31-8cd7-82ad3b4906a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26956187-476b-4792-a228-b7148ae8dd5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9ad7f3-5d0c-49af-bd5c-3b907e7dbfe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9ccc51-78f1-4fa7-a8d9-f02d4996427f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187067e0-67d5-4185-8600-b9543675d082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15616afa-1b8b-4d85-9c76-d88aee9366dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5e5487-98b6-4c8b-ad62-6b1850254f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4122631e-387b-4f28-841b-614552eea4a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04edca9-c6f5-4468-a48f-5705d53c3b7b",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4f854e-5e22-4b1e-9cb7-5f419a100158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9556ba55-9212-4f08-8005-c0ca49800fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de294d6c-951e-4303-bd53-1656a1477adc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67663922-b162-4dd5-bee6-327a3c0aa0aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fda7c50-b2e2-46df-ab99-d4003171a880",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cafa3ce-bb32-4b0f-b480-b44907f227ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42b16300-7350-4079-a802-6a5913e8f973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0839b52-e060-4a57-a7a2-7422e0076990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387bc330-5e2d-4dd0-a59a-f78b8d005d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ec449d-e6ca-4ef3-908b-42feeeceb969",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7854cd28-3d23-4a01-92e8-edf33096d350",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9ac52c4-f3e9-45f1-ba25-1b853f266ca0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e446868c-7a9e-4c5b-bfad-fa7dfa9d5e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cc00fbb-a79b-4209-b3a1-5cadc46b9500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6895de0c-a7a0-44fd-93e8-7861792be552",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d8ab8c-9d23-4faa-90cd-3508f26e3a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1af82b8c-3b84-431c-9e95-e6bf1dc072ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b02b09f-52eb-4932-b699-de533972add2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d691f14-5a94-4d98-9b85-d33d8ea40e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb5ad5c3-6e50-4741-8908-af67caf91c89",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c82fd6ac-9ca2-45b9-81af-5a1efcc07619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a8fb99-9470-4a12-8391-63831ef69204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b46fec-d62a-4814-bfd8-4b36ad68cd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b16c6d-2994-4d03-82f5-d11444f75467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c33eb9-9aad-46ea-adf7-e81cd2f81dad",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0874ad-0f9b-45ba-a3ab-ee70348e6e7f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1317742a-a4ef-43cd-9980-460ce0ee329a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df11e652-2848-4b83-a83a-f9a2a04a25e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "828f07ee-fc35-4c98-a03a-c738ba2b48e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f4788b-b613-4c45-8bab-e3a5a3a5993e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73091df5-d95c-41e0-9d69-09c8b92c1760",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05ddd8f8-00a3-4562-bc59-138affc22685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4726b3a0-d95e-4bdd-866b-3b6b2874e276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21bc4c5-03ba-422c-8bf9-2e1e6eb30bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e836f6e7-7ef4-4708-a1c7-50246c6db877",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6367045e-9c1f-44a2-a388-adb041b304c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3340b7e-6108-4091-81be-14c046d14f41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b759eb6-7e7a-4c87-881d-4900585386fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb73309b-f320-4a5a-b1b0-3c6aa07198ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d45694b6-87b7-4463-a0ab-f44510bff582",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d258f68-7cac-4ca9-8fd5-9a82174061b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2a9c80-6bb8-4adf-92c4-105009692c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e436c55e-7d92-4027-9a37-781886abe453",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f21710e-e8a4-46fd-a4bc-c0eaf42f1592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d9a3ee-d2cf-47f1-bdcf-a5e004dd8858",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cbe388-7ee3-493f-aa17-7decac6b036d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a617720-9dcf-4af8-a927-d9914cd0eeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "005afb6d-fcdb-47e6-bfbd-37087eb4e1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025105e1-9d8e-422a-be43-de986c652a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012be468-31b5-4f10-96ce-08b73071cdea",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef93e63a-0ee8-408d-9996-9cf113f9c4c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce06fb8e-db9b-4b33-becb-763ba7476db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e53776-ae68-4e6b-92bc-85fd7161b6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d358c008-85d8-4750-972a-33abf48ad1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ab116d-46c1-4637-98e9-83b97e3aad0f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7795b3-3a2f-490f-b405-31594ca57ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "612954aa-b099-426a-943a-1809e3b588bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bb8ee3-27c9-46e6-833f-1867367d3a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2a2f773-4237-4cbb-ba88-0e7a78c7c22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68590ea1-a11b-4de1-b8fc-9ef64a0ad66f",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93f4896-c2ff-4913-81e5-b6e1a3f7a287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040723e8-f50d-4340-a453-7f00e6b69acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f514a5b-b5b6-4afe-a619-7e49ac2513c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9336ab9b-c068-4af7-9820-db52d97343b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0836ec8a-ad8a-4d37-bfd2-7de750de348a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ec466a-5887-42b8-a085-c1027452ea23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e1bd949-a5c0-4de5-9825-8e39aee57bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f204815-8668-4675-a302-e53be80dea47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b740e0-04c6-4a54-8940-87575da99463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b55f7d20-f8e1-4583-98a4-d084fdfb143f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4332a98c-92df-4f91-b023-2e298b5ad988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5756ca23-637e-46cf-8f85-af8b849ad29b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8a43ce-d085-4c29-8675-b21513cd105d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc472167-efb6-478a-b104-0cccc45e2275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e308ad-65b8-47ad-bb35-f3034849fa68",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a7b57f5-f91b-4dcf-b52a-a8fab2a0b76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fcf8b1e-4162-4cb4-b8ee-a63b62bf3544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892f948e-ddf7-4800-9a74-a379fbdfe30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92169e6b-d3b0-46ac-ba2f-548f9b6bb9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1e8f15-412b-415a-bbaf-5bc1a0c209fa",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ac7ea6-2e37-4fe4-bd69-12d34e8828c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a032a7d1-7990-4946-801a-5e1f628e019a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "088424ff-f270-4c16-8b34-e7bf3aa48cbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b39e39-764d-41cc-8123-a25a46d01af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85d0c1c-d9e7-450b-8e22-af3ea96276ef",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9026955-557b-47c0-96cd-cf6538f3539a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b366cd92-4603-464e-981c-ada1fc2e28dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d785e0cd-9bc9-469d-ba1f-bfe6e3fd0e00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "142ae702-a5d1-4a13-a161-92cbe8bb2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5feb1f3d-271b-48a7-ad9e-d1083158cc0a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e891688-bb98-4df0-af3a-335a40de92d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b60c19f8-a7e2-48ce-85b9-9bee1a924111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2621d122-9e42-4d4d-9c6b-004242dcddd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e0b0b2c-0d52-41b3-a7cb-77cc62658353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a41db0f1-1663-48f1-8a15-325ec339358d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0acb9123-26a0-4883-84df-8ca262c60d64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bf7fb7-1e31-415a-9842-f489ea0b4c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bd9557-c286-47a1-b761-bb9dbe030727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e37b002f-5cb0-4113-9079-1e14cfd10df5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06dab9-f691-4753-b7a1-424e2f61cd20",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06534a63-544b-4e24-9acc-4392b5fc8b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25aceb32-54e7-440d-99c8-3be78b9aaa0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ad1f07c-91e8-459f-8f53-277987865fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51eb8188-4b29-4a39-b272-0b1dbe1594a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ce1b82-df9b-4b8f-bd4a-d4e10a405a85",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b91ee7e2-5274-4fe7-9b77-4438a2a0b3d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc296ab4-34e6-44ec-b3b4-c792c89aa8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b536fd-6882-433e-9c0b-ff367e9f2b41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c600609c-640b-49d4-b63b-a6f34e47cde5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d282fc2-2a1b-4786-948c-506ae43acc81",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e45215f-6d9f-48f1-b1d5-7fbb518929db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17bf49e0-91eb-48af-8ccd-7107a1be0467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "878f0f99-8778-4b09-b31f-791a3fec2e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62162ca-71d1-4982-b1ec-27aa7a772cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9bf7749-3b90-4c26-9e6c-281da0c9c412",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8181cdb3-31e1-4700-a074-6610ab89e1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d29e620b-2138-4a49-8f79-65c1de0284cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc55c133-6ae1-4721-86b7-df4d5d6f1fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cce6502a-51f5-4c0d-bea4-2027fddb1721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f977006-ded0-4d4b-8ab3-ce4505926356",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930a997-db95-4f23-90d7-b5d2481e7e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c09624-6591-40b4-aacf-4eba4dbede23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b6de62-8b1c-4093-94c6-e56ae83caf37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cae0794c-5420-4dd4-9e2b-d4d6f2a84ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e3ad05-ab5e-4d3e-9999-4d60795a7113",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9246e027-b319-4183-8a1e-dd4c98c503dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0b25642-fab1-4d1d-97a9-03811d6d36f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53068e11-6668-4d16-ba02-8198025f85e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2becdc-a310-41b6-b7c0-1f836f101cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9729e4f8-224c-47ea-b233-3cd834dec7fe",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94413310-91e6-4966-b673-ebd7443ad175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610667d5-5d3d-4ab5-ae94-c5f200b6fb29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27207f06-9feb-4745-ab03-4403395c7242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7be1e3-858c-4e76-93ff-1715dff47acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2b4de3-7377-4441-8661-5124a7e0bf49",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2566a178-a123-4b28-989f-2d708b485f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe4c7ee-eb7d-46c9-9236-200d2571e868"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b26035-f121-4930-9bd3-145539c88272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5cb266d-e655-4385-b642-0017b1062cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c91257-29b6-4dc8-a275-ac3e3c30eb49",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc811bed-e1d8-416c-b6b4-a446412cc7a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42608b0b-2b89-4b06-bb51-7414f8d61d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8f554f-0d97-40d7-b089-bfb6de6a2992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "734afe3b-00e3-4747-9fd2-946042aa7921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59e0082-edd2-40ab-a1b5-5532f86d3fe2",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fb10fe-9944-4715-9c9d-cb44140c3674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8f1a9e9-3f0a-4c3a-97a3-cc074dab47da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66125084-a87b-4f00-8cce-eae119f1d339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a428385-bc6e-4970-9c53-0bcaf165558d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9938d3d1-5c7c-4651-b45f-e7efaa31fc83",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c67a7ea-973d-4f29-b0e0-bfa81181be4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e863220d-f875-4d46-918e-697ce36e7fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c768f098-cb87-44b1-af30-029ad1a705a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aff7cee8-4bb9-46cf-8570-96f6ab9ae160"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f21ff54-0e2b-43f4-9a15-77b92590bf1a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358c96da-2885-416b-a100-d735a94efc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6775061c-70c8-4327-aa53-87f528f68292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e38915d-cb86-4303-873b-7be360624d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e646083-54be-4419-a2d1-b662321dcfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b9cd4b-31d9-464f-96eb-1ca9b57363aa",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a600628-5cd6-4343-9705-81d2bb991881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c77004-c23c-4269-8682-8bf6391da138"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7846b80f-6b3d-4086-8864-568f3737fe6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125e1049-8aba-4151-880e-9984d74d1389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf86a02b-be11-44dc-b0fe-dca10e48eff2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65f0cbe-2570-42b0-9159-420551fe019c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af9c996c-7055-489e-a715-8ca4dcc873d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b6de70-f7b4-419a-95a1-38e6ba1c3b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169e9d65-1193-4474-822b-83bc582380ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "448d8868-77d7-4b7f-bfab-800caa73b8f8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c332487-afd8-4588-bcf0-4ea071bbf5aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0402ff4-97fa-43ac-9ecc-f6db514a9204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f8f18-755e-448a-9609-c093288c735b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e2e6b52-b1b9-447e-a754-62ba413983c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a95c658-fbb6-499d-9501-e8002aa5bae0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88ceb6c-a4ae-4d1f-bd64-2fb86d5e0b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09727551-4bff-4287-a63f-666267b2ad69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa344d18-53c7-40ff-8ad2-42720db448a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ce4199-2854-4f76-904d-0117d7db7caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb602e9-390a-4882-847c-685bca647491",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba79e871-80af-4071-b663-44daa17ec74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b193cee-ac73-416f-a894-bf8b2ce78512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9fa2354-637f-41d2-a716-716348bbfcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbc99b0-c2ef-4676-ae3e-513e885df098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416b808a-7cac-4d09-ad22-d8c738092607",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83e82f0-42f4-4c4a-ae28-499f02817a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e90b85a-c421-4e9b-82b8-9f9f30f73849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "196f0260-d72b-4b2e-99a1-c4d4d5e356d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c49eddda-ece8-49b1-b73c-8adef1170ccd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded066e9-ca3c-4820-9ac5-3df386bb6dca",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5519c37-fba6-4d46-9266-30f60aeb0f45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239ef2b6-139b-47cf-98b6-3ce7cc747821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0397de4-256e-4445-b01c-f4572c396803",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e390784-7465-495f-98d8-85959fe287c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77b93479-e826-462f-967d-31bfe65476a7",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c87e37-790a-45fd-a9af-9e69b3013b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1430147-8138-4810-aab7-aab99d1bace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf13b0c-6e30-4a15-8847-039060927e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4e0507-54b7-4e05-9c98-49b3e8db7c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbb97e6-fe37-4bf9-9baa-b62127af6ad0",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb6dafa-55dc-4c7b-8d2f-9206ecec2e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0b71567-ce56-44fe-bf73-20199d103a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd480a0-7ab3-4474-ad21-4dd65070c416",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86680cc5-b18f-435f-b9fc-e9f9f930235d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26029ba1-a140-4b82-b81e-dde672185238",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76fe8240-636d-4a1f-91a1-9fe9551c981f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7415fcf-01a1-417a-9074-4bc4bcb2d197"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "580c4f7d-8a0b-41df-8eaf-76cd577d86ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92a14aa4-21f6-4c94-960c-271e525fa441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f8e1f0c-e23c-4867-937a-7640bfd1df80",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd31ffa-e16f-4f36-b71b-d5297b0ff085",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ede67af-8429-4ef2-acb2-017a9f73e1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "218c607f-04cb-49bc-af44-3a1a90adace7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c64f0e2-023f-4ba9-836d-114e3e911a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f290cc37-1a65-457c-99a5-f7c68bdeb3f9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bbaff05-8b6a-4cf9-be42-55f575ae1879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5548a528-4945-485c-b99a-3bf612cb5af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7040e03-99de-4268-b7a3-9be2c4e8d9af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c6cd8ef-98d3-4d04-a209-316ba227e0dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b147a196-7f73-4e7d-a79f-7b66d21d6f1b",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5642cfd8-8da6-483e-849d-fff6d1c49543",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef6bb9c-a8bc-407f-a372-e21620c9ed83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "280fddc9-a084-4fa2-9130-10bc1a1b7e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2362b2f8-cda8-4c1b-bf8b-dcd5bbcb2380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2efe04c-241b-499c-b44f-6c1f1d8dca12",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ce9905d-5211-46d2-98cf-a1bf5b97cdcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6ca93d-7d8a-41ac-b31f-d56c7d647963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a17044f-3141-4d50-ae46-66da3b0bf83b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c45f67f4-24a7-42b2-b16a-b5a92375bf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421ff3e-72ce-4c44-9c7e-b020ff2dc1aa",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc651859-dc45-4d09-a579-34e2066e1764",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79e668d2-2fd6-4025-9b6f-88f11af57121"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b884de8f-9398-4350-ac25-e84eb78b76d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806a9344-a1ae-4fae-ada2-359e7bcf1a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65a2d22a-f467-4593-813f-9b7418b2ef59",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0000da2a-f702-4a90-b861-1cad2aa39ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4e7f3bb-79e4-4848-926b-a4cb04936a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75925dc6-9038-424f-b8b6-5f7976559145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605968c8-6de7-4ce9-9288-416f3aeebc0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6da0e83-ca5e-40fc-afeb-83a7871d9430",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29db42e1-ab33-421a-b7dd-e2831e09a5e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e596913c-71ee-423f-b412-6ffca469977e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409d3e73-8d88-4fa2-93d2-f54f00efb068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7015d91-6d89-4264-abea-bf56659963d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "790ec607-b578-4c19-a778-475ba68d8183",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895de785-77f7-4cdb-a06c-1a03150891b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1136ad9-c8d0-43ef-8b5c-e9bcac175dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a16c47e-5ff2-40f5-bda3-00aea600e86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cb1728-c983-4ecd-96e5-80fc80c65d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b9d523-a5af-45ce-a918-0bd5feb2f9b4",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bc6ddf3-d84a-4b82-bf6a-6c6d63dda0ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0aa4d1-5529-42f9-80f5-65c9368b2668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bc06e0-7aad-4ff9-a9a8-ba2d87e039ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdb38bc-8625-4508-958e-a207edadf097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "893d7fb7-fe37-4eb8-be09-306490c45f54",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc10de3-f9e7-4455-8114-4f6be3291344",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52094130-42cb-4dd9-a0db-8fb6a4b1f169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04e580f-379d-48bc-82b4-288ae0b4c056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ec3ac93-47bd-4775-a444-0f717612f352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db21f76-703e-4a49-b21c-ede36ec25840",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275fdbbe-0ec7-4f79-a9fa-ee368d0a1f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d22da30a-ef62-48be-9380-9bbc0ccbf96a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d69442-6481-4343-bd94-3789dcfcd54b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2dd603b-de53-40aa-8e52-e3af3ac9bed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48ebb8ae-da00-4773-8f03-d74536cc0d32",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334a1122-364e-4fc2-8b2e-cd9afc50eb1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1444c347-c260-4744-b8c5-0691875840ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f6c5e9-4e09-45fe-ad4d-1247f6588c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "542a9b04-677c-4707-b6da-5c44d634b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61f6ac4-3c08-4da3-a4d6-5032fd254ced",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290a312a-1aa5-4319-ada9-3efff793141e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44701821-bd83-4cac-a120-5a61e020c7c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7741903-c998-459d-a5b8-32760f214b97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6835e61-8c55-4252-8834-4068a7fa8746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60e5f6b-41a8-4601-91d5-71ab522d5432",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f25e222f-72e1-4ea5-b5af-df3c2f85c6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0457977b-ed24-4786-aae5-9dee375766ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6aa234-fecd-470f-ae6d-8fa4a458cc50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf48ab1-ca1b-4167-b7ac-bea4ac4ed02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5059ab18-8671-4936-b2aa-3bda22211715",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae202f38-8bec-46b1-9983-881fbb9343b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd094b8-2778-445a-bc62-4f1bc54887cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b32ab2-735f-443e-924b-d4bc7efd57f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857289b8-deb4-4318-8b57-db82b9586d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a047396-e897-44ae-8c42-1a33c8d9f9de",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd46026-e9d5-4375-9690-55f7237af876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12121eea-b4c9-4260-9028-076a4ffec8a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c03b3e3-aea9-4924-8d0d-ca8d2a05c777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6137e2fa-e3fe-46f7-b18f-dce8e5396e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48c5241b-04f4-417f-b4b0-6ddcff2d1c9e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c45b03-ece6-40fd-b898-c745d89641bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2aede72d-44ca-4da7-a840-f9e0704fb17e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38733f52-7b35-435f-a2ed-283a46e0fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b78d8ac-11f9-4a59-a12f-aad6dfee32a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f967eb-7710-48ae-aae3-12a64b261647",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31c63257-288c-4bc7-8e42-60fcc1033ecf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b830ad8-317c-4633-a5c9-fdff970941b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ad9057-b8e5-4b65-8227-90b61039d10b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac50aafc-1aac-4527-af32-3470aca60320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6da42e-5013-4bb7-844f-ac79e9ef4c39",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709fe235-148e-45a7-ab2d-6a3246a692ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ec5476f-4225-4faa-84b3-cfb4e5625f84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31d4b966-3f0a-4446-922a-a3162451d1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4ba387-8cb6-4a58-9b70-aa9f019d8150"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e06da95-c9d0-4011-ba0d-c911db56dba0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fd2ca7-bf2d-4276-bb57-7c52147d180f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8353af09-5fd9-4307-a181-3e4e37526fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24de8edf-c50c-47b1-b158-9cea0928d295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10e72e1b-3540-4eb6-a362-1168e507fae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198ea45e-6816-4b84-b964-a5e8e64823b1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597c4ec3-7623-4541-b64d-a9c60c0bb154",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db3bd94-f0e3-4f8a-b17a-39c7158a5476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d44326f-2edd-4110-95e0-ef9f73670b26",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a818e179-49a0-4551-9287-d57e4de6f952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a37f6f4-c332-435f-9eb7-71db88132d17",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0df1a1cd-63fd-4cde-8daa-85fecf84ff9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6517c862-2b31-4b8c-9e00-abb226defb71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a2c05f-3812-44f8-b388-6a2239c8e676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b73a6c-62e6-4d30-a0a4-573348ded45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1616a2c-f43e-4e00-8bd3-6f309bc92f74",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006683a3-d332-4869-9435-c7a2b6fe4322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87fa1fcd-9054-4821-9a67-8be38c594201"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1304c3d1-c5eb-4258-9545-b224182d1e8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81819c78-253d-4dc8-9b4f-10a3cd8cee89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f4ef83a-fad5-4299-bbf6-11786acae8da",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743dfa44-a265-4412-99e9-d4064d348395",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "897508da-8977-4591-a2c2-2c57fb80d740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd23e03-daf6-4183-8a1d-5db11482a79a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d305613c-8d1d-4fdf-a23c-23496b8c4027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e33db346-dd3f-4262-9d04-054655696dee",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29fda4f-3d3b-4eff-b107-8387ff7211a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af46a83d-9e65-40e8-8982-13dcf8980b9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feef392-9dae-4da6-afbf-2bbb8be5ed3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c3177fb-b328-43d7-b14d-0b4eb06a855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6fceaa-8baf-4312-8acb-20a0126b0223",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d3cc4e8-0739-4cd1-819a-8d335bbf2c93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64841f00-8097-4167-b5bc-9725a6aa20e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a75cc7-c70d-4202-a0c3-02d31c43ef68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476fa7b2-e380-4455-891d-1151b9d16960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c4c1d6-53e2-4d11-a055-3f1356b133e9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "811b2ca6-ec4b-437a-a67f-d73e0a22e509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a37ef6e-84b8-4446-8510-d35c6498e341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fa8f07-54d5-4ec4-b13c-9c2af8b9cddd",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46273a0d-3ddb-4659-aca2-2341a6a9ffa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049bf5ec-afe7-40f6-87b9-e807f67dd94c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "158de953-530a-4faf-81f8-5c14403b9e58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8e59082-665c-40ec-b34a-931a3d765446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a85b953-d570-45c6-b888-e181a440d7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941d67f9-d02b-4bff-82db-e98f626ce07b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "524780c3-d45a-4c0d-a7d2-4c03e989b589",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e5cce15-ae4f-4900-b649-001f3953a9b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa247bf-3ba3-474b-b373-0cc90a4cb0fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86318f21-f7b6-4fb5-ab56-fd33fb8274b9"
                    }
                  }
                ]
              },
              {
                "id": "078be555-4d6a-4774-bdb4-e214a07d94f5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "30ffa1b9-ad0a-452f-891a-9985ec255ea4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbf11a2-24c0-4891-a741-ac9bd6af0eb1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d1fc7e46-e90b-4bd2-a799-ab9dd0f7d7e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17bed8c0-1ee6-483a-bc88-238cf2c3ed90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "417b5394-9bf7-4a62-ac3a-b59161b570a9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5995fc89-9964-400f-8600-f733663314f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c317b74-1568-4600-9ee5-fc7ecfe531fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d22defd7-7bcf-4dc3-a5ea-27c7a7edf6f1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54bf4c64-98cb-4fa4-8fbd-e5637ae3a63c"
                    }
                  }
                ]
              },
              {
                "id": "6d0b1929-efcd-468e-8224-b150312139e0",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "44572279-03a7-4379-8aa8-57816fff358a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef19e2fd-9ed3-46bb-aa64-2eb504630a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ad2cba8c-0913-45b8-b084-ff4d5a940992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae6fd06-fcf9-41b0-85d0-3d408fa654ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf113da-e5d9-4628-8f48-c8fb6cc8dd08"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d00c023-279e-4882-95e9-0c93f027dca8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b71b8764-662b-4987-817f-7844af27401a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34eb01bc-f754-415f-9c09-50e792ac4473",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bde8f25c-45c7-42b3-ae86-346eeba9e758"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70189371-5863-4ccb-9bd4-8a4590be51e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b2d7abb-eaff-43c6-af7e-8885f9d82cf0"
                    }
                  }
                ]
              },
              {
                "id": "09b8c40b-2394-49fc-9228-94c1ba9af9e2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3e5ea49-05b9-4ba7-9e52-6e95b27e9cfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c1855e9-6ac2-4dc0-8b08-920a0480e098"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "90cd404e-c5ec-453d-b901-cc8d5e8a2e5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aecc0ed8-f856-4102-b28a-a0a5160caf59"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7588fbb5-75fd-4d66-bbc6-ebf497b2af9a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "db8b0c39-7f2b-4592-9772-3b2a212685bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "938e58cc-3b74-4239-a994-d92f11abc37e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c4ca6c7-d4dd-4494-8cd6-c44ef502539e"
            }
          }
        ]
      },
      {
        "id": "e3dd7c4b-af72-4e5d-adae-bcd2d2773662",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "26268023-b105-4598-8e5e-243c4b938e2b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb4f3324-adb6-4556-9fb8-b6470b766cd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "42d25803-3f18-4104-ac2f-f36a15a03eed",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3420c520-48aa-448a-bc2d-9d582342e74b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "392c61eb-b740-4681-9069-b195026e2b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "791c732a-e38a-45fe-a458-22ab6aa6865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a1c062b9-6bbe-4ef5-938c-e6f224f24f96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae1237a5-b515-45b5-a376-a34d4decadc8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cece4d29-bfb2-4fae-876f-4f9f2bf2d930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a45472ed-db8a-4863-9f3d-7313fb3e4453",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e9ed4742-1428-407c-b189-5a46830ba008"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "74edf445-7ee0-437e-8f97-1f78b48f50d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a161d9e9-c95f-455a-b2f0-da59ceaf4513"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "daa95677-8eb1-4a9d-aff8-7996f18bf950",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b61b4433-1020-4d9e-a7fb-a64fa41b481b"
            }
          }
        ]
      },
      {
        "id": "7c4b353d-4b64-4feb-a6d9-ccd960bcc04a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d9b1a04d-0ff6-41d6-b716-6963b6e43fe7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8de9f80c-a3c4-44fb-8388-74f7f60f971f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6578b08c-9336-476c-b2fb-19b12f80fc2f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fdeb59-c65c-44af-b2de-1c8e36d0780c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "683a50ce-60b6-420e-9d5a-83a24e984af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ecc021-6ad8-4612-879d-26b1df577d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "704bfa6f-5d7f-4297-8f57-0efb633611cf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a589349-affe-443f-92b0-32d498f6df92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "426b1a54-54d6-4ba6-9634-a3d077e83441"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54f413c0-9316-429e-9cf6-23167b925cdb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2be4e060-2dd6-4437-b9f0-8b0f1e3a23d6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "233dcf05-3123-4c52-a2f3-1186b8b4c3d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "04814366-73f9-48e7-9212-d40615620553"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcc2eea6-aecd-4dc6-9a95-8f1db7edf0a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ea5c2e7-469a-43f0-8567-db4ee66bb56f"
            }
          }
        ]
      },
      {
        "id": "9c63551f-851d-4f22-9ab9-8c095bcfbb72",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a7cec40-825e-474d-baca-911d1e2550de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c265d6a-9506-4b4e-ad4f-fa18f79b957b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4de2df1-3e93-4b95-9781-ed500a46a6ce",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d44aaa1-ac74-4c57-b382-62f20c7f2288",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36751bc2-b5e5-44d3-b04a-bbd476208027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ffdf99-4c72-40de-bd46-c25b3b9305b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9d50baa5-e0e9-41b8-af36-8845b05b1654"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b598d625-90ce-487a-a4d1-d0612b703ea1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798cc3c0-0c74-482b-95c8-43e62dd4540b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffb77e90-6d7e-4a99-aa14-225b87a78e0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "797d3d40-8738-4f9a-bdb9-06c88332ab84"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f981da-e196-4d58-b0da-ce919690d516",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee13125a-86cc-4f4a-a40e-a0f928752fd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8c15c43-f945-42bc-b0b3-1bddb212d404",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b04384b9-a0ed-4be3-be9d-ca69c55d9932"
            }
          }
        ]
      },
      {
        "id": "534e8b46-ac6c-417a-842a-92ff91370d20",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85d06948-959e-4787-b02c-1c914c68078d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76f35d7f-19b2-41bc-b0bd-c15a89c74f5e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8c715cbe-16b8-4c42-8617-a70554027506",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ceed17e9-dca1-41b1-8548-1d9b595d9ad4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b703d4ed-02c9-4596-8f44-0871d2cfa6d2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 244.91228070175464,
      "responseMin": 8,
      "responseMax": 10819,
      "responseSd": 1271.1144727488709,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1700786071755,
      "completed": 1700786151473
    },
    "executions": [
      {
        "id": "357e5129-9324-4f69-a575-e851ac9fccef",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "be04eeaf-b8d7-4863-b3d2-35e61819f47a",
          "httpRequestId": "d0ba4da9-c606-45a2-a4a3-9e3f37ac27c3"
        },
        "item": {
          "id": "357e5129-9324-4f69-a575-e851ac9fccef",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "13e62ac5-c9ff-4b89-a256-1aa6109b79e3",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "567c9b0e-61f8-4a21-b9f4-9bb29160d2ef",
        "cursor": {
          "ref": "05196dbb-c7ad-4de7-b15b-7c04bc9ea92b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "58a58b9d-97c1-4ec5-939d-095026200c96"
        },
        "item": {
          "id": "567c9b0e-61f8-4a21-b9f4-9bb29160d2ef",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b5100dc4-7de2-404d-a702-43aaa629c68c",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "cd8e4d33-d158-445f-986c-0bda92751de2",
        "cursor": {
          "ref": "cd3eebb3-cb27-4a60-a7f3-8930d8f43f0a",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "77467f94-29c8-4197-88f8-f79b7e9644ac"
        },
        "item": {
          "id": "cd8e4d33-d158-445f-986c-0bda92751de2",
          "name": "did_json"
        },
        "response": {
          "id": "33ef5bda-306f-49ed-95ec-b42d1e0efbf2",
          "status": "OK",
          "code": 200,
          "responseTime": 1808,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50c029d-ed8d-4743-8eaa-3f12a08b1228",
        "cursor": {
          "ref": "2844a16c-957a-4feb-9b5a-dfc18308641d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fbf8c2d0-1a16-41ff-9834-b0c57c152cdf"
        },
        "item": {
          "id": "a50c029d-ed8d-4743-8eaa-3f12a08b1228",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e6d8390-4bed-46f9-977c-c4bc9073d246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50c029d-ed8d-4743-8eaa-3f12a08b1228",
        "cursor": {
          "ref": "2844a16c-957a-4feb-9b5a-dfc18308641d",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fbf8c2d0-1a16-41ff-9834-b0c57c152cdf"
        },
        "item": {
          "id": "a50c029d-ed8d-4743-8eaa-3f12a08b1228",
          "name": "did:invalid"
        },
        "response": {
          "id": "3e6d8390-4bed-46f9-977c-c4bc9073d246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e1b563-1cce-48d8-a1dd-73a34d230bab",
        "cursor": {
          "ref": "def59704-796b-43f4-af21-172a4daefa85",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c349401-adf2-41f1-b5d2-bc893aa9948a"
        },
        "item": {
          "id": "77e1b563-1cce-48d8-a1dd-73a34d230bab",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bbe95575-309d-483d-bd31-68e5de46ea5f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1401,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63640fa6-7353-407a-91d4-af3eb5f21835",
        "cursor": {
          "ref": "cdc633c8-ed19-4876-9d4f-08173c095cdc",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2836beca-b49c-4fc2-af83-fed1737592a2"
        },
        "item": {
          "id": "63640fa6-7353-407a-91d4-af3eb5f21835",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "56186ad2-f94c-4bc6-865c-534f731ede14",
          "status": "Not Found",
          "code": 404,
          "responseTime": 36,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da09f0e9-9add-4366-a748-6081457aae1a",
        "cursor": {
          "ref": "0d8d9ab0-4335-42e4-9de5-36328ef4e1a9",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f79c02d4-f9fe-4a07-b532-ca18703e97af"
        },
        "item": {
          "id": "da09f0e9-9add-4366-a748-6081457aae1a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "62990e79-3eeb-4e2c-afd5-570b149418ff",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afce287a-c188-48ad-bcb3-d317e4f21848",
        "cursor": {
          "ref": "81072d14-fe6e-49bf-9955-74c083210502",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8b8bba9e-c12a-4eef-b0a1-06a4ae79efb3"
        },
        "item": {
          "id": "afce287a-c188-48ad-bcb3-d317e4f21848",
          "name": "identifiers"
        },
        "response": {
          "id": "acd6b3cf-2fa2-4936-acfb-e57a5543f2f0",
          "status": "OK",
          "code": 200,
          "responseTime": 1197,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62fa0852-2aac-4ce2-b04e-50b6a64e08e8",
        "cursor": {
          "ref": "35542cdd-a1f4-4bf6-b628-fde931eb38bf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ffc17f1f-d9d9-48af-a7d7-49620fee1db2"
        },
        "item": {
          "id": "62fa0852-2aac-4ce2-b04e-50b6a64e08e8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "33d819f9-48a1-48e2-93c3-2afd11cfdb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4026b8-5b00-4dfe-97a2-5b9b960f0757",
        "cursor": {
          "ref": "1629bebc-1e86-42bf-a9a4-d6f8394e9bbc",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "886e3958-c54f-4969-858a-968aadaa6b09"
        },
        "item": {
          "id": "3d4026b8-5b00-4dfe-97a2-5b9b960f0757",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "56374e0d-cdd5-4c9e-8c64-ae3e8ef4149a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eb69fc8-4f64-4c5a-a2d9-a67832b39950",
        "cursor": {
          "ref": "d476a5f0-44d0-47d1-b41c-eda9e9ee8252",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a15efc06-5349-43f4-aa18-96d080ca9c0e"
        },
        "item": {
          "id": "1eb69fc8-4f64-4c5a-a2d9-a67832b39950",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3267842a-6562-4b47-add3-9b8192e04481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47fff26-b61e-4e17-b7e5-d2e2e3dca4ce",
        "cursor": {
          "ref": "27b3f19d-3697-4b7e-85d7-17e2e0c94555",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "70d664fa-3550-45d0-88a1-a2de7d1371de"
        },
        "item": {
          "id": "b47fff26-b61e-4e17-b7e5-d2e2e3dca4ce",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4c527335-afe5-48ce-a090-0109f084ce8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfaa0c0-782d-490c-8ae7-5c05f9b2b38b",
        "cursor": {
          "ref": "c6f5a82d-8df1-4509-b914-6387b2fb4c0c",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "104923cb-ec53-48ac-86d1-ebb155da57b9"
        },
        "item": {
          "id": "9bfaa0c0-782d-490c-8ae7-5c05f9b2b38b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "56e7c77a-2c73-49a1-95f3-986f011c0de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0167f00e-7295-43a4-a525-4897b8123746",
        "cursor": {
          "ref": "bd2a3c9e-4d52-4c04-943b-e1163ea70056",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3ebfaaa-e37b-4bb9-944e-3c655ee11088"
        },
        "item": {
          "id": "0167f00e-7295-43a4-a525-4897b8123746",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "944e7d20-4bb8-410b-9d4d-5a1abf64293d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816fa995-959b-468c-b5d9-5bbab15ec259",
        "cursor": {
          "ref": "39b9d3ef-76b8-419d-b9fe-a074ec868658",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3dfc1645-e9fd-4502-9ba1-f33817e2999b"
        },
        "item": {
          "id": "816fa995-959b-468c-b5d9-5bbab15ec259",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "83bed3d8-93fd-40c8-8ad8-513471a9dc54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cff4c6-4ad0-49a9-9078-f316ed64ad4b",
        "cursor": {
          "ref": "50df270f-551e-4126-8a6f-2c12077f7d7d",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ce88a47f-cccc-4ee7-9126-311b0b0e08f6"
        },
        "item": {
          "id": "03cff4c6-4ad0-49a9-9078-f316ed64ad4b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "dce50d4f-19aa-4cc6-b413-2303751df765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2692d8e-8e57-47c5-aa9f-46beb610cba2",
        "cursor": {
          "ref": "744c5bd6-acc8-41f1-a9e5-45d9134de3f4",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "77111a6c-d3a7-4880-b99d-4a44d060cd9c"
        },
        "item": {
          "id": "b2692d8e-8e57-47c5-aa9f-46beb610cba2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "967927e1-c75a-4283-87cb-832878bb3dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd3acace-2ab2-4fbf-8c9a-0316a71d1a3b",
        "cursor": {
          "ref": "d2dd7da4-0156-4218-9556-50ca61cccdf0",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "73e8cad7-a1fd-4d2b-9962-9ae1535b0a07"
        },
        "item": {
          "id": "bd3acace-2ab2-4fbf-8c9a-0316a71d1a3b",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "328cec9f-ed55-4dfa-835b-3ed7d77c8aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9f53652-cfb4-434d-acaa-51abb375f327",
        "cursor": {
          "ref": "5eb855f9-d89b-435d-8820-d6970e16a6d2",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "78951401-8a18-4431-8a5f-71f89c58da6d"
        },
        "item": {
          "id": "d9f53652-cfb4-434d-acaa-51abb375f327",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d190fe86-d0d8-4df2-ac95-55b6c020a134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8322cb9-351d-4ef3-be8f-118a931dfe01",
        "cursor": {
          "ref": "edb5d9fb-bb26-4c31-b512-4f9a5c4146e6",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c910c62a-0d96-4027-9ca9-7eb9b96e69f7"
        },
        "item": {
          "id": "f8322cb9-351d-4ef3-be8f-118a931dfe01",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cd649ad1-0684-41e0-a35d-5f016d49d971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45d5ced-e0c0-4211-81f7-5aca12fa548d",
        "cursor": {
          "ref": "7115bcba-a54c-4228-b058-450f29fac22c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "80dcfb17-9fba-495d-af6c-fd810a3a9066"
        },
        "item": {
          "id": "a45d5ced-e0c0-4211-81f7-5aca12fa548d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "823285d4-fc6b-4b16-b190-6d9691f3072b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ab6ea7-176a-43db-bcd6-046dc09c03a6",
        "cursor": {
          "ref": "bcd59dd0-2e6f-4e35-8188-cd2a19695517",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "46e4e95a-395c-45a0-a2e4-e2d507fafe0e"
        },
        "item": {
          "id": "31ab6ea7-176a-43db-bcd6-046dc09c03a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "85de0b6e-d5c7-41f9-b706-e07a0ec43317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d55f4c76-2a45-4f43-ade0-6bbf84c399d3",
        "cursor": {
          "ref": "9d13b0db-c5ba-4223-96f0-b85d343d6fe9",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c5cea6c1-aca9-4d8d-826c-ba9f6589eff4"
        },
        "item": {
          "id": "d55f4c76-2a45-4f43-ade0-6bbf84c399d3",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bbb09e70-5772-4f38-a81c-18d6f403db3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca35c1c1-1354-42c8-866f-15b33d7e940e",
        "cursor": {
          "ref": "fda373d1-f1bb-4542-8efc-d8ac83cd0d5b",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e52a177d-1fae-4173-a038-f80652d08199"
        },
        "item": {
          "id": "ca35c1c1-1354-42c8-866f-15b33d7e940e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ba933860-ddb1-474e-941d-5c981482fdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bf456a-6b4a-4da4-a26d-dfc1cb067435",
        "cursor": {
          "ref": "77d81f91-91bd-4f5e-b149-d96d70ef1d4e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "406711a4-2271-4c4a-ac59-d457fcbf0209"
        },
        "item": {
          "id": "74bf456a-6b4a-4da4-a26d-dfc1cb067435",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a61f5ab-bd8e-43b2-b351-98801d33d431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5768b7-cda6-4bad-a20d-80e90e97613b",
        "cursor": {
          "ref": "deea6971-a7c8-43a0-b6f3-8cabaffdd7ed",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "636da409-f466-4402-be29-0661708b6fb0"
        },
        "item": {
          "id": "3f5768b7-cda6-4bad-a20d-80e90e97613b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "64d66dc2-49d2-4ce7-af05-f4d88bcbb969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5377cdf8-d551-49db-ae51-7dd9869b8089",
        "cursor": {
          "ref": "7c9c8f6f-4b35-4990-8e69-dbb20c76d786",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "d8ecbd70-e542-4b65-aec4-86f543f94864"
        },
        "item": {
          "id": "5377cdf8-d551-49db-ae51-7dd9869b8089",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "bdf492e2-1902-486b-bdaa-ca19587e4de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39868308-20e7-4743-bac1-d7292c67f086",
        "cursor": {
          "ref": "451d14ef-4282-4082-b009-05ab0fa15be2",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5f920cf1-3e4b-48b9-8344-4818d54ddedb"
        },
        "item": {
          "id": "39868308-20e7-4743-bac1-d7292c67f086",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "a98b3ab1-bb2c-4922-b896-835840818821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893db550-2a11-4b05-b8f4-610c1934701f",
        "cursor": {
          "ref": "9adba432-526e-4f65-8b2f-c024265788b2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a2bd3f70-3d87-493f-b8b1-d869c0dc8a67"
        },
        "item": {
          "id": "893db550-2a11-4b05-b8f4-610c1934701f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d3511b16-5fd5-44c6-8ba1-74521e344c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4650ccfa-4618-4f07-baee-0104701231f2",
        "cursor": {
          "ref": "d2932935-64c5-4d0a-9d3d-cfa5cefbe8aa",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "6ec6d1a5-0a4d-4eaa-869d-3df54b95cc4d"
        },
        "item": {
          "id": "4650ccfa-4618-4f07-baee-0104701231f2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7157cf67-6e09-4aae-ba19-9248b7f076ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1222f8-ac4d-47b8-baba-1f032cc7ebd0",
        "cursor": {
          "ref": "f2d644bc-6125-4011-8441-1f63b2e344ca",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "904ab989-1f3e-4818-aac4-df1fc7ba17ba"
        },
        "item": {
          "id": "db1222f8-ac4d-47b8-baba-1f032cc7ebd0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "76b71337-eff2-4be0-8fb5-d4f69bc35121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ac0ce0-9fd1-40cd-931d-56572c16f864",
        "cursor": {
          "ref": "661be38b-ab03-46d3-b198-af613c39c0c4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4b3bcdc5-9cc0-4670-b709-9d5651ba1973"
        },
        "item": {
          "id": "95ac0ce0-9fd1-40cd-931d-56572c16f864",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "03efbdbd-a96b-40f0-84ef-ac81331c5777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6f15b8-235a-4482-90bd-98011b072387",
        "cursor": {
          "ref": "5bdfefc2-0978-4785-9fd7-d1c4fa70d824",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b0c4452e-d6e8-421a-ba84-3a5be5a94404"
        },
        "item": {
          "id": "bd6f15b8-235a-4482-90bd-98011b072387",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "32ed9280-4da3-44bb-a9c7-7a9e4f39f85e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ace5ed7-8e95-4929-81f0-87ae71b6e127",
        "cursor": {
          "ref": "23e39ff1-a781-4aa5-9c5e-07ba073b39a9",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c6a05be4-cb4f-41bf-a687-8990029a5487"
        },
        "item": {
          "id": "9ace5ed7-8e95-4929-81f0-87ae71b6e127",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f6123063-8bf3-4f53-9043-2d78f6453ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba973674-7347-4e46-be68-ecd11e44480f",
        "cursor": {
          "ref": "530c7d2b-4c72-43ff-972f-69eb6ff4064b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c364fde7-6f1f-4088-8cfd-3b42dfb56668"
        },
        "item": {
          "id": "ba973674-7347-4e46-be68-ecd11e44480f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "88c54e0e-ff8b-4fb7-9b6a-d7fc535f8aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ac8cb7-0808-4260-8772-9c88ff319ac5",
        "cursor": {
          "ref": "ca17ec6b-0876-4dea-a5b1-a5da18eb5d3b",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "4aa66760-9f2b-4439-9efe-4b7419d93bc8"
        },
        "item": {
          "id": "f8ac8cb7-0808-4260-8772-9c88ff319ac5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1b097f50-3e4a-4cd6-96f3-06d17be8697e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "631c5701-f1c8-449e-859c-b4cef5853c42",
        "cursor": {
          "ref": "2ad3df33-acbf-4873-a351-22e64a3a8c09",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f114e639-64bb-4986-8058-889099897ff8"
        },
        "item": {
          "id": "631c5701-f1c8-449e-859c-b4cef5853c42",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7c3b4af6-ad3f-4d12-8abc-a6342c6fb9dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64736767-cf7c-48e1-a024-2bb159f8aff6",
        "cursor": {
          "ref": "26113e7c-8f1f-4134-8fd5-dd87a3514067",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "43b75a2c-6912-4b08-b756-0ebff7cc5b9b"
        },
        "item": {
          "id": "64736767-cf7c-48e1-a024-2bb159f8aff6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d95aefa7-754b-45d2-8d65-e4b363fa0d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db71059-5457-4a7e-aa2b-068d1c36532c",
        "cursor": {
          "ref": "337cc31c-3b6a-4eed-8fca-0697413d9805",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "8c91b6ff-10ac-472d-bbe3-9f39d9af615d"
        },
        "item": {
          "id": "4db71059-5457-4a7e-aa2b-068d1c36532c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "28ca5818-1c66-4296-98c7-8543fc713af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94c2b8-4e9a-4bf3-8fd7-cc0483a7d0ce",
        "cursor": {
          "ref": "03b95b7b-e402-4ba9-9b85-bec9b1bd4885",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b8d696d8-c782-4760-b3a6-fca70be98982"
        },
        "item": {
          "id": "5f94c2b8-4e9a-4bf3-8fd7-cc0483a7d0ce",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "68b88b47-300d-42ea-a1c4-4181f10b5828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6cc2c6f-e20e-4486-aabe-9a83c293238b",
        "cursor": {
          "ref": "dcc778c6-36c5-40df-af87-c728bad25090",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0f0a12d5-2199-4cd1-9ed0-7f0488df802e"
        },
        "item": {
          "id": "f6cc2c6f-e20e-4486-aabe-9a83c293238b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "be3ef443-e24e-4467-903d-375e4be19533",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10ea9268-fd28-4827-8a27-0f4a6f369fc9",
        "cursor": {
          "ref": "0887b987-3188-474e-9f0e-3592dbdf980c",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "418bf03b-56cd-475a-a548-703b4f83f464"
        },
        "item": {
          "id": "10ea9268-fd28-4827-8a27-0f4a6f369fc9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "29a8e596-c4d0-48fa-beff-f853ddba5581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddc917f-d5e3-4a03-ab0f-56f4c15e3355",
        "cursor": {
          "ref": "3d0cb465-4474-4724-adf8-874dbae9db7a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "bd574554-7573-41f0-937a-e40f5b37fd5b"
        },
        "item": {
          "id": "cddc917f-d5e3-4a03-ab0f-56f4c15e3355",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "64f24d91-2792-4f3e-a2cf-8188daa200d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e67997-8ce3-4891-b639-071f3b674f1a",
        "cursor": {
          "ref": "cc90f4f0-60a2-491f-81be-ddbc5a5df053",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "20599262-ccda-4799-97a0-552692385561"
        },
        "item": {
          "id": "94e67997-8ce3-4891-b639-071f3b674f1a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3afd1b7e-7716-4e70-b33a-e407c181f199",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1381,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc2e1b4-3db2-4f96-95c9-b6a6c3bf9069",
        "cursor": {
          "ref": "69605c00-9c3a-405a-bd2d-466555f01690",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a97853b0-2ca8-4a05-8953-bff74d3280bc"
        },
        "item": {
          "id": "7cc2e1b4-3db2-4f96-95c9-b6a6c3bf9069",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d63dc31d-101d-4c72-9d3c-63417bae38f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fa426e-0087-48bb-833b-754aba24cc30",
        "cursor": {
          "ref": "dd595ebb-463d-4986-90a2-cade85806f62",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81c4974e-e24b-443f-bcc2-56e867d8346f"
        },
        "item": {
          "id": "23fa426e-0087-48bb-833b-754aba24cc30",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "7ad6c943-cf2f-4e48-a7d2-7017c7724c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585f2327-fc02-4ac2-9604-788d672daae2",
        "cursor": {
          "ref": "b382d53f-531c-4716-8cbf-9a7e4dcea15f",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "adf5866f-a525-472d-996e-57fb9c79b37e"
        },
        "item": {
          "id": "585f2327-fc02-4ac2-9604-788d672daae2",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6adf1f72-ca17-4a6d-bc86-4308a12d0710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20bc7ec-87b6-45bd-a0e4-10d3cee0e818",
        "cursor": {
          "ref": "15b7b9b3-3be4-4c20-b980-858483fa4ccf",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b716eecc-3cb0-4c40-ad54-9e150a50ec5e"
        },
        "item": {
          "id": "b20bc7ec-87b6-45bd-a0e4-10d3cee0e818",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4a8bbc2d-3b92-4d59-80b6-d4839f6992f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8920e003-1228-40fb-9b8e-d3653e5dc24d",
        "cursor": {
          "ref": "d120ee12-d587-4e98-813c-614ae801b795",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "217fac2a-f5d5-4aed-93c4-df16bcde7fe7"
        },
        "item": {
          "id": "8920e003-1228-40fb-9b8e-d3653e5dc24d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "a87c6807-799b-451b-8ad8-742d2c731510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59338acb-3733-4e01-81cd-ae3732ef9e5e",
        "cursor": {
          "ref": "8d1fa1eb-3ad1-4ef4-9678-68b651565643",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a5e4d1c-00e9-4502-8af2-47634ec152a8"
        },
        "item": {
          "id": "59338acb-3733-4e01-81cd-ae3732ef9e5e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "37f946dc-0af9-4be7-9e1c-c97da1ac3b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe77d8e-d65d-4d05-b5e9-8a0b7a5f9a5b",
        "cursor": {
          "ref": "7373a967-9bea-4982-8d27-295f5766c229",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eb7abe63-3c8c-4d24-bc6b-f4742c211abf"
        },
        "item": {
          "id": "3fe77d8e-d65d-4d05-b5e9-8a0b7a5f9a5b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d6352a3a-5e92-4fec-b65a-b88149d9349e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1469,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b5f7c7d-1b30-45fe-a268-d1f4eadf77ec",
        "cursor": {
          "ref": "e5a6baf5-7f08-4430-bbff-17e3acf7c346",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f576bad1-330a-41c8-bc2a-477fc9eb4ad6"
        },
        "item": {
          "id": "1b5f7c7d-1b30-45fe-a268-d1f4eadf77ec",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "09579c91-8080-4204-9be3-26658cbccc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17afadbc-6b66-4d55-bf4e-305c6a49b719",
        "cursor": {
          "ref": "16a1caba-a2e9-4a47-a05f-c287b000dc99",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a72a8677-0882-4f75-be72-d53529722ceb"
        },
        "item": {
          "id": "17afadbc-6b66-4d55-bf4e-305c6a49b719",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "69cc35fa-ee11-47a3-ab43-ed6002d4bb15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053cc769-2ac8-449c-aab9-9216a42a724a",
        "cursor": {
          "ref": "a3dc97a6-6fd5-419c-9d42-ad1888003161",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a43599bd-9099-4f57-88f5-8eaa479134ae"
        },
        "item": {
          "id": "053cc769-2ac8-449c-aab9-9216a42a724a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6ccf649a-2086-4c1a-9071-7f69c6a309e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e969e5-a140-4277-97ac-90dd82f5c689",
        "cursor": {
          "ref": "42d7df5e-ec01-494d-84a3-ecc0858755ae",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "87592748-f7b2-43e6-b892-0ebc93d48c35"
        },
        "item": {
          "id": "36e969e5-a140-4277-97ac-90dd82f5c689",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9e21f9a2-4e8d-49ea-8fb0-edf156efd85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752c6a5e-5f07-4135-a3e9-389452cd6213",
        "cursor": {
          "ref": "21442c82-2841-4f17-b81f-2d115240eb18",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "81076de0-3162-4282-b251-608634cbe8d7"
        },
        "item": {
          "id": "752c6a5e-5f07-4135-a3e9-389452cd6213",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7b8c524b-423b-4423-8154-0fa2b39a4f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c80bd02-4f12-45d8-969f-a41cb6eff9a8",
        "cursor": {
          "ref": "73eae5c1-e735-470a-8fbf-47503b0b587d",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "91fc3fc5-c9bc-4505-8829-f10a9ab70220"
        },
        "item": {
          "id": "8c80bd02-4f12-45d8-969f-a41cb6eff9a8",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f90f52cf-09b9-4f18-9fba-02e4f94433fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d42d5277-17f0-4f73-ab1d-8e31348b2099",
        "cursor": {
          "ref": "1a55795d-e45a-4186-9959-c9673b48d446",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bac107cd-7664-482e-8646-10db4633087f"
        },
        "item": {
          "id": "d42d5277-17f0-4f73-ab1d-8e31348b2099",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "5d3da209-de97-4848-a740-81bc7b10e131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a2c489-acd7-4ee5-991b-54b9d47a97a6",
        "cursor": {
          "ref": "3ba917d9-829f-4df0-9802-0db210617485",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "56401908-ffb4-49d5-918f-c2ad814fc357"
        },
        "item": {
          "id": "a0a2c489-acd7-4ee5-991b-54b9d47a97a6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bfef81d1-6933-4373-b6c4-444f9cc0cb41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "579a022a-341c-4cc4-8d6f-cf2df8039598",
        "cursor": {
          "ref": "3eb518f9-7166-450c-9865-bc6dd8ebedfd",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c91e62ff-0324-48b2-a750-e03438cfa50d"
        },
        "item": {
          "id": "579a022a-341c-4cc4-8d6f-cf2df8039598",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e1e82f54-5d98-4ac9-95bd-8be1f4b6c006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e4ca89c-f191-4c61-bc7f-efd48e2738f2",
        "cursor": {
          "ref": "5268cf0d-335e-4cb1-83f0-d93779631c13",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "17f74436-1ab4-493b-acef-fb470f36db53"
        },
        "item": {
          "id": "0e4ca89c-f191-4c61-bc7f-efd48e2738f2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a91f196d-021b-4204-8573-9b81ee85e19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6dbc86c-6bc7-44fc-86b3-de7508292bab",
        "cursor": {
          "ref": "2c1c4af7-ce0b-471f-8f47-6f0f32239eb4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "17d555a9-02c0-41c5-9427-a3694416e09e"
        },
        "item": {
          "id": "a6dbc86c-6bc7-44fc-86b3-de7508292bab",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "adc1cc22-8544-4f4b-8aeb-c437801e9b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4388821a-807f-4c38-a492-e6ae08c24bb8",
        "cursor": {
          "ref": "297539a3-4f90-4eff-85c3-b9f8c72cbeaf",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "51dd2aec-bc1f-48e4-8776-2299b5324ba2"
        },
        "item": {
          "id": "4388821a-807f-4c38-a492-e6ae08c24bb8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "9e142803-2064-49cc-8959-9d8420914a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd31484-1684-42a0-98a8-cdfd4d4c0d54",
        "cursor": {
          "ref": "994c3705-a35d-4d6c-b507-ef830f9db8e8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9904faac-b1e8-4ef8-841d-c0a110ff3185"
        },
        "item": {
          "id": "fcd31484-1684-42a0-98a8-cdfd4d4c0d54",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ecd501b2-94b2-4b9e-820c-a9d4398f7382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e63cdc-c52b-43bb-ab3a-9edd4f3a9ebe",
        "cursor": {
          "ref": "10fcd426-bede-4571-b11e-654835cf5911",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "bf6e3e68-6524-4f21-b22a-a0f47eff3551"
        },
        "item": {
          "id": "42e63cdc-c52b-43bb-ab3a-9edd4f3a9ebe",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "7b754d7a-98eb-42b9-9beb-0f5ab0e96382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7a0720-3fda-4ac2-b67d-b5383de6c43c",
        "cursor": {
          "ref": "35b4aabd-4042-466f-a7c4-56ee20cafcf0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7d3b2316-2b46-452b-8207-17caebc1a5c5"
        },
        "item": {
          "id": "9c7a0720-3fda-4ac2-b67d-b5383de6c43c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5f362e97-109f-4ca4-8774-af184cb967ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb0b2e1-e900-46e6-8fae-9845ddbb8d5d",
        "cursor": {
          "ref": "64c4a70e-11c0-49b4-accc-f7538cc8832e",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1357d3e0-b7dd-42e3-90f8-db01020f6d5f"
        },
        "item": {
          "id": "bdb0b2e1-e900-46e6-8fae-9845ddbb8d5d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a8a8e9c3-0f64-4339-a480-e20f8a5cb1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba1dd24-033b-4965-b0fe-49916588adb8",
        "cursor": {
          "ref": "120ee112-8c38-4d11-945c-ea8c4c715da9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "262163ff-3f12-4cb3-b0eb-f274cb710c7b"
        },
        "item": {
          "id": "8ba1dd24-033b-4965-b0fe-49916588adb8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f9f4efaf-9a5f-4302-8e8e-facb9da1577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be79647a-1af3-4cbb-be94-9d6aab611021",
        "cursor": {
          "ref": "ab252271-127e-406c-94d1-175b93926d07",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "68016935-5b90-4e3a-bcaa-5974d3af1240"
        },
        "item": {
          "id": "be79647a-1af3-4cbb-be94-9d6aab611021",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "bb80154b-d2db-405c-b8df-b6785c07d653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc11748-056a-47c8-98cd-290055c7a6e1",
        "cursor": {
          "ref": "dde1167b-83c0-45e4-b7de-f81021c7fa44",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "27aea778-1a31-45a8-aca6-d15431f19164"
        },
        "item": {
          "id": "1fc11748-056a-47c8-98cd-290055c7a6e1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "694fce53-4e1b-4daa-a419-265b51b71fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d422b9-0ff3-4f48-8061-40fb191a734b",
        "cursor": {
          "ref": "bc79b1cb-aa1e-42b3-ae54-0adcefcd8f9a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6f40edef-3ef6-426a-9c80-a4198fefffd3"
        },
        "item": {
          "id": "52d422b9-0ff3-4f48-8061-40fb191a734b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e93e2a32-1c53-4d9d-8790-2bb9c4e0f6ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d04845d-c9b8-4208-af40-4db282a1ea54",
        "cursor": {
          "ref": "50206e7f-6fc8-4491-97ea-af260a1e0111",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "fb3bf848-223d-4c6c-8edf-bb731de8b046"
        },
        "item": {
          "id": "3d04845d-c9b8-4208-af40-4db282a1ea54",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c16c06d1-a031-45a7-a0f8-df65cdf52532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e2735b-96b3-4158-b7b4-b66f9a91c731",
        "cursor": {
          "ref": "1e390547-133a-4a65-aa1d-19e1ed928e9a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8a723cce-48ff-4f86-b6a1-896d8d04d34f"
        },
        "item": {
          "id": "a1e2735b-96b3-4158-b7b4-b66f9a91c731",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4be9eb37-6e17-46ca-b3c2-64ae2499cd8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbafa7c3-6f62-4cc9-b640-a317b9cbe7ed",
        "cursor": {
          "ref": "45d6ed27-5e8d-4d1a-8adc-98262a710888",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "594870df-846f-4345-ac4e-da6e6b10d7c4"
        },
        "item": {
          "id": "dbafa7c3-6f62-4cc9-b640-a317b9cbe7ed",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8f63b2b5-5891-4b1b-93fe-e4bdff5f46fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487eb534-3efc-419b-894d-076a797644ef",
        "cursor": {
          "ref": "05d463b1-9217-4341-9f60-9cb490b6b124",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1a548999-16ac-4adc-8581-d74a790756ea"
        },
        "item": {
          "id": "487eb534-3efc-419b-894d-076a797644ef",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "e26aa9ba-0267-4fa1-be89-9e44f21615b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b5fd88-e581-44b6-b53b-32b0e06f56e2",
        "cursor": {
          "ref": "c70e5ab7-d61f-4615-abbb-3a538925941b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f4415c60-ce73-4ed7-8f35-365c120a2110"
        },
        "item": {
          "id": "88b5fd88-e581-44b6-b53b-32b0e06f56e2",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a1cb10b6-2fe7-41a6-b162-23af76ae418f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abb607bc-f124-47e7-9661-35248b629f65",
        "cursor": {
          "ref": "d7591d90-033c-4172-b138-7cb02fcbf531",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "816a2bad-e0c5-46c5-89ef-3036f6434c76"
        },
        "item": {
          "id": "abb607bc-f124-47e7-9661-35248b629f65",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e52844d4-383f-45c0-83ac-67136b4d8667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3662b85-4707-4880-b9cb-02715a39371f",
        "cursor": {
          "ref": "02c61e53-6bd2-4df1-9055-d0ee6c5aa98b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "1efb58b0-d63b-4b20-baad-1f5f61826c02"
        },
        "item": {
          "id": "f3662b85-4707-4880-b9cb-02715a39371f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8663f69f-4b1f-4d03-9714-94c7c52f0e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886497dc-b111-4c33-a8e0-b82daf175f71",
        "cursor": {
          "ref": "d9d63ae0-86d6-4b04-af4b-bf2d3025b7d2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c4776561-4ec5-4c7e-a208-f4a90f508c21"
        },
        "item": {
          "id": "886497dc-b111-4c33-a8e0-b82daf175f71",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d6557ad5-30f4-4178-9a9f-3a8cf229991a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30618383-594e-4001-b495-ff51e2b4fcbe",
        "cursor": {
          "ref": "34c17dc8-81c5-40f4-b704-29aa64ea0b82",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "77b9d472-3972-4c8a-9063-274baf3e52a1"
        },
        "item": {
          "id": "30618383-594e-4001-b495-ff51e2b4fcbe",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "22cb7272-057b-492c-addd-037978e5040b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e6e089-cb3a-4ef6-a4a2-0ac49f70f660",
        "cursor": {
          "ref": "a01755eb-29f8-4c40-bda2-eb9087751fe7",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "90f51c4e-89d5-4cb7-a228-a0139c9cbe88"
        },
        "item": {
          "id": "28e6e089-cb3a-4ef6-a4a2-0ac49f70f660",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bad25a28-4449-4b85-b795-f146099a43f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d125010d-5fa4-4675-8d49-55312d6bd86a",
        "cursor": {
          "ref": "17569f90-40bd-4aee-a0b1-04c582eb9d76",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e92848fa-4390-4110-b297-cd77517d5d1f"
        },
        "item": {
          "id": "d125010d-5fa4-4675-8d49-55312d6bd86a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d7c0ba0c-e3c9-4698-8d37-0e9eeda5f313",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64424488-d5d4-4a37-969a-4ebfb9d86b5a",
        "cursor": {
          "ref": "90dd65b5-db72-4e6e-a04f-18e8798758c4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6e1a5eb8-2c43-459c-a8e3-f50dc1910418"
        },
        "item": {
          "id": "64424488-d5d4-4a37-969a-4ebfb9d86b5a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1b060e6a-92f8-4553-988b-5eda37be917b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717a90ed-85c5-443e-9cfc-1d8cf1632f19",
        "cursor": {
          "ref": "288f6717-7de8-4584-acaf-8952f05f1f65",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "596e3ff2-faed-43be-9211-b6201cba159a"
        },
        "item": {
          "id": "717a90ed-85c5-443e-9cfc-1d8cf1632f19",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "212f38a1-2bb6-4114-9095-d927cbc03a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147fb0a7-4afa-41e9-8453-3e4ded23ed85",
        "cursor": {
          "ref": "b7bb0eb2-8c55-4c96-ba25-4c294f9443dc",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "88405d5a-f492-42bd-8628-179d0ae4295a"
        },
        "item": {
          "id": "147fb0a7-4afa-41e9-8453-3e4ded23ed85",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "08a15118-0c50-4169-a1ba-fc332402633b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52c65f11-0cb2-408f-923e-a5135827d55a",
        "cursor": {
          "ref": "301fc2ad-2463-49f4-8f62-8c017ac27251",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "14cbe11e-9b55-4b59-847a-434224a74f87"
        },
        "item": {
          "id": "52c65f11-0cb2-408f-923e-a5135827d55a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2b933977-a39c-4514-8289-16068fca5c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d2abd4-8e0c-4c47-ba31-230555f9f406",
        "cursor": {
          "ref": "e0b4ca22-8892-4dcc-8eb2-283265257cc7",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1e275ee3-5fd9-482e-9ecc-4590c20e2ff3"
        },
        "item": {
          "id": "f2d2abd4-8e0c-4c47-ba31-230555f9f406",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "64572ecc-2fad-4b10-a893-71cc47cadaf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0071c298-f8c1-482c-a45c-8f9ebcc6a47f",
        "cursor": {
          "ref": "5efde1d8-92a7-4bd7-9889-09d1fd861e51",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6a053584-2042-49f3-95e6-b0196e93fc99"
        },
        "item": {
          "id": "0071c298-f8c1-482c-a45c-8f9ebcc6a47f",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fb4290e4-6801-4e6e-8e21-5810c91a574e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcf7346-6177-41bd-93cb-0ff5bf8c73d2",
        "cursor": {
          "ref": "b9f29ee2-7553-44ae-a239-8577557202c9",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e9f95a7b-ed1c-43d4-873a-a7ab5120fba8"
        },
        "item": {
          "id": "cdcf7346-6177-41bd-93cb-0ff5bf8c73d2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "aff1e385-ea9d-4ac4-b635-5f428fecd4c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4927700e-419f-4dba-9c79-a8e1877fab70",
        "cursor": {
          "ref": "c8384d60-0765-4ab6-9815-50c982aa831b",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cd0a4528-a529-4cf9-9d2c-9ca4cc229a8c"
        },
        "item": {
          "id": "4927700e-419f-4dba-9c79-a8e1877fab70",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "64794bd0-b864-439a-ac2e-74c8498c69da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494df900-0b3c-4a7c-a7fd-df29f3435c6f",
        "cursor": {
          "ref": "002e10f3-4d37-46cb-b759-896a43d883c0",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7f0c5f90-295c-4dc3-810a-351e95f1193c"
        },
        "item": {
          "id": "494df900-0b3c-4a7c-a7fd-df29f3435c6f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "42435a41-72bd-4a57-96d3-6d1a66db31ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21909465-a3d0-4a46-9a16-556e51a82136",
        "cursor": {
          "ref": "91268319-6b32-4107-84ea-2d5f615bc041",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f68543a7-9313-4c3b-a015-51aa3567c2b0"
        },
        "item": {
          "id": "21909465-a3d0-4a46-9a16-556e51a82136",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "06c73dc8-7dc9-4d99-89fc-7000102f3625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9262a472-4ff2-4914-a926-e1c9f179101f",
        "cursor": {
          "ref": "24948bf3-fdef-4f24-8499-ea2559ff19cd",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d2186d4a-a694-4183-bc9e-34d0d49b11c1"
        },
        "item": {
          "id": "9262a472-4ff2-4914-a926-e1c9f179101f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4600db3d-b6f5-4651-8925-8ee1fe770f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76aa588-648d-4860-be55-0688e273b883",
        "cursor": {
          "ref": "8748368c-b3b8-4e98-8bbb-d9eafe254510",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d414ac54-1155-4a25-a2b5-3f456da20cc5"
        },
        "item": {
          "id": "b76aa588-648d-4860-be55-0688e273b883",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "dc56da15-3c7c-4b7f-836e-1ab535767473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57c21dc-057d-44ab-b47c-9eac10bd279c",
        "cursor": {
          "ref": "f4ea6cb5-0734-492a-9af5-3fd00a62372c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1d2c9136-7e58-46bc-9323-2aee6e9aa014"
        },
        "item": {
          "id": "d57c21dc-057d-44ab-b47c-9eac10bd279c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "f95f350b-5788-4540-8181-a9f4837df3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b52f1ad-09e4-4437-b302-87df654ba006",
        "cursor": {
          "ref": "eb51d83a-f21f-499f-9bec-10f675c7c70c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "202f6f2b-d9c7-4452-92b4-5848beacacdb"
        },
        "item": {
          "id": "9b52f1ad-09e4-4437-b302-87df654ba006",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d87dd2d5-3343-4a4d-88be-232ca30a72d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62a6f00-f4a0-4027-9264-9519c06c28ca",
        "cursor": {
          "ref": "27911884-8eea-455d-a5a6-7580790a121e",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "aa18e7fa-dfeb-484e-9989-6299d563c167"
        },
        "item": {
          "id": "c62a6f00-f4a0-4027-9264-9519c06c28ca",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b905d02e-1af1-49b3-80a6-6937104ac5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccdf850-1aff-44bc-960f-3a6b5bfb4ec3",
        "cursor": {
          "ref": "22777e0f-df82-484b-8b98-11ced6aea1b3",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f80c2261-a009-4d0d-9a95-060e2c6d3c1b"
        },
        "item": {
          "id": "fccdf850-1aff-44bc-960f-3a6b5bfb4ec3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "8385a9e5-49ac-4ffd-a17e-5c56ab075c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ad5889-19a6-47ec-8218-df2c0038201d",
        "cursor": {
          "ref": "4e262cb9-ec73-4c9d-b345-86feefcf386b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8df9f424-353c-4e47-8dbd-69ba928545c1"
        },
        "item": {
          "id": "c3ad5889-19a6-47ec-8218-df2c0038201d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e4a859ad-2e83-4583-9674-c9e75f90bb97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7d129c-e896-42b0-90c7-9f77af596623",
        "cursor": {
          "ref": "70a5c951-d46c-4ba9-a6c0-9e73f3360855",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ae64f45e-03be-4910-8005-03af44009f16"
        },
        "item": {
          "id": "9c7d129c-e896-42b0-90c7-9f77af596623",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b0b1650f-3660-48db-8c48-688242753ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f764944-f36b-4b4a-b0d6-623592d1d0a5",
        "cursor": {
          "ref": "55bb7e0e-7128-43fe-8d6b-3bc59e981c28",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "132e9286-c2c7-4053-8608-2eb667662eaf"
        },
        "item": {
          "id": "0f764944-f36b-4b4a-b0d6-623592d1d0a5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f569241b-b8e3-4d38-849c-cb00873999f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d0aaf8-4896-4ebb-bac5-ae9857947ec5",
        "cursor": {
          "ref": "cc10e8fb-eaaf-4838-8edd-def34b5ee5b2",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3bc0ba76-7a87-422d-a730-59a1847b38d7"
        },
        "item": {
          "id": "c2d0aaf8-4896-4ebb-bac5-ae9857947ec5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c821b96e-0fb8-4dc3-a8cc-492b417886fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "45dad8c0-d60a-4491-86f2-be7cc0ce8d5d",
        "cursor": {
          "ref": "df138523-c7fd-4a84-84b7-5236c34ea1b4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4c3dbc0e-ad71-4f8c-b9b5-3f602b69c9ed"
        },
        "item": {
          "id": "45dad8c0-d60a-4491-86f2-be7cc0ce8d5d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ba767d65-af64-44e1-a7d4-988f16e97ca2",
          "status": "Created",
          "code": 201,
          "responseTime": 8961,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0735e8-18da-40d5-8997-17c0f8dcbd48",
        "cursor": {
          "ref": "638e55b4-ecc2-4f7d-8b9a-74b0bfa78e86",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6dff6c46-b8b5-470c-8a54-cf28622fa36a"
        },
        "item": {
          "id": "da0735e8-18da-40d5-8997-17c0f8dcbd48",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7ba716d6-b456-485a-98c6-9e19824d2667",
          "status": "Created",
          "code": 201,
          "responseTime": 9712,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9d1685-4c32-4a2d-923e-0e97d3153370",
        "cursor": {
          "ref": "dd83b14e-211d-413c-80ce-618d9b1c5dd4",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "837220d4-e6df-48a1-9d61-6a4e7b0a5b06"
        },
        "item": {
          "id": "8f9d1685-4c32-4a2d-923e-0e97d3153370",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f5f49fd1-bdc0-488d-97f0-b70f574e64c7",
          "status": "Created",
          "code": 201,
          "responseTime": 10819,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2feb651-9c43-4573-ad4f-26fa90b44fcb",
        "cursor": {
          "ref": "d99f7afc-c277-4704-9b8d-4418f629d64d",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "893ba368-f52a-4e56-b62f-ea81864addb6"
        },
        "item": {
          "id": "b2feb651-9c43-4573-ad4f-26fa90b44fcb",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "86dcc0ca-3014-4f09-b961-36f74b34557a",
          "status": "Created",
          "code": 201,
          "responseTime": 10424,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e1e06-43c1-4814-8bd4-a3f1d9995fcf",
        "cursor": {
          "ref": "7b0b9072-70bf-481b-9890-ee2260b7f41f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4effca6f-b3b7-44bc-9b6a-1d40dce0458e"
        },
        "item": {
          "id": "b84e1e06-43c1-4814-8bd4-a3f1d9995fcf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "90b107a1-d2f2-473b-a1f9-55b50fdfd57c",
          "status": "Created",
          "code": 201,
          "responseTime": 7830,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a031e3-8947-48ca-b67e-e2a46674d9fb",
        "cursor": {
          "ref": "ba3de6a6-b797-4f61-9213-76b5e10fb38a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "58b257c0-5544-4b6f-86f6-6cb89be212f4"
        },
        "item": {
          "id": "56a031e3-8947-48ca-b67e-e2a46674d9fb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "54b36e15-9b0d-46bd-8352-d396c56d223f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "a589c027-fb42-4545-9b7f-3d77aa5c490c",
        "cursor": {
          "ref": "377db332-ea14-4c2d-8b6d-283a9b019b25",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e0e44afb-4e67-4f65-90d7-138506ec789f"
        },
        "item": {
          "id": "a589c027-fb42-4545-9b7f-3d77aa5c490c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "135c8cc0-c009-4637-af90-4ee953c15973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96935120-39a3-406f-89fb-78e738758b79",
        "cursor": {
          "ref": "4086a297-d545-4453-8e2b-5810bd580860",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7a821609-59d8-476b-8fd7-dbb42f35235c"
        },
        "item": {
          "id": "96935120-39a3-406f-89fb-78e738758b79",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ea7cecff-f5f1-4886-877c-82191141e48b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e25e7453-3da3-406d-8bca-479860b5b24b",
        "cursor": {
          "ref": "1fddbf13-c4a7-4145-bc9d-7efcf1332471",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "9b17dd07-2a42-4487-859a-b9b6e055c279"
        },
        "item": {
          "id": "e25e7453-3da3-406d-8bca-479860b5b24b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be8313ed-98e9-47ee-a6c9-e5150dc14d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ce5d01-b6ac-4182-a386-bde1cf26155a",
        "cursor": {
          "ref": "d8c61392-84c8-402d-80ec-32ebb4471597",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "19c23dbe-b4d6-4d08-80f7-193fb1d42b1d"
        },
        "item": {
          "id": "f2ce5d01-b6ac-4182-a386-bde1cf26155a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e31013d9-aa64-4ec9-826a-88b1198fc2de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671f75e1-65a4-45d6-ac1f-43b0cfecaf0c",
        "cursor": {
          "ref": "be9ff82c-29d6-4cba-9eb6-b24fbaca2f9d",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7a3d0e09-09fc-4ab9-8cf8-6d89a03a8315"
        },
        "item": {
          "id": "671f75e1-65a4-45d6-ac1f-43b0cfecaf0c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "20b65616-9139-44cf-82ca-94b3afbffabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88420b3-d312-4461-8c2b-3c395e958946",
        "cursor": {
          "ref": "e3c43d38-52ba-4079-85aa-4c2248d63573",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "166eb685-ac67-4e14-8878-7c46c32d0dc1"
        },
        "item": {
          "id": "b88420b3-d312-4461-8c2b-3c395e958946",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "bf8f6b4b-5897-49f4-8e8c-d0350a21af22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c33b13f9-7af5-4fbf-8614-99c9d81bf34e",
        "cursor": {
          "ref": "4269b86f-6f12-4984-abea-658f01f448d7",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "b01eca72-c270-4131-8e6d-33870c995a01"
        },
        "item": {
          "id": "c33b13f9-7af5-4fbf-8614-99c9d81bf34e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "681e0eac-5ee7-4803-907a-5c7d7988c4a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf969936-2f9c-48a9-870a-78b9984d61e9",
        "cursor": {
          "ref": "82e6c881-e3cb-4c17-b59a-1200971c2cf2",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "75f11edd-098d-4f7f-bb94-d7a44c5c6150"
        },
        "item": {
          "id": "cf969936-2f9c-48a9-870a-78b9984d61e9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cbb0e5f5-069e-4b65-854b-fd686fb10353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f32748-08b2-4d4d-95c7-9ced4932e646",
        "cursor": {
          "ref": "b2fb1447-f55e-4a13-91b3-79a34fe0c4a6",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "1d3cabca-266d-4308-9377-4fa2a33937b7"
        },
        "item": {
          "id": "65f32748-08b2-4d4d-95c7-9ced4932e646",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0456f19a-9faf-4991-a417-857cc060b63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c340b014-fd88-4ad4-ab49-e94b5cba44f0",
        "cursor": {
          "ref": "0c4c985d-8041-4907-9607-77ee38d9cc51",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "fc6a5d1a-7d63-43c5-8461-d3fa3e73732e"
        },
        "item": {
          "id": "c340b014-fd88-4ad4-ab49-e94b5cba44f0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b0615f8-9220-4f14-93e7-2294acd599c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc083c15-a6d4-481e-9911-0f580d753c05",
        "cursor": {
          "ref": "e1a24665-d5d9-44c9-b59a-30f13382d4aa",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "056b44c7-dd42-45be-8341-4de86748d59b"
        },
        "item": {
          "id": "dc083c15-a6d4-481e-9911-0f580d753c05",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "73895b05-a715-4ca9-9d19-2e4f8e4b23df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bf9443-54d1-4560-9d42-af1f4b8e6f02",
        "cursor": {
          "ref": "c3be533c-e467-458c-a6bc-ea2047710d3d",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fb193f31-669e-4aca-99f6-d5ccc0e30d2a"
        },
        "item": {
          "id": "d7bf9443-54d1-4560-9d42-af1f4b8e6f02",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "35d7c47d-f544-4065-982a-d3621c707df3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6e38ca-60ca-4938-a706-b356cd0adf8a",
        "cursor": {
          "ref": "875f7e05-bf19-4260-98b0-768c9cf8cf99",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26908b4f-5fc6-449a-a10e-578d8d0f473a"
        },
        "item": {
          "id": "4f6e38ca-60ca-4938-a706-b356cd0adf8a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6309cb81-f061-40c4-9fc7-2908df5a5a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2edd68-b640-4064-98be-b206ca87b0fa",
        "cursor": {
          "ref": "3747ee34-3c89-4929-82bf-d39cec8f9d99",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a514b6b0-8840-4b5e-9da3-8658213825d3"
        },
        "item": {
          "id": "ba2edd68-b640-4064-98be-b206ca87b0fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c932a7ec-9a59-480e-b9a9-fdfb33472f06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1740a6c9-8d99-4b4b-afd5-9d6a8b7bf13d",
        "cursor": {
          "ref": "50edafcd-2612-4679-b076-5735082d44c0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "730a976b-eaa0-468e-81c4-5932e09aafb6"
        },
        "item": {
          "id": "1740a6c9-8d99-4b4b-afd5-9d6a8b7bf13d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "49d355ae-2fda-4007-9551-3e95e0846baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e3a4401-3eb7-42eb-b8bb-69ef484cf730",
        "cursor": {
          "ref": "3f2abaca-d154-498c-8eab-45e3d4b7b231",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "19bf1dd7-e6f6-4e14-86ee-7db7de5c3c6c"
        },
        "item": {
          "id": "0e3a4401-3eb7-42eb-b8bb-69ef484cf730",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3f39ecaa-f9d1-4def-a928-3973df94b7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f3090d-511c-483b-bd90-6bc4e1f9f81d",
        "cursor": {
          "ref": "dbd4df76-e43c-4eb4-b423-4396171ae260",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "69e6bd25-f6b8-48fc-88b4-85f9209bbe0a"
        },
        "item": {
          "id": "b4f3090d-511c-483b-bd90-6bc4e1f9f81d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "313a349f-0953-46d7-ad4f-f4348c265d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83192f38-e64c-4862-9114-32badd32563f",
        "cursor": {
          "ref": "26f0b86d-f4ba-4745-ac11-23e1ea137b97",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "096f0079-ae7e-4185-ab3e-e723c3a3ff93"
        },
        "item": {
          "id": "83192f38-e64c-4862-9114-32badd32563f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aff9bfb0-ae20-43bf-8494-10356228817e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f51270-43eb-41ee-9b57-8c48908380d5",
        "cursor": {
          "ref": "a834ef01-817f-450b-9257-c9402c96dba5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "94c5bccd-5574-478f-992c-6a1d0fa61d57"
        },
        "item": {
          "id": "44f51270-43eb-41ee-9b57-8c48908380d5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "63d849b9-3f0b-4561-b838-b011fb8d852e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9d9a66-3d11-4ce7-a4a7-20c633c473fc",
        "cursor": {
          "ref": "259dbbed-f020-46f6-b630-3bffd1829db8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "31397e3b-f28a-4b47-8ee0-dd654a1d0631"
        },
        "item": {
          "id": "ea9d9a66-3d11-4ce7-a4a7-20c633c473fc",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "284b22a8-1953-4139-9169-f42afd0b4cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8f3b20-c262-48ef-8ead-6b27b2b4bd26",
        "cursor": {
          "ref": "8810f64d-0beb-418d-bb5d-ddc137fff149",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dbeb80c2-3f12-4f99-8e8a-a1c35d955781"
        },
        "item": {
          "id": "2d8f3b20-c262-48ef-8ead-6b27b2b4bd26",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d34f761e-8492-4273-b3c7-62acf56cb664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e01fcb-14bb-4136-a319-5f055aa0d27d",
        "cursor": {
          "ref": "22656ad0-b350-4f74-8883-a243764a73da",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50cf6876-93d1-420e-85d9-504dddf09909"
        },
        "item": {
          "id": "e8e01fcb-14bb-4136-a319-5f055aa0d27d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "df75642b-f801-492a-a9ad-4e0f150c5284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90484380-6319-470a-99fb-401ebb4dd00e",
        "cursor": {
          "ref": "194ef356-d3aa-49e2-8fc0-4347a9745695",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "dcbab1bc-dbe8-40a4-a5c9-66d672eadfc6"
        },
        "item": {
          "id": "90484380-6319-470a-99fb-401ebb4dd00e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "60248df3-c258-457c-a35f-7aa88d830d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0338ea2e-7729-42be-a00d-084884617a38",
        "cursor": {
          "ref": "297656e9-e838-45e3-9fc9-2a6a7548b0a9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7f31e067-0ec1-43af-a17d-39bbc66b3446"
        },
        "item": {
          "id": "0338ea2e-7729-42be-a00d-084884617a38",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "36bae817-6a1b-460d-9ad0-f0c64ede1a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f1ffd9-ca75-482e-b104-4651a4abac60",
        "cursor": {
          "ref": "76a78ca9-711e-4416-a1a1-213809c9417b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a0ab27bf-a360-439d-8aca-7accf0b0a419"
        },
        "item": {
          "id": "29f1ffd9-ca75-482e-b104-4651a4abac60",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "533cade2-37e9-4ba0-aa1e-f2aa1e6ee9e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21d70817-c909-4725-8897-1d7f7beda04c",
        "cursor": {
          "ref": "4decaf74-7dd5-48e0-9a30-5660ac5fe409",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "8b50784c-5c38-496b-a0eb-a3960c13e0a7"
        },
        "item": {
          "id": "21d70817-c909-4725-8897-1d7f7beda04c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bf889a18-ad1e-4cbf-9fdf-f1957faffef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cfb172-c8f8-472e-97e4-8077595d3ed1",
        "cursor": {
          "ref": "9d7ddcba-85c5-446b-a8a1-e5f663fd00be",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "73e44db3-49b0-4760-8cc5-2c36d298bf2a"
        },
        "item": {
          "id": "11cfb172-c8f8-472e-97e4-8077595d3ed1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "94eb1273-0c71-4038-bd5a-1797125a696c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00182be4-8a2d-4531-89e2-bc25c83f0df3",
        "cursor": {
          "ref": "3a874792-ea4b-4be4-887e-78a1124ff68e",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6a6b33eb-2475-4439-b15d-03200d889993"
        },
        "item": {
          "id": "00182be4-8a2d-4531-89e2-bc25c83f0df3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0a90a903-905d-4abc-b20b-f24bbbb2db08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebbaf383-15cd-4762-9693-5de66e35ada9",
        "cursor": {
          "ref": "f142c699-32dd-4ce9-b5b6-1718b72439af",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "fa89bbfe-149c-4350-b1c6-673369be7ac5"
        },
        "item": {
          "id": "ebbaf383-15cd-4762-9693-5de66e35ada9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bace600d-dab6-41d2-9501-db9583a669ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee6d7a2f-5642-4015-befe-7c2f30ff26a5",
        "cursor": {
          "ref": "20c67950-cb38-49ee-9832-417dfd6319d6",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "064dd7ae-3ba6-4a65-a7c5-21c7a41659a4"
        },
        "item": {
          "id": "ee6d7a2f-5642-4015-befe-7c2f30ff26a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e26c75bc-c578-4444-840a-febac4310c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3065d1de-f047-48bc-b27f-245037df4694",
        "cursor": {
          "ref": "3eb9d225-da2f-43d7-b8d9-978adaf93ead",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "928c8f3e-45fc-41ee-b84c-013ba131b8dd"
        },
        "item": {
          "id": "3065d1de-f047-48bc-b27f-245037df4694",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "90ed25c9-808c-4b58-baef-b52b8607eac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d4d185-cda6-45d8-820a-86cd659d4ea3",
        "cursor": {
          "ref": "ea7b361d-781c-4b34-893c-f6751f442af2",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "153675d3-d872-4116-b035-a324ff1b8977"
        },
        "item": {
          "id": "c5d4d185-cda6-45d8-820a-86cd659d4ea3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f0ce77a4-cb60-4483-aa4f-18a133cb4d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c62285-81b9-4ec9-8b4f-07f17669a553",
        "cursor": {
          "ref": "214002cd-35ad-4f84-833d-79854d798336",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c86de88d-6410-4f34-a314-cb360bbac0eb"
        },
        "item": {
          "id": "a8c62285-81b9-4ec9-8b4f-07f17669a553",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c1daf69f-b8b7-4ddc-a2ab-c84e17259783",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949608e5-8dc4-4436-bbc2-774eee55731d",
        "cursor": {
          "ref": "2d220bc0-2452-4eb9-8477-b6d0a99f7633",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d4ee4f76-7cb3-464e-87e6-63252f424100"
        },
        "item": {
          "id": "949608e5-8dc4-4436-bbc2-774eee55731d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "22dc302c-d06d-490e-a2b7-5567825dfce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b4355f7-b380-4bb2-8d04-838cbb70c800",
        "cursor": {
          "ref": "7592a8a8-6a59-46db-b923-67e9e68cebfa",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "28fe05d1-515b-4704-be6c-21b26c6eac32"
        },
        "item": {
          "id": "5b4355f7-b380-4bb2-8d04-838cbb70c800",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "04d1f5ce-c010-46ee-9a9a-a40bd96c4864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7c4df8-653d-4e19-8d69-7b8dc85e4f1c",
        "cursor": {
          "ref": "bc6906fd-06b8-4375-bb91-0f6cf41d2823",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "e841c34e-e8ea-4b75-bb44-b3781c7a3763"
        },
        "item": {
          "id": "dc7c4df8-653d-4e19-8d69-7b8dc85e4f1c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "137f1706-609d-481d-be89-bb90918e2e8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b6d5a0-0144-468e-92bf-8c7abad58f06",
        "cursor": {
          "ref": "12216f29-a179-4d32-aa81-d9e80e845a22",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8085667d-c6b7-46ca-8d55-6c652fc79e49"
        },
        "item": {
          "id": "d1b6d5a0-0144-468e-92bf-8c7abad58f06",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "754a769d-a94c-4d56-9346-f4e6f7aa6acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2224bc-802f-4f7c-bd4a-67b22e56cef7",
        "cursor": {
          "ref": "38f1a247-13d0-46bf-8eeb-0eff2af45a7a",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ff0e0571-f63e-4cef-93e2-32a4b7c6b96c"
        },
        "item": {
          "id": "3b2224bc-802f-4f7c-bd4a-67b22e56cef7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "034c69d7-b4b7-4658-96d1-d17ee8ddb55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "469dd9e9-1079-41cc-a5af-046c85c49af1",
        "cursor": {
          "ref": "dd0fa676-445b-4bff-92b4-4a15f0848e1f",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "854347fd-c87d-4b00-b9bb-546422f96d3e"
        },
        "item": {
          "id": "469dd9e9-1079-41cc-a5af-046c85c49af1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7c6e5578-3513-4f7a-9ebd-8caed910fccd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc21dde-5ca0-4102-83a5-45d13b39c2d2",
        "cursor": {
          "ref": "5524e8df-6118-4d57-bd2d-525baa3fd689",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "eb02707d-3609-4ac9-9204-1ab07b8657d9"
        },
        "item": {
          "id": "edc21dde-5ca0-4102-83a5-45d13b39c2d2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a2003539-71ea-4ea3-8cf7-123d5e6c6be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2caa021-581e-4954-b376-d46de390624a",
        "cursor": {
          "ref": "afaf3056-a2ed-4184-b5a1-bc00b9bb636f",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "343ab810-970c-4996-84d4-5da6d35199c0"
        },
        "item": {
          "id": "a2caa021-581e-4954-b376-d46de390624a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0e5ebb2b-a452-4b99-b9b1-ce33895cfa65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c733d0e6-5763-4935-8956-3fea47388d1e",
        "cursor": {
          "ref": "27f87158-6fb9-482b-89a1-1fae7047b0d2",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c3ce4ea5-1a76-498d-a846-e68c45002d33"
        },
        "item": {
          "id": "c733d0e6-5763-4935-8956-3fea47388d1e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c2a9167e-335f-4f04-918a-c99e18fe6146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab6f390f-91da-4217-a9b2-50943245c0b0",
        "cursor": {
          "ref": "4e64f43b-0d81-4aff-a194-9b1b9993e215",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "37e551a4-27e2-4bd5-953a-91c4bfb5758d"
        },
        "item": {
          "id": "ab6f390f-91da-4217-a9b2-50943245c0b0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a8d43452-aa62-4416-9383-9dcdeeb2d53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df9257bc-f0bc-4aeb-91c2-7925916e0845",
        "cursor": {
          "ref": "ce839303-e0eb-4d2d-92b6-8228a3575235",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9eaecb8e-0cc5-4079-b466-c9d77eced93c"
        },
        "item": {
          "id": "df9257bc-f0bc-4aeb-91c2-7925916e0845",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "833e6cb6-793e-4287-a0d7-b0377c652e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac602d7d-4028-446f-a0b3-1970519c366c",
        "cursor": {
          "ref": "76082c99-16ef-4eb8-91e4-bb6f78032977",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a3ebbfcc-bf47-462e-917a-03b47833b35c"
        },
        "item": {
          "id": "ac602d7d-4028-446f-a0b3-1970519c366c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "620e2570-e327-4134-8dd7-b4925410a2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e0dad5a-79f2-4b03-8d8d-17043107f07f",
        "cursor": {
          "ref": "3838d2ca-6c0d-40ea-bfc4-982365e5b917",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "2740ca7c-a39a-492b-bf8f-fb6a04218550"
        },
        "item": {
          "id": "9e0dad5a-79f2-4b03-8d8d-17043107f07f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "52c654c1-01db-47bd-9c76-ff4a7f536259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d7bd98-7a0d-4a60-9e25-2a67dcf15c4e",
        "cursor": {
          "ref": "0c410c26-d6b3-4076-aebc-14bb9ca0afef",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1fc782ca-62f7-41ae-9b1d-2be08797d8e3"
        },
        "item": {
          "id": "40d7bd98-7a0d-4a60-9e25-2a67dcf15c4e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ba4affe-4eaa-41c4-a494-583415cd487c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9496f78f-7c9b-42c7-9b7f-234ad493f6a9",
        "cursor": {
          "ref": "86f31012-0466-443b-920f-c477c3cf71a5",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "44893c76-2210-4a6b-bfb9-57065b26a0d2"
        },
        "item": {
          "id": "9496f78f-7c9b-42c7-9b7f-234ad493f6a9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "50dcb3e5-e7b6-45e4-bf80-3834443980bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97c65e3-7aa6-4271-b71d-1cb8a4d90861",
        "cursor": {
          "ref": "ec80cdab-71ef-4d66-bdb3-be8120db3a77",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "76739187-9e49-48d7-82db-88d4fb6738f8"
        },
        "item": {
          "id": "d97c65e3-7aa6-4271-b71d-1cb8a4d90861",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5dc0bfe6-200b-4a85-9071-637a5f968a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7123e188-6244-4dd1-91d1-800dd548ab3a",
        "cursor": {
          "ref": "715d2736-95d6-4a2b-807a-4826c8d83f7b",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8a8739dc-4254-478c-8ccd-9e8a7196fb29"
        },
        "item": {
          "id": "7123e188-6244-4dd1-91d1-800dd548ab3a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e833e374-12d9-4f33-a980-dcf9e314623f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3eff25-95d5-4cc6-90ce-28d7a5364c45",
        "cursor": {
          "ref": "66358a64-817a-45d0-bb73-d655a965a260",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "da3b57fb-0bdd-409f-b345-b4a137d7c1e7"
        },
        "item": {
          "id": "0a3eff25-95d5-4cc6-90ce-28d7a5364c45",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3476c562-b15c-4b5e-aaf0-9ff010e02401",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b0e575c-2738-48ad-a0c2-33fe86c196e7",
        "cursor": {
          "ref": "8daaff28-2466-4009-a515-9ae45b8ba48a",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "15e450b3-780e-455c-92c7-f468645fe8a3"
        },
        "item": {
          "id": "1b0e575c-2738-48ad-a0c2-33fe86c196e7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0c7316da-9df3-4156-8d8a-e306aa2fd2b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7a0130-650d-45b2-bb1d-3e2de4bde98b",
        "cursor": {
          "ref": "f246a8c5-4f03-4163-bec9-78ad3c79e040",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "760a205c-53e3-4713-a720-0bb6524e2165"
        },
        "item": {
          "id": "4a7a0130-650d-45b2-bb1d-3e2de4bde98b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9e06ec12-81c0-4d6e-86d9-cbe1119c08bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362e6fc8-1235-4b0f-9942-d744f85ebae6",
        "cursor": {
          "ref": "f820ab9f-57d7-49af-aa8d-7d66d69d2f30",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5ae0c56-f586-4f02-9cbb-d258483c30c4"
        },
        "item": {
          "id": "362e6fc8-1235-4b0f-9942-d744f85ebae6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "94afe555-a2db-4c82-a0c6-071168b8d813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf75fad-e1b8-4b40-8067-68dd53d7f450",
        "cursor": {
          "ref": "11ae16f5-0d75-4081-ae31-d06ee013d17b",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4e1ec2b6-2d72-4b3d-ae2b-d14ec2942e66"
        },
        "item": {
          "id": "6cf75fad-e1b8-4b40-8067-68dd53d7f450",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "01ea4dbf-c56a-4667-bcda-cb19d7fda7f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fa9c09-d73d-41e9-8c13-dfea7449ab11",
        "cursor": {
          "ref": "ca727873-a170-4376-99ad-9273953beb92",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d776a05e-a3d0-48e5-bf72-4316896a1c13"
        },
        "item": {
          "id": "a5fa9c09-d73d-41e9-8c13-dfea7449ab11",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ddafe2d9-4551-4404-a9a6-48aa25864a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dda59cae-4ab0-4106-bd99-bc4ec9abefeb",
        "cursor": {
          "ref": "b70b4e57-bc37-43ff-8bac-d821caaf709a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dacd2d55-990b-4980-b362-bbc3f78a5193"
        },
        "item": {
          "id": "dda59cae-4ab0-4106-bd99-bc4ec9abefeb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b71cc0cd-85ec-4375-94b1-081d3059b451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1706cf-fff0-4bea-a4b1-b234a612befa",
        "cursor": {
          "ref": "4f4512f8-5893-4db0-b043-e9be5ba2e621",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "62b33b24-f3ed-49aa-98b3-f33237f4f5a3"
        },
        "item": {
          "id": "9c1706cf-fff0-4bea-a4b1-b234a612befa",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "24b78bd7-00fb-4fb5-a5a2-0c09885ed0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcdea255-9630-423b-a6e8-4056e3cd27a2",
        "cursor": {
          "ref": "f101595f-29ef-47d0-9f65-7c161c26ffb2",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "7ad6a98c-5c74-45e1-8c8c-0539b64d4123"
        },
        "item": {
          "id": "fcdea255-9630-423b-a6e8-4056e3cd27a2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ede1aa9a-e913-41ee-a13f-3b6b048e7bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4bd579-8ca3-4f9f-aba5-847ad294b11c",
        "cursor": {
          "ref": "0e9b5d5b-672c-49be-8001-90cc9a3f58f7",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "43ff5a83-46d4-440f-835b-87465823c955"
        },
        "item": {
          "id": "de4bd579-8ca3-4f9f-aba5-847ad294b11c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "05d2ca9d-26ef-4a4c-81cd-0d318a9ecaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fb092f-dc56-43f1-baa9-14ef4e2950f2",
        "cursor": {
          "ref": "7b64b98c-1cf9-48aa-a5e8-b54fbbeee5b0",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c7cf7177-10f2-4cf4-b66f-091a2ead0b79"
        },
        "item": {
          "id": "82fb092f-dc56-43f1-baa9-14ef4e2950f2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "22229d40-e153-4a82-94e9-795da79b43db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f09752-577f-4cd7-8667-d49d1fcf1d18",
        "cursor": {
          "ref": "7b27426e-4a74-4153-984c-5c938910c8b2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1bfbfa1e-6f76-4fcc-b023-5f907a9f53f1"
        },
        "item": {
          "id": "c8f09752-577f-4cd7-8667-d49d1fcf1d18",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "901862e4-81c7-48a8-86d7-5e28421d4861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec5bf54-8117-4c8f-9bf0-5665fb167617",
        "cursor": {
          "ref": "f774c49a-616e-411f-8909-781e2897bad9",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "83dd4cc2-8588-4ec2-bb7c-48d87b498a96"
        },
        "item": {
          "id": "9ec5bf54-8117-4c8f-9bf0-5665fb167617",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8dd6b4d3-1356-4fd8-8c1f-ec3ccd52ae26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acab72e5-9310-4eff-8d8e-983a0340cf02",
        "cursor": {
          "ref": "43b5d845-4c77-4cea-80a3-76d701d224ce",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f3119469-2622-468c-a5ed-0acc4d53d89e"
        },
        "item": {
          "id": "acab72e5-9310-4eff-8d8e-983a0340cf02",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "293b822b-8716-46a6-8a83-18fdc96cccb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e738e4-8ff5-4dcf-b513-121e18d7f234",
        "cursor": {
          "ref": "a0beb479-189c-4ea3-8ba9-0888783dc61a",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "27e6774d-7ece-4e33-b36e-be7c30e3dd7d"
        },
        "item": {
          "id": "29e738e4-8ff5-4dcf-b513-121e18d7f234",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3e11d25d-2609-4e02-8cb4-bb0e5f701d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71faee57-308e-4eb0-be1a-d6948c317635",
        "cursor": {
          "ref": "26f2b125-fdbd-4073-b0e8-a36c20b97e69",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "fc228719-125f-462a-a106-f92c05a54a66"
        },
        "item": {
          "id": "71faee57-308e-4eb0-be1a-d6948c317635",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cea9563d-e0ac-44c5-9bcd-2e70f355745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f685f5-975b-4858-8d8c-d5197d3fed01",
        "cursor": {
          "ref": "431ea4dd-f77e-4ae7-a942-4a8c76271642",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "93f502ba-92e8-442c-88f3-977f3dab0070"
        },
        "item": {
          "id": "f3f685f5-975b-4858-8d8c-d5197d3fed01",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "823fcf5b-2177-46d7-8144-62d661e7a6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de91ccd-5fd8-4bf9-8783-44c091fc3997",
        "cursor": {
          "ref": "1ab9dfcb-f1f7-4527-830d-5cb2c6242470",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b0bc1b40-f217-42b3-b188-fd3b47e452dd"
        },
        "item": {
          "id": "5de91ccd-5fd8-4bf9-8783-44c091fc3997",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0d5cc101-bf34-47d7-8031-ead72bc004b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64eda0a4-1370-4699-bf29-7eea2da9f888",
        "cursor": {
          "ref": "b9cb9cef-c4ed-48fc-901d-52485ab313d5",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2690fd02-67cb-4c82-8e67-f0516e74cd35"
        },
        "item": {
          "id": "64eda0a4-1370-4699-bf29-7eea2da9f888",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "bc2d830f-5365-45e3-9f85-50d91603ebb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4df7db95-2201-49d6-b7b7-c91bb57f361c",
        "cursor": {
          "ref": "63e1c1e4-7c5b-4c44-b242-e124ca3b5be5",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "51e66c4a-60ea-43d1-8641-718769045fab"
        },
        "item": {
          "id": "4df7db95-2201-49d6-b7b7-c91bb57f361c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9f6ab074-b8b9-4674-a3fa-c9842a5be9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7d6620c-c65f-460d-8f9e-ae8325dccf1e",
        "cursor": {
          "ref": "7b351b3a-e2c3-46fb-a13a-b68aa58f94cb",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "dcd050ad-2955-457b-80d3-8ef1f5d92d6e"
        },
        "item": {
          "id": "c7d6620c-c65f-460d-8f9e-ae8325dccf1e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f8d01f58-ce24-4c44-a023-9017381d433c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500e3f7a-daf0-4cae-9731-be2da4ac9a64",
        "cursor": {
          "ref": "a0436853-110d-42b8-8997-f0f7932ba9da",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b903f97e-35c1-453f-917c-0e18a97f83e7"
        },
        "item": {
          "id": "500e3f7a-daf0-4cae-9731-be2da4ac9a64",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8efb7ef2-b428-4d24-86ad-7f9dbd4e5c2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89519871-362a-4bad-ab8c-4c068ae8a04b",
        "cursor": {
          "ref": "61a61516-fc1f-45de-adf0-ae19e4f17b99",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e94c4794-1d1f-4d1f-803b-f41319e93149"
        },
        "item": {
          "id": "89519871-362a-4bad-ab8c-4c068ae8a04b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dc16f081-3116-4905-9244-ae82dd35cfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8aea0ba-654c-4e32-85b1-571074f07ff4",
        "cursor": {
          "ref": "86946872-f09e-4eb8-abec-d0c10057e227",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d123bfe7-5250-4463-9f4a-66184656a00e"
        },
        "item": {
          "id": "b8aea0ba-654c-4e32-85b1-571074f07ff4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3e225ea0-5e1d-420e-a86c-73f465ccb28d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9125ab5c-f1ad-4fad-a023-c1606285edc0",
        "cursor": {
          "ref": "1c7a0c92-2256-46ec-8ff5-7746d4423bc6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "6259b589-a92a-40f6-b61a-88b5285d53d8"
        },
        "item": {
          "id": "9125ab5c-f1ad-4fad-a023-c1606285edc0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "9f2a3b5d-d4fa-4998-8b18-ed018d69ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484c82c7-b585-4448-a80e-a7ceb07403c6",
        "cursor": {
          "ref": "dc7cedc3-7e17-4f42-8df5-da1be5900bfe",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "afbdd789-ff40-4979-82dc-d90dda111508"
        },
        "item": {
          "id": "484c82c7-b585-4448-a80e-a7ceb07403c6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "88f7454d-2f7c-4d86-9f3a-07c4a5cdc715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6beffb55-293d-452d-a2e8-7c1f250d8909",
        "cursor": {
          "ref": "a09c5a66-41a5-40f1-932d-5bea105870f1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7bed7f6e-2f02-4022-a80e-c2aa583b32e7"
        },
        "item": {
          "id": "6beffb55-293d-452d-a2e8-7c1f250d8909",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3ed45efe-39c0-40d4-b9c0-7d9ee73ed1fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ac677c-76d1-454f-85dd-e63862b59d40",
        "cursor": {
          "ref": "cc604b31-c3c7-460b-83b1-ed90bfeee8d6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "99070370-4dcc-4342-b4c4-c9cb8b28f2aa"
        },
        "item": {
          "id": "a9ac677c-76d1-454f-85dd-e63862b59d40",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "15b5aaec-0f60-4a8f-a81c-7e3b304c1b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f537c011-013b-4ddd-ad26-c2ba2cb0bbbb",
        "cursor": {
          "ref": "0565e91d-b6ff-4223-b783-53937d167465",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "826e4771-af64-4dd4-99d0-2c4fd53a6e8a"
        },
        "item": {
          "id": "f537c011-013b-4ddd-ad26-c2ba2cb0bbbb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "8fda9bfc-7544-4790-89b2-b346efc491b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24079f69-e986-43cb-9bf0-2cd21fef6493",
        "cursor": {
          "ref": "8e4f7823-d211-4beb-a3dc-6d67bc117bdc",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "796b8073-e647-46c4-bb1c-2a3698e96286"
        },
        "item": {
          "id": "24079f69-e986-43cb-9bf0-2cd21fef6493",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a82b0ac1-d5e3-4c76-950b-b1c87e370012",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf1a098-7b70-4d62-9a89-87e5159405a7",
        "cursor": {
          "ref": "55e2c2ab-0bf3-4137-bfee-d491d4a80a95",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "98cc19e0-17ce-46b4-8fa9-ca91e7467a12"
        },
        "item": {
          "id": "dcf1a098-7b70-4d62-9a89-87e5159405a7",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "07439259-df2a-4942-8534-6e9960e8e861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a573732c-0439-42e0-820b-02dbb1d461e6",
        "cursor": {
          "ref": "3f511bcd-34c4-4d98-8f20-0893373a1336",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "439f91f4-7305-4c18-86f1-5e7e87bcd165"
        },
        "item": {
          "id": "a573732c-0439-42e0-820b-02dbb1d461e6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "57522ac0-335a-403c-9891-e9d6a01897a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a07917e-2568-4cad-980b-0019093c5bba",
        "cursor": {
          "ref": "3a623e86-f159-4f49-ac9a-50a5b404d08b",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "83d052e4-40b0-407f-a254-b4ebb89580af"
        },
        "item": {
          "id": "1a07917e-2568-4cad-980b-0019093c5bba",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2682e31c-8848-4283-a02b-99d31afef666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b7ae3a-24b1-471e-b575-170492b930ad",
        "cursor": {
          "ref": "39d4faa4-6348-4737-8ec9-5480739810cc",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5a6542e7-3c7a-4225-ac6a-9f96b30d5bd5"
        },
        "item": {
          "id": "91b7ae3a-24b1-471e-b575-170492b930ad",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8c35670b-4823-4f42-be7e-2a69608f57cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a43dced-5bdc-4107-baad-d4cdadb7868d",
        "cursor": {
          "ref": "aa1c04d8-86a2-4965-963e-5ac4c5283ae3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5494a624-9ac5-4138-bc10-94dec1a5db18"
        },
        "item": {
          "id": "1a43dced-5bdc-4107-baad-d4cdadb7868d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "402e3870-9045-455e-b9f2-5e6343f68d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67be7557-65aa-4ecb-9d42-628d41b0983b",
        "cursor": {
          "ref": "64f0a2f9-61c1-4151-9144-a6a5278d9fb5",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e8eafc99-c958-4eb7-a67a-ee308dcc1bfa"
        },
        "item": {
          "id": "67be7557-65aa-4ecb-9d42-628d41b0983b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "95cc3c5d-2347-4a48-8d7d-173e715bb16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d47e6289-cbfd-4fbd-96c1-e2748314a161",
        "cursor": {
          "ref": "c9f91364-d1f0-4bff-8bfd-a9e30fc9e535",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0c53ff87-5d62-41cc-b776-5304ab997f72"
        },
        "item": {
          "id": "d47e6289-cbfd-4fbd-96c1-e2748314a161",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2059cf1b-a378-4db1-a5e0-0bd218ff178b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc2032-67b7-4053-a5f2-8b21af7ab085",
        "cursor": {
          "ref": "b4bed6c3-014d-4b60-a395-cdddb27d71b7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "b2f755cc-07d9-46c0-a74d-19d6c7771a51"
        },
        "item": {
          "id": "95fc2032-67b7-4053-a5f2-8b21af7ab085",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9f714eed-5c7e-4a6e-9ac9-35669a523e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e601a23-d16a-41fd-8850-2db7dcf2ead8",
        "cursor": {
          "ref": "d1912c68-e840-4e89-90d4-190fbf962c60",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "22bebba8-d7f3-4d65-8412-c16cd1d82638"
        },
        "item": {
          "id": "4e601a23-d16a-41fd-8850-2db7dcf2ead8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1ff4729c-3806-40d4-910c-59374ed32181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb92830b-83a3-41f9-be5a-56b0b8a8d685",
        "cursor": {
          "ref": "83141913-f42c-486a-b8d0-30ab023fa881",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b65a7319-2813-4359-b858-cbbc4429e22a"
        },
        "item": {
          "id": "eb92830b-83a3-41f9-be5a-56b0b8a8d685",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "847f53a6-31ba-48b3-a7d8-e9147c579577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4495dd-0d8d-45d2-8548-17a3a87d8152",
        "cursor": {
          "ref": "6795db37-3111-4565-b2f2-a3e34854c160",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d014e77e-85c6-4864-aa37-8463f8faf15b"
        },
        "item": {
          "id": "dc4495dd-0d8d-45d2-8548-17a3a87d8152",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1f565265-0736-4e81-92ef-af8becd3e0be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bbb291-dcd0-4d92-a9db-24ae985b3175",
        "cursor": {
          "ref": "43a280cf-e87c-46f8-b5fc-d07aa0cacde1",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e06be898-8f0d-4dbf-b63b-c61e7c3c018a"
        },
        "item": {
          "id": "c3bbb291-dcd0-4d92-a9db-24ae985b3175",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0d9556fd-8e31-4249-a631-9a3c39ac65cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa37a814-aec2-45c7-89ff-2fee5b0e21e7",
        "cursor": {
          "ref": "d395599d-8fe6-46f0-8f98-67df7c36ee42",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4e1d794e-960c-40cd-b6b5-5dc8172f3bf8"
        },
        "item": {
          "id": "aa37a814-aec2-45c7-89ff-2fee5b0e21e7",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ed146ad1-9b6b-487f-b1bc-7bf6e04fe03f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8346787-e8ac-4edd-b7a8-1aa7303e9abc",
        "cursor": {
          "ref": "53842af9-34fe-45cd-8b0a-44965fba8888",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "850f2060-2971-412e-803e-1153c2ff342d"
        },
        "item": {
          "id": "f8346787-e8ac-4edd-b7a8-1aa7303e9abc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c12c88ad-1e4d-4970-9696-bd7890b44863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97762164-0263-4ab6-be5c-104030c8c4e3",
        "cursor": {
          "ref": "1b4387d9-80e9-4682-9968-0a5a74d04396",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4dafed85-39a3-4fd6-83aa-1fa4f409d625"
        },
        "item": {
          "id": "97762164-0263-4ab6-be5c-104030c8c4e3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ff2b8816-652c-43f0-a559-a3273d34b3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cacc6cc-7494-4912-bab4-aca43ff811bf",
        "cursor": {
          "ref": "716f8449-5327-4390-bce0-e77da15ab704",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3f3d54c2-f1f0-4c21-9cd9-e7ea791ccc21"
        },
        "item": {
          "id": "1cacc6cc-7494-4912-bab4-aca43ff811bf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "76408aa9-20ef-4a2c-842b-e962bd1ff774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac01dd2-a5a4-409b-a77e-a4e989d8cda1",
        "cursor": {
          "ref": "067a4c9d-ca51-4fcb-ba25-13450e9239a5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "042e48f3-3e43-4b59-9b7f-f66a6c8df2cc"
        },
        "item": {
          "id": "3ac01dd2-a5a4-409b-a77e-a4e989d8cda1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "d93841f5-3eb0-41c3-bbb6-d59b03fe3649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9ccc51-78f1-4fa7-a8d9-f02d4996427f",
        "cursor": {
          "ref": "362cf5ee-5c81-4938-b1f6-b8954c93c661",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8e8d2232-b78c-4378-96be-9041a0f63347"
        },
        "item": {
          "id": "ae9ccc51-78f1-4fa7-a8d9-f02d4996427f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2d7bf13b-fb45-4893-8bb9-894ca73e4a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04edca9-c6f5-4468-a48f-5705d53c3b7b",
        "cursor": {
          "ref": "34834e20-ba1e-43aa-844c-eec54b312a3f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "4ec4f08a-48a2-4770-bbef-61da71641067"
        },
        "item": {
          "id": "d04edca9-c6f5-4468-a48f-5705d53c3b7b",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a8b033e6-2124-4e9c-8bd8-ecb0eba4c4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fda7c50-b2e2-46df-ab99-d4003171a880",
        "cursor": {
          "ref": "8f767faf-fa00-490e-9ee7-bb532cc22b85",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b60cb44c-f7c2-4f36-b370-193be569ec8c"
        },
        "item": {
          "id": "1fda7c50-b2e2-46df-ab99-d4003171a880",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "77b72ad3-ae8f-45e3-bcd4-efcb74f7cd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ec449d-e6ca-4ef3-908b-42feeeceb969",
        "cursor": {
          "ref": "320f288d-3719-4d77-96b7-70cca878586d",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5581f6f9-f993-4031-8828-afa1d307268d"
        },
        "item": {
          "id": "43ec449d-e6ca-4ef3-908b-42feeeceb969",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f6b0d20b-52c3-4b3b-94ca-9bf072c7cd69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6895de0c-a7a0-44fd-93e8-7861792be552",
        "cursor": {
          "ref": "2b3a75a3-d167-4576-bf46-9aba430a01ba",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "005c5e2e-301d-499e-90ea-f103b4484a4f"
        },
        "item": {
          "id": "6895de0c-a7a0-44fd-93e8-7861792be552",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f2e9d5a3-430f-45b2-bbf3-8df6d518a09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5ad5c3-6e50-4741-8908-af67caf91c89",
        "cursor": {
          "ref": "da835f60-36ba-4509-8a58-af9d4662d68a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "d46f0f76-1e91-4312-98a7-7d1a0f07a277"
        },
        "item": {
          "id": "eb5ad5c3-6e50-4741-8908-af67caf91c89",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a33e63d0-3781-4b85-b9bb-1f3d21db2373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c33eb9-9aad-46ea-adf7-e81cd2f81dad",
        "cursor": {
          "ref": "4aea65b6-f1a8-49a0-bd76-dd91f7eac988",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "e51d0a87-4ff0-44cb-a16d-76a51f068f7a"
        },
        "item": {
          "id": "63c33eb9-9aad-46ea-adf7-e81cd2f81dad",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0269c2a0-7b7d-46e9-b972-273211549c72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f4788b-b613-4c45-8bab-e3a5a3a5993e",
        "cursor": {
          "ref": "daa83b85-f58c-421f-9952-07a63c983b03",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "42cb9006-13a0-423e-bbd3-82930711dee4"
        },
        "item": {
          "id": "60f4788b-b613-4c45-8bab-e3a5a3a5993e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4f742d65-94e4-4baa-8830-ee7a7dcaac1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e836f6e7-7ef4-4708-a1c7-50246c6db877",
        "cursor": {
          "ref": "5b5c5891-1125-499b-afef-382f4e284d1b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "89c73175-6c5b-488a-9d49-a99a898299ad"
        },
        "item": {
          "id": "e836f6e7-7ef4-4708-a1c7-50246c6db877",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "50266531-25d3-45bc-b9ed-5b6c8ef0eb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d45694b6-87b7-4463-a0ab-f44510bff582",
        "cursor": {
          "ref": "9247f5a3-59d2-4490-b15d-ae3341c9fd9e",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f514f8a-90e7-4653-a450-4fbea0eb2a20"
        },
        "item": {
          "id": "d45694b6-87b7-4463-a0ab-f44510bff582",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "1ab66e79-2391-4e19-b429-15ec44d4516a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d9a3ee-d2cf-47f1-bdcf-a5e004dd8858",
        "cursor": {
          "ref": "82b8f890-2918-4372-9bb5-43603c03968e",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "1d532773-6f6d-491b-89bd-1a6c941134ca"
        },
        "item": {
          "id": "27d9a3ee-d2cf-47f1-bdcf-a5e004dd8858",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a4260ddf-9784-4445-8e8e-c97922489025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012be468-31b5-4f10-96ce-08b73071cdea",
        "cursor": {
          "ref": "a07e6e95-b2cf-40ff-b147-dd4ca6f9798d",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "76818de9-439e-4979-b060-5889665985eb"
        },
        "item": {
          "id": "012be468-31b5-4f10-96ce-08b73071cdea",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "45357f7e-9d98-4119-8627-8cc31f0fba5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ab116d-46c1-4637-98e9-83b97e3aad0f",
        "cursor": {
          "ref": "b498549a-f478-41d4-871e-224d72558709",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ef7b8801-887d-4a5f-95e5-12e0aa49a6eb"
        },
        "item": {
          "id": "46ab116d-46c1-4637-98e9-83b97e3aad0f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c805e089-de5d-4972-9f79-0b70b100ce50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68590ea1-a11b-4de1-b8fc-9ef64a0ad66f",
        "cursor": {
          "ref": "af872013-e35b-44cd-a653-4056419ce9c9",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8d4b7ca0-e9b7-4a28-a5a8-66585493f110"
        },
        "item": {
          "id": "68590ea1-a11b-4de1-b8fc-9ef64a0ad66f",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "f6917d08-3396-4f2a-bf6f-c0de8fed277d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0836ec8a-ad8a-4d37-bfd2-7de750de348a",
        "cursor": {
          "ref": "5ba3b62e-7f74-42fc-a96e-0141ce09ee6a",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "574e5be9-4d60-4005-8022-1c6a2619df15"
        },
        "item": {
          "id": "0836ec8a-ad8a-4d37-bfd2-7de750de348a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "de0d0c94-6861-43f3-a8d7-fcde2498fc9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b55f7d20-f8e1-4583-98a4-d084fdfb143f",
        "cursor": {
          "ref": "8142592e-4e83-4d0c-a248-33bcab84321b",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8cc4485e-5295-4593-8c05-ef83e4835f75"
        },
        "item": {
          "id": "b55f7d20-f8e1-4583-98a4-d084fdfb143f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "67e30af6-d287-4740-a2e1-71f77cd6b13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e308ad-65b8-47ad-bb35-f3034849fa68",
        "cursor": {
          "ref": "17e40a2e-2abf-453c-83dc-6c13e8239f97",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "bdb5fec8-fe8e-4ed8-8e74-ba1204e294d8"
        },
        "item": {
          "id": "66e308ad-65b8-47ad-bb35-f3034849fa68",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c22d8378-9a87-4e7e-9368-199bf6a772fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 205,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1e8f15-412b-415a-bbaf-5bc1a0c209fa",
        "cursor": {
          "ref": "de5998ee-8f2f-46cc-a242-99cd87e2f214",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0c43627b-9930-46ca-a73a-b59499f0fb17"
        },
        "item": {
          "id": "4f1e8f15-412b-415a-bbaf-5bc1a0c209fa",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "b14b6d1f-b98d-4b3a-9287-cb421687229d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85d0c1c-d9e7-450b-8e22-af3ea96276ef",
        "cursor": {
          "ref": "5e647fe6-b065-456e-881f-9df933871c6b",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "91ee9a89-9eb8-453e-a534-e37c7c49c284"
        },
        "item": {
          "id": "f85d0c1c-d9e7-450b-8e22-af3ea96276ef",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "94550576-0586-48d8-b2b2-87e0f0771fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5feb1f3d-271b-48a7-ad9e-d1083158cc0a",
        "cursor": {
          "ref": "b42b629c-70ce-4d4c-8e81-672090ae667a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "53b27f29-74a0-447e-822e-de780a2bd631"
        },
        "item": {
          "id": "5feb1f3d-271b-48a7-ad9e-d1083158cc0a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dff583be-34f5-4c7c-a501-a831367714d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a41db0f1-1663-48f1-8a15-325ec339358d",
        "cursor": {
          "ref": "4639f0cd-8b7c-42a1-9d23-048890b2c80a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f858359a-c740-4e98-883a-0cd1ef219f1f"
        },
        "item": {
          "id": "a41db0f1-1663-48f1-8a15-325ec339358d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c43db6c2-b82d-45ae-811c-92b6e3407d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06dab9-f691-4753-b7a1-424e2f61cd20",
        "cursor": {
          "ref": "bb1c7d61-9e08-4939-8a64-136156182243",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "abefc468-5e83-42ce-be71-fb65a8f6b4ab"
        },
        "item": {
          "id": "fb06dab9-f691-4753-b7a1-424e2f61cd20",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "27645278-7550-4f55-a024-62362dcb6bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ce1b82-df9b-4b8f-bd4a-d4e10a405a85",
        "cursor": {
          "ref": "655f43ec-372a-44d6-9e9d-e17fd88e24a0",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b6bb1215-ef87-4d09-8bb5-1e8d1b6b6825"
        },
        "item": {
          "id": "97ce1b82-df9b-4b8f-bd4a-d4e10a405a85",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fbce7b1e-80d0-4f38-b311-ce74d3c67861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d282fc2-2a1b-4786-948c-506ae43acc81",
        "cursor": {
          "ref": "589e85f6-0d1c-4298-9006-0a01a587d171",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "63e3da50-6bd5-4134-b079-13bd345c8561"
        },
        "item": {
          "id": "1d282fc2-2a1b-4786-948c-506ae43acc81",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "d4a9661b-d58d-4677-bec5-a85702240bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9bf7749-3b90-4c26-9e6c-281da0c9c412",
        "cursor": {
          "ref": "cb650776-55a8-474d-b7dd-f3598e94e315",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2f412b4f-c4f8-4d54-9a9a-382fc006ca94"
        },
        "item": {
          "id": "c9bf7749-3b90-4c26-9e6c-281da0c9c412",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "52295c7f-26cc-4803-8150-a259cd450b80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f977006-ded0-4d4b-8ab3-ce4505926356",
        "cursor": {
          "ref": "4118b21f-a8a6-4a87-97e8-329a2ae7a731",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "26671a90-38e1-4b4d-b7f6-c3c696392b08"
        },
        "item": {
          "id": "7f977006-ded0-4d4b-8ab3-ce4505926356",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e8a97060-723f-42db-b8bd-5c48bc20957b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e3ad05-ab5e-4d3e-9999-4d60795a7113",
        "cursor": {
          "ref": "ca679dce-1239-4d4a-84dd-af4b87635d75",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0d8b0f19-157d-471d-a336-6d37011ff0e3"
        },
        "item": {
          "id": "d3e3ad05-ab5e-4d3e-9999-4d60795a7113",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9a16c4e1-c9b4-4695-8baf-0021bcdc43bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9729e4f8-224c-47ea-b233-3cd834dec7fe",
        "cursor": {
          "ref": "d87bb460-2919-48c3-97d2-44a75aeaf7a1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "8fccbd6b-613a-4efd-a15b-7bb09f4166fd"
        },
        "item": {
          "id": "9729e4f8-224c-47ea-b233-3cd834dec7fe",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d29a4e2a-074f-42bf-a7be-93f19ee2ee6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2b4de3-7377-4441-8661-5124a7e0bf49",
        "cursor": {
          "ref": "9596a53a-47da-4cec-ab7a-b9a83fc2e473",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "92b7718e-1c23-4f28-80d4-e9cf65184ae0"
        },
        "item": {
          "id": "4e2b4de3-7377-4441-8661-5124a7e0bf49",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "7ebfd488-2754-4e77-9891-eb329723b6c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c91257-29b6-4dc8-a275-ac3e3c30eb49",
        "cursor": {
          "ref": "8aa0f8f4-0309-43de-82de-8534460e1e6a",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f09b9c5a-b6f7-43d8-9106-187a60a437ae"
        },
        "item": {
          "id": "34c91257-29b6-4dc8-a275-ac3e3c30eb49",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4a01b2a9-0096-47f5-b326-fabc730d7146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59e0082-edd2-40ab-a1b5-5532f86d3fe2",
        "cursor": {
          "ref": "8d720a27-0551-4201-9781-261c79979158",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5980bd21-347d-414a-843a-10c40d4c5e3f"
        },
        "item": {
          "id": "f59e0082-edd2-40ab-a1b5-5532f86d3fe2",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "96d75d63-7d2b-48e6-b3e6-bceb87f6ae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9938d3d1-5c7c-4651-b45f-e7efaa31fc83",
        "cursor": {
          "ref": "591076d4-bd13-482f-97e7-7709de3fa3fb",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "919e620e-264a-42e6-b13e-d1845dd842d9"
        },
        "item": {
          "id": "9938d3d1-5c7c-4651-b45f-e7efaa31fc83",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "09980c70-e70c-4fea-be59-a612e2ce7b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f21ff54-0e2b-43f4-9a15-77b92590bf1a",
        "cursor": {
          "ref": "82f9d3c7-7956-4dba-a7e8-3686cb7f1aa3",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9420fb2c-5f10-4297-b52a-47e596712f67"
        },
        "item": {
          "id": "4f21ff54-0e2b-43f4-9a15-77b92590bf1a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "71b38cf7-e0dc-4c69-bd55-35d098798975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b9cd4b-31d9-464f-96eb-1ca9b57363aa",
        "cursor": {
          "ref": "c7184399-6a20-4558-a14f-6227c2489684",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "16e9af04-95ac-4045-8d3d-09defa218c92"
        },
        "item": {
          "id": "14b9cd4b-31d9-464f-96eb-1ca9b57363aa",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c6012347-9a6e-4b57-b433-add44f89e2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf86a02b-be11-44dc-b0fe-dca10e48eff2",
        "cursor": {
          "ref": "68235e38-517f-4c49-96fc-7912e30d4fd6",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b260afe0-db76-401a-be2d-6854e9c05835"
        },
        "item": {
          "id": "bf86a02b-be11-44dc-b0fe-dca10e48eff2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "af9859b1-43ab-4ed4-891a-6af9eca3aa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "448d8868-77d7-4b7f-bfab-800caa73b8f8",
        "cursor": {
          "ref": "cb29cd2a-a949-4181-80c4-b127076d61e3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "17c66a16-ee44-4437-8622-a3cdd1a80f90"
        },
        "item": {
          "id": "448d8868-77d7-4b7f-bfab-800caa73b8f8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ba70a351-8ed8-4d7d-a005-1e75a6baa0a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a95c658-fbb6-499d-9501-e8002aa5bae0",
        "cursor": {
          "ref": "bdbb5f09-0960-4b39-81d7-4ad525fdae59",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "81827f49-186b-40d7-a8fb-2248c63eb9df"
        },
        "item": {
          "id": "1a95c658-fbb6-499d-9501-e8002aa5bae0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fe97dc25-09cb-44c3-884a-7143567185fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb602e9-390a-4882-847c-685bca647491",
        "cursor": {
          "ref": "a42342b5-fd18-437c-b7d9-8165e72c8455",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ac817f76-7011-4b67-9d24-90c8d3839ff6"
        },
        "item": {
          "id": "eeb602e9-390a-4882-847c-685bca647491",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "88a2a170-0140-475a-824e-c00a6e134450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416b808a-7cac-4d09-ad22-d8c738092607",
        "cursor": {
          "ref": "0fec34ee-6f45-48d2-a845-8012de069896",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a13915b-7d42-4448-84eb-40fbc861a59b"
        },
        "item": {
          "id": "416b808a-7cac-4d09-ad22-d8c738092607",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "271b2b98-1e72-47c2-a048-7d662b151b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded066e9-ca3c-4820-9ac5-3df386bb6dca",
        "cursor": {
          "ref": "6b2e9fbe-97d0-43c4-909b-7753edbe506f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d65fb1d9-c7a0-4b24-8153-dacad3b5c6ff"
        },
        "item": {
          "id": "ded066e9-ca3c-4820-9ac5-3df386bb6dca",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "bbbc927c-e320-46c3-bcfc-5d1d080f84f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77b93479-e826-462f-967d-31bfe65476a7",
        "cursor": {
          "ref": "22554792-4e9f-49b6-ac3a-eca8c696052b",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fc0c2330-2378-4b71-ad5f-cb68948cc036"
        },
        "item": {
          "id": "77b93479-e826-462f-967d-31bfe65476a7",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da1e56d7-2b5a-48b2-8f06-a1ca89212c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbb97e6-fe37-4bf9-9baa-b62127af6ad0",
        "cursor": {
          "ref": "3a0e7f14-21bd-467d-ba13-ce1cabf65a0a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ef77f02f-ec9d-49ab-b577-ab0c54a390d0"
        },
        "item": {
          "id": "ecbb97e6-fe37-4bf9-9baa-b62127af6ad0",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "63d58646-4a5c-4633-9144-b3c9b16ecdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26029ba1-a140-4b82-b81e-dde672185238",
        "cursor": {
          "ref": "e21a1cab-8c03-42c3-baa9-5f949990a342",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "6bc85d3b-e57e-4444-b024-23b8b828b2d5"
        },
        "item": {
          "id": "26029ba1-a140-4b82-b81e-dde672185238",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "71e1f4cf-ffbe-47c2-9f80-5c13bf8dce8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f8e1f0c-e23c-4867-937a-7640bfd1df80",
        "cursor": {
          "ref": "563d442f-434f-4e7f-95de-931c05dce914",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68de1fd0-2646-4248-bb98-10a88e0524b7"
        },
        "item": {
          "id": "8f8e1f0c-e23c-4867-937a-7640bfd1df80",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ae7e6d07-71d7-4812-a076-eb08a18ae893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f290cc37-1a65-457c-99a5-f7c68bdeb3f9",
        "cursor": {
          "ref": "d2670c56-f1a7-41be-8e24-1b792c512efe",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "55dec176-37e8-4dcc-8b72-90e4fa107e7b"
        },
        "item": {
          "id": "f290cc37-1a65-457c-99a5-f7c68bdeb3f9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42133f37-4c8e-4ed9-8e3e-76ae420a7d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b147a196-7f73-4e7d-a79f-7b66d21d6f1b",
        "cursor": {
          "ref": "1b47ef11-661a-415b-9a85-5eb834feb1f6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d2894694-97fd-4a0c-90ce-e168864c4ac5"
        },
        "item": {
          "id": "b147a196-7f73-4e7d-a79f-7b66d21d6f1b",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "29425f8a-c454-44f8-be55-8bf6693a8272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2efe04c-241b-499c-b44f-6c1f1d8dca12",
        "cursor": {
          "ref": "1bd9f840-516f-4d20-89b0-7657adcc7c90",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "9acf0f72-4728-4f13-a927-f9bb2d517bef"
        },
        "item": {
          "id": "d2efe04c-241b-499c-b44f-6c1f1d8dca12",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "16c3fbd7-5e75-4601-8553-64476cd96ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421ff3e-72ce-4c44-9c7e-b020ff2dc1aa",
        "cursor": {
          "ref": "340eee72-39b5-42d6-9dd8-62f636dd00b5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6376a71d-8fcb-4176-9352-af53aab1b497"
        },
        "item": {
          "id": "e421ff3e-72ce-4c44-9c7e-b020ff2dc1aa",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "3092aa1f-9620-4339-870e-bbc24654d390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65a2d22a-f467-4593-813f-9b7418b2ef59",
        "cursor": {
          "ref": "615a43f8-0dc9-4520-bdcb-e5b56701ee40",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a2546b70-2e26-409a-adb3-4f190cec94fd"
        },
        "item": {
          "id": "65a2d22a-f467-4593-813f-9b7418b2ef59",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aaa17594-ef27-4156-af20-07db6dd83239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6da0e83-ca5e-40fc-afeb-83a7871d9430",
        "cursor": {
          "ref": "37ced0ab-4928-4d71-9a10-cfd00473db39",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "75b056db-221f-4a0e-ba1a-e91b08c6c6fc"
        },
        "item": {
          "id": "d6da0e83-ca5e-40fc-afeb-83a7871d9430",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0a2bb21a-89e9-452b-a50c-0eb3c7c22efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "790ec607-b578-4c19-a778-475ba68d8183",
        "cursor": {
          "ref": "c48df141-17a9-41c6-bfca-c88b10175ed1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "3c02f232-1c0c-4810-90db-fe43c9b90691"
        },
        "item": {
          "id": "790ec607-b578-4c19-a778-475ba68d8183",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "132b82c3-b37e-4f5f-8cf8-d2480c6a93cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b9d523-a5af-45ce-a918-0bd5feb2f9b4",
        "cursor": {
          "ref": "8f188bc6-97ef-4322-97b4-b75f001e4ff7",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e092febd-d34c-4cce-8706-e414f8766b83"
        },
        "item": {
          "id": "49b9d523-a5af-45ce-a918-0bd5feb2f9b4",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b8262557-da7c-4860-84d5-affc62d0e246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "893d7fb7-fe37-4eb8-be09-306490c45f54",
        "cursor": {
          "ref": "c9df8ab8-7c85-47b6-9159-deb291477ae0",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "2d95be12-94d7-4bed-8bfa-bfe87195fe31"
        },
        "item": {
          "id": "893d7fb7-fe37-4eb8-be09-306490c45f54",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "eec4034b-b134-4cf5-b95a-b5f5a5c2a4fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db21f76-703e-4a49-b21c-ede36ec25840",
        "cursor": {
          "ref": "b1394328-9afd-4f73-9676-501c840ab09d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3aeb3b0e-5c62-43ee-ba36-f4e4aee605f7"
        },
        "item": {
          "id": "9db21f76-703e-4a49-b21c-ede36ec25840",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b3d39073-2b5a-4109-843b-d98dba5513b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48ebb8ae-da00-4773-8f03-d74536cc0d32",
        "cursor": {
          "ref": "9110c0fd-6231-42bc-bbfe-09fa76abc7ee",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "0abe8a24-0b04-4e34-8526-403b9098c89c"
        },
        "item": {
          "id": "48ebb8ae-da00-4773-8f03-d74536cc0d32",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "11768b6a-406e-45c8-b001-376f92c64238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61f6ac4-3c08-4da3-a4d6-5032fd254ced",
        "cursor": {
          "ref": "2ab5a9ef-968d-4f31-bcce-0967d0b3e5d6",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "c180428d-6fe9-4d10-a1bb-1cd6a5edb824"
        },
        "item": {
          "id": "b61f6ac4-3c08-4da3-a4d6-5032fd254ced",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3520e52b-038e-44d7-a564-1fe105ede0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60e5f6b-41a8-4601-91d5-71ab522d5432",
        "cursor": {
          "ref": "6d26a873-d42d-4fa9-87d2-6c6240e20f4a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "2c50126c-d5e7-469b-9b80-840eaaabaa4b"
        },
        "item": {
          "id": "e60e5f6b-41a8-4601-91d5-71ab522d5432",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1f8eed1-a286-4bfa-870f-372432d4418d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5059ab18-8671-4936-b2aa-3bda22211715",
        "cursor": {
          "ref": "549f8593-a3f1-4937-b857-3c9470ff9896",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "56310b7d-3384-447b-9db7-0a34228ba418"
        },
        "item": {
          "id": "5059ab18-8671-4936-b2aa-3bda22211715",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "44ae21e6-6667-4f5e-9516-c48f38e52110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a047396-e897-44ae-8c42-1a33c8d9f9de",
        "cursor": {
          "ref": "1d5bb1a8-b596-4abe-84d4-fb76b86b92af",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "a012351a-ba71-4be3-a578-337d10c525ef"
        },
        "item": {
          "id": "0a047396-e897-44ae-8c42-1a33c8d9f9de",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d3d43981-0694-457d-bfe2-344cf8e138d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48c5241b-04f4-417f-b4b0-6ddcff2d1c9e",
        "cursor": {
          "ref": "1023856e-5b27-4c20-ad0c-f26806ff4093",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "6aba8dde-93f6-421e-a283-f093ebe42e45"
        },
        "item": {
          "id": "48c5241b-04f4-417f-b4b0-6ddcff2d1c9e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "6c330f89-57a6-4ead-93a1-79980fa18b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f967eb-7710-48ae-aae3-12a64b261647",
        "cursor": {
          "ref": "84072ea7-1bec-4f05-84e1-3ad0ad4a7be4",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "58634ac9-720c-4ca2-8ba4-de0bf4a1d949"
        },
        "item": {
          "id": "92f967eb-7710-48ae-aae3-12a64b261647",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "48235a2b-e9b4-441e-a11e-5ac5bf860328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6da42e-5013-4bb7-844f-ac79e9ef4c39",
        "cursor": {
          "ref": "dd121260-78a4-424b-98bd-71d2d034b7f2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "5711fbb2-e5ff-43c4-bd35-b6153efafca0"
        },
        "item": {
          "id": "9d6da42e-5013-4bb7-844f-ac79e9ef4c39",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "219a467a-e66c-4bee-8d7a-411402b3a4d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e06da95-c9d0-4011-ba0d-c911db56dba0",
        "cursor": {
          "ref": "697ac960-f583-456c-ad6c-85adde5bb472",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "09794b3e-e7bc-4b1d-9034-31f51394d529"
        },
        "item": {
          "id": "3e06da95-c9d0-4011-ba0d-c911db56dba0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "38f05dc1-8496-40c5-8d85-04ae2d37a550",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198ea45e-6816-4b84-b964-a5e8e64823b1",
        "cursor": {
          "ref": "581a05b2-1d6e-4fd6-a12e-bb3036263529",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "95751a23-77d0-4862-a9bc-badfee9441e2"
        },
        "item": {
          "id": "198ea45e-6816-4b84-b964-a5e8e64823b1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8e490e9d-5aaa-47fa-b9de-ac4e0afafc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a37f6f4-c332-435f-9eb7-71db88132d17",
        "cursor": {
          "ref": "05dac5f5-a7e9-48f5-8196-3804987c62a0",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "17238b3f-3f39-46af-a034-4a3beb404203"
        },
        "item": {
          "id": "1a37f6f4-c332-435f-9eb7-71db88132d17",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "dadd9092-5c11-452c-966c-c6debb84d9cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1616a2c-f43e-4e00-8bd3-6f309bc92f74",
        "cursor": {
          "ref": "9563d34f-a6c2-494c-b3a8-355faf8f264e",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "bfb4f116-782a-4c83-8ab2-cdbbc831bdca"
        },
        "item": {
          "id": "c1616a2c-f43e-4e00-8bd3-6f309bc92f74",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "85084556-a6f8-4249-b3d9-080d559eef3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f4ef83a-fad5-4299-bbf6-11786acae8da",
        "cursor": {
          "ref": "523fd13f-f7ca-41c0-967b-866ecf2ccdbe",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "72c3beba-fec6-47be-9337-5d3b68de1ee4"
        },
        "item": {
          "id": "2f4ef83a-fad5-4299-bbf6-11786acae8da",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c4761c26-8157-4a94-957d-eb8926c4a14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e33db346-dd3f-4262-9d04-054655696dee",
        "cursor": {
          "ref": "ba5d1c4e-8155-4b9a-bd76-cb2e061b53d9",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "ad8d84dd-5805-4bbe-98fb-0e8ffb43e4d1"
        },
        "item": {
          "id": "e33db346-dd3f-4262-9d04-054655696dee",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8d958e8c-84cc-453d-a384-1c5e2454d50f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6fceaa-8baf-4312-8acb-20a0126b0223",
        "cursor": {
          "ref": "0364587a-fced-41b3-aa05-aa3933be2b7d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c6016915-a87f-44ae-b72e-def997465b78"
        },
        "item": {
          "id": "9d6fceaa-8baf-4312-8acb-20a0126b0223",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1d0bca65-1112-4323-bcca-e3ef0d9bb101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c4c1d6-53e2-4d11-a055-3f1356b133e9",
        "cursor": {
          "ref": "2db74f4d-8122-4eab-afc6-55321ab4ead5",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "77e8b2a0-15d5-44a9-8320-0f17c7c9ec07"
        },
        "item": {
          "id": "11c4c1d6-53e2-4d11-a055-3f1356b133e9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4fb0d39f-d3f7-4f6d-959b-64110876609b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049bf5ec-afe7-40f6-87b9-e807f67dd94c",
        "cursor": {
          "ref": "a6720e6a-cee8-4764-a438-50e423454ed2",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b68cd54f-a959-4c3f-bb19-1e9e03563cc4"
        },
        "item": {
          "id": "049bf5ec-afe7-40f6-87b9-e807f67dd94c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2388a8ec-1e79-4084-8a4e-5f46225b502b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30ffa1b9-ad0a-452f-891a-9985ec255ea4",
        "cursor": {
          "ref": "68d830be-6972-4910-8667-1d877a1757c2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "af7c7f6c-77f4-4aa4-9b1a-48dccd93620c"
        },
        "item": {
          "id": "30ffa1b9-ad0a-452f-891a-9985ec255ea4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2581e2af-e05d-4628-bf14-3023f91962a2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44572279-03a7-4379-8aa8-57816fff358a",
        "cursor": {
          "ref": "aca7750e-0281-4761-ad8b-e1a1b7d84f08",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "866fa56d-e177-4db3-b1ce-d4115a4d7df5"
        },
        "item": {
          "id": "44572279-03a7-4379-8aa8-57816fff358a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "12357403-b315-4ca0-86c9-12946466f939",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71b8764-662b-4987-817f-7844af27401a",
        "cursor": {
          "ref": "d3e7d0e4-be3a-455c-8b59-b12396c77c9e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "e68fa5a0-bb9f-4d2e-9213-168e0f21dd31"
        },
        "item": {
          "id": "b71b8764-662b-4987-817f-7844af27401a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f553cd16-a082-41c6-ad8b-9a1edaef193d",
          "status": "OK",
          "code": 200,
          "responseTime": 1324,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b8c40b-2394-49fc-9228-94c1ba9af9e2",
        "cursor": {
          "ref": "e6d9be1e-dd80-4f9f-aeea-38d3e1755f8e",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "60222310-9b5a-4875-b944-9fb0d32d5874"
        },
        "item": {
          "id": "09b8c40b-2394-49fc-9228-94c1ba9af9e2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0b40fefa-ec37-412a-b0e5-3672ebfeb201",
          "status": "OK",
          "code": 200,
          "responseTime": 1206,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d25803-3f18-4104-ac2f-f36a15a03eed",
        "cursor": {
          "ref": "0697f874-69b8-4e5b-bd69-02038e4b9df8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "80828214-b187-44f3-b650-8d1d2ff4f499"
        },
        "item": {
          "id": "42d25803-3f18-4104-ac2f-f36a15a03eed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c172587-bb7b-4ecc-a0b7-7fa5b947527c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d25803-3f18-4104-ac2f-f36a15a03eed",
        "cursor": {
          "ref": "0697f874-69b8-4e5b-bd69-02038e4b9df8",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "80828214-b187-44f3-b650-8d1d2ff4f499"
        },
        "item": {
          "id": "42d25803-3f18-4104-ac2f-f36a15a03eed",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0c172587-bb7b-4ecc-a0b7-7fa5b947527c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6578b08c-9336-476c-b2fb-19b12f80fc2f",
        "cursor": {
          "ref": "a4d3295b-2786-4888-bf1b-0860eff11b96",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "36e5271a-efd2-4407-b087-a6b5d99f7cdb"
        },
        "item": {
          "id": "6578b08c-9336-476c-b2fb-19b12f80fc2f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9028082b-fdc6-4d3f-b67e-8fce416b8905",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4de2df1-3e93-4b95-9781-ed500a46a6ce",
        "cursor": {
          "ref": "ffc66b91-39b2-4dd0-b936-38d656e6db98",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "8cd0f288-7c18-4086-992c-7579059b73fc"
        },
        "item": {
          "id": "b4de2df1-3e93-4b95-9781-ed500a46a6ce",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fc336963-3ed3-4ca7-a330-e216a8bd806f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}