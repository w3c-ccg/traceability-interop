{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "084a506c-3669-48e1-86b3-737190882204",
        "name": "Clear Cache",
        "item": [
          {
            "id": "78052c52-0774-4d82-a5d6-14289f9201cf",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a0b4de81-6ed7-44ab-91fa-ea8924fb0997",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9edb5e43-6fab-4ee7-aa17-b687990e16e7"
                }
              }
            ]
          },
          {
            "id": "56c90dfb-2a74-41be-a49f-462e9df7dd97",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5b08b9a-4132-4bee-9824-9ac004b1c1df",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9059ecb4-89e2-4560-a0d7-f377651bcfcd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4e44097d-ba9a-499a-b363-85c265fcb5eb",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6b8a562e-3c62-4dc5-a354-9c75b2b4ff7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d2dfd103-a9ce-4332-837f-71b94386aa7d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df3b9752-c4ec-4f26-9df6-79bd8be7d4e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9c4af55-4d76-43fa-a644-bde8f428afb9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "085e494d-c079-44cc-b039-56668e34a51a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29a3e85f-759f-4ed0-9138-fb0bb15ec2d9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e99bf009-c895-4212-a33a-a663d871dfb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f45eef5e-652a-48d9-b569-fd28843ffe2e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "354a0671-6e8e-46bf-8b43-077c03b8bd57",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e353d18-0071-4d00-9dfe-af82615ab571"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14bc8efc-63f6-488d-a149-23b3347282ea",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0be7018f-025d-436e-8409-2237525de24d"
            }
          }
        ]
      },
      {
        "id": "b70a8ae5-c219-4081-be06-65cf5516bf8b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a0b4d958-c6cb-44b7-aab0-83f5bd5fe853",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5124e11f-6742-491b-8f5b-ac364c12280e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80cbaae9-cf15-4182-b98e-8e53317ad3fd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d64c1d-0f86-4cde-a500-b590c0997d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e445a28-cc96-4dcd-b208-487698e1d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5393627f-e8f1-466c-a8bb-0b84d37d1bd2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f9a414-9aca-41f5-9913-c71ae091efb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fca1d16a-91cc-4749-95a9-6cc240da9482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cb4d06-b8b5-4444-a55b-fa2b71a9aa67",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48c7d30-01f6-47f3-95a6-ff1dfb6c7f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1878841d-b762-43c5-bca0-48837dee276d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "20b95740-a328-4995-8498-84c2050da054",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6db0c067-8053-40a5-8903-b1280cf6ed66",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f61a5df6-5b16-4f3d-ab1a-c79b3245878c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42db8fbe-f502-4ded-b329-949d6052ff7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8aa4751d-e1e3-4d2a-86e3-424fe3add721",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff4c755-73b0-4b82-80bf-1a65f5760f87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2b0817e4-0d89-460d-b6c9-1e96b2d0c120",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7c2c4273-d758-42be-ae79-469a2777d624",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d96183b4-168a-4598-9aa2-98638575fb1d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "07a3430d-1c82-4bf4-b57b-bcf998fa8ecb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7db38155-5c17-4e29-8e3c-37a5574aea87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "add52aec-4231-412e-a88d-b66fa2a570c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19c44c37-7d93-4007-a914-62e227ed82fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d1af8dbf-9380-44ae-8d6b-dd2a4153783f"
            }
          }
        ]
      },
      {
        "id": "58c58231-2a75-4773-b987-fbcaf964004c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c600f76a-c0e6-4468-953b-63d520610b4a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bfb92f3-6eea-4fef-b087-afa777a0bd6b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc07bd30-fc4b-4e69-bbb3-67d25a2b6da0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c3c0b2-b919-43b5-8988-7ba60813ce33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6835bce6-e6f9-4ff8-a445-dbf4d3a9718f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb24a6a-b66a-43f8-8f1e-64d6d77328c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87ccc412-02b7-4e56-b074-ed3bb61f3d12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19f5dc74-563b-4452-aaa1-55a2535e8801",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b7c1f7c-26e7-4583-9665-2b669d74bff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e680fd72-43b2-4df3-8aac-5be0d772a831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e43890e6-8dd9-45f9-9b24-d21bc8b3af54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aa879db-996e-4f78-bc32-c7003385e68c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb0f5a8-af7a-4958-b52b-1e993efc982c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375c1364-a70a-456f-a8db-d7e933e57afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337c7f31-c154-4681-a72e-1e6376e36b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f303eb37-ed64-4dc3-bde6-f3a0226c2433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3366894a-08e4-4d70-84c8-e122fd544e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891f1a26-5446-408e-9d14-7b75309dc880",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd9c8cc-468a-45b6-b016-b48a747dc7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaf1f33-d369-4e52-8425-818f49bc3e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622901d5-a6d2-47ff-a18d-2f90232577ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d8ba29e-0944-4916-9ee1-8ad665e1d89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be18fce-2c4e-4fb8-a3d0-dd048739525b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0adc325-6704-4532-a404-a5927da2f3e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ab6794-2a48-4393-98e2-07a8c303dbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0bf6f1-4634-4275-af82-0c6c882104e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "690d8c64-fc20-4e49-84e8-a6062bd91e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "695a9f55-5065-4e5e-b4e0-554bc47b7aa5",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f9125-edb1-45f2-8ba3-c1435f413edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08feb049-abbe-4bdf-82a1-fd162b6792fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f49d1b-c505-4568-8803-2c2befdb500d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d05725d-2c05-4acc-978c-c0e12154f631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed0dce5-5e1f-4010-8ed9-4d6f88a88f18",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84fff17e-702e-496d-9760-490526945d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f2fc02-b293-4dea-8c49-caab10bf45e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a14d89-a6aa-44f8-bbb9-16b502db786f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39ce3eff-c1d8-4206-9baa-5e24967696d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c3aa0b-6ead-4096-81f7-228dba3db471",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d24393-835d-4d45-96e7-7559080a07cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa2e24d2-85be-4038-9226-2cb9e82e69c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b2e1c14-146f-4011-9a49-1244d7434c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d235b508-7e16-44b3-a45e-18ed9965bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad0ebf14-35da-48b7-a0d1-a250d9c105a5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fc7bc8-3ea2-4c4d-b8f5-b9cef7896ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e97ea22-6b1f-4c45-92ce-6ef0ce0403af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b25659a-c9f4-49a8-92e6-a3f5115ebf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd348dc9-b4a9-400a-ba77-88ef99eb5741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac935460-2ce8-43ed-8cf3-d9008048570a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7ccde68-2302-44cd-92f0-c3bd090a8d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01bca03-8e02-4283-9bd0-c9facaf7d0ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fe01b9-d673-408e-b0ef-16959926a1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a731bd6e-9a66-4904-8b25-9c5b8f426e10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde3b135-27b1-482c-a676-6ef5f1ec00b5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "354bbd7f-0f6d-461a-9df5-5efd3035681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeb0d940-ea08-4b73-8860-25fe5034ce02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d264b57a-d444-4402-8a9c-453bbd4af22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e5adc18-853d-426c-9fed-4ed7b7f69118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ba93c5-7361-4aae-a2a7-de731cbcc1b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "050ab7e5-57f9-441b-b5ef-7ceacb0c989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307a118c-7404-4929-9b0f-dc6e1019e18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "303df7df-c990-4f7d-a022-bd8b5672a75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dca49889-a52c-4dd1-8083-8e7aacf06c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71d4a30-27ce-4939-9c74-e8422dbe2631",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ed78b9-727e-4685-b25d-9989f785edb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a199817b-8a31-4f54-86cc-760472d82845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d30d84a-0830-4e38-8305-cd9a83d7117b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9683f462-1656-4ee9-bc45-4c295bed8aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbeda831-e305-4365-a47f-a060bc5c64d9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dff5973-2ec9-4d90-a719-27414496ddc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5648551-29a0-482a-89c0-810a84873bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ce5d80-2353-49f4-9dc1-a45d183bd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04543f06-5e3b-4927-9cc4-4f0af7df77d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3ff663-93e4-40b4-b6f1-5d1e04c45015",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "404008fa-d4e7-46d8-8f15-cc41eee8eba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77332829-9aad-405e-a12d-995a13197a49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283e6d93-419a-48c9-ac23-afa9a6aa6839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f72c0bd-2fde-4fc3-b3da-58cfc8a7f7af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb7fdb1-a9a8-4281-afd6-051112b7c366",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b21976b5-027d-4017-8fd0-9ed2261bb931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d2714e-90e4-406f-8e7a-4ea8bbddf03e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd69a56-9b88-4224-9d99-67221604bc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac4817c2-d9de-4453-ac53-c25a699650db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d6fb86-98c0-400e-8e10-c88771541d1c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca817be6-38bb-45b6-9bee-3c3cff8fefcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c2942bd-9160-4bdd-9c8a-8c7cf29ddb97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca8968-865e-495d-9013-fb0dc38e3c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5041cfa2-246c-4306-b847-4d195c9d4a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd2514b-239c-41d0-846c-ead634adafa1",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c5bd1b-2fd2-42ac-bd01-e4cd248e8c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c1a5a6-e11a-44ab-80f1-cb5abe3817db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db1ac58e-9c06-4542-9ba1-5d65eb5e3f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "7156f9f4-e326-49fd-b461-9f2956728110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa8f2cf7-37d1-48eb-9f84-aa816391b1dc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "962d3133-be0b-4ea2-966a-186a98ec5ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6137c1-44bc-4ac0-a075-89da7344974d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e37d60c-b11c-4839-9c9d-725c0c13134c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88e7d499-4919-4f96-933b-dfbdb9718b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e6da53-3dfe-42eb-8c96-91c079def175",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "607505b2-560f-4c69-bbd2-33c7f56b1d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de700a6b-578b-4c56-9e97-ad07a20626d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bff6c9a9-17ab-4cf1-8807-11d6644b2e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab417003-c55c-4289-9369-564db8d93ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a71a2b-ef92-47cd-aa20-8456c08d9801",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02308bb1-6a17-4809-950f-7801b27837d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a91d538-459e-49ee-b917-80419739dcb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cf9ab7f-c620-41a1-8763-6441d800b7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dffe46e7-d581-4749-a050-7753e4591339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145e3df1-9b82-4e75-8a68-70d6503dcd20",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e07a2ac-850c-4cb9-9812-9fe44d9ad430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02eba89-11b9-405a-bcbf-1344e72f0ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafd1830-d19d-46d1-9fce-e31bf05ed663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "097eff42-05aa-47fe-a4d6-abb35e3102a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e96cc0-ad82-40be-9133-ef87478b06de",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74765c69-06b6-492c-86bf-abe6de8a52cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6d52bf6-1dc8-4d9a-a82a-163e9e81f6d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac9499c-2fc3-4e6a-b26c-488a942f39b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22d75e96-8bec-4ba5-8519-b6f62448e0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46493104-2245-43c5-9761-41d7b462ce1d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb20159-71c2-4233-b3c6-ffb344bfc860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e6d40a-6376-4f46-9cc7-d3c4bdb1c3c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4b978c0-16e3-48be-aafa-9d53c5711bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b44b2bc2-6498-4378-bc00-4fbdad55ac24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0a82f8-e4c4-4481-8a3f-1dad369e4e63",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e192ffa-9709-41dd-aca7-c56ae88d891e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62431c1b-86b9-4215-befe-9c96ec6d1efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f087e4d3-0190-4ba0-8ea8-e67d9ce8bbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8969ee10-4ff2-427e-8beb-adfa54a5168d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792b08f-d43e-40ff-845c-bc74622bf1a6",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "671182c7-72fb-4189-900b-6847798cb8ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "830c430e-cf67-45cc-ae40-1c0769905b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e886fc99-94da-4af9-8081-126f53d2bc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03d661a-a5dc-4dc2-9b86-1048825c86e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbed105e-bf2a-40d5-ae21-973a8ff1fce3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005e7e6c-e359-42ad-b580-19a04b46043e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5042318c-14a8-4712-bf76-2f2f8e780b6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12ae2a2-7c3d-4ac8-acd2-77af199fe0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "37afc995-e7e6-497c-afa8-213c3b6c5364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b5f80a-78eb-473a-8884-db0eac2dcb6c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1113faaa-9c50-4926-b2fc-32e22afd38c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea6b8b0-2576-4b15-a989-cb7bacfa04f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb87c4d-c7b3-4d10-89c4-6bbc89b8158e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d39d592-5990-4399-a6cc-a779ee9ca17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c14e66da-cf41-4a48-a072-4f59316f1ef9",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712c9031-2622-4298-8427-81080bb5ff28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2b5a48-ab8f-43d7-a1d3-3d8ced7bbb3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a10eff-e80d-4a3b-bd0a-fb72dbeb7859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f81d709-69ac-4a2c-b858-ab5da34457c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fedd2e-0dda-4bf4-b726-7a4beb7132db",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f84aa78-2742-4ebd-a13a-2fd5cda6c6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bb436e-c9f6-4dbd-bbe4-4d528588f140"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1aee58-e3ef-4558-a5dc-a5d63ccb81d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "87757b9c-2aaa-471d-b1db-36891e282d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629979f2-b87f-47c8-80e5-d150bf2e5b55",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4a528c6-35bd-4fec-a601-f73a9a42c258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fe56790-5620-44f2-b18b-e0b62c4cd9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd83f31-65f1-4f16-b3c7-0c2b63852d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41cf0e9-0c4a-47e6-8e90-e0d9e1307bf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8789a5f3-cf64-4cc2-a3f1-ae5cdfd63e5a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4bc4a7-76ac-4db3-98c2-57bb7359b355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f195f8-7d8b-4e4f-9689-4387d3b709d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f32cc2-15a5-4009-b6a5-e62386203775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1dffaa1-ace4-4006-9e99-5df421149f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4ce61a-d9da-43de-b855-a2c28b660034",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8194213d-7fa5-4f36-8d7a-73fdeeb8766c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a8e4c01-96ee-4238-a6c2-d0327e86dd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0dd0881-6e0c-4a7f-bb1d-c21820a0e34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0d00ddb-24ce-48d1-ae7c-2076a83726bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a4073b-f545-4cd3-9fbf-735e49bce196",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454f4345-16b8-448c-b726-b7685844da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe076b6-fdf8-4b7c-be3e-263109ca7e92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc82c478-2f8f-4739-8e6c-b5c253615066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c41875f4-9326-479b-a6ca-01faed5dee27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a55efa6-9ad6-4374-a20d-24b88c783456",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c33e42-73c1-4625-9247-352c2726ea9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b05b45-5567-473d-a16e-42f4592bf903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60382a04-91ab-4cdb-8833-4f397772ec0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eed9b8c8-cacf-42fa-9007-c06f7883195c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4cf579-3ea8-457a-9617-2fdfc1cd7de4",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f99f3c-1199-430c-ba55-d1125e79a051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b776f8fb-94fc-4d9c-8d31-e28495ba4c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b172cd80-f6cb-4b3d-bb78-aaba457a1b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "174138d5-6392-4ae9-84ca-f63a739104d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8c2fef-957d-4f84-99d6-b559b531b852",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108d7eb8-b4dc-4c5e-b190-d8af3bec6ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df14dd3f-d3df-4c34-8e11-9f6181c0c8e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85d5132d-829c-4c35-ac7d-f0f535cfc1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a467630-a3a4-4cc1-8a27-55e464014727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "194186e9-63c3-44f9-88cf-a00ba8b71e45",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6831ebdd-d426-40eb-9774-65f2d9c3c1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ec81cd-e7b7-4721-910c-9a3c4ca41fb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a3c6bf-9eb6-48e4-a0e8-74f18f0e2e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95df34ed-39ce-4818-b481-943cd1ab2d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623c8e94-4047-4ec8-ad19-0d8a585b7108",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddb6139-6bd1-4e26-9035-5ec398c49dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c0d531-e680-4210-8454-b2b7e7687676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a24df5c7-cf0c-4467-9f1d-e24dc7bebc40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1441b3d4-56b2-4013-9cc5-96c464e8f139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "855d14ee-c1f2-4ef2-85cf-aa2d6bda986b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf3cbec-b5f0-4f9f-8371-30908c2f93fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc394c13-09f6-413e-b962-fcfe2228445d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f764d11-23cb-453c-a6fc-c4ca1720882a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b24e449-a354-479c-a2da-923897c1a0ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407508c5-5a2d-4963-9ece-c75c8db1371c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1b7d3b-de6c-43d7-a763-7c9c3f6b97c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dea4fc60-ba0d-4b8d-bb1e-cf5084868c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d2d9dda-fbe4-4550-9252-c2e7dafa4b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "74ee125b-367f-46aa-ac17-1bb9bb8d54a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "500f4983-cfb6-4157-904e-b0fde7f59979",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98edfee6-81b6-4666-aaa5-74997d987ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d718a93-46c6-4fcd-abe9-3142f3a80728"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "673ad4e8-631b-4fb7-b549-fb6cd6fd490b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6d274b2c-721b-46e5-adfa-8f48822acbea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bce470b2-d13d-4c88-aa21-7e5afa9fda8e",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "000e7bc8-2ed1-402a-8c60-510f6cb62390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff874f48-7362-4087-8d2c-f9a66d17b4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d96dba1-4bc6-4cc9-a110-fc1d5a455f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "458be79d-8eb4-4cc2-afe9-3c7b44376e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11d42a6-de7b-4833-a2e7-4367d1cf1ba0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ed74992-9cb2-4c24-bcfe-fe441194b59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e3c73e7-047e-4780-9831-14ab314115f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08667156-dc0b-4c3f-8add-14574b2c64d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c749ae38-2ba2-4ee8-8229-2d38811af48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f045ff4-e2f9-48ac-9f07-1bd689d39172",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643c67bb-79c4-4275-83d6-4e659a073e00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ca010b-6839-4cb5-bc01-f053e522c0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43977005-ca2a-4801-ab01-c60ce685a3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "121ccc20-49be-4eb0-9e4d-7710adb03285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c477336-5de2-4c3a-b1a6-fd6203caa5b2",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "744f7c7a-3036-4b2b-b479-2e3807ee135c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "319cf7c9-c2f7-4568-81c9-40ee8dae5115"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19734abb-e0ec-4d8d-a68b-3e823e41372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3485f1e5-7aec-4ea6-9ffa-c4eeebbaaf2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37adf14c-2f59-4625-8a57-c2378c642b02",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573ec18a-b735-4868-82a6-3d57e1f2c235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8ba3ac-3dbe-4022-9c76-ea2be9975918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbec7d80-e412-45c2-b5a7-4f29d5486209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1cf4585-99b6-4b7d-bc5c-63348cb03d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64aea289-da38-4eee-83c9-9b678bc20f6e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01544f43-aaac-47d0-bad4-d919b9ee2494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4531b9c0-6a8f-4b28-883d-d1054938e4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b30755e-1889-424c-9fa5-0a3185d8a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4bcb492e-4b00-4433-8905-4b9b82ac4823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e178f1-c712-472f-a4a6-677f853d6899",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d059c4e5-1d8e-4750-906c-b4e09dcf12d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b3f628-ba40-4ace-a32c-ae5241c97169"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "355dc295-abd2-43ec-86a5-1e69f9945c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22df7a49-c294-4e07-9fd9-9a5ea683d307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3603c262-8e75-4a71-b7d3-f6ec94be68cc",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f6341f-3504-49f6-a8c5-d0521486c3f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d42b7f0e-88fe-4ed6-88a9-c8fdc3fbbfaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8d2867-15c5-4c68-a13e-ec03d60dbac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f346c0-96c1-4b89-8255-ea815b5da71c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8036ef-ca92-4316-a0f7-86f7b7b9a0b4",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c10cd7d-c05d-45e3-b728-a7d4b093b2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc0138b1-8c0c-4a4d-a239-c49a82701f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e38d61-0dda-472b-9a3c-13573b3b2647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a9283b-7fe6-4744-91da-4e0a3d469887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c7f187e-7ef8-4469-a39c-7d7a7ff2044b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0204ca56-fe56-40d3-8ffd-5adf13f7f9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d0b9a8-4f5a-4884-8def-0516097c0146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda0439a-5ad5-428f-84ad-82ad069f5d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "922f45a3-6d0b-4548-bc56-52474a37a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4b353c-9711-4ef0-9134-5d2403ea1789",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f969b0c4-58b7-4cea-8b72-e030697bdf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095e5d51-4690-47bb-baff-8c649eec86da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351d4f95-dbfb-42e4-82c3-6c3911d8e70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89e53d8-8d51-44ae-ac46-0e0f72050761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac277ae6-ab3f-43b6-9c54-4b06b4f6612d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0144fa30-a4df-4881-899a-d29f784d7749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1f431fd-07e1-458b-bfb5-f2bfe28ee914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0928b56e-bfe4-4883-a0c2-707cf2f38335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e32792f-feae-41aa-ab86-df97fc0dd396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a21fc247-9a7a-4a15-8fa8-ce0c62c6c651",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24331a60-49cd-47c9-8ade-ffb73a5d09db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43ba3a9e-b26b-4fab-a207-d430ab0b5ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b80ef5-901d-44ae-904b-44d9a9952153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "094af2c8-5b31-415d-aea3-ff11a1dba2e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df8b6bcc-9602-4cb6-997a-0f67187c9fba",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "531abc33-3f17-49e4-84c2-9f5068b3a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4355b2a3-eaf5-4ccd-b72a-aa144444792f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7be381-491b-4335-b44e-dee0aa07d698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ab28a1-d21f-430e-a940-4aafa7e60264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2320484c-c470-4ed2-82f6-00013f8593f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e36c106-7001-45c9-a7ea-eab8ead7c41a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bb5c0c4-ebfb-41f3-963a-93473a7068f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dc27d2-cec0-4eb2-8dc1-6abd2035ba51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "77430168-4efd-4fe8-b1e3-4030dbe30458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9917e42d-6cf1-474e-b713-43483ba1613a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65172db3-d7de-4d70-a241-4e6ceb3c0425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ee8780-9f9f-4f16-bf5e-e24b579b29c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90470e49-a2a5-468c-b781-ffbf28a77975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7989da3a-fa92-4d14-bf08-a76c8a84478b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e0f467-ece2-44af-a7e0-32af594fce23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5c6711-cd43-4e8c-9c64-56444b089e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "667c8c0f-a52d-43ab-9114-a130d922a534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82404504-0cea-4dc8-9427-2f2d5b96ca8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "977d3cea-f6e7-483b-acb6-8124eec3f5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84dc574a-a58b-40c0-9bcb-f63017032372",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d02c24-9333-4e9c-a43a-a8bf0f1c80aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d148786f-cac4-491a-a893-72c8e65066c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f40eb20-8233-403f-ab4b-24085b755639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06d337d1-289b-49ab-b050-768d9cddb2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c30cf98-589e-4b90-a207-0c241690965f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b5c349-0edb-4f5d-8b77-d04c7a358901",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c3d5e38-119e-4d8c-8a4b-fdc2e642d4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2902f7e7-6787-480d-8c3d-296e03b7ab64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4de1e75-6ed5-478e-9cb8-67426a279508"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06505f56-32ce-4821-bcca-79f0ea3ca8b7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8bfdbc-c55f-46f4-8331-f3e7501bb6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "977d723b-4276-4b77-bb28-85ad402dcac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a630a66-ab12-4b62-aa31-5b62f1f1b53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebeb4e7c-0513-4563-a1c3-fe4f83629887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419b8dc2-9836-4ecc-b8f1-ccec98ce563e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c76311-d96b-46b2-b5d7-c857a2b772ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34b93732-e352-4d6e-882f-c4b525660dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f3f5a8-1aaa-4c41-a3e1-17f377e3c070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d19d571-fff9-485e-8c86-6029a84201f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32eedf1-aa42-41ab-a011-0099509ff16a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b414a2d6-117e-4180-9d67-e9ea16e76e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5395678-1b68-4caa-bffa-c6eb7fb968bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8321e40b-e52c-4c6d-84a4-914ac966ea0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e05da449-f52c-41d6-b796-a36bbb5d6b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337460b5-3779-459b-b0b2-8de462778f17",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c605d0-335c-4523-936f-68f30983cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1137e2f-855a-40f9-83c7-1758065dd794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923ec1f4-a487-41f3-88ac-47f25b6f2896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8dec3ee-4abe-4740-87e9-d2615ada0fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d439b21-c93f-464c-8912-7e5f9e4588d4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4ece26-7583-4b42-a697-f5e43740147b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00b2982-58b5-4e16-ae78-7138c0b8f424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc52419-2aee-446d-8631-e831c893c3d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9992c4af-bba0-4ede-b272-944327b2d859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c54a2b-eff0-4c58-b492-a82c42a35efe",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db999ccb-c81b-4dd2-80d3-228060893f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58e80b55-bbf3-4fde-8ecc-b53ff9f429d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde38172-fb7f-48fe-8f51-6480fb76d050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c3ccf1-831e-4a8a-a9ab-777aa47fd3e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b025583c-54a0-49d3-97d1-8d9dc88036c5",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bad1f75-c091-496c-afab-73ee1fde9437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e754023-fe5c-4fbd-a3cd-d5155daf4fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ec0352-43ae-4c31-9328-33075e1951d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "19c9f56f-75f8-49f0-b51d-891f73b7442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba45dda-c412-46f7-9669-21b05361bb7f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b541cc56-e573-4910-9944-31314a3d18fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70868f95-6250-4a98-b13f-deb009967fbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c5c736-91e6-4c5c-8158-9368b5f2fafb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a71592-90db-4ccd-8d77-62ce3e0c76b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d58ad22-b189-4169-bbf6-ae73afc3438d",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37c2860-0a21-4f1b-842d-4860d236c02a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4379434b-15c2-4a59-b015-7c1041bb1adb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e3f883-0a6a-4ea0-b03f-b5162e4cda9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cde63cac-4bd0-46dd-994a-c248fe5bf6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc026b07-f53f-4f28-aab4-093339867ebc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "440bba71-37df-4518-a3f7-70d93c82fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fa9aa2-af69-4fcb-99cc-06455323f95a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1dc3d5-7cb6-49fa-967b-612a38b2163c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1a536f4-51a0-4e8d-8395-b899e41e1dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b10b47-0bc5-485f-a446-5c0d14732470",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eaace8c-df15-4c90-90bd-d4ac345a86b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d358bccd-019c-4d3b-bbe0-410acaa6ff0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508c67a6-9418-44f0-9dfb-2763a30b9ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a16bf485-97d2-446c-9bb9-ce75add2b253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe59c4b-94f2-431e-92b2-3e20c6e1af45",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6732a14e-8e77-429d-acb4-38b0b2f1566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8298d1-24c5-4cb5-941a-7395286ab0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3292d1-01f9-4dcf-8879-f223e3347833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfac06d4-15b5-43df-ae2f-dc53e2daab5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc81c75-0cc3-4077-9740-e4f02ec9baf7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf87d31-46e5-4ef1-a046-5ae53faf2e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a04500f7-77fc-4cef-8e10-15eed5db6d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c064db-4b58-4b65-92b1-28ec72fd5214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5077730-4c3f-4e2b-9408-039483f9b0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4455cb30-80df-4809-9b42-1cfadc9fa572",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3903806-cf59-429f-a27e-2457cc73de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367b167d-9268-4bb3-a470-928fcb364968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e448d6f5-de0b-48ca-bba6-1f1d011a8618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "795b9fac-21ec-476c-91d3-523f5a998778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef34f34c-0728-4026-9e3e-58e4890fd8a5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a705a718-4621-4c77-9513-96f657573de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fce96ac6-3f1c-4dc9-8fe1-8b9e64f34038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ccac1bd-82ad-4af8-84b3-b99e535e8fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f967aa71-1d8b-427a-a9c0-1de6c16b9afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e31bdaf-275f-4ab5-bb3f-21f42a678092",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e964e1a-2e2d-4b5f-a2cf-b1098c4a171b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46beac5f-a92e-49d0-9a12-16e5a15c9ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef468cdd-1602-48cb-8d7f-2f0f78c8a5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "087e203b-63d3-4279-9b20-a06fd690ef2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c9dd318-083d-437e-a81c-8424b5dedaed",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95234126-a97a-4ea1-8994-1ea7b01b2e0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59fe820-3808-44b7-927c-1761352d5d4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8b4b512-4062-4230-8e35-186b1c06a51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "867a2544-400d-4ccb-9224-9b5152d8dce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a280f1ad-60af-45ed-b805-529dd34e4f06",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c42504b-3768-4f8a-8e36-580882e52fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead0b5d3-db7e-474c-a664-1871d73cd92e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cc0b0d-63b7-4f5c-b7a6-571917243bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed957f01-0a44-494c-85f0-b401679c6515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d1eea1-fe36-4aa9-a92d-fa5b3a47a926",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab125a9c-43b0-4922-a02a-3f27d63700ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7405bf8-1ebe-4f0c-a8f7-4ed308e780ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b308326a-fe22-4fa8-8e8d-1b19e10d0a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "db078403-8a10-4ccd-b346-7fd02516da18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2551d22d-af89-473d-aa6b-e2565dabe7de",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b12fec0-08bf-4db2-9a76-82dd043c207d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0959aea5-ddf6-454d-9fcf-c45521d72e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e640c3-8681-4705-9f98-64bb04c21faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d00046b9-a47c-4119-9c77-f8567dd93b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c2fd0b-d155-48e5-86bf-c05a1913d442",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "186904d8-76a0-4043-8cd3-24aec3a32050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aa707d3-19df-4029-a78f-dca4bccc22b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c2d4c2-0e97-4292-8036-4c5b64c404b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77bf8334-9ec2-4982-a266-7eff8523de9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e24890-537e-478a-b30c-47fb3c7c47e0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "831e19ca-7fa4-441d-842d-fa8e4493fbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0dacb0d-5aa2-4642-9399-fd1d18637caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69fc55e-4836-4e03-9399-17650b879061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe1bb77c-98fe-4c3b-9524-4c4a572a40a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2532abd-cb57-4705-b9df-5e52c2a9ed81",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180753a7-bca9-4069-882e-e927393c5ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026bdac7-c2f4-41f6-b182-0bb0d608cacd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d57b9e5-5c86-4e2b-b7d7-d3330efaa687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a712eba-a230-4f73-b0c4-dbb25c126b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bbbdb1-eafe-4f96-8cec-3f2f78d3edb6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd906129-8e80-497e-9ce1-121251e10991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66850101-45ad-41d9-8ea5-3669d4dd4890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ef6b3b8-94d4-47b6-ba21-2d3b3b66366c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06a3e4bc-25e6-4b2c-a276-3e38ee0d9815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e92860-544c-4044-a2a7-578a59737ff2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d0da230-a9ce-454a-9d2a-fc61afa6a22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faae4031-0c63-4283-a6bf-b7890c9958ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08bf7cf4-47e8-45b1-aa6b-da5194d3f7b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96fdb0aa-a3f8-4f27-8a42-8a11cc8862e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c216b9ff-eaaf-49ed-8351-8d9f8057cab4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e83e0b8-31fe-49b3-8ae4-921a15a065be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc05a43-3821-42f4-b9b3-f299758635c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6904fc65-0d75-4357-8a16-3a014e932040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9969cb-bc45-4d1f-9158-1aca9fb6f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21a9ac6-28da-415b-84fd-fce1f881d047",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ca80fb9-c71a-41af-8942-5af2090e6bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21c0d193-0367-4280-ac9a-c4e578c109bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1524f9c9-15c0-4475-bce8-4e74f5924537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "96322a1f-3ce2-4339-becb-a1c2217b6396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff01218-70b6-4b40-b4f8-4a8b4e171beb",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0446f456-a904-4238-ac41-fac21dfa2b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a859798-43d7-4471-be3b-096fa41a35b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740332bc-d01a-4582-be6b-e381e278ef39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f923e39f-9c03-496f-ae95-6b4a244f2939"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5643389a-beca-4ee9-9489-e1685436953f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87fb2b88-bb66-4288-a74a-7b51efb0956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4444dd2f-e85e-4499-93b6-e1850887fe66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa681543-39f9-4432-ac5e-05d34bee74b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "985fc15a-25bb-4b34-88a5-328797179760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75389bf4-4f5a-49a9-884c-60000e39247d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59acae3c-d96d-42b4-a37b-80fa7cdd814e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16693ff1-3998-4e7a-9875-e6e0a62bdb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b8e7d5d-f738-45a9-8bc1-2c80e485151e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "61532894-98e1-4808-a084-1f1bf9f9a7b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13318ddc-b15f-4658-8b57-ff1e5e31283a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae617213-55f3-4fb9-a6a0-d0d366b92532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2cc493e6-b6e4-4813-ae2e-1d8234a46328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5882131-8008-4691-af21-57596790d031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b09e7d28-48d5-4696-903c-e940d4bfdf85"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a4606d13-4ee8-403a-a067-4f4349b2c6a6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d130bfb-4e82-478b-bd01-c01bce162472",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f0ea802-2fbe-4c12-99b5-cda93aeb06dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7feadd80-f322-41b2-a717-101b4492e91d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd86f14-810c-444f-bd04-7af6a40e4828",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5eebc75c-59fa-48f2-82f2-d702349f7f8e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c41f822-fcab-4990-a970-2cbc5796e454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c1db692e-4592-436c-9f7b-09322edab31d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d38b8dcb-8912-4908-9976-2ae144c4b713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c6eda36-eba2-4cd8-8ffd-cf6e9dfc1ccf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "433d81c9-62dc-43df-af86-d27174b31c2a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0bd35ad9-db5b-497f-928c-f7e2b97b2412"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "035bbb8e-0eed-4669-8915-d597feddd9ab",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "35c28a69-cb5e-48e2-9e0b-ae98099fcca1"
                }
              }
            ]
          },
          {
            "id": "80890e69-0683-4543-85ff-cf47c531c02e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3ead6c2a-3cba-4de9-8ece-71e1ddbad73f",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3f9e4512-4542-4507-a89f-23f5e9bcf853",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4f2702-58b0-4f87-a0a4-b65791577555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b076a699-dae9-4078-9982-fe3fe30b85df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283b7353-6fd4-4fb1-9e0a-1e0d7c09dea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "996f0161-e7c4-41ab-b781-818ce01f1953"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f64ad652-4643-434c-a428-a0c273e269f5",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ff27765-819a-417a-8812-4eb3b43a6106",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "831cb669-5193-4f85-b0b4-9f3c4d61e9d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "452d1f84-aac4-47c9-ba35-b64b7033d1d3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1329813e-dc65-4462-bb35-b6c598193fd3"
                    }
                  }
                ]
              },
              {
                "id": "a4071744-91fe-4454-9252-b24c8fa7d18e",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb930f57-b6cb-4c7f-8740-76f5028d1ae5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "85c7861e-6a39-4797-9c36-b443f1c286e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c025360c-902f-46bb-8f8d-15fbb5911ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc1e3549-f691-4a60-be0e-ef49942aabf4"
                    }
                  }
                ]
              },
              {
                "id": "7cf82b63-ded5-40ba-99ee-23c29779824e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ffebe97-a099-4cf8-addb-4fc344b977fe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c17d778-bc53-4832-a086-0e9f8b4ba300"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7818eff1-8d13-4a4f-aa70-81c825ddb58c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3c906996-054a-45a5-8b1d-3535ad6bd2ab"
                    }
                  }
                ]
              },
              {
                "id": "42d6a9c8-ec05-4655-b8a6-0015218e16ca",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f506b620-b400-4c19-8a75-8e377307c7ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a94c04c6-deab-4047-aaec-3352011c594d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "acf7393f-1911-48c6-a984-8a7cc46b4bf0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a6ca908a-369e-4195-a8c7-a50efc69809e"
                    }
                  }
                ]
              },
              {
                "id": "96bc5837-4ee7-4e1f-b2dd-4cc01bccfac2",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81f54fe2-eacf-4390-a4ee-4c049f5c137b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6eab604e-7b77-4149-8f9a-b9405c8a688a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a396dabc-7c7f-4bef-afb5-5b34674a0c47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9508493c-a5a5-4020-879f-8e5c259f3613"
                    }
                  }
                ]
              },
              {
                "id": "79c7c9a6-a8f7-499e-91bb-0eb320dba239",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55908d21-6747-4621-b1a7-be63e87dfe95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2889a70c-8b74-40bd-89e8-f5ddb6745e6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f8311f4-dc1a-44dd-9369-a494cbc852c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2aea9eef-0599-4985-8092-8a133465e54a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e5d7cc38-5592-4905-ab79-16deaa602af5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a9825ff4-0306-4476-a171-24f87ec3da28"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0ba0eebc-ebf9-4a6e-b38d-f9058fa41f1d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b8d27ab-fc44-4022-b074-2e36ae08cc02"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "32382255-6955-4316-aaf1-f69b9060782b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a29a2973-0541-483b-8e6f-a9eaf684b374"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe58560d-30ec-4b38-b729-62eb6bf8abd2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30e7f36e-ced7-43aa-b13a-0e07a49580da"
            }
          }
        ]
      },
      {
        "id": "23dcd0bc-8066-4cba-86ad-fffd932eaf07",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b78be49c-495c-4db6-b8fb-d53690a8e59c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7631eb7d-39d7-4d21-a254-83c907a7b3dc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b53a4bef-b3de-4f5e-a256-8af80c0e1578",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6807459-ccf5-4e9e-99e6-8395966d6c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "827e6066-98c6-4158-a2be-be62e140f23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d11f740-1a32-4c26-afaf-f52b9f8bb02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a48c317c-0dbf-4305-8708-d8fc92749d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4167c97c-7dc3-4ab1-abb1-ff1f4485ebed",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb74a8b-9c1f-4b0d-8758-6dc5ad1271d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563940f4-ff1d-402e-84cc-04be866d567e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac5d2ec-cace-45e7-80de-91f2e701382c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d858f274-2f5a-4bac-8e7b-bbb12e7bc310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179dcdbe-e4e8-4371-93c1-744fbcc81e81",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41026337-728e-4011-8c83-7d15bfd93954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98bb474-952c-4d77-91ba-c2cc21b24cb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faca9457-1ca0-45db-824f-95afa62d2838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c91b07fc-8e76-416b-8764-595b4ad416f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9d99bc-ef8c-4e22-83cd-43ab2a54da23",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479627e6-232d-4295-a2f1-a89e34a4de78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e57349b7-dbbf-44c3-a8cd-164306773ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955a1bf9-0ce4-450d-9507-7723f1a8f5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36786d06-b8a7-46a6-afda-6509b665737f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac45860-3285-4684-a6dc-78189352ae5a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85f6b5e-5a73-40fb-9783-9c531f6efc08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98876590-9866-42e6-82de-7dc39c713078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c0a68c-e251-4e36-8d0b-f5b0e4799080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b3ea32-7bee-4911-8c02-381cce5232ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14d5f9f8-52e4-4cba-b4d4-2a284b7fadf1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c6285c-40aa-42c0-bab8-46c111a8b5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54e3f92-d67b-4204-983a-554d4677deae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7066ad5f-f75d-48e7-8ac7-e14ef42e3567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a26491ad-d59c-4072-b441-c0884c6c9f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417a616a-5d91-4ad9-a847-4899cc97b27a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa5ba17-6c49-4987-a0bf-4ec146aced9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c938beb-0882-4023-8bb4-b94970ea0714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a34341-d592-4e4a-9799-0b3bbfb10071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b49f482-8c25-4862-aee6-b6d53f4e90d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69e0843-7d35-4671-a072-05f94f123aa1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89088f8e-4968-4711-90c3-9649f1199d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d44790b-34f2-478e-9441-bf24014563a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ffe8a6-bbf5-4503-99aa-39d03690354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a926171f-73c8-4bf6-9fd6-2ba969b4056e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453a1619-26ed-4d7c-9885-e1499a43d3d7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20234dd1-621e-405c-ba1b-d10bfc9c7d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e309065a-e745-4d3b-9b0e-546f73cf68f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1640d69e-2021-4bef-8bab-fea0cf28c14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2fe1393-b453-4d08-ba39-c1fb4b7b58a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4f7a2c-b00f-49ea-abc2-9104e9cf4065",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a878e460-7a2f-42eb-8050-dbcfde656c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfe7f46-9ed4-47b6-ab81-fa64a152ec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f697ef4-2bcd-4fe6-a0da-92f9f19bc517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b91ada89-5fa4-43bf-a67b-d2d4962f09ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506704d0-0844-4e61-9778-1aff840f9e57",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6877927-d08d-4feb-b2ab-246a59f8479f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981e8051-b888-4248-99f8-de7fab7f6b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7eecb02-34ee-4aaa-a253-4aa96bf15a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2dae08f3-8229-4df3-b258-e39f178fc743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7326350-d627-4110-915b-363e1ac5e4cf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0025a0b6-3a3c-4901-a807-a8e9651c50c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa9ee1bc-ff11-495b-a03b-14d1d96bba27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8545f6-3948-49cf-9c07-99ee47bd4ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e206cb13-0420-4d7f-b418-9116bb16b169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7647823-867a-47e3-954c-a75638716075",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9095965-d8f8-406d-862d-0f6ef266962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8043e91-a770-442f-aa4f-4630e7ea4448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ca0627-2f04-4ba7-a5cc-bfe1543e7e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ead1f3d-527b-45d8-b2c1-d4f31e997429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9488ee21-e777-4728-97af-3d2affda9bcf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef06684b-a263-4a5b-9391-7d55f3553610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f1cd57f-3db4-4dbb-b44d-58bc110591f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2987e9-6c31-4d05-a31f-fe4b516e8dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff86188-7107-44e1-a5e7-084578858c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b80c93-103e-434c-b183-be96fe64a40e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a481be4-7611-431c-86df-c3c40c1681e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45f1461-7d73-4769-8338-eeed44da2aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74fd7cf-105a-4c0e-8c17-9ce01762e993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d20ce7-5b53-4cc5-b906-1bc0c3cd190a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04357a77-c8c5-4851-89a8-434a49230c07",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9997a4-95c6-4ccd-b1a3-a543ed391531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9421841-32da-4a78-9d53-311bdb7e5131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e67e011-fe71-4098-a274-a94f0297985c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef38159-a37d-4c91-9992-9d2f6f71bcb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea1dee-853c-4dcc-9a88-8855390c47d9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1401c37-8948-4bf1-a07b-53978f5648e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999345c0-97d5-4c60-9146-89b06303218f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e3e0f2b-b410-4496-a51e-148049e2dbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc12ac1-0a12-4a4c-b377-f131df98072b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4739485-1b38-4364-bb82-d849679a83c5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13660e84-b391-4d3e-acb8-2e580b38b67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d604d10-6296-4365-9341-f82655407a59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "669852c6-b2c0-4f1e-add6-f26ad4ef1021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7450d3b-7b23-43e1-84c7-674a6fc38ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02058553-7486-4833-bc5f-14f4bce7d0fa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af8aa4b-c6b2-41c9-a2fe-a00ab285dafe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f1b48c-7bfd-425d-823a-b56990b1524e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cb73f1-9752-46e4-9bd4-a059aea46755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e89d0e28-1647-49ba-9cf9-e2c4ce26c7a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e722390-4855-46a2-b94f-c1c559aef3b1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf29c01-f55a-436f-af16-452c6ee74c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "860458c8-d9f0-487e-9a9d-4a390ee32356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e2742ba-83f4-4c7b-a62f-c38fcf046f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d921542-0a6e-42c2-801e-94c9b7a030e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e8316f-3027-446e-b325-7031245d1086",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457f5fe3-bf41-4785-9e93-4879733c9bec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39fdd97a-cac0-4b8b-b2e7-aa0320192fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "954d5a32-7809-401a-a564-11fea946b04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a33400-bc38-4b26-812e-1ab1dc613406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761cbfc3-534f-4a8c-bf8b-e74714f29a91",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "062a1f36-b7e6-4fe4-9236-6c2995123a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11190a88-2e16-4e8f-ac88-5cf4d0ddb058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09afa2ef-6006-4b7f-8a87-5d632f949a27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "861dcfa0-7ba1-49ee-8395-b76899d2f2ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4bcc43c-b035-452e-96bf-f99f2d383126",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8665be8-a54c-440d-9d08-c8c4b5fa48cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5c836d5-32ca-4899-8797-fcec682f963b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c3addd-8514-40db-a111-75f05f208b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "302379d9-2994-4d79-bda8-b084470c5bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd12035-7a3b-4ceb-8535-4895b73bbfbe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1be3e5-a962-4049-9f17-1980b62a28d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880513e8-4e13-4bcf-8c5c-7b0bd417e891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e585604-9c4d-4404-9cdf-85148835388c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60a6ea87-ac20-4c2d-84e1-d48988731693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36dafa3-d6c8-4dcb-862d-6adb64fe777c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0502ee95-e7c6-4f85-b0d3-4fb37e2f2ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "043fa177-24ec-4f25-b475-445de156ad1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27806afd-3022-4f70-8127-061c9fc60703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13f00e44-e24f-42b4-a846-fce3cf0e0f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c208894-5a84-45c4-9220-20e85697518e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2007f1d6-3154-4d11-a8e0-a2ea8c1372d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78566990-02a1-45fd-a73b-4f349e0f4a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c1964c-dcce-48e7-989e-cf37f7d3a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9ef07b-1f8b-448a-b234-9fec0b20205e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a0ecf-8365-4bea-8dfc-63f6a0d38ea9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d7e1715-7fd5-45d6-9ca2-927445acc96e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67d84353-a20b-4eda-8e88-871f5012974b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3bdc3f-0210-45ad-ac40-7330c15f3476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29d33209-fa48-4d6c-9e09-d4c6363d477b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539647a9-17db-4f7d-8f28-d2667e00486b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b530db1-5a91-4010-83b1-e81ddc005207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fe1b3e-6c90-4389-bcab-da452fb8685c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a385d9-4209-48d3-892e-23ac308adf6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a509514e-9e10-41be-aa59-11be25d6586b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e69532-dbae-4a49-97eb-2c79f99bd62b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f8bb42-c3bd-48b7-a777-a8dfd8e92df3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152c75d9-ca1b-45e2-b547-9860f86bc4cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03738e0a-638e-4aab-92cb-907fbb75e5dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a467ff1a-0531-4b81-93ed-5b44cf230a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6e20a4-0e58-4559-bc65-9c4c68874a15",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4970c7-d564-47c0-8bec-f1e16421f5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5e5e2e-627b-46da-904e-bffb4fd8306b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f879b6-3577-44d3-83f1-3620bdb122bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a20c112-eb5e-4266-ba89-4f581586a16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e61b210-1aa9-4a7b-a263-58f085f00f76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bcbe92-1df9-4082-a6ac-18dc771723da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f0923b-9a56-4d07-adc7-5ea7cc1dddb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9657d73f-ceae-45dd-92f0-fbdca6c41142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d535a186-1889-4913-9f97-2b5b0d56c6a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43e9a4ca-dc27-4182-a118-77c0ada20fcf",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d57f7a2-9a64-45ac-8f28-8610f6ad48da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd03cbb2-b3b8-4f8a-88c5-726ddf2c105a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb5e5b8d-6fcf-4ecc-9823-a8ae94596b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd77d611-db3f-4b28-a19d-f1aa2e4c81a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d942eb-f1bd-45de-8fcf-a98044327012",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db967321-5987-47a1-9fe5-76dced97f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c098c89b-ff00-4566-8fc9-545f126b0d34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e10032-6694-4975-9cf2-f8835e41678f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2da5e001-68f9-4d13-bff8-af3cd8bc1118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7c7a2ff-ca0d-4a86-94eb-774d5bb12234",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0cdf05-957e-45bf-a4a5-430ed8765f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7deece-ee4d-4ae2-aff7-2b361ba0470d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05774418-21cd-4a7b-a37e-541e31a6a5bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d79820a5-fe1a-44db-997d-21ec06ae5c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5ca3e6-7208-4959-b208-3c053cb36767",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff68857-bb0c-4400-bc30-ea2e0299b214",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb85a06-ef4c-44d1-8f8b-8dbd0ab3b0b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6940666c-932b-4721-9d3d-995789762409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9333ecc3-046a-48db-9eb8-730b21be917b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "181df1d5-b232-43af-9ccf-e17e15141100",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2f716a-86a7-4f57-b7cc-05072a2374c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f086e11-d2ee-428d-a80a-13cfebfd0843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f81a90c-ba32-4294-8e41-6f990875f3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd02d0a7-f823-4f23-9f85-a1bba1f1ec44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fc1dfb2-21a5-4727-96cd-651861c5e49e",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e568ab67-48e6-4f1c-b856-7a4fde292b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a11961c-51c7-414d-b851-09d4ac462cf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8980ab76-b630-49c5-bcef-102497e841f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fda99ae9-0273-4168-bad2-a60537843084"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3c31642d-ca97-48ad-a3f9-a30ff165ed3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1ab07ee2-6487-4a92-9dd1-21986571b1cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7270ed4e-5fd9-4b9f-a3e6-84877163eb61",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9b2f5a9a-ef26-485e-9c79-895fea8b06b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0289779-a948-46da-852a-7ec8cbd12300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94f67892-367f-4ac8-a90a-54064f396193"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1f16d58-3da2-4ed3-a116-80270edcd158",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47a01e87-584a-4482-950c-a4032a056599"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dbf6af60-da98-4564-ab7a-a7ba908302c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d6da4d1-f2ac-4ee9-aa69-a32a020bd809"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2641ace0-b2c2-46aa-9f31-11fe8eb04b96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d538e92f-dc4d-401c-94cd-b6523e7502f0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ec38cf7-1a9d-4d35-9ebf-b0bcff69de48",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1b76b68-de22-49e4-9647-90dcbba8ba32"
            }
          }
        ]
      },
      {
        "id": "83053eae-3df4-4329-957e-e353036bcc82",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "800a4a7f-2412-4401-bc37-560437b6a5d9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fa8f1b0b-6606-44bf-af24-dde8bf2d2933",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "11513865-5551-4509-b25c-d3fd406a5c6a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b86ee7-90c2-45b1-bc56-fe4c461ba032",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e4d6ff-0771-465d-887c-e9ba23aaec41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76232a09-6dc3-4b9d-bb87-eecc41db3548",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6136b35b-2aac-45c0-87c8-04bd4497b4dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a33c6322-3b70-470a-b422-aab07922fd45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17340e3-4c79-4d4b-bb36-be5d08110bad",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31e5593-b4f2-49ba-9d88-4db7d2695ea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31b9c23a-d51b-4f52-bf69-7fe6d48efb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994922e5-7d9e-41b8-a226-b4bb08b617de",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89381764-79eb-436c-bc80-91daa2593f9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3630cfd-4992-4fab-850b-e299433d5cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b642fda-7e7a-43fa-a7e5-2dbb41c71d0d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a9927a-6179-4e4b-856d-d79515f8a603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4859774c-90e4-4910-8a24-d16dee8388e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54eee136-77ed-464a-878e-050c53aeddf3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "496ba871-542b-447e-af33-b7bcbcc420d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2177fe80-b332-4419-a5ae-c3358f846464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bfaf833-3e48-43c7-aa01-8c2c0479a330",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4237b2-2749-48b8-9db6-2c778740aed1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054779cb-b1eb-4eaf-b978-35e8e951f673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bed0ee-f9b9-49f6-87aa-d61d4f39889e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8252b6e6-76ef-4939-b4d6-31dfa40b8929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1591710f-b3ec-442e-928a-fe14fef5ab5c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5595e76-06f5-48ff-abc3-70d1f6eed16e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45c91f1c-2854-4a9d-87c3-98ee40c0ce40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e60000-06c4-4676-a116-4c1a08984c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c85e1718-6905-43c4-9f16-99b52c8ac2a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe086f3-c227-4bb3-b66f-b331b6ddd660",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50dcbe-a752-46b0-ba5b-495674f605dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7d02ec-5c13-4e8c-9e6d-467bcb13dff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e5c74d-3124-4b15-8175-b5259287d6c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8dcc79-acde-4219-947a-fc59f931e727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689883a6-469c-4300-841a-61e3155f2cc0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24117633-fbae-4074-9bdc-f1fa40887fa8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdb265db-047f-4c90-84e1-ec33cd24b237"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef98770-0970-4408-9d0d-f32fd74f307d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a752af7-5a66-43aa-8f95-e0b68db5df7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac82592-0ce9-472d-957d-6bce02fb8b03",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a896eaa-f32a-4738-9900-1a9ce3611481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e46d6c0-ccd0-4b8e-a138-e4ac4861d48d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4c07bbf-d316-437f-8825-502119ec42c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d853f7f-6c4f-46d2-982c-4b8ea23863c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab2acaea-ecab-41cc-b633-7feb01ea83e5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18582f0-6e3b-4b7b-96ea-0e9a794af362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4201d8-8a28-486a-b488-ea6a963a3a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3591b07-6fff-4468-bedd-4ed502684d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10c09e27-f723-4db5-a531-b68bf6959e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d742e076-805c-43ec-902d-9e13141b351b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff13584a-5860-409a-b3b8-42769a1b7b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d57d48-377b-4d05-a158-762c7a93a0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1ce0f-6a59-486f-b106-a16a6b9329d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b16d3336-c0f7-4813-87ef-1a12f62d9581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ef183d-de0b-4c3d-94c7-f3e1b069b0c3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfe7be1-dd8e-4987-ba74-4b583aa56ba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c05f2dd5-17b5-4a5a-a695-728061408e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8772180-4663-4c66-b8d9-6887843ba5e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2157de19-bb6a-44cc-b64e-af5e48e2f859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e1a074-98ec-459c-8eb1-754a3233ebd2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcbc4ea-193c-4e60-9d5a-ef017600d51b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce0bf55-341f-4cf7-a7b7-e42a58499200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1734e510-e335-41d0-b6df-d5da830d98f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3337f48-dbee-4389-a7cb-76a9a4ccfc3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d153b11b-0a71-481a-88a8-b282619d7fb4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269ebc7e-f7a6-45ae-8807-d9d43a689262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89dba535-c18c-479d-857c-24366baf19a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc022e6b-84d1-4a6b-8368-14cb3bfcf798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81fb70c-a4ed-4fec-a23e-18aee2fae94b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfce8471-b59b-4c7c-ae50-c13f95b56368",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e759442a-1846-472f-9216-eb6f9da7c4b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "862f1e90-d1e7-4c80-8b66-5571885b7741"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f732212-3471-4df3-94f2-935997a7b53b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b10d87b-6f34-4e1c-a51b-fbf828ec3f1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e050873-5c29-45dc-bb61-d6aeff74e6fc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bfc1624-b02f-43b5-9ee2-c0f90508ef92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71a8ce2e-4612-4b48-be67-b8eb2acdb63f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a9ed509-ee0a-40fd-b66f-e6fcbbfb4904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce60fbd-4def-47f8-9ea1-1bfd27c0a008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853f5aa6-85ff-4582-aede-22adf0d6977d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e123dc1c-6b23-4971-874f-7e47f231df93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d4173c-1b0e-4640-8d62-9a18390986b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8997da84-4bc6-400f-88c1-b2e7fd06807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc75a11-954a-47d2-96c7-2cdf6063f5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26798a1a-89e4-4091-8a0a-5ab7614747a2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc461ba-9000-4eeb-8bbd-858afe464d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28ec2558-b5af-44b4-a6bf-5436a7f3929b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f71dd099-18c7-463e-8eb4-0964b9de6955",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f1338a-49fd-4328-bdb5-43df3972e5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de3d9173-04a1-40f7-b51c-ad5f5546ba7f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955d3db1-e121-4548-bf14-e14760f9932c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22076286-3e6a-4721-9d13-ed4c6dfe73c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b2feaa-13c4-4ec3-832d-9767e0715517",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2201b62-bd19-4f59-8f86-e0951d751459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad57bc9-0228-4709-9301-012157ac1d96",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d004a8e3-205b-4edb-995b-e2b3e2bc316a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "577ad49a-0f5d-4d52-8436-391c652b534e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a352e61e-9dad-431a-b26d-523f5a0fe50d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753d0d8e-91c2-466d-97d2-2d7936610a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90ebb25c-d255-42b7-973f-115c6f1034f7",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262d90dd-129d-48fc-aefc-4bf1a094a8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3621014-146b-4b5d-a530-09469178142e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0481a316-ed90-402d-815b-35f05a9c1f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3ba42f-290d-4009-913d-19c910f11d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47137495-dbcb-4cca-b45a-515a14e6f1a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339eed33-88c4-41bc-ad54-b56d7f9d82ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce89a1a4-02c7-41f3-9c57-d589137af081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f635781-4eac-43cd-930c-bab84936fd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc296e7a-56b9-443d-b213-91276db5c20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1340af-7a8b-43c5-a2ac-0068a17e0bbf",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43bdf72a-7716-4d89-8b7a-2f78de407af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6255a2ec-dc2b-4710-86ca-64b6ac8519fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebfd527-94fb-4274-85d2-7c3ca91a9ff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd044793-6c64-41fb-8c09-f21d30138f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325199d7-62c0-470a-8a20-b57c1aac19b5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef1c3b1-7df9-4624-a751-97b45f47fdcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbd3ba27-00e4-4b3f-bc09-0c87db9b90b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98971d91-172e-4a72-ba5f-c7d691dc9c7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199604b2-fcdf-4538-85e4-c48d1652fa0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e188f394-ef67-437b-b12a-feccae39f7df",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11adf967-3238-47a5-9e16-582f7a3df97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb51d7f-f56c-415c-a36a-1f7a3e779fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fb8cc9-95da-49bc-843d-3ba783ec7a97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06356f99-3267-4098-90e7-66b1afe54630"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44cc7c56-daa2-4aa3-ac74-95949246f62a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c5392d-f100-44a1-b745-853e5e76091c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc731dc-81e1-454f-9754-d76d2ace8459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b1ab8a6-3f57-4a16-92a4-2db4a4086cd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36b00a9e-ac00-4855-bd96-e4ac6f1ad866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16094bff-2e5a-4c32-b17c-e4a3f5af8049",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b796d0-7a1a-4f8f-aade-35646dfe9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3248ce7a-b6de-4f1c-b60f-742e7d5e94b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9535c200-c2f9-46be-988d-11d2fe099b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2928bdd-8f67-472b-8fff-c917df5c26c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d16c2e6-89ac-453d-9eb1-6a4636fafebd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ad2c62-c663-4fce-8ccf-48289ec61471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0ee143d-55ad-4dd4-a33d-c9f8bfbd575e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fee9892a-fc0c-4fbd-a987-8822945383f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cdce281-7c5a-4a47-a284-0aed51d366a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17590af7-96f4-44ce-9aea-4e4815c2996a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b34922-7828-473d-a388-de828fd27506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbd3c06-fe9b-41c0-9d58-3db2d27d7ee6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65d9d592-6336-46fd-897a-53a4127ca0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38c8fee-679b-4cb2-9e2f-5c77b353d6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffabe6e-b143-4c6a-b414-e2f1556ddc81",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2704618-bd53-4481-ba65-2e7bb82f95e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bcb0f02-8a85-4372-8cdb-453830ceec3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c909820b-159e-481f-aeea-e4e62d8e5cc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e245a50-c10f-4cd4-8325-43613ae864e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd56a615-2f66-4d0e-a49a-6aad7d6e4819",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d182165-35df-4203-8cf6-f0c0a53070e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa460f0c-b14b-4e84-87a1-53cc98e8592a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc02d2d8-bd67-48d9-97d9-482d7bc14e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2552ab65-bb36-4fed-b631-b46ce428bc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4f575e-c60f-4698-baa7-ded7e677411b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3462b2-5cf4-4613-bc53-a96601420e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e23a79a4-17d6-4c09-9713-e79518608d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160b22f4-c500-4c75-ad04-cb2cce50d927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "700782e1-d6cc-4e64-be5f-19d2d8e50682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfc93e0-ed3f-4795-9a8e-a174efa59c54",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0422aa-890f-485e-8bbb-4db5e0e7e996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203787b4-1c08-4b83-9638-1d659994dd30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3597fb-88e3-40de-9d9a-c3286f3adfac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9902c308-a4a7-429e-ada3-9451022b6275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d488075e-f750-415e-9ff4-bc6706f69ad9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c84bc2-51b6-4952-95d7-c719d7643efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a60dfa7f-1a13-4beb-b561-38d21b80237f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c596042b-4376-482b-b267-df46a9c8033e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85440f6f-bbaf-40bc-99ee-2b883754a551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec11af66-cedb-4a8a-a537-3eebcc00e96e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "742e5484-9a2f-4a4d-a4e9-aa2c5bc671c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58b0e97-6f5b-4824-a70f-ebc38b081de4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f011dc5-ff18-4599-8dc5-7d792d33f773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "859960c1-29ce-4f6f-9ca0-6976934a7a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1930995-7f9c-471d-8e39-010b0938a625",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c4f94f-b782-4346-a611-95909f67816f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "176b80e8-73dc-4c68-a347-260ddd0ec820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f2191e-3697-4706-8b33-a88085be3ce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c88b723-fdca-459a-8406-b9145f99d24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a76b002-43ea-41e7-80d3-b69252982233",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d831fb2b-e882-4845-84b6-82c24fbaef61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "656ebe36-91b8-4369-a7e5-03569723f166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3fac2c-7591-4632-8130-c30573af3245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d669687-cc1e-4ca4-a53a-bab6627270bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7037d22-cbbe-43d7-abd5-4bc1da1bc262",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e1595a-7cae-4616-89e4-f026b415d1ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8861573d-8227-4d0a-8bb9-709f9c360cd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0b2d1f-417c-496f-aa3c-417355610265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c781952-f4c0-4438-9236-c0c0ee1c5ef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0a204c-bc92-4493-969e-e980aacca6c2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ac61384-7b74-4897-ad88-fdbc2e8d2971",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c8ba7f-cef5-453b-96f0-25668c9497fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5803d72-0c43-43ad-be63-4df1373fcc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6401286-4d87-48ba-9524-fd39b4f18413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44449cf9-cc14-4931-9ab0-e45513155a8a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1533d9f7-dd06-4c03-bc32-da0484f56049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4baffe19-0f31-4167-9229-a55a8f501347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b908e6-b1b9-4c22-94b7-1c5dbf1dd41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9147b21-89ca-4d3f-b95c-47bb06b1e558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a753f62-e859-42cc-9bd2-41a64526f515",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d11092-d2c4-4d05-9344-0f2c80998ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8428fc02-ef39-49e3-a2f1-904d9262f326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc78614-19e9-4013-937c-84307eecf29e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec1f319-147e-470a-a848-6206cbc6a69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ee5673-c9e3-4300-ab7b-f260d62157ac",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2daf75-2cbd-429f-b81e-f472c54181d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49ef6f9-a93a-4f44-a4f1-e063035c8b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa31e6ae-917f-45a7-a98f-658a534360d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f3d3f7-02dc-4b6e-ba16-6615e9ad5f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42e8dc62-e9ed-42a7-8dad-8c15ee84f671",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc7403ae-49c4-4667-bddd-95451a4f95a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b962a8-490b-4952-97eb-9657c5e44a53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb212c8-a2cd-4cf3-a172-af624e0c92e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b155a15-f3a3-4cb7-9b5f-31798ad7cc56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05616acc-d91a-4a5d-89ee-c0c493ac43fd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f656180a-d7ed-49d2-a5fd-ea0d57cf140b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0fcc275-d6f0-4483-9338-6fefb87dc5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cddfef4a-f223-4a6b-98da-3b5031068d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de5f9e87-e08d-4ff8-af5b-20c173fc6033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209c45d2-0ed5-4d68-8598-16d636df5733",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5fea47-2a99-414f-b520-9b55efeca842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e38ce9-0a00-4f5c-be70-ef87b1c22a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aa0759-8ff8-4392-9235-15599458ad7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c2546e-45ee-4b74-9e34-4e80144a8fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d45afe7-6af7-4ea4-a44c-1ad944140130",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9f3560-b473-4aa7-9311-bbfbfbdd5a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c5d44a-11e0-4010-863a-9b2635554adc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aec464-5b84-40ce-96f6-74485e54974b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c8b5e7-a88d-4d6b-9bac-c743c5402e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a3c796-5cb4-463a-abde-f617fe54513f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141e33e9-9580-4b9a-8fed-3499b3a66926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8506e9d-525a-4e51-bcb5-5d81e1971a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2304fad-99b6-46ce-9f7a-6697e786bc0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69e1d46-dbc6-4580-bd0b-96a39386baf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee8e095-4c95-4621-ab79-1cea64ae5d13",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ad91121-dde4-483f-a523-b70509f56ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dd68d07-b554-484b-83a4-cf8328c23d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d87fb87-7a2b-4680-8b8a-d83385f5f5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f17703e-c623-4e62-ace5-4438928831b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cebf10a-d99d-46bb-9ad4-218c677b3b38",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e087dd7d-d003-473d-b8b5-e34da117df30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ea3291-227d-4b05-9dc8-35609a687ecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8cc6e2-9b91-4dbf-beb8-bb52588ea101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef508d9-4c60-4d42-8c3e-c61e4130ba87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ffc215-30fc-4e30-82be-471c543b0c98",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b143caaa-6d67-4868-9078-7b8ce144c5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00d9c018-d715-4bd1-a16c-f07950999997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a511b3f6-9ee6-4bff-b7a6-5f257e720104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0634ec-cd38-4838-9195-805ad7264196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9cd5e2-2364-4b67-bce8-46df35ae077d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebcbc727-9b32-4e0f-be72-2c85dc332cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "916627c1-a7d6-4f10-b6ff-c928b23d5b38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "decd6ae0-3823-47ca-bc87-71941b9f79b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e58e991f-e62f-4f82-84f2-1f7ef0318fc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0129232b-889f-4cc4-adb8-64aabd81da3c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6221cc3a-7830-4eba-8403-c1fb9ad804f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c04e8a1-8541-4649-a211-8f9152914d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ce4d6e-8849-4af0-996d-d7123a89238e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f95b3bb-8c05-42a4-8cf2-c631dde1bbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb50565-ad56-44d2-a726-4dd3ed7980e1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb9dea8-308e-4b2a-932a-ff86df28847d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec8125c-7649-4791-901d-2c8556204195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de3bc32-deb5-4128-9295-4efff731e581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e18886e-8dc0-4d9b-8ffe-8fde4fe19262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5da76b-634d-41b5-be1b-7f91157ad768",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05b02bd6-45a5-4422-89a6-c2e7d362d95d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5fbbb5-60ee-4176-bb0d-0ea8fca43e88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bb7732-e9f5-4c22-9cab-4ed1629017f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "610aec7e-347c-4945-85ce-a0039bd223aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b91a6e1-ff5c-476c-9f3f-9ae4814fb10c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5dad2d1-d7b8-4758-8ec2-33fa67270cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "280e60ea-a7ae-447e-9ab9-daa9a02f2e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c6577c-45f4-4af4-94d7-86e6633ee581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16691e5-d540-466c-86b0-321e70a3e1ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce16f849-0465-41e5-a485-e7d7739ecf1e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7006ad3e-ccc0-4341-a9e1-0286d6726070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9140e1f1-62b1-4f0e-bd51-d8e6a68bf43b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53ce5249-f788-472a-9bc6-c2880d29a731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b183d26d-cecc-43d6-9c3d-4509d7d1cee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "405459ee-a7fd-4014-a672-536e7241060c",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498c5dcf-bf30-4451-8049-c74ff7d2dc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed43d1a8-5cc4-42d6-a885-58270335892e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84a4198-dcf4-40c4-85d7-0559171b17cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64347a67-9056-4ee5-acef-a8bdabb9d330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff51a2b-1db7-480e-a697-e6b4a3fb5fd8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bdc062f-14ec-415c-99a1-bf4a4a6f6714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c678f397-a06c-46ae-928e-74593880e250"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b513543-0d2f-4918-b3a2-47bf814dcd91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48fb8115-f063-4c53-b6fb-8646884de653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c48a9f-e055-4674-a29e-4ae725fe4fe9",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fa1f5f-944d-48e4-af59-35d2a8bcbe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ea969d-9963-4c0f-96da-b3a827ca65bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e0984c-4421-4788-8859-eb19c9d60d43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47ce4c0c-7821-41dd-8266-8d2246940861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff7e768-f939-4ed2-839b-2303e9dbf068",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2196eb2-4d0f-449d-94b6-f2ddbb426cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee5643d3-2e48-4d0b-908e-51e69ecdae2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2377f52f-371a-402c-b6fd-2c53b3c8938e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86c07975-6f58-4eb0-b9e2-3fed29b1bf67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e644352-a1e2-43c2-9518-e70153f60119",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5073544-ec32-4714-afec-48f2e9bf0072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47739c9f-d3dd-42ff-b7b0-5d6307e7fda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d73198b-7560-484c-b1a6-d37f8cf2d00d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a189de7-a59a-4b74-b940-d1a54293ab50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0d11cf-273e-4b2e-8bcf-f4297122b5fa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11147be8-ba07-449c-ab7f-afa18030bc82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615144c5-8651-45bc-9359-23070f30fba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac10924e-ae4a-4a4e-80eb-91a0dc38464e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc6fac1-7fae-4683-87d8-6cc2b701027b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3042781-5c38-43d1-bd19-d03a0eb2fa23",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d203790d-830e-46f2-830b-8debf4ffb9d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9234c592-08f1-4a67-b4cf-923acb85bdc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c951c1b-7728-4681-95f3-7ee4f215664d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b90ebfe-5324-4973-99e5-947bcb2b903b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97575463-7e54-447e-a838-7c289a244d68",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdee741b-cd04-44b1-a6de-295a10f49795",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e182619-4ffc-44c2-8867-7379760420a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d88609-ff7b-4258-b011-f38309124e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1a87c5e-a0f4-4472-82ec-fd4100ed41bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc49ba8-d10c-4eed-bc1f-07514a326c37",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054ebc05-5fea-42a7-8e7f-62ccb2d6105f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f96861e1-7fc4-4839-b2ff-a71093695711"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae73918-64cf-40b8-a7f6-b48b46493bf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f61bfc9-d574-4613-8e72-2b51560c6498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e74df6-c6e8-4737-aa20-8f096f5308bb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8183924-4b8a-4fc5-bdf6-f33840f9e421",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf593fc6-1c8a-4b1a-b74b-9d046b8eb068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4805cf-d548-433f-a3e0-497bb935e193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2043526-4452-4387-a6e3-a492d34525ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d4133a-ec70-4f2e-9b86-0363f6c7679f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f89e4e7-1b2f-4f9e-813e-ed22df6d8413",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "375f17e4-c9b0-43f9-b272-47b7070e7ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deddc9dd-d16c-4744-aba1-390b0bf01ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e5fdf8a-dcbf-4690-ad91-457e4b7cfad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21512fde-88c8-443e-a15e-ee4e1acc3de5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43cfff7-5c84-4382-8645-49698967a464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edbdb3bd-a756-4d31-80e2-f1b91fea9400"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8314a5b9-8997-4105-b17e-aa1e30937855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6666f945-8f41-4f7d-a6c5-6c12fdc24a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28b1766-f247-4fa5-800d-cd0c6aea7e6e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cbcf52f-c869-4551-876d-bfb0aa3793b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb6ef72c-0da7-4395-ad0e-5408002bff2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef8831c-af6f-4550-bd95-d0b096e3f759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a201a239-a0cc-424d-b47c-35c347a471cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689ea369-68b3-4b08-a59c-cd407dcccd76",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281cd22a-774a-4f05-9c4f-2ba31465e25e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d215448-a0a3-4c21-9ed3-1d22ba78802d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b7b411-8826-40ea-9ca5-e86ff2db1b65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c4fb7e-d431-4086-bd6f-82bb662191d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bb1116-972d-468f-86ec-e75f3504f433",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867479c2-0fb3-408e-878d-38ced87c282f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58516535-eb77-43a7-9b3b-08f49dae1595"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a5934c-eb8d-496d-94d1-80db6680d2d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108e9ba4-5439-4f7a-b055-737e2f34b195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0909ae-4379-4980-b44b-d60f68c46abd",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961a8083-ac35-4925-a1ef-25c334d00d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36bd1e0d-f6bf-4184-95b4-018ba1315801"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93a6b3d-e96e-415a-bba5-16932d851015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d07234b-82dc-4e07-b8d8-cf4afadeb81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17cac73-e1e9-43cc-ba51-16c5397defc2",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "755ece6a-84ba-4b7a-97c1-3c235cfdbfe8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47988936-003e-4df0-811f-75fadf424918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "224173c6-be2b-427a-9954-14bb360e1efb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c20871-de53-4e2d-ad88-b64839cf87d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56542c1-23b2-41a7-87bb-10e6ca44fabb",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec50697b-37df-49e4-ac60-54c002d1f318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bae12e2-bc2e-4f9e-bdc6-5a50d010e3e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4ff3d2a-2ed6-4553-a74f-1e1f64446df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3844be-2fa2-4dc6-83d0-d860f991bcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97bf2a30-ab58-4b0c-809b-294ebe0e5554",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da89754-918e-4bad-891f-ea46151bdc9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79a71004-a3fa-4c84-869f-23bfa9c78a06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94947ab-ff94-49b8-9c93-be163156a363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1962a02b-b34a-4d84-ab26-3f17e357ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6c2b798-9165-4cbc-bcb2-b5acede1fe45",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37508d0-ccce-4c88-8e6b-55a42ca042c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d9bb5f0-8d10-4823-9950-4fcb9dbbd112"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0023db1-57df-4161-b6e3-f4c040faef5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d535314-8d3f-43e4-8b53-c755fa51bab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116ea92e-becc-4246-a693-2e009de461e8",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c287829-345b-4e4f-b5ae-6718c7336653",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12b72230-0fdd-4f09-adac-d22b478bb997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2010c8-b97a-4b3a-bfab-b55e60400ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbdf4b35-92c9-404e-83af-7b4f68dc388c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "311c591e-9343-4069-8a23-d2dd07f6f9d8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2416b1e8-2de7-4d39-b372-c1812a149570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c780628-e858-48f1-82df-db5bd76a23ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a474ff1-3d2d-41ce-937a-f61cbd10b73c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13cbbcab-41de-4ae1-bde6-831ded790bd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d052fd9-e93c-4376-ae9d-5a3f2f7094d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b564c165-c793-4ad3-bdbc-3beb9425b3ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85d66dde-90b6-432d-b7a7-cdee589e250a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e5f921-3ce5-41e4-9d0a-0c4506202b7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c680893b-59fc-4966-bd8d-f7b9c844474d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea137c1-984d-40db-a25c-b3f795a94434",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae5317ce-8603-445e-9c08-91539e579525",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30d9b6a3-aef6-4fc8-8c8a-e18a9e8e0c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7296752b-44bf-4942-bd33-969b794c9cd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f91df3a1-835b-4e72-8a7f-5ca2ec68f3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee08a9b5-6449-4673-bd6c-f90db95000c0",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b97db7-ca5e-435a-8da9-e84c46516fd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58750d71-fd8f-4311-bb87-6d211e1c9afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4a9365-68ad-464e-9e9e-6fbc7eeed337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca40e230-dde4-421f-af91-56dcb0cc07a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd880fb-60a9-4d00-8d74-5898b1602eb6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adf6b96-8947-4d1d-b876-e5a68d5fc648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5806d625-8e65-4332-8c96-111c591c9161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc263df7-3116-4a52-a35c-b523c6a2615b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f16374c-27af-4b67-859a-318a1e6718d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eee0560-f9fb-4d02-ac7f-68022d842097",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fe641d-d49c-43f7-aa1a-570571c5b3f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3560816f-30d5-4a84-b12f-32ff83014c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16259af-623f-45ec-8ca4-20da66ade00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f8febb-63a8-44c1-8671-86b5f91667d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedbb8f4-7bc6-4a80-b7be-941bc6310950",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35075f05-ffb1-4164-93e6-5b62242e6bbc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15c25b2d-1849-4d8c-8480-6364c00088d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12630ee-3435-4ef1-8193-4282f9d09ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4fc36ef-667d-474a-b6df-8702d1bb2754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbbb7ffd-012b-490f-ba12-10a9d29fe91e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a91c2a-5d37-4ebd-8009-9e45395ac5c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5b35f5a-6547-4527-8203-5d651ca0cf06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ae60ea-35e9-49ca-8e5d-882384aab9cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544d35b7-5237-477c-a740-27d2a8e88ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa7f9d01-9e61-4de2-8de7-2c5d5cf00e12",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f978a8-12e9-4185-b06c-5bbc99ea6b45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f01c84a-1c3f-4221-b1ec-7ab6819e0b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb061468-7dd7-4d5c-86d9-e89aae56ca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09456f4c-614c-4d83-abe4-c3cb5fcc1e11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261410f6-012d-4329-b998-3643736d8707",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80619bb9-94c0-47c8-863e-bede1a7cb80f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80a0e283-ce3d-4f0c-9076-dc883f1b33ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "347c2f39-6670-4b12-a7f4-82323dbbbb89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5aebc7-c0dc-49ce-bc6c-8a10a3a2b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353c036b-aa7f-4b4d-ac46-53320cb4eaae",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5d42701-d4e6-46ce-983b-a83cb008d95b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fe3a2bf-aad7-46f5-b20b-3b6bd1894c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73381000-354c-4bf7-9448-3c86362825a4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97370642-d8c3-46f0-81bb-7178b15aec66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2c3915-a3fe-4958-8e38-6745c858b014",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5866a63-3a0b-4610-9a1b-8b5b249caa38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "faaf22d3-c175-4776-a051-72ba9cb8744f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b88a8ef-4c2c-45a4-b96f-f6b8e586ddcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5af10a-4c9d-4b4f-9c99-03bec67b67e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f4f3b96-c8f5-4b97-91bd-6f255f2aaf20",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69a294cb-d45f-446d-adf9-a304539cb958",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "496141b1-5bfd-4282-867c-dcb79381bf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ec421c-e245-404b-96b4-a19631cb4554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336d52bb-ade0-4fc7-9230-b90df5f1f30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ec58a0-8eff-4c2e-a4ac-1464a0688e75",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf0fa13-865e-470f-8209-0c08701c1233",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e253cb7c-3b54-4fef-82b6-734304efe3f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9400cb99-3b1f-4afd-bfe7-3bf158af9b77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb198f58-3059-44c2-a027-e534ae91189a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f818c65-8e4b-4cfd-bb74-d1996491d7aa",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5093884f-c42a-43a7-8cc0-a89d7999d024",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f66644-55f7-4fd0-a261-fd46e9a4ad36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea18f056-c407-458c-99cf-e3b7445d2708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26bd47d-9681-4662-887a-8ae1a222a08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b18cd3-3bc0-40f3-8fd7-0950875e7b21",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36573deb-e34e-42c9-84ff-5020077a5ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00da4a2f-fbb8-4cff-9a27-46820af0bd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef362142-3cf8-4436-9f0c-c5bf2e8fc180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2695708c-d93d-42fd-8c1f-8d55b72dbd75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5125581-ae99-46e5-974d-c24e4ab7b322",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b264974-a002-43f3-bf48-395322ddd6c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f5eee5c-249c-4f47-a88b-9a4e40d8a2ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c22c10c5-b79a-4b78-badb-ef8003c26fb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "232d05b4-92e5-4af8-a651-dc7054a3b765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da44c1e7-c00a-4270-8da5-1aacb972cf17",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5562bf35-708c-49ab-a8c1-2ed7e39d7837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "206441b0-a68f-4e76-878a-96337cde3a02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2032a8f6-a914-4e97-bf89-9ef58c8c2121",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2bb3381-509f-43ff-8e74-0010da99c892"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49eb0313-b178-4441-877b-27ed9a0b7ec2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e64b4ce-8058-4194-aa3c-8fad0470fe52"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "116ec665-0424-4b5d-b242-8e1f4dec7658",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a66839c9-8137-4dbb-963d-3204d763fe1b"
                    }
                  }
                ]
              },
              {
                "id": "fc866437-e2c2-4d8d-94cc-58f1a8cea522",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "10fa4613-ea91-4802-8b8d-1fd26661b221",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a58a1b1f-9d4b-450a-abd5-8714a6321bc3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "29b040f6-e46b-457d-91ac-5917dd1c004c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c8ebf3-32c0-4aff-b566-82d6b7f35dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "445b0725-c5f1-4acc-bd6b-2ed6a2fce84f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ddfcb83-4826-48b9-8a1b-3b218454173f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35fe3b31-fc33-4fe3-881a-57c840283b68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f27790ec-f96f-45c4-a266-db13fb192148",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17c20526-8a1f-4c37-b111-a8f7a5e94e87"
                    }
                  }
                ]
              },
              {
                "id": "083ad2a0-e947-4621-95b6-37db8bc2d305",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "95ba2f0c-4c06-4a2f-8d8c-090d1ada361f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5c3b6ba-1826-4629-adb2-021735041776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "6563c215-f6c3-4838-bae4-4bd2c9d316ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "764f5849-d65e-491b-b7c4-fb0af4643e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd7e9199-5767-4d5f-a864-38d0e843d6ca"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "88df039e-98b0-43a5-badf-e1f6ce4e55ea",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d526d759-a3c3-40f8-ad8f-7de51c30e033",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68f68b5a-ccfb-474e-8fa1-9622b629629f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b1783b4b-3a2f-43b1-9c55-5056d52e83c3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51d57c3d-2459-4780-8d81-651d7ec73001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8c6d1b6-ea2e-4c4f-a597-bbbac16f9b76"
                    }
                  }
                ]
              },
              {
                "id": "21802ffa-c211-423a-8491-f0029e7d26c3",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdf8062e-ae84-436a-931f-5fc99ffa41ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac1135e3-39f6-4408-8801-df0b34f28cf1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00a1218e-e579-4dec-8c9f-0b08d32df3ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6b96d04e-30ba-48e0-aa20-35483de14959"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c97970c7-a20d-4563-9b37-488917264b40",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f4686d4d-3b34-4d86-88d1-f130e1ee0829"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e98c8e6a-5cbc-4006-9f05-ff55d6137a2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f942fb94-449b-4dc9-8d03-efe47e6aea03"
            }
          }
        ]
      },
      {
        "id": "34de6d76-c16b-43df-9dc0-215292287b44",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f9e03fc8-b215-4daa-a3ab-9fe79f5d8c91",
            "name": "Negative Testing",
            "item": [
              {
                "id": "20d65dc0-a53b-4062-9bec-1554641329f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fccd9b36-591a-4443-be5e-d7e3708378a1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1aab734-dbcc-44a9-a1a9-32a84719549c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b9762a6c-9741-47c6-b585-9949e1796cf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99e0380-d1e6-4c84-aa64-efadab4daf58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2594b2dc-e192-4737-a051-3249264ac347"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f3901c4-7c29-4422-aa94-00f064e8d843",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7b9c13bc-882d-4d09-b4b5-e3304a209326"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7716e39e-cac6-484b-8d2b-31dbd858fa26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ebcf665-4185-4dce-b976-c03f78e6302c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3aaa1ce9-ce07-4368-b152-4d713025b048",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d09b6a87-fc58-409c-9bd4-f8a7e4bed4ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cb8b74e6-d922-4328-bbf7-8cf94eb3c9e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3a06419a-b2b6-4120-8dbd-c236acab4b1e"
            }
          }
        ]
      },
      {
        "id": "583b0134-43f7-433c-954c-0f53b46b6b8a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6683cb27-6774-418f-97e3-4e37e206fd41",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ffc6d7eb-dde0-4477-9de3-d8e2afa08b4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1fecb20-e04c-42ca-a9b6-4364eb0057b9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145d81f1-4fd4-4408-b1b0-5a31599930f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e3dc47f-0781-4f58-8590-99949088e752"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df4972e-0a37-4e1a-8a48-68a4e2ad5255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc667ef4-8764-4d09-afe0-6a4f8095f747"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "80cfbb3a-9a96-4830-a99e-d27569676ddc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b611e790-3113-4bfa-a76e-c1d1dbb1a9ad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3dc69448-391e-4f65-942e-66991f65eafc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7686858-f6c0-4311-922d-e71f67f3a239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "699e9546-df1d-466f-a493-f4231b36aa5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "649ce78f-d8ef-439c-9cd6-e21678189b55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "41042a22-c245-4ef8-bb40-c4a0111609f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed950bef-0110-4e0a-95d1-c70a734fcb4e"
            }
          }
        ]
      },
      {
        "id": "0617246a-5b70-4fce-b5a0-a5066b3676f4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3f777563-7a58-46ad-9b13-040991d516c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff67085b-98cf-4277-ba5d-75db842dfe5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a59c72a4-d6a7-4e20-b69c-f8450c766a97",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7b343f-4cb4-4003-80ba-3105e2cd7358",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eef0d853-fef3-4f49-b469-63fe1b2ce0b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93537f3d-b1fb-41fe-b7a9-d867febe8cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "528800cd-0838-4f8d-a8a7-2ae0f5dcb321"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fd8a5b9-6eb2-4352-952a-7ebb33d1f1c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f5be565-25c3-4eb9-9f75-b20e7fd5e433"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b048b74-9bd4-4821-926f-e2d38df3d57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74fbfe67-7b27-4c68-8102-98e3a977ffa5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eaaff731-ea3b-4ead-8980-cf4bba5ba578",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "14ebc0e0-2703-4419-a244-a9357e4b438d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d77dba2e-8b87-4b5c-a88d-5d1cc6ad1d8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "576cab10-7bf4-4a85-bbd9-c39ae6af4554"
            }
          }
        ]
      },
      {
        "id": "d2686308-71b1-44cd-a0ee-78499b2e7356",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9e8d5bb-201d-4307-ac97-cdd180388247",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8fcd1d97-ef88-41ac-8f48-2c16dd50bfe2",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "27b22996-82c9-4032-bbb5-b8b1e4973643",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "299f1456-8f97-441f-ad3a-88ba86c0f97b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "428a378e-9eb8-4673-a575-765f0e36fa00",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 35.19047619047621,
      "responseMin": 6,
      "responseMax": 917,
      "responseSd": 58.43850577244508,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726879391311,
      "completed": 1726879408697
    },
    "executions": [
      {
        "id": "78052c52-0774-4d82-a5d6-14289f9201cf",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "382e8d12-33b9-4353-ae7f-cb8995ca3777",
          "httpRequestId": "848978db-240e-4c36-b93c-95c82b7e9fee"
        },
        "item": {
          "id": "78052c52-0774-4d82-a5d6-14289f9201cf",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8836c879-cea8-4a1a-847c-e5c1f8f10235",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "56c90dfb-2a74-41be-a49f-462e9df7dd97",
        "cursor": {
          "ref": "7d01fc1b-cfcb-4e29-a732-47c9cae99204",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7bdbaec3-8c6c-4940-a67b-cc587a25b88e"
        },
        "item": {
          "id": "56c90dfb-2a74-41be-a49f-462e9df7dd97",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0676dd57-39ca-4908-b39c-1d8182036317",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "d2dfd103-a9ce-4332-837f-71b94386aa7d",
        "cursor": {
          "ref": "60a3a988-99cd-47ab-9dbb-798069bd9c90",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "bd9adac5-bb60-447c-b240-8a0c7ba71fdc"
        },
        "item": {
          "id": "d2dfd103-a9ce-4332-837f-71b94386aa7d",
          "name": "did_json"
        },
        "response": {
          "id": "a9bfcf9e-6bd7-45fd-acc9-be34561b0307",
          "status": "OK",
          "code": 200,
          "responseTime": 237,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cbaae9-cf15-4182-b98e-8e53317ad3fd",
        "cursor": {
          "ref": "0dbe7354-59e7-429f-a7ff-db48b643ca1c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb8a80c0-e638-4621-9144-923c6888120b"
        },
        "item": {
          "id": "80cbaae9-cf15-4182-b98e-8e53317ad3fd",
          "name": "did:invalid"
        },
        "response": {
          "id": "74d0a674-3971-4125-90c6-47366e60c0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cbaae9-cf15-4182-b98e-8e53317ad3fd",
        "cursor": {
          "ref": "0dbe7354-59e7-429f-a7ff-db48b643ca1c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "bb8a80c0-e638-4621-9144-923c6888120b"
        },
        "item": {
          "id": "80cbaae9-cf15-4182-b98e-8e53317ad3fd",
          "name": "did:invalid"
        },
        "response": {
          "id": "74d0a674-3971-4125-90c6-47366e60c0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5393627f-e8f1-466c-a8bb-0b84d37d1bd2",
        "cursor": {
          "ref": "38ecd540-3f72-4063-974f-dd08804b0acc",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "3519f8dd-6da2-449b-9c9c-83d515bd9f88"
        },
        "item": {
          "id": "5393627f-e8f1-466c-a8bb-0b84d37d1bd2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7af78658-2240-4cfd-a6f1-7a6c3c6641a0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 89,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cb4d06-b8b5-4444-a55b-fa2b71a9aa67",
        "cursor": {
          "ref": "f8f058f9-d79d-439a-9916-2ec23009686c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "67ea139a-4a22-43fa-a70b-ab8120692a94"
        },
        "item": {
          "id": "f5cb4d06-b8b5-4444-a55b-fa2b71a9aa67",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6ee0516e-1376-4a20-849a-7a000c79dd86",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db0c067-8053-40a5-8903-b1280cf6ed66",
        "cursor": {
          "ref": "495e993c-a2a3-4cb4-8b14-d94033e523a5",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e47f8a16-b287-43a1-8df4-c30f1f311715"
        },
        "item": {
          "id": "6db0c067-8053-40a5-8903-b1280cf6ed66",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7d8cf4bf-74af-4fa3-96bf-2f256398cbfc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2c4273-d758-42be-ae79-469a2777d624",
        "cursor": {
          "ref": "d5e3614b-b25e-4411-8f43-d5eafc94f9a0",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "14b40f1c-9856-47dc-b222-b2027a3fea5e"
        },
        "item": {
          "id": "7c2c4273-d758-42be-ae79-469a2777d624",
          "name": "identifiers"
        },
        "response": {
          "id": "0139e735-91d1-42e0-b39b-ab91e641d20b",
          "status": "OK",
          "code": 200,
          "responseTime": 208,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc07bd30-fc4b-4e69-bbb3-67d25a2b6da0",
        "cursor": {
          "ref": "25c3f9cd-69f5-4a1a-b7ad-630099329a95",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "aedec47d-13bb-47c9-b661-a7d388351a1f"
        },
        "item": {
          "id": "fc07bd30-fc4b-4e69-bbb3-67d25a2b6da0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "100991c0-4d2f-4706-93b6-62355bd5369b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19f5dc74-563b-4452-aaa1-55a2535e8801",
        "cursor": {
          "ref": "7fcaa832-2e7d-476f-866f-29d26263e438",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "b726d087-b080-4844-9d01-1c2eb4ee5394"
        },
        "item": {
          "id": "19f5dc74-563b-4452-aaa1-55a2535e8801",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "691b460b-a1d0-4f6b-b871-60322754fb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb0f5a8-af7a-4958-b52b-1e993efc982c",
        "cursor": {
          "ref": "fd7cd71b-0ec0-402f-b149-7b177f51dff3",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f4f8ac97-fdc5-4fe2-b1d5-f4fd615767af"
        },
        "item": {
          "id": "4fb0f5a8-af7a-4958-b52b-1e993efc982c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4072fff8-d3d8-4537-8fe5-c48fd28b5260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891f1a26-5446-408e-9d14-7b75309dc880",
        "cursor": {
          "ref": "74d35325-212e-49bf-9b87-acdead4e846a",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a37c1d27-1f18-49f2-b6f7-06bba2014743"
        },
        "item": {
          "id": "891f1a26-5446-408e-9d14-7b75309dc880",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "27ebb65f-31c5-473c-99a5-fb61c32840ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be18fce-2c4e-4fb8-a3d0-dd048739525b",
        "cursor": {
          "ref": "dd33c8b3-67f9-4a5d-a067-e148770a09ed",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "2147b400-10f7-416a-b2c8-251c1b0d0b91"
        },
        "item": {
          "id": "8be18fce-2c4e-4fb8-a3d0-dd048739525b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d6c15de8-8ce1-4740-85ea-8acc6ccb1056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "695a9f55-5065-4e5e-b4e0-554bc47b7aa5",
        "cursor": {
          "ref": "05f4dfbb-190f-496b-a95e-9bd4cbdd33c5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "db0b9a35-5624-4a3a-85ac-73c32439c9b8"
        },
        "item": {
          "id": "695a9f55-5065-4e5e-b4e0-554bc47b7aa5",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b4af6a5f-2c28-4f8c-9de2-545e15392d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed0dce5-5e1f-4010-8ed9-4d6f88a88f18",
        "cursor": {
          "ref": "2db90b4f-ccd4-4278-a0d1-db161e79232a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "417422db-fa23-4235-9ae9-b6dcd0b3b6cf"
        },
        "item": {
          "id": "5ed0dce5-5e1f-4010-8ed9-4d6f88a88f18",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9baa1808-0378-42a7-a3c7-08221551fbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c3aa0b-6ead-4096-81f7-228dba3db471",
        "cursor": {
          "ref": "6c8e2262-3fbc-4be8-8fa0-fad3aa5304c1",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "79878a1c-63d2-4cd9-9ae9-29686eaa19ea"
        },
        "item": {
          "id": "82c3aa0b-6ead-4096-81f7-228dba3db471",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "eff02a19-b17f-4bca-a697-03e1dda19281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad0ebf14-35da-48b7-a0d1-a250d9c105a5",
        "cursor": {
          "ref": "a0f658dd-2441-40c4-8642-1fe33c78c068",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fabc8a24-465d-4b36-ac99-28c4dd9ab916"
        },
        "item": {
          "id": "ad0ebf14-35da-48b7-a0d1-a250d9c105a5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f6a1b720-c292-4e10-abab-0474c511cdb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac935460-2ce8-43ed-8cf3-d9008048570a",
        "cursor": {
          "ref": "0f6299f8-c894-4332-995f-13620ccd3872",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "df0c7fc1-bd0d-4730-ae7f-e7d2218304e5"
        },
        "item": {
          "id": "ac935460-2ce8-43ed-8cf3-d9008048570a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5da175a-3338-4c46-84d6-0a6586c29c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde3b135-27b1-482c-a676-6ef5f1ec00b5",
        "cursor": {
          "ref": "bbdbd321-cab5-4a71-bf64-fc5853f9b398",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b43814c2-7fa4-4f6c-97d0-81efe8761fe2"
        },
        "item": {
          "id": "cde3b135-27b1-482c-a676-6ef5f1ec00b5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c96da870-ccf7-414a-88aa-3c8d01808f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ba93c5-7361-4aae-a2a7-de731cbcc1b2",
        "cursor": {
          "ref": "514277e9-89f2-444e-9f8a-81ffeb03ff36",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "14502d5a-0768-4afc-aa48-01efced43cc2"
        },
        "item": {
          "id": "e8ba93c5-7361-4aae-a2a7-de731cbcc1b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2c7bf0e2-66e4-4c80-bd47-882b3d6c81ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71d4a30-27ce-4939-9c74-e8422dbe2631",
        "cursor": {
          "ref": "db24c5e3-e41a-41c9-a3c3-3bfea145e4bd",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "69071804-fb99-41a1-badb-407435e50eb6"
        },
        "item": {
          "id": "b71d4a30-27ce-4939-9c74-e8422dbe2631",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2d262deb-eca7-41a9-9649-6649f6c3e5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbeda831-e305-4365-a47f-a060bc5c64d9",
        "cursor": {
          "ref": "7957bca8-6478-4362-b415-910a6a799789",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cdc9e5bf-b05c-42ab-bf83-02b5f0a77e9c"
        },
        "item": {
          "id": "cbeda831-e305-4365-a47f-a060bc5c64d9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "69950b88-0493-4d25-ba90-af75bf143688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3ff663-93e4-40b4-b6f1-5d1e04c45015",
        "cursor": {
          "ref": "9fdbdf30-127c-4d85-b933-f85f302c0571",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "1ae40b3d-4497-425d-bbb0-87c2323b9c82"
        },
        "item": {
          "id": "6b3ff663-93e4-40b4-b6f1-5d1e04c45015",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6b8033eb-1a11-415c-baa5-50290ed98938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb7fdb1-a9a8-4281-afd6-051112b7c366",
        "cursor": {
          "ref": "f6987b63-2c10-4768-b78c-5b5fa4ef0691",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "9640a05d-902c-48b6-b825-562d43b535a4"
        },
        "item": {
          "id": "dcb7fdb1-a9a8-4281-afd6-051112b7c366",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2ab907b4-51e8-414d-b3cd-e2c5ca13f170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d6fb86-98c0-400e-8e10-c88771541d1c",
        "cursor": {
          "ref": "a571e169-8148-4126-9cd7-b33ff764cd54",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "70114528-162b-4c90-968f-4895d4afc361"
        },
        "item": {
          "id": "36d6fb86-98c0-400e-8e10-c88771541d1c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9135b9b4-3fe4-42c4-a959-821c0f3e0da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd2514b-239c-41d0-846c-ead634adafa1",
        "cursor": {
          "ref": "98a97040-e2b7-4fda-82a9-4a60e51c9f9c",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ef46fea0-73bb-4fb0-86d5-cd0aa3de078e"
        },
        "item": {
          "id": "ddd2514b-239c-41d0-846c-ead634adafa1",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "fdd80a85-506a-4185-9b06-385eed7cacc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa8f2cf7-37d1-48eb-9f84-aa816391b1dc",
        "cursor": {
          "ref": "222143c0-4a94-4b75-9b4a-dd216dc61663",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b746c207-ca21-4215-bf44-48fc56dfcafb"
        },
        "item": {
          "id": "aa8f2cf7-37d1-48eb-9f84-aa816391b1dc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b4d01082-3647-420e-b1ab-07fb566d6d7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e6da53-3dfe-42eb-8c96-91c079def175",
        "cursor": {
          "ref": "60a93e38-268e-49e4-8c5c-d447bd91811d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "4e9d6069-f344-41bb-9c6b-82271072c75a"
        },
        "item": {
          "id": "93e6da53-3dfe-42eb-8c96-91c079def175",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6b4c5b42-4fb1-41d2-b2fb-b60dab327d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a71a2b-ef92-47cd-aa20-8456c08d9801",
        "cursor": {
          "ref": "167841f9-9dd4-4e03-8399-0e88838988d4",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8ed29525-36d5-413b-8e18-d8a1eb15d924"
        },
        "item": {
          "id": "e2a71a2b-ef92-47cd-aa20-8456c08d9801",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0eabc65f-ef23-4057-bc9c-2feb9e6912c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145e3df1-9b82-4e75-8a68-70d6503dcd20",
        "cursor": {
          "ref": "c54d36ab-548b-433a-be60-ef42f338887a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c8a139b6-9ca9-40c7-adaa-9ca327257f4e"
        },
        "item": {
          "id": "145e3df1-9b82-4e75-8a68-70d6503dcd20",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5975a773-b920-4ec3-a9ac-032e710c9e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e96cc0-ad82-40be-9133-ef87478b06de",
        "cursor": {
          "ref": "508266de-5488-403f-b41a-e8947dedb204",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "cb5ad175-693d-43bd-9e4f-ad9083b62f2b"
        },
        "item": {
          "id": "51e96cc0-ad82-40be-9133-ef87478b06de",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9a45cd01-7916-4967-8e21-05506617e95f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46493104-2245-43c5-9761-41d7b462ce1d",
        "cursor": {
          "ref": "dfe3fcbd-a25e-42bb-be6f-0997a9f1d0a8",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "04737888-31dc-4f56-a5b3-56122defe8f1"
        },
        "item": {
          "id": "46493104-2245-43c5-9761-41d7b462ce1d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "879733f4-9f3d-4df4-8616-169fcb4c5a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0a82f8-e4c4-4481-8a3f-1dad369e4e63",
        "cursor": {
          "ref": "08bdd888-5841-4531-954c-914997040ea4",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "bc981bd8-3df5-4666-87b9-18f4b1d52c6a"
        },
        "item": {
          "id": "2a0a82f8-e4c4-4481-8a3f-1dad369e4e63",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "49da975c-0542-48ab-b1b3-598430589db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792b08f-d43e-40ff-845c-bc74622bf1a6",
        "cursor": {
          "ref": "92bd3f73-0f1c-417f-a1bf-da0ef97f55a7",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "66b07c96-b925-434a-881d-731e6388cbbd"
        },
        "item": {
          "id": "1792b08f-d43e-40ff-845c-bc74622bf1a6",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9e2ac35d-765f-48b7-ab2f-f88477aa347c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbed105e-bf2a-40d5-ae21-973a8ff1fce3",
        "cursor": {
          "ref": "ad2c5f1d-f08e-467d-9dad-5dac542bbd59",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7347f116-90d6-4ba8-82cc-2584193f3c93"
        },
        "item": {
          "id": "fbed105e-bf2a-40d5-ae21-973a8ff1fce3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6b4d5cfe-803c-44cc-8fbd-04acaf3b0771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b5f80a-78eb-473a-8884-db0eac2dcb6c",
        "cursor": {
          "ref": "f7e369e8-aa78-4b54-94be-d28134cdfa2a",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "b53d87f0-c396-4bbc-90a3-08db24e30e8a"
        },
        "item": {
          "id": "f9b5f80a-78eb-473a-8884-db0eac2dcb6c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7b52b23c-e157-4eb4-a2ea-5dcebad06b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c14e66da-cf41-4a48-a072-4f59316f1ef9",
        "cursor": {
          "ref": "0af6024c-2059-477a-aca9-fea58f1e0db3",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6a8b56a5-2d6f-4770-9c02-a53c662b9f14"
        },
        "item": {
          "id": "c14e66da-cf41-4a48-a072-4f59316f1ef9",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "e351e331-9652-4d9e-920b-97c32adddecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fedd2e-0dda-4bf4-b726-7a4beb7132db",
        "cursor": {
          "ref": "3081be2a-18cc-4228-828e-d82c385381b2",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "5b975188-8d2a-418d-9acf-6eb9af7a6f7d"
        },
        "item": {
          "id": "e2fedd2e-0dda-4bf4-b726-7a4beb7132db",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3dee424b-bf05-4a9c-8782-dd49449c7ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629979f2-b87f-47c8-80e5-d150bf2e5b55",
        "cursor": {
          "ref": "4bb5ac9e-73f2-4f95-a97a-cb66f6e5ac04",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "848dd13f-054c-4eed-852c-e9f2e9d582b8"
        },
        "item": {
          "id": "629979f2-b87f-47c8-80e5-d150bf2e5b55",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "09eeb5cd-5b02-4c13-ae74-016437ec277b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8789a5f3-cf64-4cc2-a3f1-ae5cdfd63e5a",
        "cursor": {
          "ref": "1f5b2350-8875-4c76-94ca-f8ee2ee5a7fb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "aab082e2-297a-42b4-825c-53095717b011"
        },
        "item": {
          "id": "8789a5f3-cf64-4cc2-a3f1-ae5cdfd63e5a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3db2ee40-5e84-417c-971f-a42cb4465e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4ce61a-d9da-43de-b855-a2c28b660034",
        "cursor": {
          "ref": "937dcfd9-d00c-4d17-bf91-eafbf1475fe1",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b5b72935-e831-475f-8861-0823d3f43cc9"
        },
        "item": {
          "id": "7e4ce61a-d9da-43de-b855-a2c28b660034",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fdf50359-7ece-4612-abc7-4a65e46f32a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a4073b-f545-4cd3-9fbf-735e49bce196",
        "cursor": {
          "ref": "e3760452-68c4-49a7-96b3-1466205afa06",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f7bf0b7f-a093-4657-8b85-b6e1c6e35095"
        },
        "item": {
          "id": "d6a4073b-f545-4cd3-9fbf-735e49bce196",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "30fa9a4c-afe7-467f-bfe2-567e015e1532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a55efa6-9ad6-4374-a20d-24b88c783456",
        "cursor": {
          "ref": "49c80e69-8ba7-4cbb-aa07-8e68595bcdef",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c15b2826-907d-431e-b7e1-fe9415f8c295"
        },
        "item": {
          "id": "1a55efa6-9ad6-4374-a20d-24b88c783456",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f8e958f9-2481-4c3c-ac97-cfe5d108f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4cf579-3ea8-457a-9617-2fdfc1cd7de4",
        "cursor": {
          "ref": "505009e1-e4f1-4692-b38c-be54ac500bc5",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "af85f10e-1300-4915-b344-9c03c5e8056b"
        },
        "item": {
          "id": "ab4cf579-3ea8-457a-9617-2fdfc1cd7de4",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ef5add86-c3be-40fa-a876-fc7f1e1980a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8c2fef-957d-4f84-99d6-b559b531b852",
        "cursor": {
          "ref": "fa1f9125-5449-42e0-b257-ddc9093db5ce",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "38c52282-1cd8-4a71-950a-d59ab00d9c0c"
        },
        "item": {
          "id": "ae8c2fef-957d-4f84-99d6-b559b531b852",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "9f855016-beb6-4b7c-b1ef-093874dc2dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "194186e9-63c3-44f9-88cf-a00ba8b71e45",
        "cursor": {
          "ref": "ac8d4af3-2e9f-49cb-894d-957a85bbd0b4",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d44b360e-a4bc-476b-94d7-db104c46cf9c"
        },
        "item": {
          "id": "194186e9-63c3-44f9-88cf-a00ba8b71e45",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "368187a7-38db-43ec-8735-25affa837763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623c8e94-4047-4ec8-ad19-0d8a585b7108",
        "cursor": {
          "ref": "7de66197-10eb-48e8-be5c-1ae2192e57f5",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e22a74de-5949-4394-9ee8-fd17f749457b"
        },
        "item": {
          "id": "623c8e94-4047-4ec8-ad19-0d8a585b7108",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "25971cb6-13d9-49ee-b2af-c9b633832afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "855d14ee-c1f2-4ef2-85cf-aa2d6bda986b",
        "cursor": {
          "ref": "2ae8c061-fa6e-46b2-88f9-2ef7a86ec905",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d0a08a09-dd53-485e-93a2-c9858026b3cc"
        },
        "item": {
          "id": "855d14ee-c1f2-4ef2-85cf-aa2d6bda986b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3c599f96-3c6a-4158-8f6d-24a7f9d28eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407508c5-5a2d-4963-9ece-c75c8db1371c",
        "cursor": {
          "ref": "50a605cf-9546-477c-b9bf-65233fc7a523",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "3cc333c3-5e34-4a58-bfd8-e3fe3fb3b072"
        },
        "item": {
          "id": "407508c5-5a2d-4963-9ece-c75c8db1371c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2fff03c7-4cdc-4a64-a1bd-79f0ba7520a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "500f4983-cfb6-4157-904e-b0fde7f59979",
        "cursor": {
          "ref": "e0af7117-9b18-4720-b406-749956526656",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "641d8779-b9f6-4087-a492-3fb2a0c8e606"
        },
        "item": {
          "id": "500f4983-cfb6-4157-904e-b0fde7f59979",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "632a4e10-2d29-46ad-981e-64e5dec3c4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bce470b2-d13d-4c88-aa21-7e5afa9fda8e",
        "cursor": {
          "ref": "b2f8889d-c437-4a50-8594-e82d8bd6bd14",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2bfa7988-3975-47f8-a513-ecbc35b9f35b"
        },
        "item": {
          "id": "bce470b2-d13d-4c88-aa21-7e5afa9fda8e",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "27e55161-8943-435e-9183-bf32d422c8ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11d42a6-de7b-4833-a2e7-4367d1cf1ba0",
        "cursor": {
          "ref": "dc385c7c-0ae1-40ad-878a-283745cdb6c9",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4b854fa1-a9ee-4c14-badc-7be826db6ef4"
        },
        "item": {
          "id": "d11d42a6-de7b-4833-a2e7-4367d1cf1ba0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5f160c17-fedc-48c2-855b-0536215f9e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f045ff4-e2f9-48ac-9f07-1bd689d39172",
        "cursor": {
          "ref": "ef3facc8-dee0-473d-aa96-d8e744e083d2",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5124299c-5b70-4364-9b52-f5b0948e1cd9"
        },
        "item": {
          "id": "1f045ff4-e2f9-48ac-9f07-1bd689d39172",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "91b692cd-3d3e-463a-949c-b8432ad1e89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c477336-5de2-4c3a-b1a6-fd6203caa5b2",
        "cursor": {
          "ref": "4d05d0c6-5efa-4404-81e4-5f77873b04a2",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e35ea4f8-306e-45c3-8aa2-f407a2387550"
        },
        "item": {
          "id": "1c477336-5de2-4c3a-b1a6-fd6203caa5b2",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "10a20d2d-72b4-4d74-81b5-de45f5ebda2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37adf14c-2f59-4625-8a57-c2378c642b02",
        "cursor": {
          "ref": "1c2cc886-b948-4304-9537-e27abcef7f33",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ac503855-c202-4e06-9249-e57d6d0ac67e"
        },
        "item": {
          "id": "37adf14c-2f59-4625-8a57-c2378c642b02",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cc3a29ae-1f9e-464a-9151-208f9844cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64aea289-da38-4eee-83c9-9b678bc20f6e",
        "cursor": {
          "ref": "53231331-f38b-466b-a3f6-2b841647b2de",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a55d575-7411-48b5-816e-9132d48abc80"
        },
        "item": {
          "id": "64aea289-da38-4eee-83c9-9b678bc20f6e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3ca07707-60f9-44c6-9faf-ec991aeed1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e178f1-c712-472f-a4a6-677f853d6899",
        "cursor": {
          "ref": "196375e1-f8e1-47c1-9094-7fb490ff60b5",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3b5025ed-368a-4539-a57b-ef9e2dab8c14"
        },
        "item": {
          "id": "24e178f1-c712-472f-a4a6-677f853d6899",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e380c1f0-a0c8-47fe-84ca-064e75f0e006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3603c262-8e75-4a71-b7d3-f6ec94be68cc",
        "cursor": {
          "ref": "3fdfd094-4712-4e05-87c2-cf6c4f2890d0",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4b3369ad-be04-4188-a815-d55b092857ac"
        },
        "item": {
          "id": "3603c262-8e75-4a71-b7d3-f6ec94be68cc",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b8f9db32-1e7e-4063-85cb-14aca1a07149",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8036ef-ca92-4316-a0f7-86f7b7b9a0b4",
        "cursor": {
          "ref": "f73bb6e9-aa65-4eee-89c5-37758b980fa1",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "13997d4a-f593-42c8-b6b6-3466f8e4b9db"
        },
        "item": {
          "id": "af8036ef-ca92-4316-a0f7-86f7b7b9a0b4",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f245fdb4-8703-43f4-b041-dc41db3f864b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7f187e-7ef8-4469-a39c-7d7a7ff2044b",
        "cursor": {
          "ref": "0cf027fb-9f08-4a91-87e7-f98ac8d69250",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a602ac99-476a-4782-a8a3-f4c3dcc4cbe0"
        },
        "item": {
          "id": "9c7f187e-7ef8-4469-a39c-7d7a7ff2044b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ab724f33-de55-4259-af4f-c69d01f64448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4b353c-9711-4ef0-9134-5d2403ea1789",
        "cursor": {
          "ref": "8771a4fd-f02f-45f9-97a4-37e5c5cecd72",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "eff8cb65-8012-4282-9609-dc6e5f16dbc9"
        },
        "item": {
          "id": "5a4b353c-9711-4ef0-9134-5d2403ea1789",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1d7fb3a0-3490-4d11-8385-0f63907ec8d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac277ae6-ab3f-43b6-9c54-4b06b4f6612d",
        "cursor": {
          "ref": "a9b44909-ed2a-43c7-b59d-9f2dad447699",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "465a612b-ba94-4688-816c-c9bd911b2f7b"
        },
        "item": {
          "id": "ac277ae6-ab3f-43b6-9c54-4b06b4f6612d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "489d6e5d-a41b-4d8b-8aeb-85c899bf829d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a21fc247-9a7a-4a15-8fa8-ce0c62c6c651",
        "cursor": {
          "ref": "2302a225-30e1-444f-97ed-ee234ae84842",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0920a6e0-f379-4cc5-b3e4-228d67aed280"
        },
        "item": {
          "id": "a21fc247-9a7a-4a15-8fa8-ce0c62c6c651",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4818fefb-487c-4706-8cb9-c13eacccd15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df8b6bcc-9602-4cb6-997a-0f67187c9fba",
        "cursor": {
          "ref": "743b7d40-79bd-4d0b-b1c8-be177aed56d8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dab17a23-745e-4f9b-ab3e-8c944b8f2ef4"
        },
        "item": {
          "id": "df8b6bcc-9602-4cb6-997a-0f67187c9fba",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "1809b29f-fbce-49b9-af53-2bb6f8fa9fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2320484c-c470-4ed2-82f6-00013f8593f3",
        "cursor": {
          "ref": "27b2b8ba-2bcb-440f-b24d-34d85add3ae0",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "08dc6e04-0bc5-4c69-a3ed-006b843927bc"
        },
        "item": {
          "id": "2320484c-c470-4ed2-82f6-00013f8593f3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9255fd8c-1d5f-4963-882b-6efcce96cd0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9917e42d-6cf1-474e-b713-43483ba1613a",
        "cursor": {
          "ref": "63e85e4a-2e1c-4839-b118-4094103a8679",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "055e31f8-5088-424a-ac4f-a7ddc76af2d7"
        },
        "item": {
          "id": "9917e42d-6cf1-474e-b713-43483ba1613a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a0e1830a-bc2f-4d38-8c2e-c5920838aff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e0f467-ece2-44af-a7e0-32af594fce23",
        "cursor": {
          "ref": "ade93798-c29c-44a6-aecc-c68eacb0a766",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "54ef35ee-7b23-464b-a30a-77a6b704237f"
        },
        "item": {
          "id": "95e0f467-ece2-44af-a7e0-32af594fce23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "dd271f44-742c-493f-9d7b-1554bbeb6ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84dc574a-a58b-40c0-9bcb-f63017032372",
        "cursor": {
          "ref": "c02787ea-c2b3-4ac9-97b9-f73ad4dfbf7e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "c663b806-a407-479b-9885-d7d61cc115bf"
        },
        "item": {
          "id": "84dc574a-a58b-40c0-9bcb-f63017032372",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3614393-6050-468e-b388-e175d958e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c30cf98-589e-4b90-a207-0c241690965f",
        "cursor": {
          "ref": "bdc9dd8e-5e93-4902-9dd3-cbfe1faf459f",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5c664a58-70ba-4c80-b719-e88c66393055"
        },
        "item": {
          "id": "7c30cf98-589e-4b90-a207-0c241690965f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8667780e-2904-4141-88e5-afc55b5f0802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06505f56-32ce-4821-bcca-79f0ea3ca8b7",
        "cursor": {
          "ref": "ac092ac3-de8d-44e5-947b-3f66d563cba9",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "cfc7dafc-ec9a-4f9d-97ea-83d112a3aba6"
        },
        "item": {
          "id": "06505f56-32ce-4821-bcca-79f0ea3ca8b7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3f064015-9544-4ebd-9525-c616a0216a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419b8dc2-9836-4ecc-b8f1-ccec98ce563e",
        "cursor": {
          "ref": "117e8bd1-8a56-42dc-bd96-205e9a3141b1",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "536eb476-34bc-49c3-b9b9-fec4559336d7"
        },
        "item": {
          "id": "419b8dc2-9836-4ecc-b8f1-ccec98ce563e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "86d2f32e-4e53-4f3c-9291-0bd4e38e3aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32eedf1-aa42-41ab-a011-0099509ff16a",
        "cursor": {
          "ref": "50c5d0e0-006b-490c-b121-9e74dceeab36",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4b00881b-1603-4984-8bf6-0d30c34e6884"
        },
        "item": {
          "id": "d32eedf1-aa42-41ab-a011-0099509ff16a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3453b1b2-4266-428a-bacc-3558a1abc6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337460b5-3779-459b-b0b2-8de462778f17",
        "cursor": {
          "ref": "d38d1c2a-d045-4c5a-95d0-be211e9ab207",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "2c973df1-4bd8-480e-91ee-4ae1d89e9c8e"
        },
        "item": {
          "id": "337460b5-3779-459b-b0b2-8de462778f17",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "26a821a0-0497-4fdb-8afb-4dc88a0740b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d439b21-c93f-464c-8912-7e5f9e4588d4",
        "cursor": {
          "ref": "9db42ab3-e7a6-4268-a3ee-a3a46c9a0fab",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "2d739937-e8fc-491c-938c-60726dc98e56"
        },
        "item": {
          "id": "9d439b21-c93f-464c-8912-7e5f9e4588d4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1dcb5b0d-059d-4663-a155-590f87eff2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c54a2b-eff0-4c58-b492-a82c42a35efe",
        "cursor": {
          "ref": "90accd21-d464-4132-a271-1ed6b64a2114",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "abea366b-5221-49de-8152-31f6237fa8fb"
        },
        "item": {
          "id": "b2c54a2b-eff0-4c58-b492-a82c42a35efe",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8bc1200b-d14c-4fa7-971a-8eddb9c8c196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b025583c-54a0-49d3-97d1-8d9dc88036c5",
        "cursor": {
          "ref": "e584cc1b-e6f5-411b-b0b5-bd946f0c8000",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "70c0317e-60b8-448f-9f3e-d76b6bdb59d4"
        },
        "item": {
          "id": "b025583c-54a0-49d3-97d1-8d9dc88036c5",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "30c335d5-99dc-431a-ae3f-be1ba7845872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba45dda-c412-46f7-9669-21b05361bb7f",
        "cursor": {
          "ref": "719711bd-5a8d-4eed-8455-6251baaf0d45",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7f53b7ec-0b8d-40ef-a9a2-aa9a68aad3a2"
        },
        "item": {
          "id": "eba45dda-c412-46f7-9669-21b05361bb7f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0ca93af7-5cc2-4441-9418-deac3ebd4f67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d58ad22-b189-4169-bbf6-ae73afc3438d",
        "cursor": {
          "ref": "8b67963d-6145-4dc7-8707-4391f0188419",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "42b18bfd-38e4-4b50-8ea0-a9cd349cb797"
        },
        "item": {
          "id": "3d58ad22-b189-4169-bbf6-ae73afc3438d",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1b619a42-d5ab-4a85-b700-bebeb9a3b8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc026b07-f53f-4f28-aab4-093339867ebc",
        "cursor": {
          "ref": "25f8d622-47fd-4b22-ab03-6b362a4c11b9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "ea598176-6d6e-46bc-b382-fa3bfacb6dac"
        },
        "item": {
          "id": "cc026b07-f53f-4f28-aab4-093339867ebc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "41142609-212a-428c-8866-abe4205ade42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b10b47-0bc5-485f-a446-5c0d14732470",
        "cursor": {
          "ref": "e0cdc39d-fc69-4411-b2f6-2fd6fbff9d40",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "def7809f-4adf-48f0-80bb-0365c273023b"
        },
        "item": {
          "id": "00b10b47-0bc5-485f-a446-5c0d14732470",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "573848b0-4a92-4f04-85b3-30bde0fccaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe59c4b-94f2-431e-92b2-3e20c6e1af45",
        "cursor": {
          "ref": "33d66b72-402f-4985-a28d-2474af5bc1f7",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9afca611-e238-4747-a795-b1dbb9b84f91"
        },
        "item": {
          "id": "7fe59c4b-94f2-431e-92b2-3e20c6e1af45",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "c6cd11e6-e3a0-4eeb-b700-701f926c32f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc81c75-0cc3-4077-9740-e4f02ec9baf7",
        "cursor": {
          "ref": "c0d519f7-b407-480b-b6ae-64add1e6b5af",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2b470393-f10d-4e60-b31a-a341daa205c9"
        },
        "item": {
          "id": "9dc81c75-0cc3-4077-9740-e4f02ec9baf7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "fe627869-1ac6-4ae3-9210-e78e0c85ab6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4455cb30-80df-4809-9b42-1cfadc9fa572",
        "cursor": {
          "ref": "fcd147a3-4df4-429c-81d2-59028a7eb994",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "82f75c87-1f45-4992-a9c5-b35ccf964dce"
        },
        "item": {
          "id": "4455cb30-80df-4809-9b42-1cfadc9fa572",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "07ccc21c-c723-4a6a-a759-47caf66ebbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef34f34c-0728-4026-9e3e-58e4890fd8a5",
        "cursor": {
          "ref": "e38335a4-22fa-4092-bc60-10f794abde17",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bd022c8b-271e-4bfb-b5fd-ee7cf0172ecc"
        },
        "item": {
          "id": "ef34f34c-0728-4026-9e3e-58e4890fd8a5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "881c98bb-8ea2-423e-925a-03f78cef7337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e31bdaf-275f-4ab5-bb3f-21f42a678092",
        "cursor": {
          "ref": "aa7d9ced-128e-4f6d-8daf-cc589c3ccd9e",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8bf65bac-93f4-4065-a81c-50c728d1f4dd"
        },
        "item": {
          "id": "8e31bdaf-275f-4ab5-bb3f-21f42a678092",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6514b619-5752-4b37-8548-12969864fc3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c9dd318-083d-437e-a81c-8424b5dedaed",
        "cursor": {
          "ref": "a4858ef8-66e3-4979-80ee-cabdcb93dae9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "884ca411-8861-41f7-95b3-f5cc4a0871d5"
        },
        "item": {
          "id": "3c9dd318-083d-437e-a81c-8424b5dedaed",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "39279fb3-02df-4d22-a26e-5c7146d5667e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a280f1ad-60af-45ed-b805-529dd34e4f06",
        "cursor": {
          "ref": "deab97fc-ddb3-4015-ae2e-a6b37f67c4e9",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "458194e7-5994-49cd-9767-40df600333e8"
        },
        "item": {
          "id": "a280f1ad-60af-45ed-b805-529dd34e4f06",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "68aa0147-ff57-4438-8ca9-143ac7f4f462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d1eea1-fe36-4aa9-a92d-fa5b3a47a926",
        "cursor": {
          "ref": "26a16efc-0f37-4f52-ad58-ec2dfaae08e9",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "04fc7858-c3a3-4b27-8cf4-591cd8ef0266"
        },
        "item": {
          "id": "b0d1eea1-fe36-4aa9-a92d-fa5b3a47a926",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ceef358f-7664-421f-98ad-a3110fa1a1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2551d22d-af89-473d-aa6b-e2565dabe7de",
        "cursor": {
          "ref": "8bde6880-b72c-48df-8b8c-4c166a82f084",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f84d1f45-1f0e-4ace-aca9-67d6ed5b6663"
        },
        "item": {
          "id": "2551d22d-af89-473d-aa6b-e2565dabe7de",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5462cab0-3438-423e-b1a6-498446f67ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c2fd0b-d155-48e5-86bf-c05a1913d442",
        "cursor": {
          "ref": "38c87ec1-103d-443e-b967-67222908332f",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "f28bcfc7-6a6a-40d3-b30b-d817f02c0bc6"
        },
        "item": {
          "id": "a4c2fd0b-d155-48e5-86bf-c05a1913d442",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "751ac6f3-8ba7-4b1a-aef1-73d765280f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e24890-537e-478a-b30c-47fb3c7c47e0",
        "cursor": {
          "ref": "27ce834f-cf2a-4266-a0b0-984ab6316fed",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a68e636a-8087-4213-83a3-3d42cb6550dc"
        },
        "item": {
          "id": "79e24890-537e-478a-b30c-47fb3c7c47e0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "76626465-06a6-45a3-a1c6-c4bba7adc86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2532abd-cb57-4705-b9df-5e52c2a9ed81",
        "cursor": {
          "ref": "aee56e90-a9de-4c05-94ba-dc4822eb0a6a",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "20b94f9a-ae30-4d62-898e-e037984b36d5"
        },
        "item": {
          "id": "b2532abd-cb57-4705-b9df-5e52c2a9ed81",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "cead0e1a-7ea4-4cda-9f98-f88ca9023650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bbbdb1-eafe-4f96-8cec-3f2f78d3edb6",
        "cursor": {
          "ref": "6928f385-e829-435f-8190-1b15736162e7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "52beadfa-8819-4645-963e-28ec2f392120"
        },
        "item": {
          "id": "65bbbdb1-eafe-4f96-8cec-3f2f78d3edb6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c8a02413-d68d-47cc-bc15-99adf0740795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e92860-544c-4044-a2a7-578a59737ff2",
        "cursor": {
          "ref": "40c45a07-4f10-4c47-bd34-568c4728801a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "2cd87c06-3998-4920-92a7-2c9562aabebd"
        },
        "item": {
          "id": "e5e92860-544c-4044-a2a7-578a59737ff2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cbec1a25-5e29-4baa-a007-ee7d96f61b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c216b9ff-eaaf-49ed-8351-8d9f8057cab4",
        "cursor": {
          "ref": "c0d7a8f0-2cbf-4b65-90b7-dfccf18d189b",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "93bdfc4f-f441-4304-ad14-98e199d21e12"
        },
        "item": {
          "id": "c216b9ff-eaaf-49ed-8351-8d9f8057cab4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "32fb5033-5afe-47fd-9d9c-e25f0da3f0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21a9ac6-28da-415b-84fd-fce1f881d047",
        "cursor": {
          "ref": "93258a76-a583-4616-b794-150f545bb478",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7e64db52-302f-434a-a619-29cb343de04e"
        },
        "item": {
          "id": "b21a9ac6-28da-415b-84fd-fce1f881d047",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "82bf547f-59c7-4b34-8744-f7e8a9a8f42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff01218-70b6-4b40-b4f8-4a8b4e171beb",
        "cursor": {
          "ref": "0f1d036d-d9eb-4b25-9a34-198e32b05a92",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9dd3f0e3-874d-4e5f-a6f3-4fbba158208c"
        },
        "item": {
          "id": "6ff01218-70b6-4b40-b4f8-4a8b4e171beb",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0c083601-a80d-438b-8f3b-698a9a223cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5643389a-beca-4ee9-9489-e1685436953f",
        "cursor": {
          "ref": "6f6b400a-085a-4b2c-a586-710e9703d616",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "37038b61-28ea-4507-bdb1-d430debe3e87"
        },
        "item": {
          "id": "5643389a-beca-4ee9-9489-e1685436953f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "4e0ae807-53e4-43eb-a9ae-1a9fc634788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75389bf4-4f5a-49a9-884c-60000e39247d",
        "cursor": {
          "ref": "73fa3d3a-0b10-4b75-b978-5bb75e022cae",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "00dad28d-cd7a-4f6f-81aa-88a6c5b0ded9"
        },
        "item": {
          "id": "75389bf4-4f5a-49a9-884c-60000e39247d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "bda5a954-f382-431e-a9a2-880291532ab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13318ddc-b15f-4658-8b57-ff1e5e31283a",
        "cursor": {
          "ref": "f6554d96-d140-4b4b-b4f2-b83a87dffb9f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9f20604c-4493-4934-8be6-5649b9303f75"
        },
        "item": {
          "id": "13318ddc-b15f-4658-8b57-ff1e5e31283a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "93c7b46d-87bd-4d63-8f9a-c2286b6bad2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d130bfb-4e82-478b-bd01-c01bce162472",
        "cursor": {
          "ref": "d5c38419-889d-4b64-a548-50d926765c95",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ccf472ab-7534-452a-aa05-15566d36d051"
        },
        "item": {
          "id": "8d130bfb-4e82-478b-bd01-c01bce162472",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "46461573-b444-4528-9ee4-7153bc569ecd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e4512-4542-4507-a89f-23f5e9bcf853",
        "cursor": {
          "ref": "59b2a5f1-1686-4672-9a08-f42adaa15025",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3888aab8-1237-434d-b2c8-bc881fbc82a0"
        },
        "item": {
          "id": "3f9e4512-4542-4507-a89f-23f5e9bcf853",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "43bf753e-bd54-4bae-9640-a2604ca7e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f64ad652-4643-434c-a428-a0c273e269f5",
        "cursor": {
          "ref": "1224f295-d365-4e5a-87d9-7d6740d7b1b6",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dad9f3b5-d9f5-4294-bc13-e7a348b28c1c"
        },
        "item": {
          "id": "f64ad652-4643-434c-a428-a0c273e269f5",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e7fd2fbf-9b19-4501-a729-70c6abeadf67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "a4071744-91fe-4454-9252-b24c8fa7d18e",
        "cursor": {
          "ref": "6231f1c6-30b2-4457-aa61-bbff0f06d07f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "79eabc44-1592-4b87-b8c8-75f4cc2320fc"
        },
        "item": {
          "id": "a4071744-91fe-4454-9252-b24c8fa7d18e",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c435d15d-d5a1-49dd-b08f-78d431a6210b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7cf82b63-ded5-40ba-99ee-23c29779824e",
        "cursor": {
          "ref": "711f4bd1-3f43-4893-951a-4490038ca57e",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "35fd34d2-2d91-430a-85a6-5d82e873a913"
        },
        "item": {
          "id": "7cf82b63-ded5-40ba-99ee-23c29779824e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "da0ef149-8758-423d-8621-ee54b11db2d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "42d6a9c8-ec05-4655-b8a6-0015218e16ca",
        "cursor": {
          "ref": "5c445875-d0e0-42e2-bd3f-9318a47b169c",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ccc2a88b-0040-4fb3-b6f4-bb861992cc86"
        },
        "item": {
          "id": "42d6a9c8-ec05-4655-b8a6-0015218e16ca",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bb6c7159-6b49-496f-a0c4-e611a2822bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "96bc5837-4ee7-4e1f-b2dd-4cc01bccfac2",
        "cursor": {
          "ref": "49b69e1c-9daf-4f56-9227-4a6e6a26cc33",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "866906ed-aaee-4535-ba04-bab90b48a8b4"
        },
        "item": {
          "id": "96bc5837-4ee7-4e1f-b2dd-4cc01bccfac2",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67db7d04-c1be-4fe6-85b9-f2c6ddbf33d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "79c7c9a6-a8f7-499e-91bb-0eb320dba239",
        "cursor": {
          "ref": "0b3db43e-e900-4511-88bd-3bdaf187b057",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6a9534ce-1edb-402d-af20-423b9276e96a"
        },
        "item": {
          "id": "79c7c9a6-a8f7-499e-91bb-0eb320dba239",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "972292f6-beb2-4a15-a0ff-820fbcfa2ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "b53a4bef-b3de-4f5e-a256-8af80c0e1578",
        "cursor": {
          "ref": "68a694b2-a99c-462a-b1ea-ad95c26feaec",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bd07e50d-4e33-482d-a206-50f4264c3fae"
        },
        "item": {
          "id": "b53a4bef-b3de-4f5e-a256-8af80c0e1578",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f9e96b10-34e0-41fb-836f-490c6ec779f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4167c97c-7dc3-4ab1-abb1-ff1f4485ebed",
        "cursor": {
          "ref": "aae7a5a6-9195-4659-9bd6-5bc6791da00b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "eadfbf74-c8fe-473a-9a1e-25cf27f7e132"
        },
        "item": {
          "id": "4167c97c-7dc3-4ab1-abb1-ff1f4485ebed",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d3d75f6e-da35-4293-b4fd-2d02ba6d5360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179dcdbe-e4e8-4371-93c1-744fbcc81e81",
        "cursor": {
          "ref": "55396459-777a-47e4-aeca-24add015edff",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "819d079f-fd6c-41d1-acb1-d14a908ca889"
        },
        "item": {
          "id": "179dcdbe-e4e8-4371-93c1-744fbcc81e81",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "29b2a416-3023-42f5-9d22-c8e4d97b577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9d99bc-ef8c-4e22-83cd-43ab2a54da23",
        "cursor": {
          "ref": "b71b0661-d227-4683-ae72-200c1f58bd73",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "055a67cf-8199-477e-867f-3cb00b3e9d97"
        },
        "item": {
          "id": "4b9d99bc-ef8c-4e22-83cd-43ab2a54da23",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "512aa9b7-fc67-4222-8413-d5be70561d38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac45860-3285-4684-a6dc-78189352ae5a",
        "cursor": {
          "ref": "8c2b208c-edb9-44aa-a3c5-e8ffce08832e",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f28595b-f7b8-4509-80d3-df91ee54059c"
        },
        "item": {
          "id": "9ac45860-3285-4684-a6dc-78189352ae5a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6721aac8-1c90-4e33-a021-9f5e1ac47bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14d5f9f8-52e4-4cba-b4d4-2a284b7fadf1",
        "cursor": {
          "ref": "0e207d5a-34f6-4b0c-b6a1-f499f7c2967b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0a624615-4d0c-4cc8-b8c9-ca0a91ad2449"
        },
        "item": {
          "id": "14d5f9f8-52e4-4cba-b4d4-2a284b7fadf1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7d566154-eef6-40c4-a955-af1d700bc534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417a616a-5d91-4ad9-a847-4899cc97b27a",
        "cursor": {
          "ref": "d3f697ae-50c4-402a-a79e-2b486414bbb4",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c9122437-9fb4-4f7d-ac90-3f34455f53ec"
        },
        "item": {
          "id": "417a616a-5d91-4ad9-a847-4899cc97b27a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1480d0c7-4081-4ba0-a799-7a4ba005b340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69e0843-7d35-4671-a072-05f94f123aa1",
        "cursor": {
          "ref": "0273cf8a-358c-4a4f-973b-07c333143536",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a0bd273e-5553-45bf-b783-0cec796c4ae1"
        },
        "item": {
          "id": "d69e0843-7d35-4671-a072-05f94f123aa1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4476b6fb-b04d-4ed1-a102-b5d5cd2443e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453a1619-26ed-4d7c-9885-e1499a43d3d7",
        "cursor": {
          "ref": "64b79c16-5a05-49a9-961f-dea1ac0c343a",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "058ddebb-cf42-4858-ae25-c8259dc3a08d"
        },
        "item": {
          "id": "453a1619-26ed-4d7c-9885-e1499a43d3d7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "107db861-ccf1-42fd-a201-19d84bf739e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4f7a2c-b00f-49ea-abc2-9104e9cf4065",
        "cursor": {
          "ref": "e3f11197-6fff-4561-974f-fe19b5a6897c",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8193f8d1-59c0-421e-aecb-c1d89e488c8b"
        },
        "item": {
          "id": "4f4f7a2c-b00f-49ea-abc2-9104e9cf4065",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "dc99f5b5-4731-4129-896d-a9d5e5a49b46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506704d0-0844-4e61-9778-1aff840f9e57",
        "cursor": {
          "ref": "f012f0a2-392c-4fce-98ea-33b16d61eb11",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d1e9c58a-a32e-43a6-8ec5-0b4aea91b71b"
        },
        "item": {
          "id": "506704d0-0844-4e61-9778-1aff840f9e57",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "de88ef80-1f56-49f1-9cf3-1c679db2fbcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7326350-d627-4110-915b-363e1ac5e4cf",
        "cursor": {
          "ref": "67bed818-39d1-45b0-b83f-07512b94925c",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f5f7ead7-93ea-4bc0-9e09-18bd57a5d30d"
        },
        "item": {
          "id": "c7326350-d627-4110-915b-363e1ac5e4cf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "791755a2-5734-4369-accc-935345ba6436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7647823-867a-47e3-954c-a75638716075",
        "cursor": {
          "ref": "12d6d443-3cf0-4b90-8b2f-026718cd0601",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ae7dc6d4-d4db-459f-8a1c-f14fd90ef5f8"
        },
        "item": {
          "id": "d7647823-867a-47e3-954c-a75638716075",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "71402e3f-8f6b-4c6d-874f-6715e6e47b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9488ee21-e777-4728-97af-3d2affda9bcf",
        "cursor": {
          "ref": "5f0534b1-f280-44cf-ade3-6bf176bc30b6",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "68da5f51-b69b-4a63-8ca7-9aaf9cc67f99"
        },
        "item": {
          "id": "9488ee21-e777-4728-97af-3d2affda9bcf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "fc51131e-4865-4582-bb1d-9bc853fcecbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b80c93-103e-434c-b183-be96fe64a40e",
        "cursor": {
          "ref": "1ba65243-9073-4311-892b-6ebfaa6066c8",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1aaab5dd-e1d8-48e9-a748-23f7330450ce"
        },
        "item": {
          "id": "83b80c93-103e-434c-b183-be96fe64a40e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a1d3d48b-6494-4a33-a838-f86274078a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04357a77-c8c5-4851-89a8-434a49230c07",
        "cursor": {
          "ref": "e9031627-e2eb-4696-a3f3-a7eca52153d7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "55e1d05f-a985-4835-b9f0-02f00c3df0ae"
        },
        "item": {
          "id": "04357a77-c8c5-4851-89a8-434a49230c07",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bc33e9dd-da9f-4b2f-a7d3-6a875d8f7052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea1dee-853c-4dcc-9a88-8855390c47d9",
        "cursor": {
          "ref": "66bca1cb-ea7f-4534-b260-f0542862de68",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e7abc46e-be0f-4988-b6fe-d26c4d778600"
        },
        "item": {
          "id": "82ea1dee-853c-4dcc-9a88-8855390c47d9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "54cb9e5a-d359-4595-9d49-42e39d60e543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4739485-1b38-4364-bb82-d849679a83c5",
        "cursor": {
          "ref": "376d737e-1d59-40d8-a45c-6b5b357b7b05",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "713c7007-0859-4892-857d-50ec59ed934e"
        },
        "item": {
          "id": "b4739485-1b38-4364-bb82-d849679a83c5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "bdb8e286-5d54-414c-8d91-206fa1148f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02058553-7486-4833-bc5f-14f4bce7d0fa",
        "cursor": {
          "ref": "70e1f1be-2b3c-4d1f-9b63-c4d049a39b0d",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ab9b2705-b525-4d27-b371-eaf95f930e1c"
        },
        "item": {
          "id": "02058553-7486-4833-bc5f-14f4bce7d0fa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "005310e0-2987-4e8f-95a4-26b92d2f7271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e722390-4855-46a2-b94f-c1c559aef3b1",
        "cursor": {
          "ref": "1bb42a0a-aaad-43b8-9b36-d6f79e01131e",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4af2c20e-9de8-4b9f-ac3e-e6f2891c39d5"
        },
        "item": {
          "id": "5e722390-4855-46a2-b94f-c1c559aef3b1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7609a49f-2d23-4cd9-9efb-41d8bd25a036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e8316f-3027-446e-b325-7031245d1086",
        "cursor": {
          "ref": "61957b7c-75f4-484a-a313-ce9a112caf70",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5faa2233-2e58-4589-9b16-65b0fec86823"
        },
        "item": {
          "id": "f7e8316f-3027-446e-b325-7031245d1086",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "85f19308-bfa0-419b-8c58-be3a3b8c37c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761cbfc3-534f-4a8c-bf8b-e74714f29a91",
        "cursor": {
          "ref": "8db4d2f0-0e3e-4fb2-bfa3-dd307ce661d8",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "dbeced40-4c8f-4faa-9115-5a10e1f2e579"
        },
        "item": {
          "id": "761cbfc3-534f-4a8c-bf8b-e74714f29a91",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "36c0ba09-1038-451a-8fa0-5afc6af9ea1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4bcc43c-b035-452e-96bf-f99f2d383126",
        "cursor": {
          "ref": "6335034b-4dff-4b6e-9c5f-a965f85dcda4",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1801c5cf-acca-483c-909d-a1857d848878"
        },
        "item": {
          "id": "a4bcc43c-b035-452e-96bf-f99f2d383126",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1c1fa541-6b5d-4bbb-9a7a-05d05b8f0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd12035-7a3b-4ceb-8535-4895b73bbfbe",
        "cursor": {
          "ref": "08294f27-4e68-4270-b2ca-c74fc40a32d0",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "58f12e8e-cad2-4a73-85e8-68d689bd44fa"
        },
        "item": {
          "id": "cbd12035-7a3b-4ceb-8535-4895b73bbfbe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "35bf8c7f-cf61-49b5-9f31-a5cdbd13673d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36dafa3-d6c8-4dcb-862d-6adb64fe777c",
        "cursor": {
          "ref": "9d1c2774-c392-4d36-9ff4-4008cc89198d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bbe12cf9-2a74-43d5-9232-62759973ff53"
        },
        "item": {
          "id": "a36dafa3-d6c8-4dcb-862d-6adb64fe777c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a4be70d8-c796-49e3-bc51-1a12bb00c843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c208894-5a84-45c4-9220-20e85697518e",
        "cursor": {
          "ref": "13f8bfca-3c8c-45ee-b9c4-b223ff94fe24",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "98feac0a-c557-4f11-97b8-c8a07c6be11d"
        },
        "item": {
          "id": "2c208894-5a84-45c4-9220-20e85697518e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0848ec3a-8256-4e36-b0b5-3ff8085864b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a0ecf-8365-4bea-8dfc-63f6a0d38ea9",
        "cursor": {
          "ref": "5de0cedb-a63f-4bdd-9db3-14e0f3795772",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dfec9d9e-8c36-4f80-99d5-431f338ff64b"
        },
        "item": {
          "id": "909a0ecf-8365-4bea-8dfc-63f6a0d38ea9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d74e31e6-066c-4714-8aab-e4c5554574e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539647a9-17db-4f7d-8f28-d2667e00486b",
        "cursor": {
          "ref": "f0f62acf-9e89-4aca-b160-09ab7dc9ad05",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "78d80982-4b4c-488b-89ed-b209ad9c65b7"
        },
        "item": {
          "id": "539647a9-17db-4f7d-8f28-d2667e00486b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a85a5344-cfd5-40ea-96e0-af23768f0e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e69532-dbae-4a49-97eb-2c79f99bd62b",
        "cursor": {
          "ref": "58471c3b-c73d-4f8d-86f1-927b9a7ab363",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6155b666-8d9e-4f9d-9b7d-45176361e903"
        },
        "item": {
          "id": "b4e69532-dbae-4a49-97eb-2c79f99bd62b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "c830a6f9-2900-486d-9b65-8a12c42047bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6e20a4-0e58-4559-bc65-9c4c68874a15",
        "cursor": {
          "ref": "a9fa2a5d-291d-4e2f-be2e-6edab87e84cb",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4d066954-7de6-423f-af01-60ccebdb3df3"
        },
        "item": {
          "id": "5c6e20a4-0e58-4559-bc65-9c4c68874a15",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7330f331-1c89-41d0-8f28-8c962fb9ee05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e61b210-1aa9-4a7b-a263-58f085f00f76",
        "cursor": {
          "ref": "910518dd-3cb6-4336-87fd-ec018473013a",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0eff2ca9-5081-45ec-b3dd-71e029c7402f"
        },
        "item": {
          "id": "3e61b210-1aa9-4a7b-a263-58f085f00f76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "907c450b-f96e-42b5-9172-196e70151fee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43e9a4ca-dc27-4182-a118-77c0ada20fcf",
        "cursor": {
          "ref": "d4c47648-7bb1-41b1-8943-119662838abe",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "363a5cae-461a-4689-af65-98de770a5d38"
        },
        "item": {
          "id": "43e9a4ca-dc27-4182-a118-77c0ada20fcf",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "d5e00136-a753-4906-8124-260b213ee8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d942eb-f1bd-45de-8fcf-a98044327012",
        "cursor": {
          "ref": "9cd62680-e439-4843-a7e8-c54b7eae7c06",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "31c78657-a5d5-44b0-bbfa-a7541cb4ecbd"
        },
        "item": {
          "id": "e6d942eb-f1bd-45de-8fcf-a98044327012",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d8bab9e5-3abd-47a3-b0e8-f60ee796fea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7c7a2ff-ca0d-4a86-94eb-774d5bb12234",
        "cursor": {
          "ref": "50a56567-ed3d-4797-9a5e-c759a4a9fa07",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fb410f07-b590-403c-b9ab-6af6b7c839be"
        },
        "item": {
          "id": "f7c7a2ff-ca0d-4a86-94eb-774d5bb12234",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "089d0bba-3c48-45ce-8a73-f162c9fbf487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5ca3e6-7208-4959-b208-3c053cb36767",
        "cursor": {
          "ref": "dce8f048-e14d-4222-aab0-c194fd8147de",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f769f86d-4f62-4e12-b1a5-6496fde1070f"
        },
        "item": {
          "id": "ff5ca3e6-7208-4959-b208-3c053cb36767",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d9ca2a1e-b71f-410e-9872-155f770065e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "181df1d5-b232-43af-9ccf-e17e15141100",
        "cursor": {
          "ref": "2909f0f5-e99e-492f-8ad7-db1c9a8bf250",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "6b4a75d3-aa21-4817-83e0-d7e1b3490733"
        },
        "item": {
          "id": "181df1d5-b232-43af-9ccf-e17e15141100",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9c25f4a0-42fe-49ee-97fc-5958012c6059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fc1dfb2-21a5-4727-96cd-651861c5e49e",
        "cursor": {
          "ref": "e17e9c8c-cfbf-4b66-a4f7-eb28ad5c76ed",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "73cd6984-e446-41e1-81d8-ee6f8eefd92f"
        },
        "item": {
          "id": "1fc1dfb2-21a5-4727-96cd-651861c5e49e",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "11ac5012-3db6-45e1-a148-6e17535bd190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab07ee2-6487-4a92-9dd1-21986571b1cc",
        "cursor": {
          "ref": "21f7fd69-bec4-4b7f-8423-47318616b4a8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e27acf8a-4aa8-4545-bb48-4230a8a6a68a"
        },
        "item": {
          "id": "1ab07ee2-6487-4a92-9dd1-21986571b1cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4496fe1d-a0d3-4a9c-b29f-577e355f62f6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11513865-5551-4509-b25c-d3fd406a5c6a",
        "cursor": {
          "ref": "475b405b-935b-46ab-893f-615cb6033dc7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2b78b856-bcc1-4f03-b0e1-640496175a24"
        },
        "item": {
          "id": "11513865-5551-4509-b25c-d3fd406a5c6a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5399a6e6-976b-41ce-98ef-d0b141970bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76232a09-6dc3-4b9d-bb87-eecc41db3548",
        "cursor": {
          "ref": "c26a0307-b2ed-4aa9-8a6c-63bbe24927ad",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ba5ee548-d35d-4783-a4a7-97c244e3d220"
        },
        "item": {
          "id": "76232a09-6dc3-4b9d-bb87-eecc41db3548",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "4ced5edd-47ca-4583-ae7b-41b6b9a14951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17340e3-4c79-4d4b-bb36-be5d08110bad",
        "cursor": {
          "ref": "1cb58c4a-d7be-4be6-8a68-ac852ac778e4",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e882d1cd-6dd3-4443-bdeb-198a45ca3ad5"
        },
        "item": {
          "id": "a17340e3-4c79-4d4b-bb36-be5d08110bad",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "8ce42055-47e0-429f-8a24-2cb411578681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994922e5-7d9e-41b8-a226-b4bb08b617de",
        "cursor": {
          "ref": "776fc2cf-abdf-48c8-a30e-c85a0250de9b",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b45fbae3-a053-48a4-bd99-8cf28f5ee414"
        },
        "item": {
          "id": "994922e5-7d9e-41b8-a226-b4bb08b617de",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f5308154-defe-404f-ad18-403d5505127b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b642fda-7e7a-43fa-a7e5-2dbb41c71d0d",
        "cursor": {
          "ref": "fe0033e8-4080-47f6-88db-4bf977622786",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "662a3213-a054-4829-9965-432d6db7f7ca"
        },
        "item": {
          "id": "2b642fda-7e7a-43fa-a7e5-2dbb41c71d0d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c51c314-3c35-4af1-9d62-a4de86d5e231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54eee136-77ed-464a-878e-050c53aeddf3",
        "cursor": {
          "ref": "0d77ee63-9bd3-436d-8073-0ac2aec4ee17",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "53e81339-514a-49af-836a-07756138962b"
        },
        "item": {
          "id": "54eee136-77ed-464a-878e-050c53aeddf3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3c3e357d-bcf2-4edc-8772-d39027c9407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bfaf833-3e48-43c7-aa01-8c2c0479a330",
        "cursor": {
          "ref": "70d9f061-0cb4-4309-9bbb-0d24a142dea7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "c59e47f9-0698-4107-9f5b-6cb88fd3b9f3"
        },
        "item": {
          "id": "1bfaf833-3e48-43c7-aa01-8c2c0479a330",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "a239729c-188b-4e39-871c-2cf3f192d0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1591710f-b3ec-442e-928a-fe14fef5ab5c",
        "cursor": {
          "ref": "e9908869-72f3-404b-a2b8-5f024569623b",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a7110008-fe77-478b-9765-b3ee63131ef3"
        },
        "item": {
          "id": "1591710f-b3ec-442e-928a-fe14fef5ab5c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b0aaaa64-5f10-4683-b9b3-d578d0c51be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe086f3-c227-4bb3-b66f-b331b6ddd660",
        "cursor": {
          "ref": "7cdeef67-c29d-4a8e-a604-f7a381929b83",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "dd29f495-25c0-481d-8831-b83544d90b97"
        },
        "item": {
          "id": "7fe086f3-c227-4bb3-b66f-b331b6ddd660",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "edcc0bda-2c20-41b6-9c6a-4929a3f79fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689883a6-469c-4300-841a-61e3155f2cc0",
        "cursor": {
          "ref": "401c1cd0-fcd3-4782-b0a7-0f140b12c67e",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "563fbdc4-88f2-4d61-b1b2-48229805565c"
        },
        "item": {
          "id": "689883a6-469c-4300-841a-61e3155f2cc0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1f6cd7a2-c5fd-4bac-b53f-bf53b162dc6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac82592-0ce9-472d-957d-6bce02fb8b03",
        "cursor": {
          "ref": "b7d0a564-cafa-4733-8450-b2d3d642ab7c",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "98eb886b-ed32-4b3d-85ab-64bb3adaf7ee"
        },
        "item": {
          "id": "7ac82592-0ce9-472d-957d-6bce02fb8b03",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1c7df4c4-5bee-4dba-b8b3-164645242248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab2acaea-ecab-41cc-b633-7feb01ea83e5",
        "cursor": {
          "ref": "af862e02-252c-4d7f-b6f9-9aca986c035a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d6b583a9-7028-4b8f-aac8-79992b5e8baa"
        },
        "item": {
          "id": "ab2acaea-ecab-41cc-b633-7feb01ea83e5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "05c65aa3-1f0f-4f41-b995-2d57e88fb196",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d742e076-805c-43ec-902d-9e13141b351b",
        "cursor": {
          "ref": "1ae53b92-f995-4bdd-8a15-6bddbf78459a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1e258707-06dc-4c96-9c04-dbb46420405e"
        },
        "item": {
          "id": "d742e076-805c-43ec-902d-9e13141b351b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "70cce634-8e44-4693-80e9-0b3e02851a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ef183d-de0b-4c3d-94c7-f3e1b069b0c3",
        "cursor": {
          "ref": "88394d40-cd31-4e5a-bcef-e86cd5ef4d3f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3c814d05-2afc-46cd-bc8b-ffa63ea40cef"
        },
        "item": {
          "id": "15ef183d-de0b-4c3d-94c7-f3e1b069b0c3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e6a1bc5a-d25e-43bd-8ac6-718cbf88692f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e1a074-98ec-459c-8eb1-754a3233ebd2",
        "cursor": {
          "ref": "bb29d9cc-dafb-41cd-a11f-b1ae2ffa2083",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3b8651f9-093b-49c0-bfeb-cb640e69a56a"
        },
        "item": {
          "id": "d8e1a074-98ec-459c-8eb1-754a3233ebd2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0c56576-11f8-454f-af59-3e84bdb40860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d153b11b-0a71-481a-88a8-b282619d7fb4",
        "cursor": {
          "ref": "dc196c51-7f6f-4bf4-8740-17f46ff6c279",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "71d07d5c-a709-4505-80be-55c6b54a5d66"
        },
        "item": {
          "id": "d153b11b-0a71-481a-88a8-b282619d7fb4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3e339420-f2fe-4c6b-bf28-24aa7213b99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfce8471-b59b-4c7c-ae50-c13f95b56368",
        "cursor": {
          "ref": "9823ecbb-2ab2-44ac-9bba-1ee808df5db8",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "5515df0f-b5bc-45dc-8d12-4ebbacb64621"
        },
        "item": {
          "id": "cfce8471-b59b-4c7c-ae50-c13f95b56368",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f7ffd35b-b4f7-4daa-85c3-7a5f1d7e8528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e050873-5c29-45dc-bb61-d6aeff74e6fc",
        "cursor": {
          "ref": "3f69907b-1edd-41f0-a747-b84b8ede1bcb",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5edcac87-73f6-4d80-acbd-7ad2d8fbfd4e"
        },
        "item": {
          "id": "6e050873-5c29-45dc-bb61-d6aeff74e6fc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "337e8c1a-eb45-4910-a1ce-746ccbfda0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853f5aa6-85ff-4582-aede-22adf0d6977d",
        "cursor": {
          "ref": "dd58a7d4-5703-45c6-9a90-dc794505ba17",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "789a7dbb-74fb-4562-bb65-b318c5426f74"
        },
        "item": {
          "id": "853f5aa6-85ff-4582-aede-22adf0d6977d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "14554e01-0781-490b-ba1f-556b29b71fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26798a1a-89e4-4091-8a0a-5ab7614747a2",
        "cursor": {
          "ref": "d1c64d90-f6dc-4de4-8925-b2e7769986a0",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1ec41bf0-a5ba-4319-b1b3-9c29f7d2b0b3"
        },
        "item": {
          "id": "26798a1a-89e4-4091-8a0a-5ab7614747a2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0748fe13-daa0-4a82-a6de-ada340c6f778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de3d9173-04a1-40f7-b51c-ad5f5546ba7f",
        "cursor": {
          "ref": "aa560238-ad9e-4ee5-9e16-d679bc571853",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "42389497-37d2-40a3-af47-b675683f6971"
        },
        "item": {
          "id": "de3d9173-04a1-40f7-b51c-ad5f5546ba7f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "45a1f4e4-f5f1-4198-a95a-48fc4249e389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad57bc9-0228-4709-9301-012157ac1d96",
        "cursor": {
          "ref": "52f65016-11e9-4f3f-934a-0edec1c5eac6",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "27144862-dc6b-457d-8eef-043ecd566ec2"
        },
        "item": {
          "id": "0ad57bc9-0228-4709-9301-012157ac1d96",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c0c652c8-d517-4248-8bf3-7f7d6bb41f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90ebb25c-d255-42b7-973f-115c6f1034f7",
        "cursor": {
          "ref": "a6476fac-09b8-4b1a-b55a-2a19a1b7b5a3",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7a69a2a7-9d7e-4b93-a8d8-ad674e592117"
        },
        "item": {
          "id": "90ebb25c-d255-42b7-973f-115c6f1034f7",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5cb0eeea-41f7-4692-868c-88c4ba482748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47137495-dbcb-4cca-b45a-515a14e6f1a4",
        "cursor": {
          "ref": "9e86fd4f-bb8d-4236-b580-5e3ddc82a92c",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "dea399fa-2e1f-45a4-bf03-08e9c3d1326b"
        },
        "item": {
          "id": "47137495-dbcb-4cca-b45a-515a14e6f1a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c7d74920-0269-40d6-9f06-79d2719e89a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1340af-7a8b-43c5-a2ac-0068a17e0bbf",
        "cursor": {
          "ref": "d92f0797-519a-4bd8-8d77-4507cb99e8eb",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b9e2e74b-47be-48f5-97ad-4e4cc8982d0a"
        },
        "item": {
          "id": "cc1340af-7a8b-43c5-a2ac-0068a17e0bbf",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "884de41e-6150-451c-b326-caf8a874d6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325199d7-62c0-470a-8a20-b57c1aac19b5",
        "cursor": {
          "ref": "bd39ded3-a8b5-4070-b2e4-1cd1eeb9a28c",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ed4b316b-c13c-4013-9155-b4a6d826981e"
        },
        "item": {
          "id": "325199d7-62c0-470a-8a20-b57c1aac19b5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "28011317-65a7-4310-b730-0882457a3bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e188f394-ef67-437b-b12a-feccae39f7df",
        "cursor": {
          "ref": "80249e13-9bf3-4ada-8b6c-71a0306c2fb6",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "faada719-06ee-46e8-bad5-a63d88d8bccd"
        },
        "item": {
          "id": "e188f394-ef67-437b-b12a-feccae39f7df",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1cda64d1-d777-464e-8899-571163a7bfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44cc7c56-daa2-4aa3-ac74-95949246f62a",
        "cursor": {
          "ref": "dddfb818-f612-4521-aa0a-ebd25630ee3c",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "73a723bd-14fb-4ebe-9439-2e9c4bc9d79e"
        },
        "item": {
          "id": "44cc7c56-daa2-4aa3-ac74-95949246f62a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3622ef70-9707-48d7-b986-acdf35d9dfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16094bff-2e5a-4c32-b17c-e4a3f5af8049",
        "cursor": {
          "ref": "e25fda5c-d3ad-43da-b50b-227e33b4f7f7",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "128f01d9-caec-471f-a791-18a66b113eef"
        },
        "item": {
          "id": "16094bff-2e5a-4c32-b17c-e4a3f5af8049",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2d89c1df-73d8-46bf-b0ce-3ee181025376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d16c2e6-89ac-453d-9eb1-6a4636fafebd",
        "cursor": {
          "ref": "f416c239-0d7e-45e1-b09c-2dcec8c4f67d",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d23b57bb-5488-4ce3-8d1b-e00a72db6ce1"
        },
        "item": {
          "id": "1d16c2e6-89ac-453d-9eb1-6a4636fafebd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "05507726-35b9-4adb-a736-fe4d68da8b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17590af7-96f4-44ce-9aea-4e4815c2996a",
        "cursor": {
          "ref": "2132e674-f388-4aec-8b5f-e8ccd859eeb9",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9d968e4f-c4eb-4c69-89ec-8a8bfa29eb49"
        },
        "item": {
          "id": "17590af7-96f4-44ce-9aea-4e4815c2996a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f547f795-43af-4121-b556-a3a37a9e1dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffabe6e-b143-4c6a-b414-e2f1556ddc81",
        "cursor": {
          "ref": "c00a9310-0f16-4fe7-86b5-44301d394bf5",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "fe67dce2-957a-4130-b2f0-900088101967"
        },
        "item": {
          "id": "7ffabe6e-b143-4c6a-b414-e2f1556ddc81",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "43db2922-f0e1-4084-9532-98ba64746b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd56a615-2f66-4d0e-a49a-6aad7d6e4819",
        "cursor": {
          "ref": "89d1ae8c-e366-4221-9b39-4cb8cbcf891f",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "52f863ae-a1c1-4b71-af83-15e945dcac60"
        },
        "item": {
          "id": "cd56a615-2f66-4d0e-a49a-6aad7d6e4819",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "3ef0e3e0-0718-45fb-8905-6e320785bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4f575e-c60f-4698-baa7-ded7e677411b",
        "cursor": {
          "ref": "07f59c88-35db-464f-b4fa-483d67eed750",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1f920889-ca1d-403b-b33f-b16d631def34"
        },
        "item": {
          "id": "8d4f575e-c60f-4698-baa7-ded7e677411b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f7964708-dc56-44c5-9a19-d287c8e44206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfc93e0-ed3f-4795-9a8e-a174efa59c54",
        "cursor": {
          "ref": "cc7626c5-4d5d-46c1-9832-bbb58fab99cc",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "078e6a87-e59d-42ce-93fd-707761174306"
        },
        "item": {
          "id": "bbfc93e0-ed3f-4795-9a8e-a174efa59c54",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "cfbda2c1-a98e-49c0-ac37-a2be95b73b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d488075e-f750-415e-9ff4-bc6706f69ad9",
        "cursor": {
          "ref": "a38e9381-b588-4ef7-a2ba-a4a3b1ea788e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "ba31f602-cc21-40c6-8498-e4311545ebde"
        },
        "item": {
          "id": "d488075e-f750-415e-9ff4-bc6706f69ad9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4224d2e0-198d-4344-bf7c-8e374c1d5975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec11af66-cedb-4a8a-a537-3eebcc00e96e",
        "cursor": {
          "ref": "7e7fe816-87fe-4436-bbec-8d2668f450c6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "87e64d5e-ffe2-4057-b3da-2ca17c8c16dd"
        },
        "item": {
          "id": "ec11af66-cedb-4a8a-a537-3eebcc00e96e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "989742c4-b67e-422c-a12c-f988e3c5d5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1930995-7f9c-471d-8e39-010b0938a625",
        "cursor": {
          "ref": "7ae9302e-8309-4cdd-9219-8839a947c455",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "728227a3-5ab4-459a-8cb6-9515e15d3c3b"
        },
        "item": {
          "id": "b1930995-7f9c-471d-8e39-010b0938a625",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3b9ee0fe-d684-4c78-aae3-2beea2d743e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a76b002-43ea-41e7-80d3-b69252982233",
        "cursor": {
          "ref": "c898ec30-40b7-4a1f-ad2a-a0fe8d1badf5",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7b07d980-1ce8-44ab-b46d-5a4baf5942a8"
        },
        "item": {
          "id": "6a76b002-43ea-41e7-80d3-b69252982233",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "240de93e-8ee7-4ae4-87d6-45d09fef9603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7037d22-cbbe-43d7-abd5-4bc1da1bc262",
        "cursor": {
          "ref": "777cadbb-909c-4600-ac8c-51bb0c115358",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "433a08f6-108d-425a-ae4e-d80a162aa1ae"
        },
        "item": {
          "id": "e7037d22-cbbe-43d7-abd5-4bc1da1bc262",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "58a534b9-8092-49c8-86bc-d8d55253922e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0a204c-bc92-4493-969e-e980aacca6c2",
        "cursor": {
          "ref": "ac2e63ec-4455-44a0-ab1d-59aac7c774b2",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "582c1fe7-b701-49ef-b586-f6c8338da793"
        },
        "item": {
          "id": "bd0a204c-bc92-4493-969e-e980aacca6c2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c6796d65-4209-4688-84bd-8a67718d455d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44449cf9-cc14-4931-9ab0-e45513155a8a",
        "cursor": {
          "ref": "c6988929-aba5-41ae-8b67-8b88d121fd8c",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "42bc0fce-5e0a-46ac-80ea-e483692b0fe6"
        },
        "item": {
          "id": "44449cf9-cc14-4931-9ab0-e45513155a8a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8a4bbbb3-f5b4-499d-9bb5-f9af71ef3082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a753f62-e859-42cc-9bd2-41a64526f515",
        "cursor": {
          "ref": "17409061-ca4a-422c-bd94-c1682bd85cb3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "600962c5-ff78-4cfa-ae3f-059bf02a018a"
        },
        "item": {
          "id": "4a753f62-e859-42cc-9bd2-41a64526f515",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "89e1e317-df24-4ab6-9788-a5dd5327a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ee5673-c9e3-4300-ab7b-f260d62157ac",
        "cursor": {
          "ref": "f086655f-41bd-4768-85d4-c10823e5f9d7",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "4897c1b5-8403-4223-81ed-140fdcaf807f"
        },
        "item": {
          "id": "99ee5673-c9e3-4300-ab7b-f260d62157ac",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "3f6f9b09-d06c-49bf-a4a2-b38577622edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42e8dc62-e9ed-42a7-8dad-8c15ee84f671",
        "cursor": {
          "ref": "cfc240b9-1863-4595-95a2-4c3064b6e53a",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74bb6b82-827e-48c2-824a-897a20b5c63f"
        },
        "item": {
          "id": "42e8dc62-e9ed-42a7-8dad-8c15ee84f671",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "442de596-ebc7-48eb-a675-af660c917238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05616acc-d91a-4a5d-89ee-c0c493ac43fd",
        "cursor": {
          "ref": "b2fddbe5-d03e-4ce7-a24d-3bfa47c19935",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2b20b512-c9a6-4ff5-9f93-eb7e68170614"
        },
        "item": {
          "id": "05616acc-d91a-4a5d-89ee-c0c493ac43fd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "732bfead-1df9-40cf-ad5d-4722566674ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209c45d2-0ed5-4d68-8598-16d636df5733",
        "cursor": {
          "ref": "f48593fa-7891-4b1f-b49a-2c54374dab94",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bc62576a-a8d3-452e-948a-5e696b45296a"
        },
        "item": {
          "id": "209c45d2-0ed5-4d68-8598-16d636df5733",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "da61f09a-35c2-49fe-8597-d9fcb60c662e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d45afe7-6af7-4ea4-a44c-1ad944140130",
        "cursor": {
          "ref": "21f670c9-7590-441b-bfa1-80c214827d58",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "7e42b368-c91b-4624-9c90-94695d43a518"
        },
        "item": {
          "id": "4d45afe7-6af7-4ea4-a44c-1ad944140130",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0a929d55-c4c9-482f-9ae7-156f1afbc00e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a3c796-5cb4-463a-abde-f617fe54513f",
        "cursor": {
          "ref": "a4b37bae-3960-4224-afd5-b4dbdbbae130",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "21190ff1-e032-4cb5-b2fe-0763ad4231e0"
        },
        "item": {
          "id": "a8a3c796-5cb4-463a-abde-f617fe54513f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e739bed6-b5ff-4341-8510-1d08d1c1126a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee8e095-4c95-4621-ab79-1cea64ae5d13",
        "cursor": {
          "ref": "7a18dbde-a3f9-4eb5-9926-e056427e7bed",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "9f8f7eb2-b1f8-4d5c-b501-8a1bc1727242"
        },
        "item": {
          "id": "dee8e095-4c95-4621-ab79-1cea64ae5d13",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2a844ef5-6872-446a-b2f3-711ba5d5e353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cebf10a-d99d-46bb-9ad4-218c677b3b38",
        "cursor": {
          "ref": "4d2e0ff2-b198-4a52-afc9-1380a830ba5d",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "504c3ac0-3f1f-48e9-a874-8eda8f1f4c66"
        },
        "item": {
          "id": "1cebf10a-d99d-46bb-9ad4-218c677b3b38",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ec317e73-c8f1-4786-8439-f1f9dad6b0c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ffc215-30fc-4e30-82be-471c543b0c98",
        "cursor": {
          "ref": "d66ca006-f9a7-42ca-a79a-7003a8e50027",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "23f4fef5-a6e0-40a7-8863-524f49c98736"
        },
        "item": {
          "id": "97ffc215-30fc-4e30-82be-471c543b0c98",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1f49436d-16c0-46e4-91a3-ee74e1b5a1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9cd5e2-2364-4b67-bce8-46df35ae077d",
        "cursor": {
          "ref": "f21b69fd-1bf7-47d9-b0f8-40f5e1f5be32",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "986977d9-da8f-4b40-8ec1-d4cd17099e2e"
        },
        "item": {
          "id": "ff9cd5e2-2364-4b67-bce8-46df35ae077d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b5580777-7249-4f7f-97fa-7642c83d234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0129232b-889f-4cc4-adb8-64aabd81da3c",
        "cursor": {
          "ref": "abeb8f16-eabc-4ac5-920a-9a3b81bf0d8f",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "85b3a732-ebdb-4696-ad2b-b45ab0296f58"
        },
        "item": {
          "id": "0129232b-889f-4cc4-adb8-64aabd81da3c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "7a07d70a-075e-452c-9991-2f95ff8dcb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb50565-ad56-44d2-a726-4dd3ed7980e1",
        "cursor": {
          "ref": "0a082a20-be64-4c45-b31d-d218e1832a34",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e9cec9f2-4d3f-4df1-b822-92421d5ff1a8"
        },
        "item": {
          "id": "dbb50565-ad56-44d2-a726-4dd3ed7980e1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ee023509-8249-4f86-bbc6-fb87c5643f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5da76b-634d-41b5-be1b-7f91157ad768",
        "cursor": {
          "ref": "10b34874-be62-49eb-8404-ca44b2951720",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "72ae805a-f207-4060-8950-1c33ca92205d"
        },
        "item": {
          "id": "1e5da76b-634d-41b5-be1b-7f91157ad768",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ba62589c-fe66-4bb6-b327-f5aae6e5da62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b91a6e1-ff5c-476c-9f3f-9ae4814fb10c",
        "cursor": {
          "ref": "3ccadc29-38f3-48c7-be53-4964ee3b04c2",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bc1d6be5-b3e3-4223-b2d5-de8f834aa781"
        },
        "item": {
          "id": "8b91a6e1-ff5c-476c-9f3f-9ae4814fb10c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "836d9482-9bec-4909-9620-ac402d299457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce16f849-0465-41e5-a485-e7d7739ecf1e",
        "cursor": {
          "ref": "62ff6992-a7df-40eb-90f6-c8303e0c44a3",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "950273cf-95ed-4432-a911-122f710adb19"
        },
        "item": {
          "id": "ce16f849-0465-41e5-a485-e7d7739ecf1e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "bac15668-67d5-4cb6-bfc7-17255549d538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "405459ee-a7fd-4014-a672-536e7241060c",
        "cursor": {
          "ref": "2093b7c0-4730-4ea7-8431-492fdc8c761d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2874d0b3-461b-4599-8a60-a224213f0893"
        },
        "item": {
          "id": "405459ee-a7fd-4014-a672-536e7241060c",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b63ddcf8-d136-4cca-bb18-d3e0193fd7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff51a2b-1db7-480e-a697-e6b4a3fb5fd8",
        "cursor": {
          "ref": "ca164ca6-f134-445e-a97e-01efb6d0aaef",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "24fef093-82f0-4bcd-a6f8-f011e9093748"
        },
        "item": {
          "id": "9ff51a2b-1db7-480e-a697-e6b4a3fb5fd8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "c5ca75c0-eebe-4954-8b53-cfe9c632cfe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c48a9f-e055-4674-a29e-4ae725fe4fe9",
        "cursor": {
          "ref": "f088ca60-4aae-4faa-be30-b00ab5e9b264",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bc9436fe-8b62-410b-8ab5-825f6894e88c"
        },
        "item": {
          "id": "57c48a9f-e055-4674-a29e-4ae725fe4fe9",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2fa1eaef-b179-49e6-ab5f-9e4494344ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff7e768-f939-4ed2-839b-2303e9dbf068",
        "cursor": {
          "ref": "23ee773e-3adf-4afc-a822-49faa8f37288",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "db1bbe8f-8ce7-4a99-b577-f852444a73ce"
        },
        "item": {
          "id": "7ff7e768-f939-4ed2-839b-2303e9dbf068",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "67deaed1-f32d-44ad-88c0-c5ba00cd0848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e644352-a1e2-43c2-9518-e70153f60119",
        "cursor": {
          "ref": "85f3056c-74b9-4dd2-b72e-4c6aa66fb22c",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5267ebf5-f1d9-42b8-aa5f-ad211d0e1537"
        },
        "item": {
          "id": "5e644352-a1e2-43c2-9518-e70153f60119",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "362a71a4-3b81-4ccb-b497-6bc2aa08391e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0d11cf-273e-4b2e-8bcf-f4297122b5fa",
        "cursor": {
          "ref": "76b6814e-6dde-4309-b182-936a12a9ec59",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9145b486-a3b0-4269-8bfa-4521dd5fd319"
        },
        "item": {
          "id": "9b0d11cf-273e-4b2e-8bcf-f4297122b5fa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "28684f00-38b0-4f90-8c48-8203da314977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3042781-5c38-43d1-bd19-d03a0eb2fa23",
        "cursor": {
          "ref": "b4aceed0-59d9-411e-8383-6648baeb2748",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ae501a3a-a20d-4214-a508-e0380a1e6227"
        },
        "item": {
          "id": "f3042781-5c38-43d1-bd19-d03a0eb2fa23",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "19d56c6f-a93b-4472-ac12-c41cfd27fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97575463-7e54-447e-a838-7c289a244d68",
        "cursor": {
          "ref": "fac7244a-7b34-4f4e-919a-e5f055663e33",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6151eb97-ace1-4201-a0e3-4f3edd6c1ec7"
        },
        "item": {
          "id": "97575463-7e54-447e-a838-7c289a244d68",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f240117f-208f-48d5-ae21-a7db59ad61b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc49ba8-d10c-4eed-bc1f-07514a326c37",
        "cursor": {
          "ref": "d931136d-b951-459c-9ac2-adca3294521b",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a9c1e7ab-cb51-458d-9923-b98f9d894d64"
        },
        "item": {
          "id": "dcc49ba8-d10c-4eed-bc1f-07514a326c37",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b70c7987-863e-4967-a344-f5b83bd88af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e74df6-c6e8-4737-aa20-8f096f5308bb",
        "cursor": {
          "ref": "97ee2041-5981-4fa7-b681-5f9da7be7ef1",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "6537e237-3c7e-4ced-aac3-a9bd137680b9"
        },
        "item": {
          "id": "85e74df6-c6e8-4737-aa20-8f096f5308bb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "796b6b5c-6f07-4f8c-80f8-2f6a9d1fb14d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d4133a-ec70-4f2e-9b86-0363f6c7679f",
        "cursor": {
          "ref": "29721598-1f38-4b31-9ebe-f840fe630f85",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "aa0eda86-694f-481e-ab72-604ab8f3aa58"
        },
        "item": {
          "id": "95d4133a-ec70-4f2e-9b86-0363f6c7679f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3bf54907-b99b-4e74-9807-273476a24a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21512fde-88c8-443e-a15e-ee4e1acc3de5",
        "cursor": {
          "ref": "596afc20-255a-4629-bc21-c46a2c512edc",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f8ebfabc-8175-47d8-af30-d96c413f3752"
        },
        "item": {
          "id": "21512fde-88c8-443e-a15e-ee4e1acc3de5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c3ae553a-fbb7-481e-a1bb-1541eb4f354c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28b1766-f247-4fa5-800d-cd0c6aea7e6e",
        "cursor": {
          "ref": "7f994ef6-2d37-4511-a0a1-c82feaf39384",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1d72305-3fd9-4828-b17a-b0991ec5dc9a"
        },
        "item": {
          "id": "f28b1766-f247-4fa5-800d-cd0c6aea7e6e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f7ae5f55-11de-4523-93e8-3a9371c736f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689ea369-68b3-4b08-a59c-cd407dcccd76",
        "cursor": {
          "ref": "1d0d89fc-cd02-4788-b454-cfe2ab3fc552",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b91b4ba7-f472-495d-ab0e-6ee9dca1e363"
        },
        "item": {
          "id": "689ea369-68b3-4b08-a59c-cd407dcccd76",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "67bd3cac-0031-414c-9241-7f2264509a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bb1116-972d-468f-86ec-e75f3504f433",
        "cursor": {
          "ref": "2df492ee-6737-4e92-b00b-56b3c2777dfc",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8b655f6d-dddb-4d04-9831-aff541d97121"
        },
        "item": {
          "id": "17bb1116-972d-468f-86ec-e75f3504f433",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50eacead-1481-4486-9ca9-5c51a7a286b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0909ae-4379-4980-b44b-d60f68c46abd",
        "cursor": {
          "ref": "2be35291-bce3-447f-8c1f-d673fa8768cb",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e0608461-cc16-44e7-b9c3-9361ffe87183"
        },
        "item": {
          "id": "6d0909ae-4379-4980-b44b-d60f68c46abd",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cba6d7d5-19fd-4940-9ffd-15d4c4605868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17cac73-e1e9-43cc-ba51-16c5397defc2",
        "cursor": {
          "ref": "09ec7856-f116-460c-99c5-eb4041867f92",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "333afa5d-624e-4c2c-a1ae-ad3f423ce9d9"
        },
        "item": {
          "id": "a17cac73-e1e9-43cc-ba51-16c5397defc2",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4322a241-1e6e-44b3-a8fc-8dd5b304ab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56542c1-23b2-41a7-87bb-10e6ca44fabb",
        "cursor": {
          "ref": "1abfb701-639f-452d-9184-65e87591d94b",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a3fb0920-ead2-45cd-a252-8c25f2c66248"
        },
        "item": {
          "id": "c56542c1-23b2-41a7-87bb-10e6ca44fabb",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6c17d43c-b10b-4c2c-a530-7ba083c4f51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97bf2a30-ab58-4b0c-809b-294ebe0e5554",
        "cursor": {
          "ref": "b7c7001a-6a88-4727-8894-ac29c29e84ed",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d2ffbb31-4165-4cae-b66a-0e276aae22e4"
        },
        "item": {
          "id": "97bf2a30-ab58-4b0c-809b-294ebe0e5554",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e0b9942e-bb60-45b3-90c0-a1ac89d4c2a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c2b798-9165-4cbc-bcb2-b5acede1fe45",
        "cursor": {
          "ref": "84905b3d-6bb5-4d79-a916-90d1b76747a2",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d99c2129-f643-43fc-a41d-eb2f52a7d152"
        },
        "item": {
          "id": "e6c2b798-9165-4cbc-bcb2-b5acede1fe45",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "cb7f4613-e8d9-409f-9c0f-362c868ea2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116ea92e-becc-4246-a693-2e009de461e8",
        "cursor": {
          "ref": "d0e65d9f-70b2-4b88-94f6-bc8aeedaff66",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "63a80bc5-3d84-4c16-8a03-ab8932abd801"
        },
        "item": {
          "id": "116ea92e-becc-4246-a693-2e009de461e8",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "179d21ef-75a2-4d97-bc20-035699d885b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "311c591e-9343-4069-8a23-d2dd07f6f9d8",
        "cursor": {
          "ref": "b439127c-1598-42e0-981f-68e5933f1de1",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "32c51634-1b0d-4d60-b3d7-b0dc0f433f10"
        },
        "item": {
          "id": "311c591e-9343-4069-8a23-d2dd07f6f9d8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8942d930-8592-4fe5-8d8a-b444209e047f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d052fd9-e93c-4376-ae9d-5a3f2f7094d6",
        "cursor": {
          "ref": "b8e8293f-4f0f-4630-b49b-f6aa85a5c898",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dda8b108-c2a1-43c7-9d2e-0b81720f9b2d"
        },
        "item": {
          "id": "4d052fd9-e93c-4376-ae9d-5a3f2f7094d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9ab2b0b7-12e2-441f-b94f-6d6a48dd595e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea137c1-984d-40db-a25c-b3f795a94434",
        "cursor": {
          "ref": "c2f5ebdb-7014-485f-90e6-a544c2e4662a",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "334e5d33-6a40-480c-9b60-739223900eec"
        },
        "item": {
          "id": "0ea137c1-984d-40db-a25c-b3f795a94434",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ce84387-5b30-432c-86b1-1c22416cf8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee08a9b5-6449-4673-bd6c-f90db95000c0",
        "cursor": {
          "ref": "f06b0039-13b7-4b04-b9a6-2a61e1f3c8b8",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "f3106c41-e384-4578-bcfd-6d3a66f5e113"
        },
        "item": {
          "id": "ee08a9b5-6449-4673-bd6c-f90db95000c0",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "78402882-7f3c-409c-beb7-faa134f10be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd880fb-60a9-4d00-8d74-5898b1602eb6",
        "cursor": {
          "ref": "04797be1-371f-46fd-a5be-4188b32f5ec4",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2ece7397-b4be-4a2a-9f65-415a7548e673"
        },
        "item": {
          "id": "9fd880fb-60a9-4d00-8d74-5898b1602eb6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "daa0b083-5dbd-4224-a8c6-7ae4be415bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eee0560-f9fb-4d02-ac7f-68022d842097",
        "cursor": {
          "ref": "d48748c6-782a-48c9-a9ab-ac36dd3e20d8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "632020d6-3ba2-4aee-a07a-d76088694dab"
        },
        "item": {
          "id": "8eee0560-f9fb-4d02-ac7f-68022d842097",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c8cca368-ca9d-40e0-969d-a153e8cb2b2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedbb8f4-7bc6-4a80-b7be-941bc6310950",
        "cursor": {
          "ref": "2efe4aaf-f1b1-4179-9a59-60ea1fc26c64",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ac110cfb-9e1a-4563-be82-ef14fca3a989"
        },
        "item": {
          "id": "eedbb8f4-7bc6-4a80-b7be-941bc6310950",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ed4517f7-2021-4808-88b6-ddeed17d17d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbbb7ffd-012b-490f-ba12-10a9d29fe91e",
        "cursor": {
          "ref": "f2080f47-13ac-4b6e-9bdc-2a70f93e512d",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "d1e88d53-19c6-4a28-9efb-27594aa94d04"
        },
        "item": {
          "id": "cbbb7ffd-012b-490f-ba12-10a9d29fe91e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "513c65f4-50a7-4f00-a5ca-0f78d5cda251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa7f9d01-9e61-4de2-8de7-2c5d5cf00e12",
        "cursor": {
          "ref": "a9934dbf-9cd1-4105-84a4-88f499d21f48",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "700e373b-0ba1-4ae5-a502-3db883b9246b"
        },
        "item": {
          "id": "fa7f9d01-9e61-4de2-8de7-2c5d5cf00e12",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1df13c83-5d32-40e0-98a8-bb399f3ddbad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261410f6-012d-4329-b998-3643736d8707",
        "cursor": {
          "ref": "953b3dfe-397a-4e41-854e-7c8eadbeb18a",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "5076344d-ce44-4445-9b2d-5bcefccd9c43"
        },
        "item": {
          "id": "261410f6-012d-4329-b998-3643736d8707",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3977a32b-01bd-4470-b7c3-8f3fa8ceb498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353c036b-aa7f-4b4d-ac46-53320cb4eaae",
        "cursor": {
          "ref": "4f1113b1-f089-467c-9a0f-9538feb5f4a6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "010b1e9a-5ee8-4cde-b03e-233cdb8435cd"
        },
        "item": {
          "id": "353c036b-aa7f-4b4d-ac46-53320cb4eaae",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "cb36240c-e899-487e-8899-7b2b99267a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2c3915-a3fe-4958-8e38-6745c858b014",
        "cursor": {
          "ref": "e9bec940-0d96-4568-aa6d-a26ed5f27546",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "96baae67-cbca-4f48-bc4c-3f5440b93df9"
        },
        "item": {
          "id": "6c2c3915-a3fe-4958-8e38-6745c858b014",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9166c53c-53e6-41c7-813f-503db8582b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f4f3b96-c8f5-4b97-91bd-6f255f2aaf20",
        "cursor": {
          "ref": "51c8e828-5977-4669-ae13-8cb67e15f7fb",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "573d039d-46ff-4a41-845b-706464c4e55b"
        },
        "item": {
          "id": "1f4f3b96-c8f5-4b97-91bd-6f255f2aaf20",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "68339be4-85b6-4909-9dde-091e0ab1bc05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ec58a0-8eff-4c2e-a4ac-1464a0688e75",
        "cursor": {
          "ref": "bb13e7de-af7a-4694-bb9b-d5945e8b2c26",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "51d88963-c1e2-4fd7-8cac-af300bf1cf72"
        },
        "item": {
          "id": "c4ec58a0-8eff-4c2e-a4ac-1464a0688e75",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "24468571-44c6-4161-b00c-7182bb9734ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f818c65-8e4b-4cfd-bb74-d1996491d7aa",
        "cursor": {
          "ref": "f4f1fccc-f9b7-47da-92d5-0b09d3b6c2dc",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f331c741-5597-4507-b350-efe78589ccfe"
        },
        "item": {
          "id": "7f818c65-8e4b-4cfd-bb74-d1996491d7aa",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8cd5fd0b-70cb-4f15-9e30-c953bc086640",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b18cd3-3bc0-40f3-8fd7-0950875e7b21",
        "cursor": {
          "ref": "c3010137-3ff6-4a55-b538-0c64e27b75ec",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "851ceddd-6aa8-4c68-9caf-03037b2ad575"
        },
        "item": {
          "id": "b2b18cd3-3bc0-40f3-8fd7-0950875e7b21",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "84ce97e4-3d60-4fe9-9118-1211d44f2bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5125581-ae99-46e5-974d-c24e4ab7b322",
        "cursor": {
          "ref": "62c2f135-d713-4197-8500-5a3545a5fdfd",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a9080f2e-6032-4154-8a48-5f6c26da035c"
        },
        "item": {
          "id": "c5125581-ae99-46e5-974d-c24e4ab7b322",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2f976fcf-adf3-46db-9278-a78ec282f7cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da44c1e7-c00a-4270-8da5-1aacb972cf17",
        "cursor": {
          "ref": "41a50840-53b5-4d09-8398-74dd8f52a91b",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "4b70a1ad-59f4-4a55-91e1-5e8327e06968"
        },
        "item": {
          "id": "da44c1e7-c00a-4270-8da5-1aacb972cf17",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0ccb5d14-e853-4493-8466-64a38e19bfbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10fa4613-ea91-4802-8b8d-1fd26661b221",
        "cursor": {
          "ref": "ca0d2827-ec4a-4f90-b1d5-2f4d5770ef3a",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4a5ea0b1-8b2a-47e0-89f8-8a383d873935"
        },
        "item": {
          "id": "10fa4613-ea91-4802-8b8d-1fd26661b221",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e3dcc85c-295e-4830-a4d9-d84ac320a796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ba2f0c-4c06-4a2f-8d8c-090d1ada361f",
        "cursor": {
          "ref": "73b5651f-9920-4e3b-9a12-ce487d188c2d",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3dc3db02-a762-493f-9c29-877ca2e1b30c"
        },
        "item": {
          "id": "95ba2f0c-4c06-4a2f-8d8c-090d1ada361f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "91de54be-af63-4634-98a5-115b8b4511b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "d526d759-a3c3-40f8-ad8f-7de51c30e033",
        "cursor": {
          "ref": "188a4d78-924e-4be4-88ce-903a078fae1d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "3dd1273d-3402-4b6d-a385-d5545c98a816"
        },
        "item": {
          "id": "d526d759-a3c3-40f8-ad8f-7de51c30e033",
          "name": "credentials_verify"
        },
        "response": {
          "id": "bbd2ea28-a540-4913-a668-fc22700c19d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "21802ffa-c211-423a-8491-f0029e7d26c3",
        "cursor": {
          "ref": "2900cd26-f6a0-46c2-88e0-354edec796cf",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "fd1312b7-f42b-4af2-9511-5c4ca08e9c99"
        },
        "item": {
          "id": "21802ffa-c211-423a-8491-f0029e7d26c3",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a6e11408-296d-4859-bbbb-d3abf1b3f77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "fccd9b36-591a-4443-be5e-d7e3708378a1",
        "cursor": {
          "ref": "48c97409-e29c-4046-9fef-075f0134d7ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "911efff2-458c-4fc8-87c0-effd0c0647cd"
        },
        "item": {
          "id": "fccd9b36-591a-4443-be5e-d7e3708378a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "15ef83cd-8883-4e5b-9268-311e5fd05a86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fccd9b36-591a-4443-be5e-d7e3708378a1",
        "cursor": {
          "ref": "48c97409-e29c-4046-9fef-075f0134d7ca",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "911efff2-458c-4fc8-87c0-effd0c0647cd"
        },
        "item": {
          "id": "fccd9b36-591a-4443-be5e-d7e3708378a1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "15ef83cd-8883-4e5b-9268-311e5fd05a86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fecb20-e04c-42ca-a9b6-4364eb0057b9",
        "cursor": {
          "ref": "1b102e71-c79f-471e-8787-aae0687c84cc",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "297c639f-95cf-4742-8606-50aba5e2c6d1"
        },
        "item": {
          "id": "d1fecb20-e04c-42ca-a9b6-4364eb0057b9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5f2c475b-a00d-4574-9827-9a7660c5a4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59c72a4-d6a7-4e20-b69c-f8450c766a97",
        "cursor": {
          "ref": "f11b7ba8-71af-46c7-aefb-bf70aa0bc85f",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "72786db7-98cb-4d9b-85d9-963e85c076a6"
        },
        "item": {
          "id": "a59c72a4-d6a7-4e20-b69c-f8450c766a97",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "880a8ef6-8e0c-440a-b6ac-99519ac68dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}