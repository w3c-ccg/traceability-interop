{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d21653b0-ee50-4e2a-a7ad-a9ce242e8661",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b8039e6c-a3b2-47ac-945a-f8f8d5d9652f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84c26636-e6b6-4f9d-a89f-690caa306286",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a06bce8a-fc40-44db-8ac1-f445d7e0af2d"
                }
              }
            ]
          },
          {
            "id": "ce444518-54f1-43cc-8575-004a0eff763e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "49e36c88-11f7-406e-a9c9-c3e1afcc4abf",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "54aabc87-c71e-41f7-abf5-fef10d3bfac2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b48f174a-7261-4ac5-ade9-5689869997ba",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "710e6114-4467-42c5-a451-804c73e0c0bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "52c401a2-2ef2-462c-b198-6d77589efd5d",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "144dc8df-0418-44d8-97e3-d2f681686e23",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9738e912-9331-412d-8f6b-cdac90a638c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe42ce7f-e3ff-4f54-9c1f-a07dd145907c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fac75469-bd6a-4d76-b260-c2c2e533013e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "27b81544-49aa-4cdd-9108-3c20f93f9490",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8cd2492-98db-4ab0-bcab-55c9b2615824"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2fdc3400-513a-495a-b2d9-5152b16faf65",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "78d17c28-bb61-4327-ba82-aca70a644ee3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "be15184a-16b1-4f89-a299-fd40e2b5bbc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10613bf5-72c1-4a27-baaf-3226331293d4"
            }
          }
        ]
      },
      {
        "id": "c26ab2b2-cdcb-4b7f-af14-a3b282469319",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "38cb25b6-0f14-4901-a183-7ba233496739",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a281871-350f-4dcb-b3b7-91e3204f3547",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d03f2711-56b1-44e2-b25e-e28c7afb16d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b65a4f65-8cb3-49ac-b433-ac06fbe97607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c3ee0eb5-9dc5-489c-a3e7-9b9c2e6b3277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a814b03b-f6b0-4630-a351-dfc53da70e46",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89479cf7-d936-41c4-be02-9e7e55f743b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47e7ffe8-5816-4d09-8368-61a1bcb871c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dac99ab-5b04-4da6-a510-3319b5ded6d7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfcaeab-b6e9-4c65-9ef2-13ad99c0dc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "42b80c2b-c722-46e2-8d22-f25bf0faa25c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "19a06373-e69f-445d-857f-2ca057c9108c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3f4fd318-9d3e-4ae5-8d7f-bb3c3c46f2d3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bcf29b-5ea3-49d6-a19e-ffd4e01060dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e15efae1-ba33-4d19-8cc1-a3f919e0ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bd82e2-dd90-41ed-8270-43edae21fbe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217434ff-166e-4ede-a263-e20a829ba86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850450af-ce16-4afa-a04a-66262490b8b1",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb38e1c-1232-420d-854b-5a410b86c3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8ce8b50e-5621-475a-8618-b056be152f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813d5306-e2a8-4e5f-acce-461ebe855968",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "e377a705-657a-4895-b04c-a7860361df87"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2e032367-44f3-46c6-94ff-635d9179d9ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3b1d81ba-5c72-4bcb-bc82-551f56b1f2be",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d05145a8-fc19-43dc-8eaa-bba749aa85c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "98b10ced-0f40-464a-982c-ab46e1c25b65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08a6fd1d-77a3-46fc-97f4-4150ec78bd55",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "3503885e-a795-4e97-b1a0-193a3fdf0774"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61d0d7f3-b589-46c5-aaae-bd013f9756d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5880c4b6-f40a-48fa-8a74-c449976fa4bc"
            }
          }
        ]
      },
      {
        "id": "8afe3d1a-40a1-4622-b408-0ed59bf9a91c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "d33653f5-a93a-4a86-bdd4-1a41c701a3ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dfefd86-80e7-4f65-838c-927cc9019931",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d92bf1d2-b15a-4d22-936a-053df6e4cff9",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2038a22-c46f-4ad8-9558-66c1fb832936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1c1f45-7338-4752-a477-4474a0ca78b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f6bd483-1452-480b-b7b5-c44f2654fd4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bae49b33-f046-4151-b05d-c01a95523da4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6a4076-2a58-4b28-a2c1-db4009ce1982",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfbe833-c1b9-4c7e-bd40-5362e39b95d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4081180d-7d01-4618-a172-4c6d153865e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64f40df3-fba2-46bb-b5c3-f8bb05902ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f8cd1bc-6f6e-4d64-b13e-01d1ef2066e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76fe75e7-0c31-47d5-99f3-7339bc435ead",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e432c4b4-e8f5-46ef-a2a4-294d72f3e452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01490904-5848-4f57-949a-c84aee96be12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3db81fe-f3e6-4757-b21f-e8f51f6b0ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85396cbd-9f24-44ea-a418-eda98f3b5cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20da1eab-9487-4cc8-92e1-560346015cbe",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54eb5c4-18b1-44cb-8ac4-bb712ca6b719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eecef43e-c13e-44d1-981e-9bda20b59031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346ce896-1d7c-43b5-befc-661246836015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "babde601-27a4-485c-8196-e311e27cf247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3496e0ac-e040-41d9-a64f-fbe7f9ae3631",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d71acdc8-cb56-485c-a640-7df75db4b0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ca9da5-31ff-4d22-9b25-f50b5a2bdd48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f69a7b-2cad-422e-a97b-95849bc3a2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3e94471-bc6d-4628-86a7-aa5cdccd3e82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2157959-1e2e-43d3-8515-de189122703b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41c4b0a-cf80-4387-be6a-82e5730b55ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57ed8c50-62dc-4abb-99e2-0044ae63045b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42dd9b0-884a-4e5f-9eea-622b1755ed2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec1d48ea-f581-4c28-b66b-b8d04c3b9b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccddf0ce-1afe-492f-ad7f-daaa0cea6b3e",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f83709-2a61-4a32-a2bb-f718186cf6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45bb6cc3-3378-4a76-9bc0-ba413a5b6f3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e94e4e1-b595-4979-918a-455e47e9e130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16a2f016-2a38-4672-96fc-212740567871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc24f79-91d6-473a-b806-81294555c09e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479b7c1d-6b40-4d6e-8643-d7d0d056b7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ec159d-de6e-4661-9c94-ec45bdc45b35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2ec24e-4239-4d88-abb3-de421ce73305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c75a63d-68a3-4627-9c3c-2e19c95a5c6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb29e1a9-4a8a-447a-b47f-d635caedff6a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9fd308-e1e2-413f-921f-4c696f4e818c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851ae9e2-3930-4a06-ba46-407a616c3033"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4502f619-f307-4ed1-ae68-fdfa8593e206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "051a4aa4-39b9-463e-b3d9-22e2def413fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23305922-6ffd-4e4a-8e67-fc1179ebc667",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4127fe96-0eb8-49af-baeb-bf16455f1cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00bf6c1-6d69-4050-8381-5d66b7e81488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2773447f-7b52-4ddb-a58c-ed066f1d9dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3eac7518-f258-4f6c-8f21-aaeac5490ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cab7bb3-6135-4305-8b6d-1c6263698631",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8d611d-d454-42f9-907d-e054836f5574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3fb6c42-2f8d-4ff8-8c67-4641ab1aa732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615f6b42-e0c9-4df9-9346-cdc1c19d9686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c9567c6-ebc5-4dcc-972a-fa65eab3b988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71057a91-fd41-46e1-b689-53a3009675a7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ce3ab4-65d2-4fdf-b517-f1653c33dec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59d96a4-48de-43ed-a13c-cdadfbc8c786"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad57707-7a05-4daa-974f-bf039a2fc349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82f35490-8334-420f-8a5e-f11d8f86e1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f1e766b-aeae-4f60-8cd9-40427e9867c9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58171760-c92e-4a1c-a0c6-41e90b13fa4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09b671fa-6f0b-4d4c-9ce3-784ca6a483f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "390bde65-99ee-4c94-b968-df06a531753b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36b2c57c-9958-4496-88ba-78ebb86e3381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b33abc6a-aa3d-4abf-8413-a5509558df4c",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "855556c0-b7bd-4365-b7cc-6e5b17bc96ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd00ee5-b872-449e-a6da-3cbaf81278ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17c2ed1e-ec71-4cf2-b704-b71025f6568b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "44cf1b4d-5e02-49ea-bc7c-eb02b058d010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417d9ca8-20d8-41fe-a91a-3d6f81aa7df3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb77163-e2cd-47b9-a6a4-c0949fd559e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da761af-bf4c-4545-9b45-f0739e71290d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e329c0-d446-4b98-a114-3132629945d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df8cf937-44f5-4b8a-96a2-75d96ae67d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edeedf91-fce1-46d7-b895-47c3f5a8c2e9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7a71c5-1420-4400-b5e1-267b3fea8f34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e098bd-87b3-4f5d-95ca-34db2513994a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0496ed-0fc8-4d2b-b372-1cd1acaa1cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407e2799-c6fd-4fc4-bf0c-6c47da4c70b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8bba33-8aa2-45ac-b5aa-63c9439e859e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12194ea-939f-4bc1-85ac-7540d21be924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93654ab7-95e5-47de-b75f-1c24e61b4d78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dada94d-1f17-4d36-8936-023d26fd1a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75d7fb32-219a-47bc-9dd5-905cdac3c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d52f273-e9bc-43a0-a74f-f65f3b94684c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f99f7e-d240-4e95-89de-2935cd3c4932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427f388f-0b0c-4592-b5fc-e0f3b77852a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a82006d-e61c-491c-9048-b80fcb57c7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "473a9d15-84b4-44be-89cc-ce00ffd62c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120feb8d-bc8e-418c-92be-68cbe1a51841",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "befbfdef-c07d-4ad3-a492-a0d251ac128b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b3d78d-6840-4c81-ae08-17f9d0b5b505"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae1223e-6787-4145-ad2f-86f8317b59a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc560156-dbd5-4fe1-b566-2869efc9c267"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435ce48b-ca94-45cd-b77d-f5e8b8d5cb31",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa0b59c-81eb-43c9-a508-b3e3fc63aae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "694e8df4-0086-4123-a280-aa5d8de195b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e58c521-a20c-4adb-8eca-07cd7e3cb78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e99493f4-2d86-429e-8981-4c50a6aac902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52172a4f-3d29-4653-ab12-1aa3d764bff5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "902fbf67-4809-499a-b053-b75670bb5265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a3a65ff-7cae-4cb6-b2d2-0497704db441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b1d163-aa29-41ae-a5ef-464ff5dbb4fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c919678-6cb7-487f-81f1-0e8c8456fb23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d579ccff-220e-4365-aaec-6471311bc1dd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bc2ef5-7822-4b60-a620-2d57997100db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8893f9ce-a42e-4b24-858e-c76d536c5c3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9497c2ae-1a2c-4a6d-8338-f5e1eeabdc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16d13464-db09-4d83-bd18-60c1ab94d25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ebb46d-5df5-4c9b-8cc7-60be34fa0232",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a085b2fa-5ff0-4967-94dd-4d7a9a8c6001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f716517f-3639-4f75-bcb4-b43d3d2a67ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bd3f77-75a4-4de2-904e-c6cffa9fbb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "055d037d-fdac-439b-8bd1-da614a195b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4f3a4b-17bd-4c89-b58e-1d1296446b82",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db24b36-424f-4ba0-b4c7-fd497950f42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af32753-85ef-4d98-8a67-87a3183e0df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4074def7-cddb-44e9-a808-c927aee319bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3042b890-e8ef-462e-b9f3-401a05c406c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7453063-9921-4f35-94d2-924dc373a6a5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e33304-550f-4be3-996a-77f4966a8933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a8a184-0981-41eb-bcf5-cb20bc8458a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d38930-a86d-480e-b4bc-c80fd3b1b605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c6fa85-309e-4c0d-a947-0c8723093424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8259af70-ca84-4a4c-bf7c-fa99e0067bbb",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48bbd76a-eabe-4f56-aebf-0022b6b1ecb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e24e34b1-48b0-4530-b4ca-c6884379a673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae275afe-5f6a-429e-a30e-66226932c6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "34731c22-ae1f-4543-817a-3520850d5765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85916806-3d99-48e7-9d6e-50d1e02d026b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecac39bb-0fbf-4c21-8467-3f14a5f575b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdd54fc-0ac5-4f76-8e32-ab1a256f4f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54b9de9e-d257-4956-a06e-5285b60d37ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "410b33ca-f9c0-49ef-91af-90a801a7be15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fc1f6c3-2485-445c-909a-b8b43ae8aec7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54b5f2a-d3b5-4fdc-8411-69963630efdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78cbd68b-1313-43a6-8960-0a2679edadff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364c0ff3-7207-4dd1-a857-6594df66b11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c84bfd72-86e9-48d4-a5a7-a04f7289d523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad7e55b-5e24-4dff-9b97-6468c1687cd9",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91467766-3b8e-49a4-b243-0c34c8734845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe58c2c-9de1-4af1-b189-a712d3db2f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "798ff853-a0d9-43cd-bef3-d3d1796b862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f86a318d-9b89-4757-99a9-635e11fdc0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c0c3a7-4612-49a1-a1d6-38bd8972bb5c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb86a17f-4846-4ce8-8287-797b8dfcdd7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d26e1ec1-fdb9-45b4-88ed-7c57d4131eca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7a196b-5b0b-4fb7-8be3-bf2af41e61d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c02c2b3c-b3d5-4166-b814-e93c3554c9ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc7b444-7480-42d8-a2cf-ed1bfd395770",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "366ef513-0f42-43d9-a12a-d087c5ced75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4553dc79-94f3-4e94-b461-2907ae2b3630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2054ac-3a35-483c-9c7a-a6e37a3e3aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7489bf8-5121-4ea9-8c33-e468b60eff39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aa21806-7249-499a-aa6d-9fd555bdb4d6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ba583-f487-42c8-b652-e1e69ce6c5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0605f8c-d5d2-4cc4-ba40-ad5aefa0d78c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e448cfc-f60f-461f-9635-a661f242659d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c4a5c1-04ca-4271-b762-976ba931ca15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d19ceb-7b59-408b-b008-15a0e026bc99",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6c420d-80d0-4d9e-9150-cdc0d0d22508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d298df-bddb-4002-9a51-2e8a6eb0d25f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c788a46-264a-45b3-bc34-550503e3b336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c88cb99f-c200-4af6-8afb-71d998cc3507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1548bffa-b759-4d0d-bfdf-43fad454d752",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25fc538-700a-4d69-bd0f-28beb9f7b840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17605a88-d09d-45e3-bb1c-82cea93c933f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7672bee-bf96-4d74-908b-f81be5f7a238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4146b09f-988d-4a4e-82fa-db5b0d530643"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0302fa4f-2095-4a06-934e-1ad614ad3a7f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a3fdab0-c866-4874-a41e-14dbe3d1c6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a79a6be-cae7-4e41-9e46-dca7a7622957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38d5d35-92dd-45c6-8657-f68d4a949387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d3db7f9-a8eb-4455-a45c-e901d3429ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62927855-3c0b-4a7b-984d-f03b583a4394",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae1c0ad-bbc2-41d3-a356-0c8f82f632b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec118cb-d0a9-40ab-a390-7d402b83338a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4f82a8-a02b-4b25-8f88-da5eaf6a1503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38d1d9c6-5ae5-440b-82d2-e78badc3462f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4049ad-d873-4467-b3d3-7f81bc8334bd",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0befcf3-3e6c-4172-bc8b-88a1e26da9d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abe10bc8-e21e-4900-8430-152b452e02b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331b1eff-ea0b-4b9b-bbdf-e2b91890a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "feff2f96-6272-4493-83e7-8360c625defe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "482b0173-fdb0-48d5-b272-f9ec4f60afdd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1467cb0e-3934-4d90-a8af-5a8ee91b79b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4de84794-763f-4737-b5e3-276e92016267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9973542-74c3-4364-b79c-e7a107f2620f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d4b9fc8-5b10-42a7-acf9-1ca7bc2206aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0a3ba0-898a-4b47-a382-9fdff3807a87",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cfe8be-f824-4d56-a8f9-8976772a0919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5a09cc-ed7a-41c9-8168-0f5dff960611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "192a97cb-3fb3-4354-ae42-8061d472a29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62231e78-02d8-4580-80b7-8cc5cbb39b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9200f1-5b30-4f75-8e0b-23ea655ee299",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edbefa0-c48f-4ce5-8f86-7223e6c70162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f15b019-19af-4d4a-94ba-47dc31f1c9cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb0562c-ea7c-4bbd-8101-8a027df0915f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "78764fab-0423-4d39-917d-57180741798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e6568c-7862-4a1a-b924-d46fccc0938a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86eb32c1-cbbf-487b-8e6e-5ea90a77eb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0d67b4-431b-4eca-983e-0eb63f792b39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca985cb-78d8-4270-870b-24c4e722099a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8621c3-dfd0-4dc2-9369-5978cb9a68d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43d3863-f6bb-4dfe-b832-19f1a290bd71",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd07645-8efe-4c7a-89d5-6a81970bde7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e0328f7-ece9-4a67-b211-13868c337eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3a85f4-ddbb-41c7-84e2-6949444aab3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af722da1-3591-434e-9516-cfb06fc98129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d06ee270-c82c-4baf-83e3-1d1e9baa72b9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88ea5722-03c9-4cbb-afd6-48dd2844ccb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86c60fff-91b2-440d-972a-a1d04f68f03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768e7683-d140-4ee4-84f7-c5880f34b23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a1f30b-15b8-4c83-96a3-8e39bb7bf8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c314538-db04-47cc-95e9-42df66126559",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724ef413-af9c-4fbf-9f4e-18057c8375b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0238a68f-d41c-4509-a1b2-480cfeb2a571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77adb0ed-7ec7-498a-9f88-2087ea40f6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4884e453-365a-4fae-a056-4328b776fd31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfa5d06-b622-4863-bc79-449539e222d1",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28b598f-ca9c-40c4-96d4-e9c0b106aa67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ce1c56-fd37-472a-9382-d4424d9eb2fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dec88ba-787a-4873-b2e7-af15a85993b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "38b5654d-e8f6-4d23-9e2b-67c65e564090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a7d9a9-0856-4b8d-9417-ac28fb592488",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "692b9347-6c5b-4b8d-b425-346784177e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135e5b30-7cd0-4a9a-a82f-58863e2d24f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf21b1b3-5a49-42e2-9908-fc15605128bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0abae3a5-727d-483a-ae97-ffa3a660fff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64fd77e2-ac76-41a6-85c2-eff6a66f59e7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092a0ec9-7f53-4f5c-9eda-230edfdac814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631f48f6-1256-4ee6-9321-3f0a9fc784af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f35888-8b24-46c9-acba-cc1ab830d3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf8e6a6-2d67-4c9f-ac0b-67c88f6fe35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c41eb8-4bfe-46fb-acf7-514cd157d421",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94677103-0979-499c-b770-78c6e0672fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c8d09d-8c1f-4c18-a602-9c7c3fa7eb78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8304f66-fbd4-43f4-b53c-62d5936c4991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4fa3ae0-ce37-44b5-900d-ee64f438bc1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70437e3-b859-4ba3-af3b-9ef0f1ce0259",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa9d4d9c-5883-4796-9cc7-2ed1e1769f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6e2bde-081e-4419-a2e6-2ff64051f6c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21415ff1-8bd7-40f7-8790-09275bb601ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8408aa1-76a2-4ab9-a31e-b0a41e315e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432489dd-12df-4729-b540-b04ffdd4f62e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b95cc0-36e0-4604-8834-25e73c04af1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94c06eae-5c33-4db6-9f09-a302061dd94a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af2839b-dbff-476f-811c-ef50231235aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d5bf370-a0d6-4b88-96fb-600e3a44ed14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59176406-2593-49de-a7a7-a50ac61a1150",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a94adbce-467c-4b1a-ada3-c9d60393fcb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d62384-5dec-4c13-a18f-eddb6b126c39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e396cc8-a38b-4441-9998-142569d95fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc6c4c1c-6727-43a0-b594-4bb527e389dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97cd712-3d26-4e72-b3b6-b9bd42d578cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7206e01a-9101-4ec0-a19c-9daf9da8a024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb46e48-4545-45be-a469-e54cf5b9a4b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb1e5be-f783-4632-8ef9-1264a04dba79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebe9a736-750f-444a-ae85-9266958ae1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1557e84d-3d79-4051-82e1-d88a2e115750",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc77b182-115f-4c15-9dd8-5f7926c1d370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59335c6c-0692-4027-9180-4a7ffcac5f25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e8b49d-83a8-4832-8bca-fc3b32c96df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d2d5d21-eb07-4f58-8c39-767d38744289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b1f21d-9b9e-438f-b526-8d6eb3352436",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c031bf99-95c4-47aa-97a5-68b3b876083c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10719fd5-5ea7-4302-9dd3-20213798ae94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da66f0d2-9185-4306-8224-48292b295496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e664a30e-e1e1-497f-908e-f8ca8269bda6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590677b5-46f5-4a5c-a5db-6f19ba992c8f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07c1f0fa-7b06-426c-84b7-6445fb41124e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbdf462-e0d2-4e36-8849-a8f84af76076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d414dcd-30e7-4737-b6e1-a98105d88792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8244e24-92b1-465a-9b47-f8f1a7b8b41f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571bf6af-fdb3-4590-b99d-b26dec5b745b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50edfb1f-8df7-4eae-85df-a2d71a10c13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb6b36c0-a58e-42a8-a16d-b5bc8582933b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c4919f-dad9-4a5d-8506-221f86a8de7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "10b54836-52f7-4bd6-8548-d0da3cf12ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ef0486-8699-498a-8c9b-cca8b6556ae4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57b416d-a839-4977-ac2f-b1d32ac2fb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b713c3d5-2e92-4b02-b4d9-1ca866924246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3779de35-9697-4f6c-83bb-4a7d85067c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8af421e6-7a25-4127-a00d-8d1a5cccf8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6e97f7-ea22-4d94-bca2-9064f89c8068",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d6b540-4f3e-4957-8caa-967ce62f7793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cec1103-8bcd-4130-915f-a290ebfd7dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd064232-85a7-4b89-b2ee-35fa19bce9d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8bce3f3f-0e75-4913-bbb5-2f5774a56237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5504c4bf-cae4-49a6-87f7-b31b23cbba0d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2fb98-136f-4e8d-a2af-7da84fd088ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7c4cc0c-a331-47b3-bea6-3c5bde6ccfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9402717a-80e9-4dec-8dfb-4a15b32a072d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e386af04-1af4-4851-a515-4519681757ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc45047-8968-416e-9344-c8a82e9062c2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2733e4e4-3d2e-4724-93b9-03e5d3b893bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d7701f8-d66f-402d-9abd-382aca675c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b033353d-f1a2-4028-8ac5-00d26967f1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "567f1f84-36ee-4f56-90e9-5f2149cf8655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9739263a-dcab-4cc0-8b1c-8dcb298d7f81",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5457575f-d1fc-45fd-a3f6-fd39891053c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edabf36f-c20c-4cc5-851f-0609a53102e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a092175-0823-4fc6-bd46-61455747aacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fb93fe0a-799f-42c3-af44-d9b020442734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9dee013-cf73-4658-9c67-2c2f494de934",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ca24f6-5c97-472f-ab89-9158c84495bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f7db977-d450-406b-84d4-c57d575bb6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0211b6f-7e29-407d-a7ac-06fe7da2d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "78555f70-35d6-4df1-938e-39b9318c9d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2394c256-2e67-4c87-88c4-f06f7bfd6905",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ee2ed3-06ad-4cf4-a869-b3025ce174cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2871fa-c2e0-4710-a8f4-4a52373c5522"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dde9580-4fda-4f75-a16f-86b729963723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d0ead65-200b-445d-ab54-a9569260cb8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb79f0c-13a5-44d5-b6be-fe13d9c29530",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0620f04d-85e6-4767-bed7-0f9a9a5379bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e07d9c-b424-42eb-a4a1-151daa5550c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b268f98-ee23-4005-b8f9-7a7ecfebe47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "86478e13-4d2e-49d2-a48f-4be05548817d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8dcc13-e6ee-47ef-8a94-8fc47dd8036a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83401fcf-e4d8-4a3f-93be-b5a2f6381396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db69393-552a-4206-8ed1-9baa13124199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2334f5c-34b1-4712-8659-ff2d22828cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "2944a505-f643-42eb-960e-53b336e4e0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd936d4f-bf95-4bdf-84c8-66939f267f3e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ce072e-b24c-4fa1-ae35-868d905000ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ecf77c-5915-4cf7-9e0d-c0be8ba313e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cdb6cb-fb47-44bc-aec8-6a97b15180a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a455f6f-6049-41e8-9ea0-9c243f05545f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0600c47-0598-4118-85ff-dc56e9a595e6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98f5956-33e5-4495-b378-df9cfb5c80c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2459497-70a8-4e42-b980-9624ccaa5560"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "911141db-e3c8-4499-bd24-c55a6e42316c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdec0d88-a53f-4ca1-b31f-19588b043724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33bd0808-060a-4b54-ba01-d33430ad8568",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cf274e5-c207-4b06-8c80-3b84da95e594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a32b7ac-914c-4508-b495-577d67fd128d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50db8825-8c7e-4d71-a7c8-80dfde0fc2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a69b04b-c0b1-48d4-a36a-a054d0615362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463c6fc7-c984-43ee-a313-c371f37ce658",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85d65b0-49e5-48c1-9aac-ac21831002fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656460d3-ae7a-466f-9296-b6a350426021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7823640a-f360-4610-b824-ea3a96376095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0fbd3-f0c5-4e91-92b4-f55bccb30a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256beeb3-bffc-40d1-8f41-f33b982a3c3e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0ed426-019b-477d-96b3-da8389a66e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba34c61-66eb-4dd0-854b-ae12b516e36f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddba3660-5f85-41e1-bc9d-f06172c90d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "505bcddb-8b8d-4508-a48c-2445ff07e1a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a91b14-0aab-4969-ba12-fe03293377a5",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1233f21-2c88-4b35-bb19-a72a98ce5552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1312d9e5-5586-4837-9493-bf9aeb0d5857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af7374-1914-4257-88f6-60927500c6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0368ce6a-bcd1-4024-b4f7-bdfb73086451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b135cc-4c81-4e70-aa2e-7ae3e168887b",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bc4708-050a-4c42-8fde-f3c0494bfd80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c165d39c-087e-4a6e-9581-f461b0d49129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadfc4aa-17f6-432d-b8ea-4c912e150f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8140738e-f24a-4aac-846c-60355fb64da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6d7a81-4fcb-4f07-9e67-99e87a567b7d",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81b54226-df61-4443-8004-0863c61acece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4e4c2a-b321-4279-b35d-2796eefbcf5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b36046-54c5-49cf-af37-5d92d753ab61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "47b2e4d7-ea50-4554-abfc-0ebdea4a05fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4c0db9-e477-4037-9205-f9c91bffc93b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad4e3c7-2fbd-45fe-8873-f67d05928ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d2bbd56-7618-47f2-9d21-ea63523b18c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a717da20-b7c7-4d62-a3dc-d1b685339d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63e35886-7226-4ecd-abaf-89ed13c1b7b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "889769c8-d446-4ff7-bc2a-0e785eced1b9",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8439d2-b035-417c-970e-9e7958469b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d17a1ad-a3ae-44d5-9635-8647d00f7d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65627a0-35bf-45e1-b0f4-dd02bf292c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38442d30-5bbf-4e06-8320-6f752383cbbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a097eae8-8965-4576-8af6-2b9e60caf2bb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8624c0-a6a1-4185-a495-df791c654389",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dc1fbe-ba8b-4c13-8eda-083d7f2922b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39d6dd1-c0a1-4415-a74d-d960bccc2196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "92bf7362-22fb-4d2e-b089-741c61bf5b14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066d541c-c00f-4d9e-9c31-09b7dad0f85e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a2fe914-fbca-44cd-85b2-542486cc86f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79903bb3-7a5a-440d-9e8b-dadcbf1034a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7fe43d-963b-43c7-b794-aa79dec9e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "75194c39-582e-4d96-b348-415e9d5f8216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1b3ecd-ced2-4099-8821-8380ef1a3e05",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97894edb-1952-45d7-a046-45e49aca3dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bef2c02-f4d4-4108-bf13-2a748e22100f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d40a21ac-5899-41d0-b8c9-1bf11be15533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3083ee2-7293-40b9-a36d-3c4ad886f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfcef11-f767-4f19-b590-28704cbf51e9",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5f719b-6af8-40cd-8492-3f2064f324e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775678a3-66da-4009-9fa4-79e86c9a6817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3dbe364-27ef-4caa-b298-461fabd827bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "daab04f1-14e8-4bbf-b46e-f6b8bde91ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed4593-a277-4b1d-a4d7-a68d16c5a694",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4032076-08a5-4857-9922-b5705004bcd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3abcd024-2d03-40fd-b890-a2bbb0a5be06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75088a0-9037-4767-b3a2-cd0d0cb97461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a781227a-211c-41f8-8c78-d6574def14df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e37dcc6-584b-4b40-a062-b05c501f0e12",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f2eae8-fc7b-41c7-a2f2-fd753eea07c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da69eb5d-1973-49ac-8142-8a4a80f69593"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04a1996-93a8-43d8-b72e-1449d8a3364f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1f30a62-aadf-4147-9c91-cd5393574961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8affbb-609c-48ce-b168-179a442c17ed",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f57ae4-b346-4616-91f3-126506ed0780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe9f41b-b3e0-4b00-96a0-9f82401faff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dafb0a-4cb1-4c5f-9c9a-797eee629a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2ebab805-704c-4f3e-a708-9459f9a98026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c30425-0e45-4bb5-b052-bfe0a4654078",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77dcd005-c609-4cc1-8631-e35d95b69173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6227304e-2875-47aa-b580-9feb68b33258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9159cb-d733-4ec6-9d0e-53643b9381ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb92e1b-3d99-4768-93a3-cbe859179263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a0bf7f-9177-40e0-9ef4-59c57f8a6a67",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360d09fd-1a42-40a8-8f40-7817d5459b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360dfe0c-eb36-43f1-9ef5-66adc92582f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39c702a-636b-4627-851a-edb4cffc9790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcd5544-0b4e-4425-b1e8-00740b9bd5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bf4191-21cd-4934-b358-013c6583e1c7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a211d34-4079-4587-9faa-81bebb948fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0453bb40-a0d0-43c1-add4-1ed4fa4a2e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d4a72c-df06-44f9-9684-8ff60d198f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e7ad93-79a5-4356-9027-43dbe1a44100"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8f1011f-7728-47f7-afd4-990dd052abd1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e505a912-fbda-4410-b082-c179bfb3de5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d332ad46-3bee-4708-81d3-fbf17a4f2a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0b7043-8e98-44fa-a5e8-a8080e0a297d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eedcfa4b-5eec-4175-a1d1-aa11b3ac3f3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cc6079-4e6a-4c56-98b5-f9adb19bce54",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a1fcd4-3d07-46e5-89b5-cb42ac88d2c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e795859-bca2-4b1e-b997-7cbcc001699d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b475b05-a6a3-4b76-9ec4-e493af63ca01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d64f13-a793-41bb-b2ff-5d7d690e1a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f63c958-ae54-4315-97d0-737176fff20b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb517920-01c4-4793-816c-081a7abb10ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c1259b-a46e-444d-a54a-f4cdd634136e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb090b42-8091-4b0b-aff6-4a3258c0f084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "41d23053-f6c5-447f-b680-d69f6f5fa51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a163dd0-67bc-43ad-ba62-609e3c84f412",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64be398-7c99-4426-9bb5-3519901b0743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782e7fb1-4103-46fc-a3f4-986f911bd1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b29060-9db7-4e7d-b05a-e87ee344c453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb799c4-5c5e-4369-921d-a38b637c1fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f735ae0-e5b7-4f93-9729-d5621c28054e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b03d471-515b-40c6-8f08-cd95ec3e870d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3b33326-353b-4f17-9d63-f4b842e553bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4b63f3-f198-422f-801e-df06b75e282d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "62becba4-af6f-4f46-8bb4-d939c1461977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2912c82-442c-4e8b-b843-abdd6224eef2",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24af7871-c348-497c-a845-d363dd320c43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba440d3-5a81-45cb-8c27-258f41eb7b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "760578ad-e9d2-42e6-aecd-a6ac28324dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff134d8-1c9c-46df-b703-1909266b29f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c335d2ce-d14d-4146-9165-d2a1b86b38f9",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639dc3cd-80a8-40d5-a662-6fcd644c2a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58542e08-6872-46b1-b8e6-959bb6cb42dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e36950-3fd6-4b3c-8b7b-5176351bb917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3691fba-119d-4835-949a-9b232f25d055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ef931-edf7-439c-8dfd-470a61456f90",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16fbc14-5905-41e4-86d3-f7d80c62b724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a6d68bb-d66c-422f-8c30-0935f283467a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d1e920-5952-41e3-bc4d-b5efd02f31d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "97429e12-48a3-4eef-94ca-627dd200774b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25722277-c67e-47f3-8353-527fbf049b82",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f62a64-8373-4e8b-a7c0-384d2ccd8494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "7667f265-e647-4902-9e21-9fab462dff57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62117455-7f4e-42da-81ce-4cdfa016eb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cbd78de-6b7f-46b6-a8a5-0f4d724df8b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "febaa0c8-7dba-4def-9082-5a23108a1abc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2068cdd9-a988-452f-a36c-8e50659e87f5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30af1025-83f9-42c1-a234-e7d252d7443e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fadeb725-027e-4e8a-a4b3-1c0f238da967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7006e8-3bc6-466d-ace9-a6d2d8b529b4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "0b18e5a4-e4d5-48b5-8f2a-d47c92d6a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b58c3f-555c-4ba1-965f-a9a625f477d4",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e03bee-3daf-4350-8f59-617d38e57900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48b51674-9591-4d85-8198-991234f446e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d292eb4-fe10-45aa-a9aa-ed58ff87b2cf",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "af436267-77dc-4aac-8b90-9b59bb4629f0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77c4d819-8dac-4d42-8545-1529dd6463f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4736f224-51e8-4c6f-92ea-6c13bf30dfa5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b2d5f85-408b-4d56-850d-6c7b90a08358",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "107b7974-0605-4b4c-b690-7104d0172802"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d057b40-313a-4066-920e-0b928dd730ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "984f423f-dab0-42e5-bb78-39f99c5e2a3f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "49e19dcc-53dd-4554-8b47-87d150d77513",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "22028bc7-442a-4a05-a235-80cc573e8544"
                }
              }
            ]
          },
          {
            "id": "8f0c52eb-e363-4209-873a-a284e0d0003f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ae4da0e-fabf-46e7-a257-1585fa1b8a20",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "43a381e6-61d8-492d-94bc-9e78e56b00e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1cf8bc9f-6543-4734-9280-e71d37a94ea2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "773e9a83-a6c2-4004-9a70-95b2bf1ca98c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a97aa704-7c1e-4eea-a01d-f24668a1ae73"
                    }
                  }
                ]
              },
              {
                "id": "a1b22554-4915-47a0-8d19-678b60ed3585",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9dd35d6b-5043-463b-aaf2-a12202198ab1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d05afd81-72b9-4224-ae27-dad3243f476a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0868858d-81d3-4655-81ee-d0118ec4d8ee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1273e966-57ce-40da-b822-b403b0deab4b"
                    }
                  }
                ]
              },
              {
                "id": "875b101a-9ba0-422c-aea3-533bf59b6ca4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2605f234-c9ad-4726-b845-f122ea27828e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a4258ca2-9bfd-45ad-a1a7-12dfc34e6b89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e44e623-26fc-4ba5-bfa5-c70103711395",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c8989b36-b233-46f2-a2db-d02da66800a5"
                    }
                  }
                ]
              },
              {
                "id": "0837e7c7-92fa-47d0-89c1-8ca2aebb50d0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cee2fb3a-2eae-4593-ac7c-da9c4522e144",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "515d038f-cc6c-4188-8db6-0d19d7da223b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7d0090e-9823-4f42-90fd-6078ee2c31de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "daffaf6d-49a5-495c-95b2-7a0cc2296991"
                    }
                  }
                ]
              },
              {
                "id": "7150d942-3bfe-42ad-9632-d6e416a51001",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb472797-86bc-43d0-9c0f-3d9ca8c6a1e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bc443c1d-81ec-4cc9-912e-8828f1d1626c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2871097-38db-489e-8fa8-98613fb91ffc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7097fc66-6143-4c47-aafd-f0ea38e41790"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "191bf681-3de9-4fa2-ae56-a5e38f758a72",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "34b05549-5714-4ab3-b991-4782bd301364"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5c68f6b7-eb4d-4add-9593-377abbc9d88b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6896b864-ad2b-415b-9719-b119958a0195"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50e1a051-4eea-45c0-9a93-9b39e4bd74de",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01a151d7-39e1-4caa-9bfd-ce3858175113"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74b84ae8-79c4-4987-89a6-9ccf55e082eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6f12c72-40da-472c-990c-47c6861dd530"
            }
          }
        ]
      },
      {
        "id": "8064554f-e936-48b3-8b5b-b3439d6b74d2",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c6e861fa-3f69-4da0-9290-5490e8dd15d3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ac755db8-8415-410e-99b5-4c54f31a3b32",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "451dfafe-bf1f-4dc3-8563-8728ab017ba3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3922cba-aa84-4eb0-95a5-4c5d3f560244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "518df4a0-cd38-4c9f-9574-12696fdf281c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb4de8b-9ebb-43e7-8efc-1d7ed922fa7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f07e065e-308d-4743-beb6-1d765f8302b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11501e4a-41ae-4818-8be8-b42372194513",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494dbcec-e169-4308-a9fc-421575cd6ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91bc6b3c-2c8b-40d9-93e2-e8fe495b32bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e3904a-f8cb-487d-ad75-923b1cd0d403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d60a3563-0aed-4133-b376-61a1e7c06ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd8c4e6-2315-4221-9fe3-8e45deed89a3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde731d7-a75b-4829-8e0a-a27c8777e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8747a8-97dc-4d90-b019-ea4721850b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00759de7-1668-4f7b-8558-0108528b010d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1162568-8660-4a4b-9a32-e79caae2a735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78727a8e-368b-4573-91fc-29b503679783",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44dc6878-6c52-4c23-ba71-b755eb14ee45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1464561d-3d36-47eb-9a11-784753bd2efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f3a60f-0bf9-49a1-9ba5-5f9c3c65c050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c96b2c26-670d-4de9-aaf6-8f8280bfe274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1dda56c-b89f-4624-ac59-a21da7be49f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2fc782-1679-43f4-bf03-28b4212f1bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a1a9fe1-70a6-4b12-b71c-692fb7f45075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03031d-9555-4bd2-92fb-2c7ac111065c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a3de99-6872-401d-8dbd-6377176ad775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d8693aa-5d9d-4212-9e03-3effd165716b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "441b810c-73cb-4793-a825-6a3295da1329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd0777d9-7fe6-4600-95f4-594606661ed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1a6ffc-73f6-4815-9488-cd9021040a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d10f8978-21ec-4a97-8e14-4d55aa572905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3646452-764b-40bd-99e6-648cbef0b97f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bb8dab-d168-4025-bad4-db7085b3d949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71920877-0a34-4054-89c1-6bd8c86afa86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31fa70b6-f580-4b99-9bef-c23299bdf2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b4bff9-c5db-451e-8b71-decc23522876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bb6bd1-f1c6-4da9-9aa9-3dba91ae5fbd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7e102e-fcda-4560-a790-ce4eb067bd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "258b54e6-49cb-49e0-bc40-f94604db74c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b175eb1-c7ba-49b7-9715-30bae14602ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "151a571d-fc6b-4774-b64c-7c8f30de724d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da88d9c-8975-4d68-b27f-87ff35a9fb11",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132167ae-f686-4ad6-a92a-4e8ab818df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898b5a90-853b-46f1-80ea-86f7b434648b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7514278-799c-4b71-bf60-7a15ccede8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "731e891c-398b-4bad-9965-3bd445a1e694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc51414c-b035-4648-a999-d7346e0d5095",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d66b42-a693-4f45-a119-d5adfd89e29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "197ddb86-1009-47ad-86b2-e9f4a227d46e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f809bde1-83ac-4f92-a28c-340b219309ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b9f7fc-aecc-40fc-90a7-e12064c3a542"
                        }
                      }
                    ]
                  },
                  {
                    "id": "787adcd9-36fc-4342-9ed8-bd21d60f3084",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "435ab16e-1d82-4502-8aca-009ecd5d41b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baab7ab8-c95d-47cc-a416-be81fa2c2eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a201984b-f837-4139-9552-017493c89d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "51966b5c-434f-4c65-b4aa-f23eb3d4b2a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71528a1-3065-41ea-bf6a-d5344b648bc6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac99df24-5633-40ae-8c8a-1a599813a0fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8c42d6-f7c7-4374-ba1a-270c91d69807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1476d6-2a79-4d2d-bbaa-519536dd8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0a5e3dee-e3f4-45fb-b86b-fbd1a984a6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a0d29d-352a-4693-8990-ed8ca0a34467",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b673e08-5482-4b8a-834c-2af429a4409d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab2612d6-2e89-40f1-8775-377936435972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee35faf9-5609-4423-89e2-e5c773a3872b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6f4fea-a542-4840-89d6-53a0eceaf81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37ea712-c3c1-456e-a0a5-e85717a91878",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16df69c4-47bb-4653-a346-84292dfabe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb487147-f3e2-4a61-bd1a-bc42658ae856"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78eade9f-05dc-4873-b1f2-8872c190ecc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1f4c77-7987-4340-b130-b16299b516c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e930423-6d92-4d0a-a07a-b3f014e3f137",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ba9757-7b92-414c-a879-070ea279e0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df257ca-c204-4933-9316-f7a39a36d283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb78953-33a7-49b1-ba0b-c0e4cf8b1e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18b2bda-26d9-479b-8171-36e9bd2dfcbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80aa2e4f-2ba5-4310-a4cc-e40ce3d41fed",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12433220-de1a-48be-a861-0551b4bd89d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9db6072-117c-4a0b-9fb5-69b0bb285d2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fec856-7b04-4464-95de-7f8e6fefd817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "67297313-dc6b-4705-b078-f87808239116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf65428d-f6d3-45c1-bd0d-21e76f6b1d3b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dce3746-cd80-47b4-8534-2809c84d36f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49063ba5-9073-4998-b394-6b769af04784"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536b901c-0085-4365-bdb1-58332be6484e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f644a358-a00a-4661-bbdd-2724550e5e67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b503d7-d549-40f3-b678-1f7eb5175eb1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a074a2fa-f78c-4ffb-b444-0cb5307f618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d524062b-f569-490f-9c4f-74576d13326d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc561ad4-f3c1-4f50-964a-3c06f88397e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddadea71-ab24-4b5e-9c66-982124da3f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c891ce-3d5c-4fa8-b646-8d7c894e9e15",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1616eb83-4c8c-4958-bd02-8423963b6bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0356f4fc-8dab-418a-a566-67e3cdcd39ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab3bead-a6d6-43ec-92c8-8436eb6dfda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fa3d885-20f0-4e32-878b-5d231c32f44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7444b-4c60-4041-b1f7-aeb3bcf6007a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c59e900-0148-4639-ba34-e55863cc10b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804a7615-d044-4a0b-9e10-08d7bcf66121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6a6827-b38a-4984-a89c-e8a76ff84f81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b5126b-ecfb-4bce-a101-4142309f14e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5423518e-fa8e-435a-927a-5e90d840c220",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b416f344-1207-4a88-bee4-dcf221525203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c89a330-4993-4cab-a9db-24412bbb713d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21b383d1-e033-4827-964a-88dae709730d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b623afc-bde6-4f80-b21c-63c51c08b0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499a9205-d8f2-49df-ab59-c2bdf886d2e0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98939fc-e0cd-405b-b5ec-23e54d0e051c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "362f1a94-3917-4653-8526-6c2b837e6899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb361010-8859-4a08-9f25-40c2e88b36b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b6d64a5-4d8f-4d47-a91b-89dee3bd53be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104aad6a-cd52-41d8-8a4c-973953ff34f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1205830-c380-48f2-8589-9f1bfb42de14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e41911e7-b515-47c6-a1d3-6553529ce62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4b3807-14cb-4b32-9c34-661fd273589b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c2437c-0760-4974-ae69-b5aba6a1a592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "873597f8-28a6-4190-9775-f2561faf4f37",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a150f1cb-a0e7-4554-94ac-3cc0416ee7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d36e586-7667-4844-a6e9-173760ed27d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86b5c7ae-1212-4be4-bdae-2a81b9802616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5413ec8-2797-4af4-aad4-cdb20a236456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d97a99b-7f3b-4ae1-9b8b-3ce1a9051c56",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13517146-0e96-44d0-a192-ac3c060da8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249b276c-5575-4b7c-bf0c-aca1126d48de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008c7745-984c-4a47-88e1-39f693bc1306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "756d9bea-0fc0-4e1f-bdd9-b055ed6e2136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e7bc11-60b7-4d7a-8d08-becbe3f2848c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17e7c8cf-1b28-4fd8-bb19-8444cbdc8fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d3e30b-5eea-4308-b8cc-87ed57aa1556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c83fa84-60d0-4f4b-8cd4-d8c02578cd30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b86fe18-53ae-41ba-8c7b-3b3aae234d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00493825-7da4-4a27-8cff-a12379077f8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587b131c-53e7-42bf-b48e-50ec85ed7c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61897a11-9be5-4e39-8e13-6eb90f61c52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3ab55f-f070-4ab7-9f42-11d41eb76b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7771ad5-97bc-42e4-894f-e37afddd02d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7410d10-8e25-4b17-b6a5-50a9872a746a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951d173f-f8f7-48d3-8572-0e8ea7843600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bcacdc2-c8f2-4c6e-ab07-4bc220914ef5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291bdad5-6872-4431-b902-d69d3d4e7a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a8cd798-d5a9-4e78-bdd0-0c969d58a288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e598e40e-31b3-4865-92c1-356222644454",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b01f99fc-50ab-4b63-ba4c-6f38b319d78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3cbe766-38ad-4ed9-9ce6-ccdcc9dec398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde86413-0d38-4305-88db-f0863e2f6bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8eb92c-049a-4ab1-8ba0-00ac38d86c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ac73b-d897-4617-b69d-4a7c086f94b4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74275b7b-4f84-4886-830d-d650736bf9e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fcea3b-4fbd-4ac3-a02d-2552d5875927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df0386a0-dc99-4410-b69e-34ed1556c874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4cd1a44-9c51-4525-bf4b-be3d3dbbdac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6115030e-6034-44d9-9eab-92e91ae06ef4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d0dffd-551f-40b8-a784-4a8aca051dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4a78ab7-a9cc-48cf-a12e-b2f7137a190c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90e382c-d87e-4830-a948-5b4e17c615b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b71b45-3788-4bd6-8afd-29ce2d48d666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fba2d8a5-4fc2-489e-bcd8-0cfe8eb4e240",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "672a08a9-9078-494c-b9f7-ffc57dff64b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4005d6f-1653-4cd9-a765-c13ee9fa322f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31d86f8-729f-4b78-8909-35f0f6413300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3e99c0-3027-4445-b6ff-2725a4abb0d2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a28e0c96-5157-4e77-87a4-815e3892352c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c6fa7a2-fc53-4e2f-b5df-3bd5178c60e4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b4f450-63b3-4008-a1af-04df294da8c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee083f97-9823-4a93-ac8b-dc2c7c74530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df18e0cc-e2b8-4dcc-91e7-ba480bff094c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "506267a4-18d5-4ffa-9408-77e3a4203d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c357547-15e0-4991-b305-8c199e178733",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5004bdf-4d42-4cbe-a42d-19737cea9fe0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "ef7c9293-8956-4239-8888-8f51ff64709d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5440d4-aa38-43f6-b962-1057fa7837aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e874c350-d46b-4375-a775-719d3974c567"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f766b027-8c16-4975-a98c-d7c18a92c75f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9971fd01-1bd3-4435-936b-b6e1067280ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b683491-6b4c-4ed3-a1c4-c398a1a0a840",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "22921b21-e655-47c6-a868-a7cd447f35f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f390a927-3090-4050-ad94-23fe92c0fe04",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "02647d6d-57cc-4c01-ac35-028109fa70cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "31cec804-190a-4567-a949-29826c65af5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44759526-7eed-4414-9384-fb83743fb1da"
            }
          }
        ]
      },
      {
        "id": "2ab11c06-5a6f-44cd-b52a-c6919028b69f",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19cf3d2f-6e36-476b-8065-56ef7789a086",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df8e356c-58e2-48f6-9998-a07daa043d93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "56ec628f-87fc-4126-a76d-67abadec3a74",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e283c23b-3cba-485f-96bc-373b081f98fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39ab5dd-622a-43ed-b1e8-35aea3bfdd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b03cc-47fc-423a-922b-caddcf0b6aba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34416165-baa5-40c6-9938-6ee7f4a23a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff36174-dac2-4f17-890f-a2e6a8062d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab9f0f74-a265-46b8-bfa0-2e27e7291b8a",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6ace500-a3bb-4de8-893a-6e17ece4eb13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23bfc05-a45d-4618-9915-19ec173c82c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6cd7b0-92a1-4960-8403-558c0afb7aa8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ced7e0-2469-408a-b83d-b246ee319a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff4a9ee-043c-46ab-bc89-5171b09e6043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b394865-8d2b-43a8-9f1a-5cd103e28176",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3038f29f-f9f8-4e16-9aa7-4330809218f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19772310-4d90-4d84-9ce4-6edd64025324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2337c802-3f0e-4ab2-b2da-d741b637e62f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec716537-312e-4a26-8176-67e9dfdb9f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98450b2e-ac8c-4169-bb23-2cc6d56bd7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1685221-3c6f-4aca-9980-f52298e7b7af",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b24cd2-5292-4d4c-ab6a-de9209e69aad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d7bbda-43cf-4991-a108-3f291c1ac738"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87ec427e-b042-412e-bccf-8a7dc1df09ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff1dbc81-485c-4764-ae03-7f20ae0ccb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "766b5031-b8f5-443b-95bd-0cb3911e94d6",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5398d14d-0181-41a6-81da-e39eb77a952c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8669e652-6f04-44ba-83ba-3950e91dc6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9058b004-f579-4263-b4a0-9d882c8dee4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41c2ee47-d91e-4436-8f93-7e966b7f6c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fc33d39-a8de-415f-ae48-2e56440d357d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058b2444-199a-45e5-b9b7-dc635e0b2826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7762a97b-981e-4aa6-92ab-f1462c7d253e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51d81e1-db33-4238-923b-3b1dc5117bd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33a2fc28-aa09-482e-a43b-2de58b74e4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5a2163c-1338-4957-93d9-96d4a10ef8f9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f812180c-c413-4b74-a16e-ffea52a2960f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa7c4b8-03b6-4582-a939-20ceabab4029"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a37b9f-961d-4f4f-bede-97653bff0d86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b72f58e-ce73-4552-bfe7-d40aeb62ef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d26a093-4014-4f0f-9fc4-619feb08ba54",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a682944e-fce0-4f30-82d4-e041702d1c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70432d93-0a9b-44ec-a9a4-0aa4d5e99b17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fa0fc2-3dd4-4a3e-b3c9-2be460c0f76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67acb28b-9302-40fd-8880-680fc4a828aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a161ca-5828-4245-bda2-f917278f9809",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf30c844-27bd-4909-b256-1d6457479c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4045ec0e-2708-48f1-8828-e54ffc4f7914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdd0e0e-1ebd-4590-90d7-546c26dd86e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "034584f8-8e1e-401f-b39d-4036b0778bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce48f6be-c816-4394-995f-932453f6d71a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8efd0d-e2c7-441c-957c-3dc59c00b800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d60d8558-aad7-4f2b-9b12-c9f396a3b216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9227f71c-bd67-43f7-b322-e0117fcf65e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a5007c-893b-4259-8c63-65efead9c7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc73e5c-4770-45df-875d-1ee9e801861b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d3cb1e-d348-4138-b90a-46ae3100a79e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcfcfa6c-c849-481d-aefe-2c9a322996b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3c62dd-5a1d-4514-a3ed-aafc553a5930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4ebb063-2d73-4e6c-8092-2b5359f40239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1732e2-c163-48dc-9b39-eda968ed2ba9",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a12b001-1982-4303-b37f-17cda0de7821",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3cddc8-1821-4aed-af14-8dd68a0f5d0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5b6c660-e5b4-423b-9ff2-5f138dfaa91a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094174cc-aca6-4e4e-8256-c463e3799c76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e3c51f-d1ca-4b6b-bdad-9039dbd66576",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9dfe54-f010-40c2-9221-a906f458bfef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d84d60dc-d1e0-4119-a11b-bb8f479927a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90b75055-4032-4c19-a061-27739aaad4e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03448afe-ed50-412d-ae51-98cf68a94a45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931f292d-d19f-49e2-91bf-f95a93ea1a20",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "054a2faf-d24b-44f4-81d7-203a72d1cd56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75b800e9-df88-400b-855b-a2108ef7d61f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41df4dc5-c180-4eef-9359-fbc54b51e604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28471765-e28f-48a8-b47a-d7aa78ca8b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18e4eb5-f211-4d7e-ad8b-02a3f18c8f16",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "839e5273-cd81-4cc2-83a2-85cf5aed1e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57f9c442-3f3d-477a-a8d1-f3296c2d6f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f20acc-6cf1-40a9-b7b6-74243a1731d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f70b19-d206-42fe-82d6-9348b3c75d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a112a077-acff-410f-ba2c-838e0bccde91",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd3044a-20b7-4745-9333-176f65317ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d30979-f959-4d52-a172-a017ab7c7a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb436651-6c80-4fb5-9b7b-4a022d0f8008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c13d3344-3bc9-488f-bbfe-07082c372ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae187425-c500-47fe-9dc8-fb1b645fe105",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0b58302-a66b-48b1-a8f3-231ff7059234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26a97890-ba23-4fc0-ab5d-8a852cb4fd8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d2dfff-b910-41b3-9c03-0962740dac7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45817554-fccd-4dbd-ac56-9c1aab41d835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa5b82d-bf73-4891-88ba-39c97f03874c",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2f5ece-c080-4a01-ac4f-8caef1eecd1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bac48104-aaea-40fd-b35f-5c466bbf7385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbc6028-edc2-4939-93b0-44cdeab998d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c373a2e6-d9f0-4cab-9397-8e78d6ff125e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be36676a-9748-49fa-a44e-a7fb0e41d12f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc819239-04ab-4aa9-845a-83e20c25eb84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c390e957-776b-4707-9853-0737a055d76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "451cb123-d61c-4ebb-9f3d-c9e3f4742434",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b03252-3d65-4b7d-b6bf-5cfe0efc6169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c4e41a-e24d-4fe8-8088-c13339d59a9c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c5b022-fc09-41ce-8d84-a0265ba8e811",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f6f206-8f69-41ec-aacf-3d43ae1676c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea95afe2-27cb-4f38-9821-175887260c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "769124fb-e6f0-4291-bc04-e0b48d86ca1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6cef095-7126-4b29-8529-bb9a8aee50e2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0041f3-872b-4cf4-be94-22e55890b761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4965b6f1-a3e5-4992-9365-fd010ed039ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dce6f41-f924-40c7-bf06-03ee774981da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef0579e-d3eb-42ba-ba68-d93bb64425a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bcdf0ef-d844-4356-a05b-6d462dbf37d3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b2f06d0-c89f-4f6a-bfcf-4d31809431a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd6f358-f8e3-45b5-b82d-04299d5ab850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d711eab-8584-471d-88a3-d6c78a07781e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e56a69a-c5e2-4785-b8cc-9f8d1d546726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad40b9f-86cd-4320-9760-be02b6885e39",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061ed4f-5f3a-4a46-be4a-d05ceba84c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32d5c519-6305-40c7-9c5b-aed56fe17aea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee3df08-e490-4d0d-aa64-a762e4272165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33cd6ffa-6675-4819-b937-684a0e73c537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03305d2-d748-46b9-9ec0-3dc5bd6df434",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4daa7-3e35-4f63-ab50-ec2a819ed581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b9adbb0-1c3b-401e-b116-21db822d8132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f18d3b4-1a18-40bb-b82a-7de2ebbe6841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79ae180-ca0e-479a-92f1-8fcc79c14098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5c274f-308c-48dd-b147-b101caa0d34f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87573fa9-b2f3-4e74-a43b-49b7f4dd9570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e92160cb-cc32-4780-ba38-68a08f9e3cb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7595f8-73e3-47c2-8add-0d16231303e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ae3ef0-b798-4006-b271-0b5a680acfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318fb6d0-53e0-47da-b4fe-9d6b3352b3c4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234fe7c9-ebdd-42c8-8cb1-9ecdcace5c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13427283-8623-491c-907c-5dbfe5a68e4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189e484-2754-4090-ad66-1e1eee179976",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3fe7bdd-7a6d-4613-aa7d-29d23abdf4d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3769458b-c093-42b2-a12a-9576790aaeb2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef23238-5650-462e-ae50-ccff5d57f3c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbde5b0a-75c5-428c-8393-507f5b18d5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "128490e7-af36-4733-abcb-d73f2088a70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8cabe7-604f-4710-b50b-032e45d8e9ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c25a65bc-e415-4d06-82eb-4408f1ff35dd",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33aca1bb-fbfe-4944-97ea-10b8e671a920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca8bfaa7-189a-4b15-bbad-81f8c7eaab54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c934a453-ec3d-4cf6-868b-c4ec91353002",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0402cca-0181-466b-8d14-b497019aba22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c519ddd-67a3-41e0-bc70-85781af17158",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6723eef9-f02f-441b-be21-69dc11112fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5a3f6b3-c4aa-4d1f-a09a-5bff08c2cd52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "406d8029-3ce2-4133-828b-37d3f7d10b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31044eb-ffbb-4e4e-9846-28451eec7c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8990e131-e844-423a-a3bb-74f1f1b664c6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50675a3a-d6a5-454e-8086-fa09601cd797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce5b4be7-0522-4183-8dd3-bbfa09b01b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598dd8bd-5795-4258-be1b-94e29c75c757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc318e52-f4bf-4f12-b8cb-b1637bf550cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe21ada-02a5-4810-8190-771af221db1c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972c5c85-9c96-4504-9332-28731421fc8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41325c05-42c8-4930-85cc-7104d3106582"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1571b49-7eb6-463d-98d8-903d6e4b322e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff98723-d6d3-42f4-aed0-fdcf1a17a82f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bf4096-8772-40ce-b475-b143baf224a8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82a299a0-1b91-4893-888e-ab321af3801a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71355c07-2c50-4f5f-8d65-ba9520a7303e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "164eb951-99e0-4498-b49b-b3a660c30291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9547c475-87db-42ae-8352-723629f72a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaca7089-0588-4511-8913-4174cb8ad416",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e921b75b-c6f5-4b25-b2f3-b6c134278512",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48479142-2101-429d-8bec-6772ca2142e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c6d6e56-13df-45a3-b462-c6129805ee81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e6cbdf-9933-4a84-aa72-12f837f9cf3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c854d2a-8c16-404e-bc5f-4f60fb67910a",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f59128-efaf-4f25-b2fd-d424de1793a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3f55dd-2e20-4f20-944b-a38e4ac44094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00de392c-3ed5-42eb-ae4b-85aba4512d69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320a8112-51a5-4df2-a6ac-5c75da28799f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0dbbf8e-80fc-4350-a698-b8c9d60c6832",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb9e2f5-b474-4678-bc3c-ef41f24e2aec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396af466-152d-45e2-b988-0c982de52770"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdab14cc-5b67-4eec-a602-cd21201cf361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0984339b-7348-424f-9754-fe3a5b1f4ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39fa735b-ac73-4b56-b6eb-8bcfbe2a6baa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3fb9897-1061-472f-bd8d-ca056a15fc77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "287b5e83-b0f3-4f55-bc21-18aefcc99725"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3269d1-58e3-4d23-adad-309d4d6d0bea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08adb125-02b5-44bc-a7cc-3511ac0a9645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77991555-cf7c-422b-8ce2-d81a38f32556",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe93ecf7-4b5b-4a9b-9866-863804b84da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcca66d-dbc4-44c7-be09-9d751e100a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e059fa-4fdf-4d1d-839a-764306ef4e8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad134e70-21b8-4df8-8d9c-85c3f6ce068b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc8bd651-44cd-4975-80c9-1bfbf1ea3216",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "792d33ee-71a7-4670-bb65-e1c6d9aa11a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27749fa5-688a-4c8a-9ada-520c50b65d41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e70400b-3388-45c2-be7e-a3acc940d77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a54ad1-3093-4428-a7c4-d6fd477ed0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc95dae-a2b2-43c8-8cd0-4e8a62cfb52b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10184b21-ef0c-4052-8c76-5867169ef377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29e60cc-4aab-43ea-8bf1-831ea450cbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3103c3ea-2faf-4eab-8c5c-f9d953792608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcbee40-a153-4b3d-b2e1-a17152bdee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b0f1575-298d-438b-a1f8-05bebac0bad7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3774d326-5b32-487d-9bc3-03eae8f217fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1edbf12-0fa9-46ec-8b2d-ded05cd67fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6088fba0-ef90-459f-982e-d29b2beb6d7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1805231-2729-41b2-abe9-341e5479471a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fc25eb-e366-4d07-b0f9-8729a584a4ca",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fef490b-fbbf-4eb4-93ce-8c796257c1ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0176c29-d8bf-4ea3-a111-6fafbbb2653c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a8c727d-dd93-433b-817b-4c1cae46ef7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c769d9d4-ecd2-4d07-8dae-3b84f2b592ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40dade3d-df63-4f99-8845-9f0a1fc89746",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cf727e-ef21-468d-abc8-74294af21bad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa2d541-97cf-4bfc-9df7-a7ffcb8524a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c02e4ee-e1dc-4cd2-9049-c4eb23b62878",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485a4f1e-e546-4815-970f-28f83257759b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0575dffd-b9c0-444f-b0e1-eb7373d25e2b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71577705-da67-49ec-b1eb-9702027a2a33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfb8903-7df5-45b4-891b-79f776fabd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b1dc91-14ad-42c6-a0af-2280cf202407",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea08ff2a-e829-4149-b6f4-0b4a020f07dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a773f-a5e9-4a8d-b879-9128ec788f29",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a423f1-21e2-4f50-900d-7b4a4e4fd27f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6ff5ae9-cb5b-405f-8361-ab2915e75f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e310edbd-4f54-4858-b609-bf64092c5d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cce964a-3c44-4eff-a6ea-973525b6af41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae4ac7c-1be5-4b88-925e-2b34200eacc2",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd6b5d8-e6db-47fd-8a1c-8347d7fcd7e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35380f31-f6ab-483e-98ac-d201fdea21c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25f0b1b-8e1c-4083-b2a5-d1eb62a66f75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ebf4db-387d-4f9f-bcd0-e80f91c3f9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60fee72f-d17c-41b5-9b5f-2b1d21135669",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae2c5f9d-feda-4e3f-968e-c37f1c0236c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15b55b72-32ac-46ea-b603-48b64b31fdb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4b38e2-ff8e-4a32-bc3b-bb7b68d13bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954f29b8-1a2b-47c4-867c-28f574a075ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622b2586-0388-45e4-bc24-c2e0177a98c8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ca0a48-2302-4f68-936b-914dd919cfa1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729b857a-bfcb-4597-b8eb-b04a8548ec69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6454840-e47f-4d54-8877-b8cc39599ed2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca47c47d-f410-480f-826c-18da317bc25b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5465620-34e0-446a-8e8c-10a8636f2718",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e35a0f0-4680-4df5-b382-4b53a0ad9369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a722c0e4-fdd7-40ee-9583-36aac604063f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20126251-919a-4458-8cfe-f04567707ade",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c36fb19-3136-4079-b1b3-b2d1dab74b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fda50914-f03e-48ea-9663-c0dea907df08",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d64a23-e966-4a33-9b11-5291c2522dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1c0aebf-d754-45c8-b428-33f8a482fe2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9690ee-eb53-421c-b528-5531e08eb8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa7eba2a-5b74-47ca-b7f4-d6415e39f167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a01e9f9b-a4bc-45ee-aae4-f3fc8333297d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ea3aff-d5ba-4e43-8ced-9ee6cbe80e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c37011-6b7f-4499-b5ab-329ae4a31ff4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df4b114-f0cd-4c7f-92dc-d39f7943e276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e18c8bd-553d-4f55-9bdc-fb73465efcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d9ac9a-5e58-4bb9-b001-be780f04c05c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b5b3dc-ed18-43f9-812f-de1386e4decb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0142de28-4bec-4663-8e0b-74ad5f944ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f4d02b-acd0-463d-af25-0e5003cc6505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e634fb-dbac-4ac2-9bb9-aeab61b5a220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b104589e-d52d-41a1-8fc8-08b0655eebed",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a37f80-7f5b-4536-beff-0dbb78122552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba39c20a-6274-4570-ba2c-965b3f5096fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d68be57-9411-49f1-a05b-c84235d8eb04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79997665-17a7-4649-8ef4-0172d46d5c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7009b762-ff23-4cd6-9e1d-cf94ffc3b264",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea322a7f-3d52-4868-91f1-0fedc82dba2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be03d2d-a336-474c-89bd-2fa7b79ba2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ec4a65-a38c-403c-ae85-71d60f6a1644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8acb142-4796-412d-991a-2fc5e8529891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2525fb55-d53c-4c47-b3d1-86faec3a1512",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bab455-e6d8-411b-ae88-62fc864c147f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0248c3-b558-45f5-b0ed-e826e27dfebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "707ebde7-4f82-4c74-b644-fda6e4733a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "581ced05-e506-4e5d-a9f2-c24375817320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ccbbcc-1e53-44ed-9017-1823f20ae495",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce016ef7-7cbd-47ea-a96e-f5bd386c03b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf773b78-470d-487c-81ea-cc7b5d8b25f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5c1516-8860-49f4-8412-6aded44ec740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fd32e2-6056-45d9-9ad5-df5ec0003bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3c6d6e-46d2-49d7-94c9-1f49c9cb3e5e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6420118-70fc-477e-bdf3-7c80ce722aa8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b9003b-a733-4cc9-af4c-c6a2fa2074f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d61da1e-4f69-4fef-ae03-293ddd6aeef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab66a52-6cd5-479e-b483-b66b3bfa2794"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7a11fe1-45f7-41f5-bfe4-6d82a47459fd",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa41797-0aa7-428d-ab8a-5abdbf618bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b228bba3-6e2d-4ff4-ba79-26cb09b53ff7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40efeac0-3997-49b5-bbc0-7eaac71ed898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "186fcd0c-396d-4ff1-8105-1de42217bf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc17bf65-c8c8-4ea7-9291-30ac74a28e6f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0fe7418-1de4-42b4-85ce-e01b3199b6b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92acd9b6-85f1-477e-b31b-f16c0bf17896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2e5ae8-1fc4-4d2b-9b5f-2cc5932f6c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2102d012-583b-4d88-8ba5-2f0d321df9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bec73ad-034e-43f3-80e9-cd61af95dd9d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f0eab7-7d95-4b9f-8a13-2fe7453bdc79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adedd274-17d9-4479-9c4e-75e052958378"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "844929fc-f997-4e55-9338-0b731969d746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcb131ff-58aa-4aeb-ab3a-9ac28c9ef21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bc00e4-da28-49de-a992-dafb9b90bea9",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35bfed3e-e57e-4887-a734-bf999fa855d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8929bbc9-f6e0-4227-be96-c1d643f2d0d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5c3d47-0ba2-4201-8bb7-7e2c99b167cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7366b560-73fe-41c0-b42a-d1281d6ae290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db380f10-60a0-4485-a147-ea09f886a951",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4c5e801-a8c6-43c7-b087-02a96415271c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02534d5e-6c75-4784-b959-c581b72943e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "006dac96-7012-4c00-b2ed-a17aa75de851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a02479e-b3de-4027-ae5a-02f49c65d207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a3675a9-3602-4302-9da2-25f6b49cf08d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ebae7b5-42a9-44af-bb57-acfb970b55a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6bdacc-dbdb-4ba9-983d-7a393ee9a1da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdee8b9c-6345-41b4-9e4d-82f14c67c5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63494769-9345-46b8-928e-a2ca232e2eb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84464a7-f296-480a-ac93-12b96d2c720b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdfd8291-e210-4532-8983-4e0a317b9fe1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17a3b67b-7fe2-4086-a102-b0dfd2c115ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e69f8c8-930c-4e1f-819f-ce28f5f93b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd193184-611d-4cfe-9fbc-5e251317be80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54234d98-ea00-44fb-b011-4bf7455f3fb2",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1425e740-4cb1-4bc7-9839-3bdf3b120930",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194108bb-bf5a-4a75-8904-b5abdd3d0c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11561fd5-e377-4669-bf36-8dc80e0a2d35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "073b4a02-3974-4de4-b454-9f59e8375d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b772382e-ff71-4804-b775-dfdf250d9960",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65c7e1c4-bf05-4e0f-b923-339c0090efb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54b1b308-8727-44e2-8cac-a400d9931177"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248feeb6-2fac-4ab8-999e-6fabc02ca69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a306b32-80ec-49c4-b9c7-1fbc19a7a84e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68719d8-20cc-4ca5-a747-ecee84d96a9a",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9a78e3b-2b91-4802-bd5a-47223194d5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d37e9b-9d3c-4438-a39f-5a62e6405cd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9535c5b-0401-4619-b097-f3be08e0f909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0eb713-9a12-48c4-8b17-2fc54a71cbf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "753ac12c-8bf4-41aa-b392-9a74341df766",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663961af-2381-445d-a0d1-3373e5e18f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc898f5f-1d0d-469a-b4d0-1a1556d0f0f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9253ed0-43b5-4ea1-9558-50a910b76df1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e345bbb-46c6-41b9-8788-66d02c7eb94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e751a467-113f-40cd-af71-1910a7e232a4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dbafc3a-addf-4030-8236-aac505b7f419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd602afa-200b-4f62-845c-1ecc07026931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73ac25a-7c6f-4cf8-acef-58c128d0ed9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54588266-0de3-41ab-b6c5-55a5d05b21a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b130d1b6-f7bd-4644-9cc7-bfa10c6f6cb4",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe13065-09c4-4747-98cb-907f517d0634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0fc27c9-0183-4ba8-9b14-9bce4b3976c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17cb6985-b89c-45ec-aa93-b838c624eac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8de26f-b01b-4c81-937d-4d89c48c11e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cab688-b444-46fb-87fa-6eb2f9580a10",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c695d25-2a4e-4f9b-8f52-ab8de7fac05e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93f24209-7461-4a7a-bd65-03a773e88cb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb3fa640-6a7b-4582-9e7f-ec71c59814ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb3ae3a-bc29-4bb6-8fca-faabea35380e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a4555d-3631-4b55-81d2-a3f09cd4178c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4262cb9c-809f-4ef1-98f8-ff057ea920b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f5cbe8c-d6b0-42a1-8da8-eb5431486612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d986da45-86b1-4541-a847-9bfda386724e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9c3a21b-70de-41fc-aa1a-32029c185898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cf2bd0-1b52-4ea7-b1b9-95bc571de354",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89373512-a41a-4a35-8328-bab09d18ddfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17119197-be2d-47a5-906e-161f78553f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a4015c-65f9-4b6e-bdf7-472921edf87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c3865e-973e-455b-b73a-af156db606df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31668828-6697-4b57-b80c-b6c27be125a5",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709ea27f-7f1f-43f3-a7f0-e101b247f017",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7eab14b-53c7-49b8-af91-d4afa184df61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab34713a-d599-400b-b198-a2f3a906d801",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d246d3-54da-4e12-86f4-c020c47e8688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da82eda7-9e2d-4be2-b918-0e5f744d3b92",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2744c421-6067-4fa9-86b1-fba70c6af217",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7b1581-2290-42a0-8fc0-99b0af7c574a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b5e67-18ab-46cd-9065-321b97b65d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2616f283-baf2-499c-ac21-18cded6471b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e3a4dbf-ea5b-4119-bbee-5201dcc9ea07",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c2b11b-d71d-4976-95fa-87c98dbe8155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "928a81e8-d61b-485f-b053-c4056ac72804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea7b166-0cbe-4444-960b-3f0ab77bf287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d1c200-b177-4f74-847c-a6c7711a1b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37a1a88-4b45-42ee-bdd7-f8a1a2b6e386",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf10184-28d6-403e-8226-3a061883b729",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b00b0a0f-d153-4cdb-b24b-747fee458f9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d9ad2a-a519-4a2d-8f03-9ae7125dbff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c2c46ec-728f-4dac-804f-acbd9f61533a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b4b033-461b-4b32-b806-91d02218865c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d123fd9d-0771-4bd7-a95b-97cd1d21ff88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca2525b3-c64f-4da2-b91b-a4702ed604e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84a138c-476d-494c-8267-87832a27f22f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1603856a-2b6d-4819-a56a-b2dfe58e7aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6dce3b7-cf84-4b34-b36a-3552d64fe21f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e78d74-4042-4def-976b-37a8eadfe6d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "298fc6b9-7cd8-4833-bbc4-cf2e28b6567a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d9ac07-0e9f-462e-a16a-f28a6acfed03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecabe74-e2ec-42b1-8f8b-971e3027a2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c46a09c-26bf-4f46-9f7e-92db1f7b21cd",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca179ed4-62d0-4fe4-86ff-091261f5b88b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cd95cc-eb1f-4009-8ea7-4c125360f55b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e4ff02-ed38-40c0-863f-6d7a31f0be81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92d0d2dd-d4d1-4d94-8328-0c7e55c07cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0315a677-26dd-46c1-85e5-06d0a5b33a6f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf7b4c39-afdb-49b0-8fc8-692203c85302",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb496a52-bfcc-4e26-8543-15adb0045991"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fff377-aa48-466a-9dba-acf784811d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be140348-ad6a-4fa9-8b1f-5516656b0e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c1d82e-9a96-4c47-ac3c-5fddc041251e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533c18c5-b5b4-4067-9469-8ccbf5a872ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8c5cb67-7813-417c-9df3-08ecf9f0e51a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b5542d7-901b-4392-862c-7e6168d78060",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d5b902-2262-4481-b2d4-3325999db495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c4772d-6e7f-4890-8710-4a197ff8fb69",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47abd660-cde3-40ad-a584-910118f52876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9feddd1d-952e-4ec6-b20e-94773ca10427"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcfe5fb-edaa-494b-ae93-51045450ca88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2344441a-7d90-4101-8632-ed14368579c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661fc81b-e85d-4b04-91d6-05757bbe2b6b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5bf1d32-f8c7-4f54-8ed6-7c36763191b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca48d1cd-290a-4539-8895-50d638ebf238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab28e16-3e00-4022-bbb6-2d2bfa4cedfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9328cec-4360-4f54-b4b7-9844a94202db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da14138-de5c-49f4-8402-b57e24fdda3b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07bfa764-f100-435c-91ff-9c83088331b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3dc6a798-1c2c-4bda-91ba-bc39c962112b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a35610-dc80-4eb2-9a71-b3ed19f5dfcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58cd0d52-8925-4ed3-b195-53d09f2ed595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bfeed18-c956-4e71-b369-765244684066",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ffba5d-1cd5-460b-ad21-a3c902ab2cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899d0fa4-6e1a-4607-b944-94e601838899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a47aab-b189-4153-b9df-5e0a2d7516ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd03d521-47f8-4af6-92bc-3ab0f8fb3722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c32b7f-ee89-478d-9404-6dc86ba3a2ea",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a04ff76-d3b3-4f62-9e1f-84ae40611c09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a86d621-62ea-46aa-b419-df17144fbb92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ade6049-9da8-4d4e-a584-11c0cd1d3c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72666686-63af-4203-aca1-f3881f4d4be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf1d6da-d987-4e5a-8a55-3260bfbea78c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924ef6fa-7ded-4d46-8c83-09c20fb4430d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f075087b-105c-4bfa-bb6a-dcc6abbaf80f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a305668a-cfb5-464e-8ee0-35f6905892cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "795def2f-d6ca-4070-b4f7-41309b633de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02dd0bad-8fe2-464f-a3a3-3223e81c8ce4",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5d5d4fb-52f4-4b8d-981f-80caa1791679",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "563ae0ec-87be-4ce8-8094-ba17bb9448ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9623f25-4990-4e6c-bdf3-33a536b8bbb8",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4f9c5a-6098-4f17-9791-d5bce5222b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d879ef3c-103e-4ad2-8ae8-8fbe0feae248",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72adcf1-7d64-4036-a298-62686c43e40e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6141d237-8940-4fde-932f-58cf1f14faf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2068895-bb9a-4d6f-8c1e-7f631d6216fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa5882ea-6177-4a01-bf49-c95208fd7757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10352c43-1d05-4961-bbea-73a51639dff0",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cac0cc07-588a-4ab6-a82f-ce6aec0329ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4aa7c51-e78c-4ba3-9c19-d9043b7a8dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a276c7a-98a7-4628-88f1-10343e001ea8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81dfeab8-58e4-442c-855f-fcf359eb0aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b66e58-7111-4434-a15a-18e62c7c6871",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48c602f-32c2-4c4c-adac-3638306b8287",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "550bd19e-abe4-47ba-b724-da4d630b7565"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28f09ca-4205-407f-9c35-2ac41c5c9f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008c7eed-6fa9-44dc-9699-65c8d76ba948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a492bf96-815c-4a00-ba93-eef89ddfbb1d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "468ed22c-f043-496c-b9cb-b87e9151b0d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9590ed8-7453-432f-b3a1-fc093f2f9a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d571e4f5-2973-4c9e-ba9e-1a5f0af40bb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4a1df5-b9d3-4d8b-a823-a8d7a0286ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47b210bb-2e2f-448c-976d-40d5642f2ea4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3155dfeb-cc65-4bc7-a630-3297e0d6f66f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ccc22b-05c0-4323-917a-b142a0a1cd1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4329e8a8-71bc-4f6b-acbb-05156dd85c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b2082a-92fa-451f-ad1f-1a02b37d9f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9135672b-fb58-414c-b863-f7577a9ce7e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a09446b-160d-4379-b365-06ac4580f126",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "761c10ba-e384-4f54-8951-3a5d8ef4acf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f442489c-fe27-4420-8df9-5c7c194ac88b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45079c4-f818-4666-abaa-1fc97b043a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec12284c-99b6-4af2-90b7-43621da79a9d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b862b667-6eae-4705-8741-da82eb9662b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b96358be-521f-4dd3-b618-ccfe1db82552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5289ae16-48e4-4584-938b-6b69c4e86e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "286104ae-f2b6-400a-96f3-b72c7589e356"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b508c221-a76e-44cc-85bd-6a4d8359160a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3631c1cd-5be8-4352-93a9-baa88be5122f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebdc5f59-b7fe-4892-b84e-6f0b0546570b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7a9721c-d966-45af-ab75-b194001a604e"
                    }
                  }
                ]
              },
              {
                "id": "aea52b5b-ee9f-424a-a3a5-fe293577d035",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37a087a0-b154-4b73-a087-b1a1a20aa426",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81219cc8-79b1-4e4d-bc79-96ae85e2777b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0a983873-c29e-4110-9fe3-cdb3b371613b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5ff221-2b11-4908-b04b-4da92b56502f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83ccb98f-a7b9-4c2a-b403-7d58cf86b5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02ab47d0-68e2-4890-a530-0712292fd22a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7d0702-91d3-4c85-bcbf-48dac18b17dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7abb9dce-09b7-4537-b97d-f50046cd8b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0773bd-60a1-4871-83a0-c1d1b97b0f73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8729503d-bd3e-4ca0-b407-4c0bc0a31277"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3947e52e-1c73-4fe1-b1d9-edeff23871a6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67259a54-18df-40b3-be0d-2515bc9ecaa8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7bbf9a12-8fa0-403b-ae80-26c75c821f56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f15e95b6-2dcd-4148-b4c5-ed6999d05132"
                    }
                  }
                ]
              },
              {
                "id": "fec5acf1-5294-42b2-871c-c2df162325ac",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "40577a8e-fdf1-426d-a690-59f8d3d9394f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294782b1-c321-4ac2-a0ad-414d6425654d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8b869b40-b9f9-493d-b9c9-ab3dd7c9059c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aee25f-799a-4e59-8dec-d17f40125d0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9915f8-dacf-45e1-b67a-6b586b6e0e01"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4581acc5-59cb-4fbe-8b1b-a5fdb3cf10d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a9c13a37-e878-4b66-90b9-e3633122aa41",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ddfc168c-d8f7-4a5f-a931-8b6ca60c1a77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d4e36b9f-3318-41ff-8f92-4b30089d0978"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b9e481e-d150-4655-814a-079c4a68ee62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b8c1ee6-54e6-4c9f-a27b-b254d99919bb"
                    }
                  }
                ]
              },
              {
                "id": "0f1f165f-119c-4032-ae16-90066572b87b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ab581b78-8b6c-471d-9eef-3d914013f69d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "aaf7c9bb-b779-4770-8a94-0a66144a571a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "259cd1ea-b9ff-4707-b134-e9ac5ac55445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4265de0-03a3-4f37-bef9-386fab80a8c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b51820d2-2010-4179-bb1c-62f70ccf5faa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "897e52d8-2fa6-4832-acbf-fcea2af3577c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "780517b5-ac93-417e-9c3c-748106a38501",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "458e9f75-5894-41d7-b20b-42ec35338cbb"
            }
          }
        ]
      },
      {
        "id": "34a6359c-0d43-4a8d-b195-11ca505618c5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d9cc212f-2a0d-4739-94d8-c1cca5c96f50",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4a2e93c7-1995-4ebe-98f9-3dba539b24bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ee92f6-a835-4ef0-ba2c-8cecc217d143",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e4c5b9d8-e052-4ea8-8e6e-5436d23ef19d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da527d4d-240b-4a0b-8337-0854823ee20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "494f84eb-507e-4283-9f96-332df7e442d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc7cea7-bd8f-4acd-a19e-020415dd9fdf",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d4539b-088f-4ef8-9542-0aeb5c7003f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e5090d5d-2a54-453d-bf1a-89ee33536b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44980839-391c-47b9-803d-2d214ac009fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d93c8b91-0d19-4554-91d5-b00e1fba7fce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1733f05e-a652-4e29-a76c-98a72fa41743",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2bc44c-0844-492a-a1d3-d757edf4d7b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73fe3d2a-7825-4396-9a5f-412bc2d05226",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ea2353f6-59fe-4d17-a689-6bdbbe7f2f77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bb42446b-795d-4e81-9daf-3ac3fdb2c075",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "773ce8fc-eaad-4818-b74d-0fc5c83da3ef"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dc751e3-31cf-4f27-9051-2b4de5e96463",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30648be7-b184-47d9-a073-ef7d6904e4f0"
            }
          }
        ]
      },
      {
        "id": "409244db-d1fa-4bdf-8645-6ff98362eb50",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ebbeb996-4deb-48e9-a82a-c120cffd9658",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be0d4b16-5b13-4f3c-9bb9-672a911c7cd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a26c03a8-77ec-4cd6-a686-4252ac0a0a4e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed311e1e-8cbd-4bdd-b6f5-4aa8b485d439",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "321c8eb0-876f-4e29-b998-d3784ea9d1ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f864793-ef62-4577-92a9-a0182e87b58b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75f0ec81-631b-421b-844d-ab38765fb014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d15d160-41b6-439f-a8c0-5ca0b9c38ee0",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1d7a3b-8d09-4f56-930a-5061762af85c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f4fda2bb-5af7-45dd-a1a1-0f38b5f8c21a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55da5d5-254a-4cf6-96e0-f9d430079bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bc910ae1-62d8-4cae-bcf4-3231427c57f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8c24fc0-c533-45d9-bf67-bcfe0ae60068",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6edf6fe-dca8-48d3-9c30-d4397caf1d3d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd043967-0d67-4818-9f3a-91afe4ba0bcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f1dfc94c-9f5c-4dd6-b49a-f6833160498a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3ba8cd89-fa31-411f-b7dd-c38f40231c9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d79aeca9-a02a-408d-9b6f-9afe97a11098"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef48e7c1-502a-4393-8ea2-576c8ee7636b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cca15965-e3ea-465f-ade4-800afbe9fb79"
            }
          }
        ]
      },
      {
        "id": "1dbf1cd9-1b37-41bd-86ec-e22522df3c98",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "562004f0-de8b-453a-9d71-c5cdf2e3ff39",
            "name": "Negative Testing",
            "item": [
              {
                "id": "81a35343-7c6c-4c42-9fa0-fc5411e38f02",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3de0c900-b2d2-4fb5-b942-134810413f66",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "977482a2-589c-49e7-a693-c04ad3fc934a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "291362b0-9d54-4b40-b855-2ac27bbddb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4900df47-b6ec-4783-add7-62300b895962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9b6c465-0cd5-4943-b248-6341949f4b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f82c7b-ecad-40b9-ae5a-6981fdf01727",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4449128e-dc25-417d-988f-670a3dba0c59",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9b8bc94d-5e2c-4cf1-a0da-007befb9721e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d327a2-5cbe-41a0-a2bb-9f5775abb328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31c21bc3-57e4-4ec4-8424-bab0ee96a6e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9a5b8b81-b62f-4c32-9cec-71c57695a40c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "858d1250-a263-4c65-b5c3-2689ae29a034"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ba262fb2-3fec-48c7-a98a-07d4526429df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "da0e8d2d-0f63-40c4-bc85-661173fea472"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c1317db-d43a-4e74-b9b3-224b1b14b436",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c0e67720-c600-4c86-8557-fa55eb16eede"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01269a37-9324-4697-adf4-5649497f9376",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4005d8f-d2ed-42dc-bdc2-fb99adcc7d65"
            }
          }
        ]
      },
      {
        "id": "2d22e978-849a-461c-a421-852f86d9cfe2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c947c0d-9e32-4475-9788-eb4da5181bfc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e75509b-e022-45c0-9e3d-373bdd5cfa87",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "af5ddae8-9d06-4f9b-90c8-9ea712bbf28d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2bb44b09-9930-44ac-8245-1319f5f7ed71",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0bfe08e-378e-47da-b4c7-84eeeeb566c8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 674.4389312977099,
      "responseMin": 7,
      "responseMax": 7018,
      "responseSd": 838.6686025460643,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1674693532182,
      "completed": 1674693721593
    },
    "executions": [
      {
        "id": "b8039e6c-a3b2-47ac-945a-f8f8d5d9652f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "554fc587-cb63-4429-8f39-5a66beccfeb9",
          "httpRequestId": "1896c8c2-6df5-4821-b513-db98a7f398be"
        },
        "item": {
          "id": "b8039e6c-a3b2-47ac-945a-f8f8d5d9652f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "af201431-deba-415c-8d9c-1d7a279970bb",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "ce444518-54f1-43cc-8575-004a0eff763e",
        "cursor": {
          "ref": "86291fec-e8a4-4a64-a803-a9e9ccf77a7d",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4f0b4704-007d-4df4-a954-904cbef151f7"
        },
        "item": {
          "id": "ce444518-54f1-43cc-8575-004a0eff763e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7b85a5c7-7209-4dbe-9b63-8e64a8af600a",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "52c401a2-2ef2-462c-b198-6d77589efd5d",
        "cursor": {
          "ref": "720154c0-4b33-4ba2-b7a7-f7dfd8fa5083",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1a1ca494-9034-46a1-bf11-0dc0ab1fe97e"
        },
        "item": {
          "id": "52c401a2-2ef2-462c-b198-6d77589efd5d",
          "name": "did_json"
        },
        "response": {
          "id": "b7958c8c-1842-44d0-a801-9380c8035520",
          "status": "OK",
          "code": 200,
          "responseTime": 1034,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03f2711-56b1-44e2-b25e-e28c7afb16d2",
        "cursor": {
          "ref": "2001f167-a1b9-42e8-b2fc-8b4b063ab81d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a729caaf-3f87-4f9b-baeb-f9ccb296d50b"
        },
        "item": {
          "id": "d03f2711-56b1-44e2-b25e-e28c7afb16d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "09711713-720a-470a-9916-da79677e5633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d03f2711-56b1-44e2-b25e-e28c7afb16d2",
        "cursor": {
          "ref": "2001f167-a1b9-42e8-b2fc-8b4b063ab81d",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a729caaf-3f87-4f9b-baeb-f9ccb296d50b"
        },
        "item": {
          "id": "d03f2711-56b1-44e2-b25e-e28c7afb16d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "09711713-720a-470a-9916-da79677e5633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1052,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a814b03b-f6b0-4630-a351-dfc53da70e46",
        "cursor": {
          "ref": "fc54183c-d430-4424-b299-aa2871c7640a",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "93c7cfef-9e42-47a3-a3dc-a2332e93547f"
        },
        "item": {
          "id": "a814b03b-f6b0-4630-a351-dfc53da70e46",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "4125d637-fb79-490b-890d-3ea0186e6bf2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 650,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dac99ab-5b04-4da6-a510-3319b5ded6d7",
        "cursor": {
          "ref": "664042e3-2b4b-4798-b041-4a2eaa3daa97",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3888dfdd-a135-431f-bfce-d7f8db44f349"
        },
        "item": {
          "id": "8dac99ab-5b04-4da6-a510-3319b5ded6d7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "32953a35-c1f7-433e-9d5b-b28aa37f9968",
          "status": "Not Found",
          "code": 404,
          "responseTime": 539,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4fd318-9d3e-4ae5-8d7f-bb3c3c46f2d3",
        "cursor": {
          "ref": "a21138d9-1564-4240-af40-32f7da482181",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "398972ca-6585-491e-ac39-8651cdd2aeaa"
        },
        "item": {
          "id": "3f4fd318-9d3e-4ae5-8d7f-bb3c3c46f2d3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f1c329d8-1053-4fac-9a1b-88b2ebc0ee5e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850450af-ce16-4afa-a04a-66262490b8b1",
        "cursor": {
          "ref": "87e6a71b-1985-4fe5-b858-ea71f8d50452",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "15b8dd7a-d17b-4fb3-b30d-57b8eec553cb"
        },
        "item": {
          "id": "850450af-ce16-4afa-a04a-66262490b8b1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1b740a70-0012-405a-a708-670f9a31f0ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850450af-ce16-4afa-a04a-66262490b8b1",
        "cursor": {
          "ref": "87e6a71b-1985-4fe5-b858-ea71f8d50452",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "15b8dd7a-d17b-4fb3-b30d-57b8eec553cb"
        },
        "item": {
          "id": "850450af-ce16-4afa-a04a-66262490b8b1",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "1b740a70-0012-405a-a708-670f9a31f0ee",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 535,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1d81ba-5c72-4bcb-bc82-551f56b1f2be",
        "cursor": {
          "ref": "2beea664-674d-4576-81e2-1dcf585c2d21",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9a11060c-aaa3-45e7-adf5-09ee6e5a39e3"
        },
        "item": {
          "id": "3b1d81ba-5c72-4bcb-bc82-551f56b1f2be",
          "name": "identifiers"
        },
        "response": {
          "id": "b2fc525b-d6fd-4a3e-8530-c633660093a1",
          "status": "OK",
          "code": 200,
          "responseTime": 910,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92bf1d2-b15a-4d22-936a-053df6e4cff9",
        "cursor": {
          "ref": "608832d3-3e05-42db-b4b5-95fa726ff19f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "43bf9c26-1354-4ecb-8e05-9f87546033e9"
        },
        "item": {
          "id": "d92bf1d2-b15a-4d22-936a-053df6e4cff9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "898e4193-d0ae-44db-b860-9891636a8de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92bf1d2-b15a-4d22-936a-053df6e4cff9",
        "cursor": {
          "ref": "608832d3-3e05-42db-b4b5-95fa726ff19f",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "43bf9c26-1354-4ecb-8e05-9f87546033e9"
        },
        "item": {
          "id": "d92bf1d2-b15a-4d22-936a-053df6e4cff9",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "898e4193-d0ae-44db-b860-9891636a8de3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6a4076-2a58-4b28-a2c1-db4009ce1982",
        "cursor": {
          "ref": "98e4f532-ebbd-44e7-baf5-059b26ecfd73",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "9dfec65c-ab23-4169-9e9a-7048266b4bfa"
        },
        "item": {
          "id": "3a6a4076-2a58-4b28-a2c1-db4009ce1982",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aeef0bbd-84bc-4cc1-aade-8142fe6440e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76fe75e7-0c31-47d5-99f3-7339bc435ead",
        "cursor": {
          "ref": "6cece78f-966b-492f-af13-48bd6fe44f08",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "323d89a8-c704-440f-9c86-6857abbd306f"
        },
        "item": {
          "id": "76fe75e7-0c31-47d5-99f3-7339bc435ead",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "b6ddae15-0708-4482-90ea-5c535ce9060b",
          "status": "Created",
          "code": 201,
          "responseTime": 5704,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "20da1eab-9487-4cc8-92e1-560346015cbe",
        "cursor": {
          "ref": "c08cb43d-7679-4a0a-96ba-5544c8daec34",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b85944ce-964d-45e8-8d2b-8b3b1c26b300"
        },
        "item": {
          "id": "20da1eab-9487-4cc8-92e1-560346015cbe",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9c32d1b3-c95c-4118-ba59-6148b8945cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3496e0ac-e040-41d9-a64f-fbe7f9ae3631",
        "cursor": {
          "ref": "cb7539f9-1905-465b-802d-4f1af6173e97",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d7039e61-75c7-428a-b530-ff6424ed5e05"
        },
        "item": {
          "id": "3496e0ac-e040-41d9-a64f-fbe7f9ae3631",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "3ac39f52-5d71-4a7c-8535-34ee5695f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 860,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2157959-1e2e-43d3-8515-de189122703b",
        "cursor": {
          "ref": "dfd96049-d121-4e0e-a849-dfac1b817694",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2c1fea9-8680-4adf-8c15-04f06d2c39a9"
        },
        "item": {
          "id": "e2157959-1e2e-43d3-8515-de189122703b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "33bddd28-8404-48ff-aebf-dcb7c1bef7b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 945,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccddf0ce-1afe-492f-ad7f-daaa0cea6b3e",
        "cursor": {
          "ref": "30c9e29c-0eca-45e1-846b-2b4a40ad570d",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "95bf075c-de6b-40f8-bc48-912364ccdcc3"
        },
        "item": {
          "id": "ccddf0ce-1afe-492f-ad7f-daaa0cea6b3e",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d438aa9c-62a2-4fbf-a76c-ac8b36b46c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc24f79-91d6-473a-b806-81294555c09e",
        "cursor": {
          "ref": "dd83b7c8-052e-4975-8222-3e5baf248a01",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "cb06741a-c510-4f04-a36a-92c613a493f4"
        },
        "item": {
          "id": "4cc24f79-91d6-473a-b806-81294555c09e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2fe61227-7872-419d-8b02-326fae44e9d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 687,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb29e1a9-4a8a-447a-b47f-d635caedff6a",
        "cursor": {
          "ref": "ff200b95-d011-4b5d-94a3-61db48cdb425",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e66b9160-c32f-4d20-b3ed-96bc04521063"
        },
        "item": {
          "id": "fb29e1a9-4a8a-447a-b47f-d635caedff6a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1460653d-dbd6-4878-8d25-08fbb37b1cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23305922-6ffd-4e4a-8e67-fc1179ebc667",
        "cursor": {
          "ref": "82dcc131-7df9-41f3-9e29-835a1a6afc26",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "43cbe2b7-f01c-4f83-bf14-98e23381aafc"
        },
        "item": {
          "id": "23305922-6ffd-4e4a-8e67-fc1179ebc667",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "72fd235f-c583-4fc5-bd4d-48983e874632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cab7bb3-6135-4305-8b6d-1c6263698631",
        "cursor": {
          "ref": "46aebeb3-d325-4298-8256-38a4c9c20bd9",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3574175d-df0c-4364-94f0-c4ee476efc08"
        },
        "item": {
          "id": "5cab7bb3-6135-4305-8b6d-1c6263698631",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "24230ef3-fe6f-4c6d-8c13-b3c8c467c6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 529,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71057a91-fd41-46e1-b689-53a3009675a7",
        "cursor": {
          "ref": "faaa5405-fa64-40c3-bc8f-0f90fe629fec",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "203162e9-fe6c-48f3-a366-026db45964ad"
        },
        "item": {
          "id": "71057a91-fd41-46e1-b689-53a3009675a7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c857f5cf-2e89-45f7-8988-9bccc98cf6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f1e766b-aeae-4f60-8cd9-40427e9867c9",
        "cursor": {
          "ref": "5d60caa4-7db0-4847-b214-e253de23eb50",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c2ad69c0-9ee6-4fbd-a15b-60422ac26a67"
        },
        "item": {
          "id": "1f1e766b-aeae-4f60-8cd9-40427e9867c9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b4fd7626-9269-4281-a29d-8af36f066b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 871,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b33abc6a-aa3d-4abf-8413-a5509558df4c",
        "cursor": {
          "ref": "1cfeed86-7a32-453a-861f-5f215170a9df",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0656525-8084-4a6d-b9a7-990682217fe7"
        },
        "item": {
          "id": "b33abc6a-aa3d-4abf-8413-a5509558df4c",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "1feede89-8bd6-4209-8bb9-edad641a71ec",
          "status": "Created",
          "code": 201,
          "responseTime": 7018,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "417d9ca8-20d8-41fe-a91a-3d6f81aa7df3",
        "cursor": {
          "ref": "50f902bc-36fa-4f7e-98f6-bb35b87caac0",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2cc3bf79-0fd3-49ed-bc99-559489a3a0ce"
        },
        "item": {
          "id": "417d9ca8-20d8-41fe-a91a-3d6f81aa7df3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "71b4ff1d-2f07-4777-8e07-ef42484d7627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edeedf91-fce1-46d7-b895-47c3f5a8c2e9",
        "cursor": {
          "ref": "fb7d6bd1-b3f5-4127-9217-f41122bdc60c",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "76774b9c-6963-4a6f-9f0a-75d4f00bbaa9"
        },
        "item": {
          "id": "edeedf91-fce1-46d7-b895-47c3f5a8c2e9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "27025c6e-5a44-46f9-bc5a-35d1f33eec82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8bba33-8aa2-45ac-b5aa-63c9439e859e",
        "cursor": {
          "ref": "23fb3c69-b27a-431a-8494-139efe4324b6",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "99285305-37fb-4e13-9ec2-c7567d26ce1a"
        },
        "item": {
          "id": "cb8bba33-8aa2-45ac-b5aa-63c9439e859e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2e2497af-edff-42b5-8dd7-7de4fc66198e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d52f273-e9bc-43a0-a74f-f65f3b94684c",
        "cursor": {
          "ref": "7139128e-d9dd-4275-9a58-657c71d1e9ae",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "884c541f-012d-4c75-a18e-79b235a806d0"
        },
        "item": {
          "id": "7d52f273-e9bc-43a0-a74f-f65f3b94684c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "74ff81ee-8b87-47fb-853c-800f52906da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120feb8d-bc8e-418c-92be-68cbe1a51841",
        "cursor": {
          "ref": "7b4c4c3f-69dc-426f-964f-14406de18055",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "335205a5-c109-425a-b1ac-dcf8445ad369"
        },
        "item": {
          "id": "120feb8d-bc8e-418c-92be-68cbe1a51841",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "72eb1c65-da81-4ca3-af53-2dda41939a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435ce48b-ca94-45cd-b77d-f5e8b8d5cb31",
        "cursor": {
          "ref": "9de50a5c-58bc-407f-ab1a-d5dc65112edb",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d421bf02-1d93-45ab-ab61-653b3ae9739a"
        },
        "item": {
          "id": "435ce48b-ca94-45cd-b77d-f5e8b8d5cb31",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "85d88453-f37d-4bb5-ae00-292d4da66c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52172a4f-3d29-4653-ab12-1aa3d764bff5",
        "cursor": {
          "ref": "25ee1975-54b9-4a8c-aea8-c01f16bbdbd9",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ce1b6855-fa49-4a70-bbde-8d50bf9b5531"
        },
        "item": {
          "id": "52172a4f-3d29-4653-ab12-1aa3d764bff5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a618152f-e036-43a6-81c6-becc243b10b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d579ccff-220e-4365-aaec-6471311bc1dd",
        "cursor": {
          "ref": "ae157e1c-3f70-443b-b959-1ff8e4469557",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "06c1ec84-c32e-4aa8-b812-39dec08ff753"
        },
        "item": {
          "id": "d579ccff-220e-4365-aaec-6471311bc1dd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "65ba6c78-953e-4a8f-9c16-1f34b91b0ac7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ebb46d-5df5-4c9b-8cc7-60be34fa0232",
        "cursor": {
          "ref": "bc1bdab0-8802-403a-9b4e-684642663810",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "98ac20b0-8423-4255-894b-b550700937ad"
        },
        "item": {
          "id": "16ebb46d-5df5-4c9b-8cc7-60be34fa0232",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "932372be-29c6-4c2d-8853-fe23b60974bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4f3a4b-17bd-4c89-b58e-1d1296446b82",
        "cursor": {
          "ref": "f0d53183-7c8f-47fa-a900-986f9ce4ac32",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "14f66fe7-86b9-4cc3-9f51-24144fc623cf"
        },
        "item": {
          "id": "be4f3a4b-17bd-4c89-b58e-1d1296446b82",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "5d27c334-a3d8-4d4e-83cc-1d18b5bba56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7453063-9921-4f35-94d2-924dc373a6a5",
        "cursor": {
          "ref": "a2c2f116-1d3a-4ae6-bc88-6ae99c9058fa",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2cb09c3b-9c73-4180-b074-2d95b099246b"
        },
        "item": {
          "id": "f7453063-9921-4f35-94d2-924dc373a6a5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "760aff42-e130-4445-b1b6-eee26b61faaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8259af70-ca84-4a4c-bf7c-fa99e0067bbb",
        "cursor": {
          "ref": "d5ee6a1d-6126-457a-8544-4154c617bafb",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0eb44634-d120-48cd-bebf-66757b3a1817"
        },
        "item": {
          "id": "8259af70-ca84-4a4c-bf7c-fa99e0067bbb",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "2a53fbef-5c0e-4b89-a013-2414bab62db1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2070,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "85916806-3d99-48e7-9d6e-50d1e02d026b",
        "cursor": {
          "ref": "e15cd8d3-67d8-4d13-af37-f68a8a2491f2",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "e793f5c1-4363-40be-b486-0711ce7c2abf"
        },
        "item": {
          "id": "85916806-3d99-48e7-9d6e-50d1e02d026b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e66f8057-cf40-4c12-9dd1-1e07d847c93d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fc1f6c3-2485-445c-909a-b8b43ae8aec7",
        "cursor": {
          "ref": "0fa947b3-19aa-433d-a370-58b651a0aaa6",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bb720bab-961d-4dbc-be8e-5482765d7240"
        },
        "item": {
          "id": "5fc1f6c3-2485-445c-909a-b8b43ae8aec7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "08985089-60a5-471b-9002-fb1616401de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad7e55b-5e24-4dff-9b97-6468c1687cd9",
        "cursor": {
          "ref": "4dcec458-1cc2-4083-8246-4cec59edfbfa",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "21617928-f2a8-4b26-a50b-a67f1cc1f909"
        },
        "item": {
          "id": "1ad7e55b-5e24-4dff-9b97-6468c1687cd9",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "243b1865-99c2-47bb-acdb-6a9df451b66f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c0c3a7-4612-49a1-a1d6-38bd8972bb5c",
        "cursor": {
          "ref": "c03dc69d-27fd-46d7-ab0f-e977fd37b48a",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f30865ed-3473-464c-b509-99808a3b6b65"
        },
        "item": {
          "id": "43c0c3a7-4612-49a1-a1d6-38bd8972bb5c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bb3a996b-35ee-4056-ba27-a9ae99a98a56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc7b444-7480-42d8-a2cf-ed1bfd395770",
        "cursor": {
          "ref": "26a35e8e-ff85-49ee-b477-3e3031250af7",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "b274844e-88f3-4dc2-a00e-b2a793bbde56"
        },
        "item": {
          "id": "9cc7b444-7480-42d8-a2cf-ed1bfd395770",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a6844002-a27b-47df-b4d1-b284a7350e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aa21806-7249-499a-aa6d-9fd555bdb4d6",
        "cursor": {
          "ref": "7fbc889d-b509-47e7-8e6d-308b1be3cb09",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4915f821-f213-4e58-9afb-466c872ccc47"
        },
        "item": {
          "id": "2aa21806-7249-499a-aa6d-9fd555bdb4d6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a65efedb-2284-4e41-b95d-dd8debf17b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d19ceb-7b59-408b-b008-15a0e026bc99",
        "cursor": {
          "ref": "8efe83fa-40b6-4e8c-8459-ec9981751df4",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "04aa7c85-69de-4f7b-ac47-7253b3076bc4"
        },
        "item": {
          "id": "15d19ceb-7b59-408b-b008-15a0e026bc99",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d917d4f5-68c1-48b8-b900-9c095101abf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 530,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1548bffa-b759-4d0d-bfdf-43fad454d752",
        "cursor": {
          "ref": "1bb1bfaf-037e-41bd-bedc-4b643bf8344f",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "ed281ed7-9bd4-4f98-8190-e60b33889fbb"
        },
        "item": {
          "id": "1548bffa-b759-4d0d-bfdf-43fad454d752",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "67c2ccca-19bc-423a-8277-f09ceca18799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0302fa4f-2095-4a06-934e-1ad614ad3a7f",
        "cursor": {
          "ref": "7dfae469-7f61-420b-8a61-733201a0524a",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7f96446d-1d6e-4d13-858d-f75c295c1df4"
        },
        "item": {
          "id": "0302fa4f-2095-4a06-934e-1ad614ad3a7f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2ca65f17-08e3-49e7-8995-c55b51878f5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62927855-3c0b-4a7b-984d-f03b583a4394",
        "cursor": {
          "ref": "1513a6d6-f7bf-47d3-a82f-6384d95ce750",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f7d26323-3bb3-466e-af08-5f6e059d7944"
        },
        "item": {
          "id": "62927855-3c0b-4a7b-984d-f03b583a4394",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2fe871c9-7924-473d-a8a5-f0c752eec719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4049ad-d873-4467-b3d3-7f81bc8334bd",
        "cursor": {
          "ref": "d9eecb13-3827-4647-a758-6d5325091067",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "72165afc-8d7c-4fbf-9912-8130fa4a7831"
        },
        "item": {
          "id": "3b4049ad-d873-4467-b3d3-7f81bc8334bd",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7ed55638-9dbe-4074-9268-1eb05a48d5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "482b0173-fdb0-48d5-b272-f9ec4f60afdd",
        "cursor": {
          "ref": "e56fab09-70c5-4ce4-9fc5-4bb66425445c",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "18e6ecfa-7d63-4f8f-b4c5-08d0158d1fc3"
        },
        "item": {
          "id": "482b0173-fdb0-48d5-b272-f9ec4f60afdd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "165d5703-b08d-4aa6-a06a-2951a5cf4815",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 675,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0a3ba0-898a-4b47-a382-9fdff3807a87",
        "cursor": {
          "ref": "0036676c-27a8-4af9-a0f1-cd2c66310900",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "270771e9-fe76-4219-a3fe-f7393695f16e"
        },
        "item": {
          "id": "9c0a3ba0-898a-4b47-a382-9fdff3807a87",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fcef4fc8-a76e-49b7-a52d-b34b075a18a3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 540,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "2a9200f1-5b30-4f75-8e0b-23ea655ee299",
        "cursor": {
          "ref": "7464ce1f-2696-47ee-9c7d-3c73e0edeb44",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c8d33be3-c924-4c16-8b90-525416a5617b"
        },
        "item": {
          "id": "2a9200f1-5b30-4f75-8e0b-23ea655ee299",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1d3e62d0-79b8-40bc-a109-a35c65d7a7a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e6568c-7862-4a1a-b924-d46fccc0938a",
        "cursor": {
          "ref": "7fd6c235-7330-42ba-acfc-5e12a2f78261",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fec26d82-312d-4591-9d3a-5e8936f07ede"
        },
        "item": {
          "id": "60e6568c-7862-4a1a-b924-d46fccc0938a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7714e796-8ec3-48ca-9d6a-818011379fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a43d3863-f6bb-4dfe-b832-19f1a290bd71",
        "cursor": {
          "ref": "bb337783-e625-48a6-b8c2-486281ddf3e5",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "788abcfc-946b-46f3-9b21-a5f0591a18a3"
        },
        "item": {
          "id": "a43d3863-f6bb-4dfe-b832-19f1a290bd71",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6ab49784-9403-4fce-9453-e9ab811d09e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d06ee270-c82c-4baf-83e3-1d1e9baa72b9",
        "cursor": {
          "ref": "b7f31f8d-bb76-4492-be4d-fa8c0ae3c780",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "bf7a2d36-504a-4dc2-b63e-1c42377dfb08"
        },
        "item": {
          "id": "d06ee270-c82c-4baf-83e3-1d1e9baa72b9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "03645dc0-92d7-4a93-851a-88e6ce054849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 977,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c314538-db04-47cc-95e9-42df66126559",
        "cursor": {
          "ref": "437a4b4a-88e9-4cef-b992-46287d294686",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a772835b-e022-4e2a-b938-003ded791f8b"
        },
        "item": {
          "id": "3c314538-db04-47cc-95e9-42df66126559",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cf36868a-eae7-4fbb-92e9-3b6ea30ad0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 836,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfa5d06-b622-4863-bc79-449539e222d1",
        "cursor": {
          "ref": "b0f21593-bb55-4f9b-9ba4-f11525e97831",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7c4da191-138b-46bb-b777-9b41c3a73bb5"
        },
        "item": {
          "id": "3dfa5d06-b622-4863-bc79-449539e222d1",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "d8229fe1-7fb0-4ac1-b09b-7932d51644a5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 970,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a7d9a9-0856-4b8d-9417-ac28fb592488",
        "cursor": {
          "ref": "0da166f1-1fab-40e7-9559-496957af59ee",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "eaefafd9-bffd-42f1-b117-6e0fdf125ea3"
        },
        "item": {
          "id": "b0a7d9a9-0856-4b8d-9417-ac28fb592488",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8d5aa60c-4704-46dd-9827-aff1f8bf28c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64fd77e2-ac76-41a6-85c2-eff6a66f59e7",
        "cursor": {
          "ref": "c19e7477-7b9a-4bc9-b23d-a78932f9d27c",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c82a1e08-0c50-432c-8611-1728e22615f3"
        },
        "item": {
          "id": "64fd77e2-ac76-41a6-85c2-eff6a66f59e7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "93b50698-5b02-4cbd-b9b1-6610c250fe69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 910,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c41eb8-4bfe-46fb-acf7-514cd157d421",
        "cursor": {
          "ref": "19887598-df62-4d91-aedb-1868671204d1",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "09d1e9d7-8e34-48c1-bc10-37e1ce19cab1"
        },
        "item": {
          "id": "51c41eb8-4bfe-46fb-acf7-514cd157d421",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "087f89c6-ed9d-49c8-aa29-fec55dca563e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 969,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70437e3-b859-4ba3-af3b-9ef0f1ce0259",
        "cursor": {
          "ref": "9367d3e0-481c-4cbc-8250-93bb945d1718",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "3892e04f-01f3-4eab-a702-af5e3c643261"
        },
        "item": {
          "id": "a70437e3-b859-4ba3-af3b-9ef0f1ce0259",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cda086b5-4d98-4dab-bbe6-06eb66d1f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 841,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432489dd-12df-4729-b540-b04ffdd4f62e",
        "cursor": {
          "ref": "93da66e4-227b-4b28-aec9-6618fd09aa6f",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bfcdaad0-8971-4ff8-8d2a-1991c769b10c"
        },
        "item": {
          "id": "432489dd-12df-4729-b540-b04ffdd4f62e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7c087722-72fc-4d85-9614-2ca38c35305c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 955,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59176406-2593-49de-a7a7-a50ac61a1150",
        "cursor": {
          "ref": "9912acfa-8ec4-4bc8-9be0-45c94c03be23",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "587e10b5-09c8-4158-b9e9-b4dec2d1d431"
        },
        "item": {
          "id": "59176406-2593-49de-a7a7-a50ac61a1150",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8f7faf40-899b-45b5-b361-d4588e8bf36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 810,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97cd712-3d26-4e72-b3b6-b9bd42d578cd",
        "cursor": {
          "ref": "4b5d0d16-6478-4c54-959f-660d06d0c84b",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ea141cac-210e-4c83-ac40-35cfbad2d1aa"
        },
        "item": {
          "id": "a97cd712-3d26-4e72-b3b6-b9bd42d578cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fe87a5b9-f2aa-4038-927b-6c6aae8bf759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 756,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1557e84d-3d79-4051-82e1-d88a2e115750",
        "cursor": {
          "ref": "44b3192e-2216-487a-bad2-754dfef741af",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6b998932-3139-4ba7-9f6a-8dc9345b7ada"
        },
        "item": {
          "id": "1557e84d-3d79-4051-82e1-d88a2e115750",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "db87ee3a-a480-4ab5-a745-a6d58612030e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b1f21d-9b9e-438f-b526-8d6eb3352436",
        "cursor": {
          "ref": "d74bbe26-ff93-49da-856a-237ebc360f0f",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f9865237-6f8d-4b09-87c5-de3e8c2d1e42"
        },
        "item": {
          "id": "63b1f21d-9b9e-438f-b526-8d6eb3352436",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7cae5601-1f03-4a6e-9f30-bd1519df1dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590677b5-46f5-4a5c-a5db-6f19ba992c8f",
        "cursor": {
          "ref": "f80af9a0-7a55-49f5-a9c1-e4d6a1e9496a",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "cf99c7de-5efd-422d-a7ef-4579747be436"
        },
        "item": {
          "id": "590677b5-46f5-4a5c-a5db-6f19ba992c8f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "d398df56-1981-41da-9f74-6475b5ace596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571bf6af-fdb3-4590-b99d-b26dec5b745b",
        "cursor": {
          "ref": "d25dcce1-0982-4f32-935f-aeba814ceb0c",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a036827e-07b9-4c33-afa8-fd05373558af"
        },
        "item": {
          "id": "571bf6af-fdb3-4590-b99d-b26dec5b745b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b567afac-4a2a-4f40-b29c-747ccce2e71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ef0486-8699-498a-8c9b-cca8b6556ae4",
        "cursor": {
          "ref": "28f692ad-76f6-49b4-b4ba-2b5dc7af2be4",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "4ccbb922-e253-462b-aa6c-714abedf8637"
        },
        "item": {
          "id": "b1ef0486-8699-498a-8c9b-cca8b6556ae4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "b5d2286c-3ef8-4c0d-b1b7-89275eb64a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6e97f7-ea22-4d94-bca2-9064f89c8068",
        "cursor": {
          "ref": "e107aee2-11b4-41dc-8162-5514a8488de5",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "5fa176af-3db5-4394-bb2d-47483df2d4e1"
        },
        "item": {
          "id": "fa6e97f7-ea22-4d94-bca2-9064f89c8068",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5360013f-5e4a-4975-8d2f-9f30027fd456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5504c4bf-cae4-49a6-87f7-b31b23cbba0d",
        "cursor": {
          "ref": "112e7d61-48aa-4cf5-bfa3-a0b88d8ae87f",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6a53dc62-7036-4b87-92b7-f9cf3d4a1f8d"
        },
        "item": {
          "id": "5504c4bf-cae4-49a6-87f7-b31b23cbba0d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9fc77710-4703-4eed-9142-490a7336e5db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 522,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc45047-8968-416e-9344-c8a82e9062c2",
        "cursor": {
          "ref": "c1a06f09-87d4-4990-8bd0-e89d20ceb21c",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "00fe2fca-69b0-4ae4-91b7-df793e534d2f"
        },
        "item": {
          "id": "cbc45047-8968-416e-9344-c8a82e9062c2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "fbcf6c36-3636-4796-9362-5a8ea969fddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9739263a-dcab-4cc0-8b1c-8dcb298d7f81",
        "cursor": {
          "ref": "f7c57340-fd48-49c6-9f89-6305a9091fa9",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "8de275cf-646d-416d-9908-bc58cfbb53b2"
        },
        "item": {
          "id": "9739263a-dcab-4cc0-8b1c-8dcb298d7f81",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c317e663-88bd-4cd1-a7b9-fdcbeb08f229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9dee013-cf73-4658-9c67-2c2f494de934",
        "cursor": {
          "ref": "ff21d839-32dc-4e27-831c-f0e3a4a2b2ac",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "31e498f0-b0f6-407a-8c9d-f1764fd02f2b"
        },
        "item": {
          "id": "f9dee013-cf73-4658-9c67-2c2f494de934",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5bc3bceb-a112-4474-90c3-31084ea8a611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2394c256-2e67-4c87-88c4-f06f7bfd6905",
        "cursor": {
          "ref": "e8eb9115-dca5-4f88-b6a5-2e440a218035",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2978f653-ff6c-45b3-ad51-bae6726cce91"
        },
        "item": {
          "id": "2394c256-2e67-4c87-88c4-f06f7bfd6905",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "dc369963-a1d3-4aa0-b98e-ce9c2ee8359a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb79f0c-13a5-44d5-b6be-fe13d9c29530",
        "cursor": {
          "ref": "16f69f0b-7f7b-4a53-bc9a-af3d0f17e21e",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b8db7c95-fb6c-433a-9c41-a4361c4967a5"
        },
        "item": {
          "id": "7fb79f0c-13a5-44d5-b6be-fe13d9c29530",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "842023ca-3b42-4727-ab75-dc5a6bf97fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8dcc13-e6ee-47ef-8a94-8fc47dd8036a",
        "cursor": {
          "ref": "abe67f7e-5b73-430c-9bfc-e83b0982b09f",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "43d347d6-008f-4f59-bda2-acf66403be14"
        },
        "item": {
          "id": "ca8dcc13-e6ee-47ef-8a94-8fc47dd8036a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6d8f9661-c90b-417b-9518-28dac0cfe236",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd936d4f-bf95-4bdf-84c8-66939f267f3e",
        "cursor": {
          "ref": "2673202e-23b5-47b0-9611-ca35810fcbad",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "80303d41-8fff-4c68-a247-bd3f6352b4c4"
        },
        "item": {
          "id": "dd936d4f-bf95-4bdf-84c8-66939f267f3e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "84f9f6c1-79d1-4b24-a90e-20e92a42b642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0600c47-0598-4118-85ff-dc56e9a595e6",
        "cursor": {
          "ref": "312eb116-88d5-4ebe-9623-be6795e36f84",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0fcac242-4210-499b-8f38-81e12af913f6"
        },
        "item": {
          "id": "c0600c47-0598-4118-85ff-dc56e9a595e6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ced1c3f0-39ef-4ac3-bbd1-f1a38e25b1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33bd0808-060a-4b54-ba01-d33430ad8568",
        "cursor": {
          "ref": "e4982e2a-c780-4774-82b5-432d0a9e00c2",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "47629a14-4297-48de-bb81-c78972107f32"
        },
        "item": {
          "id": "33bd0808-060a-4b54-ba01-d33430ad8568",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62fd476b-017c-4c96-8e55-bdeb807bee1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 524,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463c6fc7-c984-43ee-a313-c371f37ce658",
        "cursor": {
          "ref": "679372e8-d7e8-48ea-9a31-43b134a449c4",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "04c79786-1074-41c0-9ebb-09031755bf65"
        },
        "item": {
          "id": "463c6fc7-c984-43ee-a313-c371f37ce658",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8f7bb217-fb4d-4d6a-81c2-1370c97d43d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 518,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256beeb3-bffc-40d1-8f41-f33b982a3c3e",
        "cursor": {
          "ref": "bcb599aa-aa41-428f-a259-ec6043bc2084",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "db8857b6-dd11-4b52-b6b0-d5d7b2ceff8b"
        },
        "item": {
          "id": "256beeb3-bffc-40d1-8f41-f33b982a3c3e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b0ab5c20-234d-43bc-912b-996f682d22f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a91b14-0aab-4969-ba12-fe03293377a5",
        "cursor": {
          "ref": "7ebf8393-1618-45f8-a2d9-bfed89f7ae54",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b83c2fb1-e4fd-4918-ab73-25d1bc632b55"
        },
        "item": {
          "id": "c8a91b14-0aab-4969-ba12-fe03293377a5",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "404d7e96-aa45-4fa6-975a-58c40570a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b135cc-4c81-4e70-aa2e-7ae3e168887b",
        "cursor": {
          "ref": "d8d8f09b-123b-4a0a-a628-3b94d6d26e46",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "db354d0a-1c84-47a6-9148-a749ce227133"
        },
        "item": {
          "id": "33b135cc-4c81-4e70-aa2e-7ae3e168887b",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9e7ebac3-4dcc-4f96-a922-56288033c6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6d7a81-4fcb-4f07-9e67-99e87a567b7d",
        "cursor": {
          "ref": "b4274910-093a-4d98-a81d-93867091fbf0",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "914035af-a089-4368-81d0-b957e22d650f"
        },
        "item": {
          "id": "2d6d7a81-4fcb-4f07-9e67-99e87a567b7d",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccf077bf-f6da-4a6d-ac43-f00fd947f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 543,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4c0db9-e477-4037-9205-f9c91bffc93b",
        "cursor": {
          "ref": "8b8c03da-07eb-4292-b216-99b18edb28b2",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ae9a7614-c3ff-4cab-9da3-81cef05b4e54"
        },
        "item": {
          "id": "8b4c0db9-e477-4037-9205-f9c91bffc93b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "62a9b008-c01c-41eb-aa84-6c7b9621a883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "889769c8-d446-4ff7-bc2a-0e785eced1b9",
        "cursor": {
          "ref": "278e3f5f-6090-4ba0-be74-cf4c96b7fcdd",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "90ab92c6-d968-489e-bc61-e3fb0c87c39d"
        },
        "item": {
          "id": "889769c8-d446-4ff7-bc2a-0e785eced1b9",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "34d5d294-570d-41a3-83e5-f3408dbffcea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 528,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a097eae8-8965-4576-8af6-2b9e60caf2bb",
        "cursor": {
          "ref": "ffbdbcce-2055-40d2-8d82-e407e29fe07d",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fd8f48af-52a4-4901-97e6-ec3f9e44e6da"
        },
        "item": {
          "id": "a097eae8-8965-4576-8af6-2b9e60caf2bb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a58776d6-0af6-4e2d-8731-5aba486d925e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066d541c-c00f-4d9e-9c31-09b7dad0f85e",
        "cursor": {
          "ref": "1cd51494-aded-4a1d-93b0-23b8e8bed0f8",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f0571b3c-4ea2-4c7f-8fc7-712222ea9f74"
        },
        "item": {
          "id": "066d541c-c00f-4d9e-9c31-09b7dad0f85e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5864197f-dc0a-4481-a49e-cb27d2a2410e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1b3ecd-ced2-4099-8821-8380ef1a3e05",
        "cursor": {
          "ref": "838bac05-7150-45d1-8838-b275fb33ce55",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6529c4e0-6583-4248-93c8-b90bd182cdc3"
        },
        "item": {
          "id": "dc1b3ecd-ced2-4099-8821-8380ef1a3e05",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ed4170e4-1e98-42ed-ae01-9db5053cc74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfcef11-f767-4f19-b590-28704cbf51e9",
        "cursor": {
          "ref": "46979e67-a8a6-440e-9047-8c03ef1fb393",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d352f19b-9964-453d-9884-dc926bf8d764"
        },
        "item": {
          "id": "6bfcef11-f767-4f19-b590-28704cbf51e9",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "fa208c44-4b0f-4ceb-baf4-9506842280b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed4593-a277-4b1d-a4d7-a68d16c5a694",
        "cursor": {
          "ref": "2f522ba1-03ef-4778-90cb-908b13295f74",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9c24debf-3465-4caa-9557-dc34731e4f50"
        },
        "item": {
          "id": "beed4593-a277-4b1d-a4d7-a68d16c5a694",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "37699aaf-3fb7-4ba9-9780-1cf96d384d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e37dcc6-584b-4b40-a062-b05c501f0e12",
        "cursor": {
          "ref": "25db55d5-1d1a-42bc-a2f6-4bae96a0991d",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "65a56c41-07f5-4582-a86b-32be6efe3994"
        },
        "item": {
          "id": "8e37dcc6-584b-4b40-a062-b05c501f0e12",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8528bf09-eee0-4798-ba02-3feef746e663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 619,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8affbb-609c-48ce-b168-179a442c17ed",
        "cursor": {
          "ref": "00ca64ac-c1bc-4e97-b93d-f4a966efceb2",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb216366-1b14-405b-ba2b-e79a0c38cfea"
        },
        "item": {
          "id": "fe8affbb-609c-48ce-b168-179a442c17ed",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "974ee94a-5da1-47e2-a97d-c7ac6a3a848a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c30425-0e45-4bb5-b052-bfe0a4654078",
        "cursor": {
          "ref": "bb0cc9ee-1308-46ea-b6a2-5268a6ffb671",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3d8e56a8-61cf-43f3-b59d-c16c39dd0b42"
        },
        "item": {
          "id": "54c30425-0e45-4bb5-b052-bfe0a4654078",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "d9414679-b47f-406a-8ead-24df37f6e0f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a0bf7f-9177-40e0-9ef4-59c57f8a6a67",
        "cursor": {
          "ref": "63ecb77e-621a-492f-a55d-28a7d57d12ea",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c61b4fd9-2d7b-460c-9063-b150273dcc37"
        },
        "item": {
          "id": "46a0bf7f-9177-40e0-9ef4-59c57f8a6a67",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8dc744eb-31fa-438a-9f42-40945f4f5ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 934,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bf4191-21cd-4934-b358-013c6583e1c7",
        "cursor": {
          "ref": "c040bc25-7be6-4db7-9ca9-fb25ededd904",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7cb60916-d6cb-421f-9a45-7bd0d91462ac"
        },
        "item": {
          "id": "d1bf4191-21cd-4934-b358-013c6583e1c7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e54dfeba-a532-427e-a7c7-edfce7d4ce5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 876,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f1011f-7728-47f7-afd4-990dd052abd1",
        "cursor": {
          "ref": "3d951682-817f-4b03-8b90-4c79024a8119",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c1fb4712-6063-4dc9-bcff-6c9170642d17"
        },
        "item": {
          "id": "b8f1011f-7728-47f7-afd4-990dd052abd1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "db196d04-f1c6-477a-a335-37b66aa57e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cc6079-4e6a-4c56-98b5-f9adb19bce54",
        "cursor": {
          "ref": "7959575a-ab37-4634-9263-fd48b84d3611",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6b989394-cab3-4815-bd23-8e81f50f4d84"
        },
        "item": {
          "id": "75cc6079-4e6a-4c56-98b5-f9adb19bce54",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "eb878f08-1619-483a-8666-6e1d6969887a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 541,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f63c958-ae54-4315-97d0-737176fff20b",
        "cursor": {
          "ref": "3cf94602-9682-43c7-9368-aa4c257c91a9",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "38f13c51-0a81-4e02-9c02-c0b079db97a6"
        },
        "item": {
          "id": "9f63c958-ae54-4315-97d0-737176fff20b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "81750466-9559-4a79-86e9-41aae20a5036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a163dd0-67bc-43ad-ba62-609e3c84f412",
        "cursor": {
          "ref": "c1571e3f-c0d4-4cbc-a895-cfbed840e0f7",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "818b1e5c-320c-4874-8faf-98b3bd67800f"
        },
        "item": {
          "id": "8a163dd0-67bc-43ad-ba62-609e3c84f412",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "77f07502-3c3a-4864-a36c-4e20b494532b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f735ae0-e5b7-4f93-9729-d5621c28054e",
        "cursor": {
          "ref": "ca9b7f30-a726-42f5-a93a-822973d6fbf0",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "a7014cb9-ae2a-47f9-bf79-57afb040e833"
        },
        "item": {
          "id": "9f735ae0-e5b7-4f93-9729-d5621c28054e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "a8b5bef2-2edf-4029-b7f5-69958dc6c079",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2912c82-442c-4e8b-b843-abdd6224eef2",
        "cursor": {
          "ref": "c19ae50d-0661-46c2-8ae2-63f5ad308640",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a3be34db-b0db-4701-b57d-9825a7412928"
        },
        "item": {
          "id": "b2912c82-442c-4e8b-b843-abdd6224eef2",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "05604561-c7d5-49ab-81cb-b568d9886408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c335d2ce-d14d-4146-9165-d2a1b86b38f9",
        "cursor": {
          "ref": "c3c6a6d8-c879-43fd-abf2-97742c72f32c",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "db5b2c02-c602-41b1-ac68-4945a29223bd"
        },
        "item": {
          "id": "c335d2ce-d14d-4146-9165-d2a1b86b38f9",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "941cc4bb-fe44-48e2-a501-344314675e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ef931-edf7-439c-8dfd-470a61456f90",
        "cursor": {
          "ref": "7c718f6a-bfe9-4160-a764-60cd27f1ade1",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "0ea2a8d0-bad0-41a6-b579-79147d61e205"
        },
        "item": {
          "id": "946ef931-edf7-439c-8dfd-470a61456f90",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3c4329a3-6a44-4bd1-9f24-f4465ccd4698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25722277-c67e-47f3-8353-527fbf049b82",
        "cursor": {
          "ref": "0910eeac-4145-4430-9603-5452293fabc4",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "7af9e5fa-6145-43a5-bc77-fe10b41a2a2c"
        },
        "item": {
          "id": "25722277-c67e-47f3-8353-527fbf049b82",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "991245e5-9b0d-4a33-9bfa-382f93ae785b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2068cdd9-a988-452f-a36c-8e50659e87f5",
        "cursor": {
          "ref": "85ce79a1-5cc8-491b-8d11-0fff603fd2da",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "92069508-3798-425e-a90e-46e27c2f0e35"
        },
        "item": {
          "id": "2068cdd9-a988-452f-a36c-8e50659e87f5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d7cea8d6-95a9-4ef7-bd16-ba4d0aabd300",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b58c3f-555c-4ba1-965f-a9a625f477d4",
        "cursor": {
          "ref": "2ed2f428-201d-43f9-aa88-10a87ff93ebd",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9a245f30-168e-42ee-bec9-761861a63e23"
        },
        "item": {
          "id": "f3b58c3f-555c-4ba1-965f-a9a625f477d4",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "c1f5c23d-0880-4a7c-b948-9d37ad720a67",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 911,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae4da0e-fabf-46e7-a257-1585fa1b8a20",
        "cursor": {
          "ref": "1172fe4f-3f36-4d08-bb50-55ea2dde6bbe",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "67b53c17-38f5-4896-9f22-22822ec1933b"
        },
        "item": {
          "id": "0ae4da0e-fabf-46e7-a257-1585fa1b8a20",
          "name": "credentials_issue"
        },
        "response": {
          "id": "161db136-6057-4ec5-aac3-212477e08bbf",
          "status": "Created",
          "code": 201,
          "responseTime": 6382,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "a1b22554-4915-47a0-8d19-678b60ed3585",
        "cursor": {
          "ref": "36f45bcd-57ce-4302-84fc-c89e59af2492",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "8641a341-3af5-4247-83a7-fccf97fae636"
        },
        "item": {
          "id": "a1b22554-4915-47a0-8d19-678b60ed3585",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "cbdf553f-9e88-4ada-8876-743fe9e556be",
          "status": "Created",
          "code": 201,
          "responseTime": 4365,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "875b101a-9ba0-422c-aea3-533bf59b6ca4",
        "cursor": {
          "ref": "c1df9682-eb54-4643-a35f-d932c283102b",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c8fa3ef1-0c0a-4a85-8ca1-8d5128c100ac"
        },
        "item": {
          "id": "875b101a-9ba0-422c-aea3-533bf59b6ca4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "946daceb-2dd6-49d8-b3a8-7df9dea30caf",
          "status": "Created",
          "code": 201,
          "responseTime": 4289,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "0837e7c7-92fa-47d0-89c1-8ca2aebb50d0",
        "cursor": {
          "ref": "e2db2f65-394f-4c3a-91bc-6d04cc7fae14",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "85c03bc7-4b20-4637-b663-7a8944873ded"
        },
        "item": {
          "id": "0837e7c7-92fa-47d0-89c1-8ca2aebb50d0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fc3c66ac-5b20-4a3c-8df6-7005a904ea70",
          "status": "Created",
          "code": 201,
          "responseTime": 4344,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "7150d942-3bfe-42ad-9632-d6e416a51001",
        "cursor": {
          "ref": "72d21bec-5498-427b-affb-86e4cdef941e",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5f348c37-74fe-4bd6-aee7-273544704818"
        },
        "item": {
          "id": "7150d942-3bfe-42ad-9632-d6e416a51001",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "94d50f8a-2f7c-43b2-97c1-d9bc4e2e3467",
          "status": "Created",
          "code": 201,
          "responseTime": 5431,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "451dfafe-bf1f-4dc3-8563-8728ab017ba3",
        "cursor": {
          "ref": "daf8676d-cd0b-49cf-b70b-c091a65c87ea",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6245410a-f37b-40cc-8864-6199927814fb"
        },
        "item": {
          "id": "451dfafe-bf1f-4dc3-8563-8728ab017ba3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f100013-458c-4144-a231-1c94c1a93467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451dfafe-bf1f-4dc3-8563-8728ab017ba3",
        "cursor": {
          "ref": "daf8676d-cd0b-49cf-b70b-c091a65c87ea",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "6245410a-f37b-40cc-8864-6199927814fb"
        },
        "item": {
          "id": "451dfafe-bf1f-4dc3-8563-8728ab017ba3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8f100013-458c-4144-a231-1c94c1a93467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11501e4a-41ae-4818-8be8-b42372194513",
        "cursor": {
          "ref": "39e4d04d-cd7b-4290-84c9-de0a4b1d67c8",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e31b334e-a313-4678-8d4c-dbdfcb0d43c3"
        },
        "item": {
          "id": "11501e4a-41ae-4818-8be8-b42372194513",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3b139a11-8ebd-45f7-bebc-fa09f8db7e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd8c4e6-2315-4221-9fe3-8e45deed89a3",
        "cursor": {
          "ref": "0901f947-d5a4-414e-a184-aab7e71de056",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7d3ed143-ed0c-4eba-9e8f-0d3db281c421"
        },
        "item": {
          "id": "9bd8c4e6-2315-4221-9fe3-8e45deed89a3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "39fd0f46-648b-4571-ab46-cc26049e34a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78727a8e-368b-4573-91fc-29b503679783",
        "cursor": {
          "ref": "0bca4380-3919-4b70-a3ae-312597502e8d",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c6f10cfc-e58c-4a31-8756-7db3ec05fe7d"
        },
        "item": {
          "id": "78727a8e-368b-4573-91fc-29b503679783",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "dc37560c-1a6d-45a0-b575-d7b1dc34f96e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1dda56c-b89f-4624-ac59-a21da7be49f6",
        "cursor": {
          "ref": "f964e02b-b4bb-448d-809b-897e45ddbd33",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "a6fde9ec-09a4-47b7-847e-84dbc4b262a1"
        },
        "item": {
          "id": "f1dda56c-b89f-4624-ac59-a21da7be49f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "99106af4-b807-4426-bdf5-e0c6be63981f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 526,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d8693aa-5d9d-4212-9e03-3effd165716b",
        "cursor": {
          "ref": "209e274a-9d1b-4847-a80e-679856c1cd94",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "2631a601-f7ac-4724-a121-3151bc9bc68a"
        },
        "item": {
          "id": "2d8693aa-5d9d-4212-9e03-3effd165716b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "059bdc4f-b593-41cb-aa45-02e6922cc5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3646452-764b-40bd-99e6-648cbef0b97f",
        "cursor": {
          "ref": "35472a12-335a-4121-ad8b-d832d2ec8cf1",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d37ff84c-960c-4677-a000-9b549bd627b1"
        },
        "item": {
          "id": "c3646452-764b-40bd-99e6-648cbef0b97f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "10fc602d-bdb6-4236-ab39-cae3746e9914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bb6bd1-f1c6-4da9-9aa9-3dba91ae5fbd",
        "cursor": {
          "ref": "5deff9c2-9554-40fb-bbc1-02f2f31e770f",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c7cb3d43-8aac-4153-9d5f-1f9fbc6f9878"
        },
        "item": {
          "id": "69bb6bd1-f1c6-4da9-9aa9-3dba91ae5fbd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6f2e6503-eabd-4031-9d23-7c07f22e9563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da88d9c-8975-4d68-b27f-87ff35a9fb11",
        "cursor": {
          "ref": "97231b8e-d58b-4bf5-b908-41483fe781b2",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2c6322c0-cd47-4a01-8c57-ee4fe5dad03b"
        },
        "item": {
          "id": "1da88d9c-8975-4d68-b27f-87ff35a9fb11",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "310cd707-59b8-4bb6-ab84-462892ba6aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc51414c-b035-4648-a999-d7346e0d5095",
        "cursor": {
          "ref": "55d06ba0-f675-4484-ae32-a7b162361fbe",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9d2bf808-4411-4c94-8d8f-803f55897f8b"
        },
        "item": {
          "id": "bc51414c-b035-4648-a999-d7346e0d5095",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a69c2589-c7e1-41fc-baf9-ca68f1dd39b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "787adcd9-36fc-4342-9ed8-bd21d60f3084",
        "cursor": {
          "ref": "fd45feb8-cff8-4256-aa6b-5209710f254b",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ecdac2c9-2d76-4470-8305-53d0343e9c14"
        },
        "item": {
          "id": "787adcd9-36fc-4342-9ed8-bd21d60f3084",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "38f01153-9dfe-4bee-a0a4-69196eed7584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 523,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71528a1-3065-41ea-bf6a-d5344b648bc6",
        "cursor": {
          "ref": "adf94f21-700f-4729-ac1c-f2eb388496b7",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "89fbb87d-172d-4351-84aa-a671cd8c49fd"
        },
        "item": {
          "id": "e71528a1-3065-41ea-bf6a-d5344b648bc6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d070d0e9-cdb9-4089-8a31-6c9ef4423319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 514,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a0d29d-352a-4693-8990-ed8ca0a34467",
        "cursor": {
          "ref": "d18015f1-6956-4425-aa27-94c0c322007d",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "980bab3d-54b2-47c7-bcfb-538794f1949c"
        },
        "item": {
          "id": "02a0d29d-352a-4693-8990-ed8ca0a34467",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "38de7162-6ed0-4ba6-b85f-c3e6c74e5e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37ea712-c3c1-456e-a0a5-e85717a91878",
        "cursor": {
          "ref": "4ad7db30-d3c6-49eb-8345-ba7def40926a",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "16724365-dbf9-437d-95ed-7ce8ea45e832"
        },
        "item": {
          "id": "b37ea712-c3c1-456e-a0a5-e85717a91878",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "020f7933-1916-4a26-a827-f2a951f3136c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e930423-6d92-4d0a-a07a-b3f014e3f137",
        "cursor": {
          "ref": "e8abbdec-95b8-4504-9a56-bcea53f5b7a6",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3a6f729a-1423-4574-8ca5-1cc631fcca29"
        },
        "item": {
          "id": "7e930423-6d92-4d0a-a07a-b3f014e3f137",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "427b3ffb-158a-446b-8d4d-c8c679eb8aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80aa2e4f-2ba5-4310-a4cc-e40ce3d41fed",
        "cursor": {
          "ref": "8ba0e613-6ce3-47b5-85e9-73c48e0a7e07",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "479f98f8-4cad-4fb6-8011-fcda434bb1c8"
        },
        "item": {
          "id": "80aa2e4f-2ba5-4310-a4cc-e40ce3d41fed",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "93792bcc-79d0-4682-9562-22df0f651274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf65428d-f6d3-45c1-bd0d-21e76f6b1d3b",
        "cursor": {
          "ref": "8f462f8f-f2a2-47d1-8c3a-0cd2267ef1e4",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d8b3059c-44f7-42d1-99fa-0f910f14647a"
        },
        "item": {
          "id": "bf65428d-f6d3-45c1-bd0d-21e76f6b1d3b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "dfd44e9a-c578-47ed-92ba-8cd56b7a4114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 941,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b503d7-d549-40f3-b678-1f7eb5175eb1",
        "cursor": {
          "ref": "045beee5-00ad-417c-beeb-062020693a17",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5b26b711-7b22-484a-832a-f1b55ce6cbd2"
        },
        "item": {
          "id": "e7b503d7-d549-40f3-b678-1f7eb5175eb1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6473ff11-37c1-4ce9-b5b6-865730450f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c891ce-3d5c-4fa8-b646-8d7c894e9e15",
        "cursor": {
          "ref": "a6beb859-233b-4a80-a71c-6ff5599c8b59",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bffda825-e2a3-4bfe-a3f3-e405a709fc84"
        },
        "item": {
          "id": "57c891ce-3d5c-4fa8-b646-8d7c894e9e15",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c629fa5a-3d33-42a8-a781-ac922b7cb6f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 914,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7444b-4c60-4041-b1f7-aeb3bcf6007a",
        "cursor": {
          "ref": "e30c7f7e-e0c0-468e-b467-c7d774a60ffc",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "57155fd2-9429-439b-938b-6aa19fedea95"
        },
        "item": {
          "id": "7eb7444b-4c60-4041-b1f7-aeb3bcf6007a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3554c591-994d-4edc-bd25-35fbe83d1bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5423518e-fa8e-435a-927a-5e90d840c220",
        "cursor": {
          "ref": "2c96a58f-13bf-45bf-9f02-d5331b7452ac",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "7d607ee3-d5f6-4ca7-ab21-28b7703a2e20"
        },
        "item": {
          "id": "5423518e-fa8e-435a-927a-5e90d840c220",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0ef6eceb-cb7e-436b-a5a9-1ecc01265b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1029,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499a9205-d8f2-49df-ab59-c2bdf886d2e0",
        "cursor": {
          "ref": "31cb7141-4516-497b-bbd2-3003f53646ce",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f7ccf801-5110-4807-892e-76e6b273c0ee"
        },
        "item": {
          "id": "499a9205-d8f2-49df-ab59-c2bdf886d2e0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c6d9a5d1-9802-48b8-9de6-182899d98fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104aad6a-cd52-41d8-8a4c-973953ff34f0",
        "cursor": {
          "ref": "0d430a90-7231-4928-9a8a-aeb2247dcd08",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "6d74d4c2-b93d-4604-92de-1606bfbc1fc5"
        },
        "item": {
          "id": "104aad6a-cd52-41d8-8a4c-973953ff34f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "39ffd6e6-2996-456f-bd09-d94d348a26a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 897,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "873597f8-28a6-4190-9775-f2561faf4f37",
        "cursor": {
          "ref": "9c661f87-78fb-48d0-8707-a487781a1c67",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "683faa9c-92ce-4f6f-9c4e-1ba7dfce0d12"
        },
        "item": {
          "id": "873597f8-28a6-4190-9775-f2561faf4f37",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e27fb9db-ecaa-47db-8760-918332543328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d97a99b-7f3b-4ae1-9b8b-3ce1a9051c56",
        "cursor": {
          "ref": "9854bfa1-edf6-43a2-9f85-94bd0ea824d9",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9750cbc9-0f01-4905-a7c0-381626d112cd"
        },
        "item": {
          "id": "9d97a99b-7f3b-4ae1-9b8b-3ce1a9051c56",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a463fe3f-2476-42af-9b29-ffad6044de60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e7bc11-60b7-4d7a-8d08-becbe3f2848c",
        "cursor": {
          "ref": "f27517ef-3221-4f16-b89a-a12fa76e5ca4",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ad0525b3-1a58-4eb0-bb53-213807226a3e"
        },
        "item": {
          "id": "24e7bc11-60b7-4d7a-8d08-becbe3f2848c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7acb4116-baf2-45f2-9f2a-2883f6408cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00493825-7da4-4a27-8cff-a12379077f8a",
        "cursor": {
          "ref": "86529b43-95c4-406e-9cda-7c823d578149",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "32ee0e24-c9fb-4bde-8a25-9633139378fa"
        },
        "item": {
          "id": "00493825-7da4-4a27-8cff-a12379077f8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a056c8a8-17d5-43fe-9ce0-df7b082ec165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7410d10-8e25-4b17-b6a5-50a9872a746a",
        "cursor": {
          "ref": "d76bb7fe-d876-4794-9c3e-3fed51f93a49",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bc06cfcf-98ac-4436-b2b1-c72c827849a2"
        },
        "item": {
          "id": "d7410d10-8e25-4b17-b6a5-50a9872a746a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6239579e-dbca-488e-8ab3-244a3c7284da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e598e40e-31b3-4865-92c1-356222644454",
        "cursor": {
          "ref": "bfd72c06-0b75-4b44-a447-1b687981175d",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b15ac298-33d3-4bb4-a393-dfea6dbaa9ab"
        },
        "item": {
          "id": "e598e40e-31b3-4865-92c1-356222644454",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b1e2b021-a546-47b1-ae08-a716ea218d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 536,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ac73b-d897-4617-b69d-4a7c086f94b4",
        "cursor": {
          "ref": "91563be3-3c01-4dd0-b6c9-c345c16001c7",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "761c0973-ead1-4194-9b89-0800457d13c0"
        },
        "item": {
          "id": "266ac73b-d897-4617-b69d-4a7c086f94b4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "79d01a34-af1f-4d7f-ba2a-0825036fc6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6115030e-6034-44d9-9eab-92e91ae06ef4",
        "cursor": {
          "ref": "c4c3eeb1-7b08-4e17-9259-64a243e856a0",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "758af54c-f20b-4735-8535-d0b15462f6f2"
        },
        "item": {
          "id": "6115030e-6034-44d9-9eab-92e91ae06ef4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3ae19af2-9a9d-416d-ab5c-fe84d1b4aa21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 517,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fba2d8a5-4fc2-489e-bcd8-0cfe8eb4e240",
        "cursor": {
          "ref": "a85278d1-4fc8-4053-9037-16ca546e9910",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "83f4ca8d-52c1-42b5-adb8-f76c7cb48d97"
        },
        "item": {
          "id": "fba2d8a5-4fc2-489e-bcd8-0cfe8eb4e240",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "8f96cb66-c0aa-41fb-96b6-1a2b7541dc28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6fa7a2-fc53-4e2f-b5df-3bd5178c60e4",
        "cursor": {
          "ref": "a1a25fde-4eaf-4bb9-a6ac-e2b579a777d3",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b1df1af5-cb89-496e-942f-cb7296e20938"
        },
        "item": {
          "id": "1c6fa7a2-fc53-4e2f-b5df-3bd5178c60e4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5673dbf1-c39e-4d7b-8fd5-4198aba146f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c357547-15e0-4991-b305-8c199e178733",
        "cursor": {
          "ref": "1d3518ce-46d2-4e20-bab2-c699159adb3b",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a75c15fe-831e-4024-9cd9-c9a27ddfefa3"
        },
        "item": {
          "id": "5c357547-15e0-4991-b305-8c199e178733",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "58a65d35-790b-4e46-8672-68dd677fbab0",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 589,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ec628f-87fc-4126-a76d-67abadec3a74",
        "cursor": {
          "ref": "e57d4311-1de2-40c6-b941-59de2b036aa1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1b0e76f0-5fc3-4029-8a4e-c994e6e35488"
        },
        "item": {
          "id": "56ec628f-87fc-4126-a76d-67abadec3a74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "94231c26-574d-403c-a0ce-e9fad8795a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ec628f-87fc-4126-a76d-67abadec3a74",
        "cursor": {
          "ref": "e57d4311-1de2-40c6-b941-59de2b036aa1",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1b0e76f0-5fc3-4029-8a4e-c994e6e35488"
        },
        "item": {
          "id": "56ec628f-87fc-4126-a76d-67abadec3a74",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "94231c26-574d-403c-a0ce-e9fad8795a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b03cc-47fc-423a-922b-caddcf0b6aba",
        "cursor": {
          "ref": "0b72be6f-bf7d-421a-a685-171ffca76e16",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "17787106-1221-4aac-9532-7e91ccc4be8f"
        },
        "item": {
          "id": "aa3b03cc-47fc-423a-922b-caddcf0b6aba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "6ad4748c-177b-47fe-b54c-71c0e1a29f76",
          "status": "OK",
          "code": 200,
          "responseTime": 781,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "ab9f0f74-a265-46b8-bfa0-2e27e7291b8a",
        "cursor": {
          "ref": "cad68fbf-1c16-4118-9bb2-3a9962e07167",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "93aa221f-2f38-4923-b6d5-594675befeae"
        },
        "item": {
          "id": "ab9f0f74-a265-46b8-bfa0-2e27e7291b8a",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "01a3ff5f-8a79-4bb5-8a9c-3c625e60d62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6cd7b0-92a1-4960-8403-558c0afb7aa8",
        "cursor": {
          "ref": "07b19d03-e325-4ab8-957f-e7e147f61c49",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c91d8e1b-8c0e-4788-8d08-05b31743a6db"
        },
        "item": {
          "id": "6a6cd7b0-92a1-4960-8403-558c0afb7aa8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "941bae64-fd5b-448d-800c-a62eb2327297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 525,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b394865-8d2b-43a8-9f1a-5cd103e28176",
        "cursor": {
          "ref": "30a9eb31-44bf-4ec8-87be-2918f71ea1a3",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "33474480-03a6-46aa-8fa7-bc37563d08f0"
        },
        "item": {
          "id": "8b394865-8d2b-43a8-9f1a-5cd103e28176",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ed81bc0-3a97-4942-aa49-6af67952cd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 531,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2337c802-3f0e-4ab2-b2da-d741b637e62f",
        "cursor": {
          "ref": "c7a7afbf-0ee7-4b29-8856-e43cfd7bd599",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9040d2ea-5c73-4b5d-a4f2-c32218b6bef4"
        },
        "item": {
          "id": "2337c802-3f0e-4ab2-b2da-d741b637e62f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "94bd2ed1-067f-4bfc-bcf7-22bbbc21ce38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1685221-3c6f-4aca-9980-f52298e7b7af",
        "cursor": {
          "ref": "664911db-4183-47ae-9ca8-f76278ee54ea",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "97249ca9-e974-421a-bfe6-b637a4c5cc64"
        },
        "item": {
          "id": "d1685221-3c6f-4aca-9980-f52298e7b7af",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b7a820ed-16b8-4d6e-8420-0dcf0dfc712e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "766b5031-b8f5-443b-95bd-0cb3911e94d6",
        "cursor": {
          "ref": "01597645-853b-4a41-8f01-b93e42caf4ba",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cd49ecb6-da48-40a0-8558-25aec296fb48"
        },
        "item": {
          "id": "766b5031-b8f5-443b-95bd-0cb3911e94d6",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9797fd63-d796-4df6-b709-0fc17a11aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fc33d39-a8de-415f-ae48-2e56440d357d",
        "cursor": {
          "ref": "37ac4f6f-d713-41cc-b40b-7a60967c9128",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "77527277-a0b3-4c7d-8abc-88967c0584fb"
        },
        "item": {
          "id": "9fc33d39-a8de-415f-ae48-2e56440d357d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "1705aa1b-dee9-41de-88cd-45d6496a402b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5a2163c-1338-4957-93d9-96d4a10ef8f9",
        "cursor": {
          "ref": "04d9c27f-d304-4b6b-b987-133dbede9c45",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "75808517-447b-4c1f-8418-0b0f86053012"
        },
        "item": {
          "id": "c5a2163c-1338-4957-93d9-96d4a10ef8f9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1a2eb7ac-3157-4baa-9cc7-50b1bcefdd48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d26a093-4014-4f0f-9fc4-619feb08ba54",
        "cursor": {
          "ref": "32a0ed91-4ab4-410a-a432-e6c10d395e1b",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "384dd9d9-f85d-4cf1-8062-3fe5ba6196f3"
        },
        "item": {
          "id": "6d26a093-4014-4f0f-9fc4-619feb08ba54",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "6cf87b61-4392-4381-b1b1-4f420d2bd63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a161ca-5828-4245-bda2-f917278f9809",
        "cursor": {
          "ref": "c2a7346c-4bee-4390-957d-9fdd8d80b23a",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9ec02adc-e628-4aa1-b444-46f93adacd8a"
        },
        "item": {
          "id": "55a161ca-5828-4245-bda2-f917278f9809",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c2100652-2f7c-4833-bafa-ec1692fd4538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce48f6be-c816-4394-995f-932453f6d71a",
        "cursor": {
          "ref": "8d5669a8-d744-496f-b9fe-d23801be091d",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "f8af2f25-4484-4667-97a2-b6ce26d3e65b"
        },
        "item": {
          "id": "ce48f6be-c816-4394-995f-932453f6d71a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f41d6137-1496-4179-8f6b-cd5ee019696b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc73e5c-4770-45df-875d-1ee9e801861b",
        "cursor": {
          "ref": "c66eddca-cda6-4444-94bb-5b0254aa2cc7",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ba77ce8f-0efb-4a62-8750-48ce250cdba4"
        },
        "item": {
          "id": "fcc73e5c-4770-45df-875d-1ee9e801861b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51c39c60-914b-46c2-ab93-7768e9ae68e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1732e2-c163-48dc-9b39-eda968ed2ba9",
        "cursor": {
          "ref": "5a635d5d-7910-41fa-83cf-c87659323a8e",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8c3e21fd-53f4-417c-bfc6-d4f29134bede"
        },
        "item": {
          "id": "3f1732e2-c163-48dc-9b39-eda968ed2ba9",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "cbab4490-195d-4418-a96d-7e9498a4d831",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 415,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e3c51f-d1ca-4b6b-bdad-9039dbd66576",
        "cursor": {
          "ref": "3c1684e9-da34-4ace-9636-44fe69065d9a",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d5edb3c4-98b2-4301-924b-1f4d089bd57a"
        },
        "item": {
          "id": "57e3c51f-d1ca-4b6b-bdad-9039dbd66576",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ba63ae44-b368-4883-a051-dec5ceebb4bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931f292d-d19f-49e2-91bf-f95a93ea1a20",
        "cursor": {
          "ref": "bfa1338e-48d8-4bc0-8e4d-842865e819ce",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "be59116f-8276-4cc2-b8ed-6a559b757111"
        },
        "item": {
          "id": "931f292d-d19f-49e2-91bf-f95a93ea1a20",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "225b634f-8505-40d5-819e-5390a1aae19b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 317,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18e4eb5-f211-4d7e-ad8b-02a3f18c8f16",
        "cursor": {
          "ref": "da5f85da-a9b0-4d6c-ad2f-c9d83658cd35",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "811d1a9f-55c9-4b17-a3d0-574581fa8f3e"
        },
        "item": {
          "id": "f18e4eb5-f211-4d7e-ad8b-02a3f18c8f16",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "96930b0e-8bd7-4197-beea-4f1b262f57c1",
          "status": "OK",
          "code": 200,
          "responseTime": 2063,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "a112a077-acff-410f-ba2c-838e0bccde91",
        "cursor": {
          "ref": "84084f95-1886-4f5a-adca-f28b0266b71c",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7edaedab-ac58-41df-8352-2b79070c4225"
        },
        "item": {
          "id": "a112a077-acff-410f-ba2c-838e0bccde91",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c8d8235f-ef68-4a95-89ab-09e9487d4641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae187425-c500-47fe-9dc8-fb1b645fe105",
        "cursor": {
          "ref": "debe6648-3fc4-4500-a96f-0e308016f0ac",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4576dd3b-8ee0-4941-8d5d-979e9ee560ce"
        },
        "item": {
          "id": "ae187425-c500-47fe-9dc8-fb1b645fe105",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "16994ba0-bfe5-486c-93b2-cb64d00aefc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa5b82d-bf73-4891-88ba-39c97f03874c",
        "cursor": {
          "ref": "c08c3904-18e2-4e4f-b4cc-2ec57f72b580",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "3e916768-2410-40aa-a60e-2f493d949a81"
        },
        "item": {
          "id": "9aa5b82d-bf73-4891-88ba-39c97f03874c",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "32d1ab3f-7815-4738-a88e-a551c03dfaa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be36676a-9748-49fa-a44e-a7fb0e41d12f",
        "cursor": {
          "ref": "dd7a6085-91ce-4b15-8743-9b500d551921",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "88ab4319-03e2-42ee-b9c0-bd258a18268c"
        },
        "item": {
          "id": "be36676a-9748-49fa-a44e-a7fb0e41d12f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "2b51d201-4808-4de5-875a-4f2a21d59ac5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c4e41a-e24d-4fe8-8088-c13339d59a9c",
        "cursor": {
          "ref": "eb8aae53-496d-491b-832c-0aa9a2ff7c91",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f9b0e4cc-f356-45ac-9c67-e407a7e870df"
        },
        "item": {
          "id": "53c4e41a-e24d-4fe8-8088-c13339d59a9c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "619f6a29-fb56-432a-b74b-8ca70865d8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6cef095-7126-4b29-8529-bb9a8aee50e2",
        "cursor": {
          "ref": "865bc812-5544-40b6-8565-f45fd2b7a7c6",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "05dda7ed-1b40-45af-8eb2-e7f2aa4464c0"
        },
        "item": {
          "id": "c6cef095-7126-4b29-8529-bb9a8aee50e2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "00fcc556-86fa-4dd4-bbce-dbfde3f719f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bcdf0ef-d844-4356-a05b-6d462dbf37d3",
        "cursor": {
          "ref": "b288ce0d-ef40-4e7f-9518-ba23bad5df28",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "39a83728-a880-4ca7-92a8-8b6a16dba2cb"
        },
        "item": {
          "id": "0bcdf0ef-d844-4356-a05b-6d462dbf37d3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d1d30f50-69e0-4b65-8d2f-a199dc6b6073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad40b9f-86cd-4320-9760-be02b6885e39",
        "cursor": {
          "ref": "fb869c0c-96ba-4954-85da-463189c958c4",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0e15efd0-0ff5-475e-ab88-fd4a95a56a1f"
        },
        "item": {
          "id": "5ad40b9f-86cd-4320-9760-be02b6885e39",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7788dc69-6650-4a8f-b497-c20d6b274f56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03305d2-d748-46b9-9ec0-3dc5bd6df434",
        "cursor": {
          "ref": "683bed69-5a57-4d2b-8c19-920b6eba70f4",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9de47e9-2995-49c0-8928-6a9fb97c4d8c"
        },
        "item": {
          "id": "c03305d2-d748-46b9-9ec0-3dc5bd6df434",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "095dde3a-3f0b-4797-91ef-f1963f829cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5c274f-308c-48dd-b147-b101caa0d34f",
        "cursor": {
          "ref": "2a14fa3b-77a9-43bb-8871-87a1cc3306e5",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "60fe30ce-6b3a-4830-b3a5-72c841d083b5"
        },
        "item": {
          "id": "4d5c274f-308c-48dd-b147-b101caa0d34f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c7d44c68-91f6-47d4-8d52-078a4cf39c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318fb6d0-53e0-47da-b4fe-9d6b3352b3c4",
        "cursor": {
          "ref": "0d3c119b-f7b4-4d42-b701-18c0a9843bbe",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "42482b38-1a8f-4d7b-9b16-d76701db1b8a"
        },
        "item": {
          "id": "318fb6d0-53e0-47da-b4fe-9d6b3352b3c4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "abdd23f1-37a7-4056-ab2c-f73bd0305c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3769458b-c093-42b2-a12a-9576790aaeb2",
        "cursor": {
          "ref": "d70f353f-29e6-4738-b8ac-229713582561",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a588cad7-b0fc-48ba-9197-0a0a1d0fc086"
        },
        "item": {
          "id": "3769458b-c093-42b2-a12a-9576790aaeb2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dc37900c-222c-4f06-9b39-1db56f10147d",
          "status": "OK",
          "code": 200,
          "responseTime": 367,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c25a65bc-e415-4d06-82eb-4408f1ff35dd",
        "cursor": {
          "ref": "db8796f8-8a7d-4922-9a36-af466dfd680f",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "b05b8fd9-adcb-469e-b0dd-bd8c7c9558ea"
        },
        "item": {
          "id": "c25a65bc-e415-4d06-82eb-4408f1ff35dd",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "73afa99f-7614-419a-a630-adf73967aa06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c519ddd-67a3-41e0-bc70-85781af17158",
        "cursor": {
          "ref": "da642028-3d89-4261-b0d6-a73465dd7e0e",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ecea7254-1d7e-44ef-bfe0-1ce4e4a386c7"
        },
        "item": {
          "id": "4c519ddd-67a3-41e0-bc70-85781af17158",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3ae725e7-0dd6-4e32-8d49-3d3f5feaf37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8990e131-e844-423a-a3bb-74f1f1b664c6",
        "cursor": {
          "ref": "e762b6b6-26bf-481d-bddb-7098003c6b80",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f90626aa-fd4c-40b2-bf0a-2b4e06cf576d"
        },
        "item": {
          "id": "8990e131-e844-423a-a3bb-74f1f1b664c6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "245cbd12-d4a7-4789-b9eb-4ff350495317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe21ada-02a5-4810-8190-771af221db1c",
        "cursor": {
          "ref": "f8d86b5f-7605-4317-a333-6ec2e67fddab",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "8d4fbe1a-7c4f-4b96-abb5-89b3dc822629"
        },
        "item": {
          "id": "fbe21ada-02a5-4810-8190-771af221db1c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a21691a6-4184-478f-b535-c20cfe91c96b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bf4096-8772-40ce-b475-b143baf224a8",
        "cursor": {
          "ref": "0f3de2bf-53f3-4c13-99ce-8a80c71e3e2b",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0a4d56d2-406f-4936-b58c-cbd62d839d36"
        },
        "item": {
          "id": "12bf4096-8772-40ce-b475-b143baf224a8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "da627f70-f6c7-4d96-9172-381b203538e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaca7089-0588-4511-8913-4174cb8ad416",
        "cursor": {
          "ref": "293f03d0-137b-4e7a-8ea4-0ad098016ef2",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "efc62315-3567-4ed8-818d-e04edf8fe0ab"
        },
        "item": {
          "id": "eaca7089-0588-4511-8913-4174cb8ad416",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "570a2d79-b9fa-4417-b015-862bd96e9e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 314,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c854d2a-8c16-404e-bc5f-4f60fb67910a",
        "cursor": {
          "ref": "7ba62a1d-cd1c-46dd-9190-8b3da1a84c8c",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "db8670de-8451-4b65-baa1-f04fcf8f3924"
        },
        "item": {
          "id": "3c854d2a-8c16-404e-bc5f-4f60fb67910a",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bb6d1c4b-a9b0-4934-940b-e9b52a23259c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0dbbf8e-80fc-4350-a698-b8c9d60c6832",
        "cursor": {
          "ref": "c9a17518-8dd3-4d9c-b21d-3b8502ee401b",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bef6c487-aa5a-4024-9eb4-a24705362f52"
        },
        "item": {
          "id": "e0dbbf8e-80fc-4350-a698-b8c9d60c6832",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "34eac0a2-cde0-47e4-a30d-624b317ad9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 326,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39fa735b-ac73-4b56-b6eb-8bcfbe2a6baa",
        "cursor": {
          "ref": "8e9a1d85-23bc-4b1c-b33e-7526884f4ba9",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4ca28e0b-4922-4f0f-9be8-a8d053efe9d2"
        },
        "item": {
          "id": "39fa735b-ac73-4b56-b6eb-8bcfbe2a6baa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "86294d10-ec88-47eb-8f34-882f8464b337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77991555-cf7c-422b-8ce2-d81a38f32556",
        "cursor": {
          "ref": "0807ad06-d9dc-420c-bd45-9646630e102c",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "74a61ec8-e9f3-4f46-a6c4-c6ae7c86cbbf"
        },
        "item": {
          "id": "77991555-cf7c-422b-8ce2-d81a38f32556",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "22c65536-ad93-4f49-823d-4a4b63ecf330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc8bd651-44cd-4975-80c9-1bfbf1ea3216",
        "cursor": {
          "ref": "2f5c8685-041e-4793-9edd-ffd8f3009b5b",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "acdfed8e-f61b-401c-ac0e-5c74895a303c"
        },
        "item": {
          "id": "dc8bd651-44cd-4975-80c9-1bfbf1ea3216",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af6e1dc3-d2ad-4089-8ee5-72e3c26c7d14",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "dbc95dae-a2b2-43c8-8cd0-4e8a62cfb52b",
        "cursor": {
          "ref": "144fb076-4d2e-47b8-abac-d9d816471bab",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "37eb6d19-d3c1-44a4-9e7a-f03cae85d489"
        },
        "item": {
          "id": "dbc95dae-a2b2-43c8-8cd0-4e8a62cfb52b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2dbe33d7-bf39-414e-a023-0646c2ce1729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 325,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b0f1575-298d-438b-a1f8-05bebac0bad7",
        "cursor": {
          "ref": "151ee17a-be66-4061-ac28-fb46ed174e62",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f0f7f2d1-5296-4f11-9b47-c42eb5943499"
        },
        "item": {
          "id": "5b0f1575-298d-438b-a1f8-05bebac0bad7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "56ac84f6-9fa0-4b8d-9d7f-a447d161084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fc25eb-e366-4d07-b0f9-8729a584a4ca",
        "cursor": {
          "ref": "826831f6-043f-486c-be1e-1c84722dd393",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "a313a9f3-fb20-44d5-80ec-5051ed0049a6"
        },
        "item": {
          "id": "23fc25eb-e366-4d07-b0f9-8729a584a4ca",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "1346c9b2-5b3a-466d-90e8-69409fdbb211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40dade3d-df63-4f99-8845-9f0a1fc89746",
        "cursor": {
          "ref": "b5465415-60d8-4f68-9744-0005f8b5b46b",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3a64bcc8-2399-4532-9195-0664c3b9f787"
        },
        "item": {
          "id": "40dade3d-df63-4f99-8845-9f0a1fc89746",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "56d51b2d-9e4c-4c04-a727-d6386a7f099d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0575dffd-b9c0-444f-b0e1-eb7373d25e2b",
        "cursor": {
          "ref": "20fe4182-311a-498c-ab40-fa8926615621",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0792b304-3fae-47df-bcde-ffadf2361679"
        },
        "item": {
          "id": "0575dffd-b9c0-444f-b0e1-eb7373d25e2b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bce6a826-bc1c-4401-abbe-e9e2be5ead69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 463,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a773f-a5e9-4a8d-b879-9128ec788f29",
        "cursor": {
          "ref": "9efb6395-18dc-46e5-8418-24ed567d8c1f",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "0be07076-3fbf-4e8f-aa0d-b7423058e43d"
        },
        "item": {
          "id": "b80a773f-a5e9-4a8d-b879-9128ec788f29",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b84c8a48-372d-4333-af6f-9c1dbd052fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 449,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae4ac7c-1be5-4b88-925e-2b34200eacc2",
        "cursor": {
          "ref": "870d5c56-50c8-42f9-ab96-fc643e46f700",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4b1b3c80-bfaa-4c4e-9c8a-87c59f940be5"
        },
        "item": {
          "id": "bae4ac7c-1be5-4b88-925e-2b34200eacc2",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1e3aabaa-004b-4258-8fa6-73abed7660c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60fee72f-d17c-41b5-9b5f-2b1d21135669",
        "cursor": {
          "ref": "cfd36d81-9421-4ce6-bffb-c5aaf359661d",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c900617a-e006-4e8e-9e42-8885ed08efb6"
        },
        "item": {
          "id": "60fee72f-d17c-41b5-9b5f-2b1d21135669",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "9411b1ec-a959-4de1-bc85-654cb43e13ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622b2586-0388-45e4-bc24-c2e0177a98c8",
        "cursor": {
          "ref": "ac9b7cb8-3009-4647-ab9d-318f8134139a",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "54d1a468-310d-4a66-9eea-e0a61fdab37d"
        },
        "item": {
          "id": "622b2586-0388-45e4-bc24-c2e0177a98c8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "24b319cb-819c-4fea-b1ec-61bdeebcd2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 453,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5465620-34e0-446a-8e8c-10a8636f2718",
        "cursor": {
          "ref": "f8450cf8-db36-4042-893b-0a966333c79a",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0852b71e-a269-41c9-a54b-0052143e906a"
        },
        "item": {
          "id": "e5465620-34e0-446a-8e8c-10a8636f2718",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f7b6a6d8-53f7-482c-8956-3accc0d062f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 428,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fda50914-f03e-48ea-9663-c0dea907df08",
        "cursor": {
          "ref": "2b50cc13-62b6-4173-b953-f1850229c1b9",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "eb00fe16-7c40-4a8c-a3a2-45b95d6de9d4"
        },
        "item": {
          "id": "fda50914-f03e-48ea-9663-c0dea907df08",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "28eb2304-394f-499e-8ff8-f717c9363ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01e9f9b-a4bc-45ee-aae4-f3fc8333297d",
        "cursor": {
          "ref": "ac56268b-9140-466e-97f6-bc4879acd69d",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a23d1374-7b20-4aab-9594-5d50508b9d51"
        },
        "item": {
          "id": "a01e9f9b-a4bc-45ee-aae4-f3fc8333297d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "89c17f42-453e-45cc-ad36-c687984fdc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 465,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d9ac9a-5e58-4bb9-b001-be780f04c05c",
        "cursor": {
          "ref": "0a2664a2-c46b-497d-bff3-7d322631de74",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d47abc97-b4d6-42dc-9863-e78e768e6609"
        },
        "item": {
          "id": "01d9ac9a-5e58-4bb9-b001-be780f04c05c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "768f1118-cce5-40de-aa26-447c6054f042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 521,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b104589e-d52d-41a1-8fc8-08b0655eebed",
        "cursor": {
          "ref": "79d9bf68-9c53-4798-a1da-c7dd94cc17b9",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e76b0d08-f9a5-4dda-bacd-df1a57d37d73"
        },
        "item": {
          "id": "b104589e-d52d-41a1-8fc8-08b0655eebed",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6527a14e-3c4a-4be5-925d-e58f1565c67b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7009b762-ff23-4cd6-9e1d-cf94ffc3b264",
        "cursor": {
          "ref": "0ccb5571-c7f9-4981-a93b-1fb649fe9355",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ce0e0fbb-68fb-45b4-b5b5-a889571e4d25"
        },
        "item": {
          "id": "7009b762-ff23-4cd6-9e1d-cf94ffc3b264",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c40e57cb-b228-4fdd-aa7c-0bb206cadb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2525fb55-d53c-4c47-b3d1-86faec3a1512",
        "cursor": {
          "ref": "a3002d0a-f4ef-4446-ae08-100e99ac05f3",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c6c23537-fd25-4754-beff-773914d2291a"
        },
        "item": {
          "id": "2525fb55-d53c-4c47-b3d1-86faec3a1512",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "53cf9151-7571-4b84-a2d4-991229a554cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ccbbcc-1e53-44ed-9017-1823f20ae495",
        "cursor": {
          "ref": "1db4521c-35e5-478a-9eeb-cc65f6c31de0",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b975a89e-2fc1-4181-994e-dc2cdce09ba0"
        },
        "item": {
          "id": "18ccbbcc-1e53-44ed-9017-1823f20ae495",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d4d01da6-cbc4-4b02-9cad-99a1569fff8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3c6d6e-46d2-49d7-94c9-1f49c9cb3e5e",
        "cursor": {
          "ref": "ae7017ca-3eb8-4e93-8b8d-ce10cbf8f404",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "8f071862-0270-4476-9c8b-c23d46dbf41c"
        },
        "item": {
          "id": "ae3c6d6e-46d2-49d7-94c9-1f49c9cb3e5e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a6747e01-fd86-4a41-a43a-facb965d7d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 460,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7a11fe1-45f7-41f5-bfe4-6d82a47459fd",
        "cursor": {
          "ref": "b2df1f78-cb51-49a5-97a9-d0ef09288041",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "66031bca-656a-4bed-adc4-0840243fd985"
        },
        "item": {
          "id": "d7a11fe1-45f7-41f5-bfe4-6d82a47459fd",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b3e20d07-7d99-4946-bfc6-293a86f499ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 443,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc17bf65-c8c8-4ea7-9291-30ac74a28e6f",
        "cursor": {
          "ref": "b75686d3-427e-4028-a392-c4d92eced6bd",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "a1510387-9528-437a-9f13-489951a1637a"
        },
        "item": {
          "id": "bc17bf65-c8c8-4ea7-9291-30ac74a28e6f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8c733417-004e-458c-b3d1-ce4fdf904f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bec73ad-034e-43f3-80e9-cd61af95dd9d",
        "cursor": {
          "ref": "020c6592-016c-4b37-93b5-19f636bbbf7a",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "547c1178-0198-40b1-922d-c8bdccc08548"
        },
        "item": {
          "id": "4bec73ad-034e-43f3-80e9-cd61af95dd9d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e89cbb78-0240-478a-9e73-20e01656171c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bc00e4-da28-49de-a992-dafb9b90bea9",
        "cursor": {
          "ref": "aea2f95d-9a82-4e13-b093-600b10048011",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "335f9178-5dfd-467e-878f-e24a10b652c0"
        },
        "item": {
          "id": "43bc00e4-da28-49de-a992-dafb9b90bea9",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3b4d44a7-e52d-4f74-9b54-a68e87f3870f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 461,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db380f10-60a0-4485-a147-ea09f886a951",
        "cursor": {
          "ref": "645f6969-e67a-4e02-b848-07d5c45abbe6",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c686d0e3-7e99-470a-827b-9275695a3d21"
        },
        "item": {
          "id": "db380f10-60a0-4485-a147-ea09f886a951",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "04a8be8a-c38a-467c-a127-631b28a662f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 478,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3675a9-3602-4302-9da2-25f6b49cf08d",
        "cursor": {
          "ref": "4888fb87-b233-46ff-8a2a-d76fecde23d1",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d655fae4-6d4d-4e1e-bfc4-675240df904e"
        },
        "item": {
          "id": "3a3675a9-3602-4302-9da2-25f6b49cf08d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "61a73486-865b-4768-8bcf-ddb173bcfce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 470,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84464a7-f296-480a-ac93-12b96d2c720b",
        "cursor": {
          "ref": "5bf35e11-380d-46f8-967c-512c4294ce0e",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "cdc78f20-3b6f-4927-9d31-97ed5543f8bf"
        },
        "item": {
          "id": "f84464a7-f296-480a-ac93-12b96d2c720b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "aa003837-1340-4c66-b21b-c0bfe3029a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 500,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54234d98-ea00-44fb-b011-4bf7455f3fb2",
        "cursor": {
          "ref": "240977d0-9ca4-4ff2-9140-4628ca3b3ad3",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9cdd20ef-48fb-45bd-8e65-858b4905cbbd"
        },
        "item": {
          "id": "54234d98-ea00-44fb-b011-4bf7455f3fb2",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "9387b164-9a65-4644-9cfe-846830ab5325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b772382e-ff71-4804-b775-dfdf250d9960",
        "cursor": {
          "ref": "fe2ff0e8-c14f-4423-a734-eb264636d0e9",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "065cc670-afc7-4bd9-91b6-90a63c7a4758"
        },
        "item": {
          "id": "b772382e-ff71-4804-b775-dfdf250d9960",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "eabf8b29-0935-4eab-a657-fa7a30cfed9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 456,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68719d8-20cc-4ca5-a747-ecee84d96a9a",
        "cursor": {
          "ref": "99155c11-8c2d-4e22-94a5-ef70ad55ac98",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "691ebd8f-3fb2-43e5-8db3-860456de9d60"
        },
        "item": {
          "id": "d68719d8-20cc-4ca5-a747-ecee84d96a9a",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "99acb14c-d473-46f4-8a06-ec7e3c6ff46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 459,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "753ac12c-8bf4-41aa-b392-9a74341df766",
        "cursor": {
          "ref": "a787f8b5-738f-4d02-8d1b-a47511eef260",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "82f30251-e4a6-4679-94e3-ba9b73328eed"
        },
        "item": {
          "id": "753ac12c-8bf4-41aa-b392-9a74341df766",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "82c091f0-b519-4352-abeb-1e907177bddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 400,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e751a467-113f-40cd-af71-1910a7e232a4",
        "cursor": {
          "ref": "b1e8ced0-af7f-4032-aced-fe87589119d7",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "41bad242-3afe-4e8d-8da0-7212daaa392f"
        },
        "item": {
          "id": "e751a467-113f-40cd-af71-1910a7e232a4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a8764646-8a93-4149-9596-ae886d73a679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b130d1b6-f7bd-4644-9cc7-bfa10c6f6cb4",
        "cursor": {
          "ref": "bd6be66b-a2dc-4a03-8800-5f15ddc19d94",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2973702e-cbf1-43f3-b4ba-e74a59449d50"
        },
        "item": {
          "id": "b130d1b6-f7bd-4644-9cc7-bfa10c6f6cb4",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4c2bd969-529f-4f1e-abdc-ae8686552a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cab688-b444-46fb-87fa-6eb2f9580a10",
        "cursor": {
          "ref": "1cff30e2-374b-4b28-826c-7364f5eac459",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a5095930-c1c3-4e76-89f5-7839e8d10c5a"
        },
        "item": {
          "id": "99cab688-b444-46fb-87fa-6eb2f9580a10",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eb169528-05d5-4b89-a671-cff443b392b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 487,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a4555d-3631-4b55-81d2-a3f09cd4178c",
        "cursor": {
          "ref": "ffcdccd9-3b35-4119-88cd-6d4f8074eeaf",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "357a2476-6fe9-46ed-b469-07baa8790253"
        },
        "item": {
          "id": "e0a4555d-3631-4b55-81d2-a3f09cd4178c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "158fda76-e8e6-416f-947e-b30d5bd32e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cf2bd0-1b52-4ea7-b1b9-95bc571de354",
        "cursor": {
          "ref": "da94a640-83c0-4b73-b943-59e9ab0cbb6c",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d9d7de40-64cb-4a4a-8969-b3438746d415"
        },
        "item": {
          "id": "24cf2bd0-1b52-4ea7-b1b9-95bc571de354",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "1173b735-2cdb-4568-b52b-25e6f8952bf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 467,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31668828-6697-4b57-b80c-b6c27be125a5",
        "cursor": {
          "ref": "08065dea-6ae1-414f-a534-b5b0f31cc40c",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d13b2cad-b02b-4bb1-b48b-81c786e0d151"
        },
        "item": {
          "id": "31668828-6697-4b57-b80c-b6c27be125a5",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "94d925c9-793b-4088-b8a2-4cc2729dc353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 403,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da82eda7-9e2d-4be2-b918-0e5f744d3b92",
        "cursor": {
          "ref": "bc6f53d5-db89-410e-9c22-261b86e66e3e",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0d15e42a-db95-48cb-b2d7-40c64539367d"
        },
        "item": {
          "id": "da82eda7-9e2d-4be2-b918-0e5f744d3b92",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "32e8344c-459d-4356-bb6d-b493ed388d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e3a4dbf-ea5b-4119-bbee-5201dcc9ea07",
        "cursor": {
          "ref": "bdb7b138-3143-4364-990c-312e772915b7",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "d25c8ffe-8a54-40a1-9780-52f26c276dc9"
        },
        "item": {
          "id": "3e3a4dbf-ea5b-4119-bbee-5201dcc9ea07",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "04bc2e6e-89e8-4227-b016-eab534fb4b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37a1a88-4b45-42ee-bdd7-f8a1a2b6e386",
        "cursor": {
          "ref": "40d20a60-16ba-41cc-8174-78af7d3fbbff",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "02c80d9d-a306-4046-a6bf-b226df4fb479"
        },
        "item": {
          "id": "a37a1a88-4b45-42ee-bdd7-f8a1a2b6e386",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "139935ae-fd0f-47ee-a7e5-8526331329c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 422,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b4b033-461b-4b32-b806-91d02218865c",
        "cursor": {
          "ref": "149e8d45-f823-47ec-ba9c-bf283eadb863",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "24747862-e937-4403-97ef-787340065379"
        },
        "item": {
          "id": "d8b4b033-461b-4b32-b806-91d02218865c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7e1944b4-03ec-4938-bf3d-17a5cd012838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 424,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6dce3b7-cf84-4b34-b36a-3552d64fe21f",
        "cursor": {
          "ref": "d3c09687-b6cc-438e-a3a8-4794e3eaddec",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "a1eefb3f-4044-4a36-8b59-3d2113c22bc6"
        },
        "item": {
          "id": "b6dce3b7-cf84-4b34-b36a-3552d64fe21f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1ae5236b-dbe2-485d-a3b1-4b89f9874de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 446,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c46a09c-26bf-4f46-9f7e-92db1f7b21cd",
        "cursor": {
          "ref": "4d98d78b-7088-439f-bf62-f802cfc07a9c",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3e02b253-a295-4d25-9828-d388e58ef728"
        },
        "item": {
          "id": "2c46a09c-26bf-4f46-9f7e-92db1f7b21cd",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "15d346cd-cc52-4ab2-89d9-21fc557c8f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 429,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0315a677-26dd-46c1-85e5-06d0a5b33a6f",
        "cursor": {
          "ref": "b2c681b6-b4b0-4356-8918-938c5001037d",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "7d31d545-de35-46a3-a690-8c8a10976c21"
        },
        "item": {
          "id": "0315a677-26dd-46c1-85e5-06d0a5b33a6f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a7f35d5b-fafe-4f5f-998b-97fdf28dab85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 457,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c1d82e-9a96-4c47-ac3c-5fddc041251e",
        "cursor": {
          "ref": "80543d07-dc74-4220-800e-63d3a4fd9e31",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6a63c69d-5186-4c0f-836d-017050d9e9dd"
        },
        "item": {
          "id": "a5c1d82e-9a96-4c47-ac3c-5fddc041251e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "32510648-5aa4-4ea3-b4a3-464db68550cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 396,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c4772d-6e7f-4890-8710-4a197ff8fb69",
        "cursor": {
          "ref": "4e968ba7-7b60-410c-a6b2-33b603cfdde4",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "63fb2f81-9808-4b41-850a-f0bac3c15aa1"
        },
        "item": {
          "id": "90c4772d-6e7f-4890-8710-4a197ff8fb69",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "9cef92c7-9f67-4657-9c2a-4dc88137b48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 434,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661fc81b-e85d-4b04-91d6-05757bbe2b6b",
        "cursor": {
          "ref": "f427832f-60d1-445d-980a-fc6cef82104e",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ac512f85-3534-48f9-a498-f377e7e790a8"
        },
        "item": {
          "id": "661fc81b-e85d-4b04-91d6-05757bbe2b6b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8457bc18-af77-4569-9338-045a625b7938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da14138-de5c-49f4-8402-b57e24fdda3b",
        "cursor": {
          "ref": "6430df79-6b3d-4d5c-9291-a0c53d17b041",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "07b1639f-a47d-49e9-af34-559697a8ec85"
        },
        "item": {
          "id": "2da14138-de5c-49f4-8402-b57e24fdda3b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d1a7c31c-de10-4cb5-8b40-69dcd4811dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 417,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bfeed18-c956-4e71-b369-765244684066",
        "cursor": {
          "ref": "c0345588-0057-412d-a493-9cffa624acb8",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "99146872-be31-4595-a933-df6de22452e4"
        },
        "item": {
          "id": "8bfeed18-c956-4e71-b369-765244684066",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "4f54958f-1cd7-40ca-952b-3644a6d09227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 410,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c32b7f-ee89-478d-9404-6dc86ba3a2ea",
        "cursor": {
          "ref": "39389a37-a8e2-4d23-9a4d-9d2e9e82ff8e",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4405874c-65d2-4a99-a174-d037446c6818"
        },
        "item": {
          "id": "06c32b7f-ee89-478d-9404-6dc86ba3a2ea",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "50125703-ac19-49db-aad4-3edae5e2ff7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 473,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf1d6da-d987-4e5a-8a55-3260bfbea78c",
        "cursor": {
          "ref": "52112670-8798-4358-a69d-9c2773e8b9f6",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "0e8698c2-6872-4c08-9f0f-04b7af008655"
        },
        "item": {
          "id": "baf1d6da-d987-4e5a-8a55-3260bfbea78c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ed92131a-445f-466f-b9f7-c3bd0784fd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02dd0bad-8fe2-464f-a3a3-3223e81c8ce4",
        "cursor": {
          "ref": "b0a25934-80e2-4e05-85ea-bd7f8a90ebbf",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "8a92ebb1-111b-4b31-8969-a26a99564117"
        },
        "item": {
          "id": "02dd0bad-8fe2-464f-a3a3-3223e81c8ce4",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bd1f023a-84bf-490e-be2a-ab406feb501c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d879ef3c-103e-4ad2-8ae8-8fbe0feae248",
        "cursor": {
          "ref": "237ca97c-ba6d-4d2c-873b-2e75613ff442",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "65dbeccf-31c5-4d1f-a0ca-1908bf004b4c"
        },
        "item": {
          "id": "d879ef3c-103e-4ad2-8ae8-8fbe0feae248",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "62838ba9-d19c-4ae7-91ec-675c3792961a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 452,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10352c43-1d05-4961-bbea-73a51639dff0",
        "cursor": {
          "ref": "280041a2-3e36-487d-919d-35352a770037",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7b2c052f-0df6-4237-bc92-b6f6bb8ee44f"
        },
        "item": {
          "id": "10352c43-1d05-4961-bbea-73a51639dff0",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7391034a-3634-4712-8382-b0d419b2ec34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b66e58-7111-4434-a15a-18e62c7c6871",
        "cursor": {
          "ref": "e24c0a89-0e3a-49df-b5a1-e2db84b84140",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b5a75898-5357-43e6-93b3-3331ba1309fd"
        },
        "item": {
          "id": "74b66e58-7111-4434-a15a-18e62c7c6871",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "09f02f7d-1911-4d59-92d4-e7dd9936fbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 475,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a492bf96-815c-4a00-ba93-eef89ddfbb1d",
        "cursor": {
          "ref": "b277e369-9ba9-45e4-aa9e-414668aef79b",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0590f23c-1399-405c-8df3-fca2ce5b1266"
        },
        "item": {
          "id": "a492bf96-815c-4a00-ba93-eef89ddfbb1d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cb163f73-8def-4aa4-b98e-07060a40dda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 454,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b210bb-2e2f-448c-976d-40d5642f2ea4",
        "cursor": {
          "ref": "d4685273-0b1b-48a2-ac46-bfb80cfbbf3b",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c2447718-f081-4019-99da-fc9680624b12"
        },
        "item": {
          "id": "47b210bb-2e2f-448c-976d-40d5642f2ea4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5fb77768-4232-4a95-80ab-58fb5e3bda84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 435,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9135672b-fb58-414c-b863-f7577a9ce7e6",
        "cursor": {
          "ref": "9015d81d-2567-49d8-95fe-45665a5c1e44",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "cce90ab1-3b6e-4778-ae03-4affa6f15121"
        },
        "item": {
          "id": "9135672b-fb58-414c-b863-f7577a9ce7e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1d91a9c0-1b55-498e-918a-22aa0538bc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec12284c-99b6-4af2-90b7-43621da79a9d",
        "cursor": {
          "ref": "16c3c2c1-456d-4e01-afa1-8ea3c85fa213",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "037113c6-5db0-4fe8-b407-a0d3ed84f4a5"
        },
        "item": {
          "id": "ec12284c-99b6-4af2-90b7-43621da79a9d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "86d6d70b-26fe-4532-8206-9879067eb725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a087a0-b154-4b73-a087-b1a1a20aa426",
        "cursor": {
          "ref": "61ecfc5a-13f1-43ba-8ad7-c68564b265bc",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b68fd725-26b8-413d-93f6-16ad142e9398"
        },
        "item": {
          "id": "37a087a0-b154-4b73-a087-b1a1a20aa426",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9803b641-3620-4f0f-8102-8fe3841e96bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02ab47d0-68e2-4890-a530-0712292fd22a",
        "cursor": {
          "ref": "85dcff86-a8a4-4be4-a0a1-9d455b1ad0d6",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9badab41-8ccd-4514-b4bc-1513daea634d"
        },
        "item": {
          "id": "02ab47d0-68e2-4890-a530-0712292fd22a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "966152c6-a599-4409-bc59-c3f74254a47d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 372,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40577a8e-fdf1-426d-a690-59f8d3d9394f",
        "cursor": {
          "ref": "8a222c9e-27f1-4314-a194-9ab2a4640d6d",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e786f37c-20db-4964-a512-bf6b756d9b7e"
        },
        "item": {
          "id": "40577a8e-fdf1-426d-a690-59f8d3d9394f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "972fdd7e-e9b4-4217-ba45-eedbc03e3860",
          "status": "OK",
          "code": 200,
          "responseTime": 391,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c13a37-e878-4b66-90b9-e3633122aa41",
        "cursor": {
          "ref": "5f0c273c-95ae-422e-95c3-3bf2d213ec3f",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "c8c53d43-d0c9-4a70-a3e4-d6265f8c6ff4"
        },
        "item": {
          "id": "a9c13a37-e878-4b66-90b9-e3633122aa41",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cf253974-64d5-4586-885a-3370974e3ab1",
          "status": "OK",
          "code": 200,
          "responseTime": 2261,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1f165f-119c-4032-ae16-90066572b87b",
        "cursor": {
          "ref": "b2c9c76f-c2a0-4477-80ce-934d1839411f",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ebd70b67-2038-465e-a37c-e4c94591b835"
        },
        "item": {
          "id": "0f1f165f-119c-4032-ae16-90066572b87b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "fc893ae4-8244-4fb8-8ed0-def5105447fa",
          "status": "OK",
          "code": 200,
          "responseTime": 1977,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
        "cursor": {
          "ref": "8d6a5ec0-c837-4be1-9909-286ae91fc9ad",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048d2977-1177-47b2-b1bf-be06e8dd53f8"
        },
        "item": {
          "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21d8e212-3ef6-45c8-9a07-7a81fabeafd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
        "cursor": {
          "ref": "8d6a5ec0-c837-4be1-9909-286ae91fc9ad",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048d2977-1177-47b2-b1bf-be06e8dd53f8"
        },
        "item": {
          "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21d8e212-3ef6-45c8-9a07-7a81fabeafd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
        "cursor": {
          "ref": "8d6a5ec0-c837-4be1-9909-286ae91fc9ad",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "048d2977-1177-47b2-b1bf-be06e8dd53f8"
        },
        "item": {
          "id": "f76a0452-f589-42c6-8243-f0aefd2c6087",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "21d8e212-3ef6-45c8-9a07-7a81fabeafd4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc7cea7-bd8f-4acd-a19e-020415dd9fdf",
        "cursor": {
          "ref": "4ecf8fd5-8d69-4194-9626-5270d403e8be",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ee630b1b-8fcc-40b8-8e3f-97fac382b9ea"
        },
        "item": {
          "id": "cbc7cea7-bd8f-4acd-a19e-020415dd9fdf",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "28ea04a3-848d-4232-924f-05193262987b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 301,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26c03a8-77ec-4cd6-a686-4252ac0a0a4e",
        "cursor": {
          "ref": "57596f14-2386-4cbf-b7cb-37c662c82a2b",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f660077-3e6d-430e-ba40-5d157ea939c1"
        },
        "item": {
          "id": "a26c03a8-77ec-4cd6-a686-4252ac0a0a4e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9ddd775c-a003-4dda-84e3-72bca47e0d86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26c03a8-77ec-4cd6-a686-4252ac0a0a4e",
        "cursor": {
          "ref": "57596f14-2386-4cbf-b7cb-37c662c82a2b",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "6f660077-3e6d-430e-ba40-5d157ea939c1"
        },
        "item": {
          "id": "a26c03a8-77ec-4cd6-a686-4252ac0a0a4e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9ddd775c-a003-4dda-84e3-72bca47e0d86",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d15d160-41b6-439f-a8c0-5ca0b9c38ee0",
        "cursor": {
          "ref": "97223d2c-79cd-4420-aa12-924441c85b05",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "c14325fb-c845-4dde-a768-c4b1d216cbd5"
        },
        "item": {
          "id": "9d15d160-41b6-439f-a8c0-5ca0b9c38ee0",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "42c8c77c-2ea9-441b-b15d-3047828806a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 529,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0c900-b2d2-4fb5-b942-134810413f66",
        "cursor": {
          "ref": "3054a450-1285-4b96-8e7f-dfb3fa19421f",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a108e415-7814-43cb-827c-e1a1b7bc39dd"
        },
        "item": {
          "id": "3de0c900-b2d2-4fb5-b942-134810413f66",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "076914cf-8bd3-4a5d-9f58-22133aab77a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de0c900-b2d2-4fb5-b942-134810413f66",
        "cursor": {
          "ref": "3054a450-1285-4b96-8e7f-dfb3fa19421f",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "a108e415-7814-43cb-827c-e1a1b7bc39dd"
        },
        "item": {
          "id": "3de0c900-b2d2-4fb5-b942-134810413f66",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "076914cf-8bd3-4a5d-9f58-22133aab77a8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f82c7b-ecad-40b9-ae5a-6981fdf01727",
        "cursor": {
          "ref": "cf7897b0-3459-4afa-b2a9-7f678f5f4df7",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f86cad73-875a-417b-8944-3ab553c0e40e"
        },
        "item": {
          "id": "f7f82c7b-ecad-40b9-ae5a-6981fdf01727",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "afced7b2-d049-4c77-b1e0-c6ef3a5d9e88",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 896,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}