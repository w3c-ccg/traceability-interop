{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "e41fbcea-a8cd-4cc2-ac01-10a803f601bc",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bb701eab-664f-418a-8dde-af4c35aec510",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f5d5cdb-4fa2-4eb9-87fc-27c2148b1ddd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d5123b68-be54-4593-ae2e-9eadc296c97f"
                }
              }
            ]
          },
          {
            "id": "838964c2-6801-4d98-bd28-2c278eecc7e8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e9ea3850-d7e1-4171-83c2-41edb2875a9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "990ba23b-a8f8-41cf-9e15-e83cac1c07f8"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "aba767d5-9d78-4b9d-9d85-4b7515768bab",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "12bfebfb-0006-40ff-b6da-c4efeb8f27b3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e1ccebde-c24c-4f9d-9740-f58ae4c6b51b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49268e80-1805-48e4-850a-0459917845d7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f441f6f-d75e-4708-8029-99ad19547148"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "69e94d88-211c-4b27-b5ce-a544ab4ed68e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbda4b8b-ec97-41b8-89b8-ef079b21f830"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1dea6caa-7b2e-4714-9153-46c26c2cf223",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "48215c0d-8ae4-4e07-933e-0deb30ef18d7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6587618c-0910-4f72-8171-5cf1c6ef2f9e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2aacf11e-201a-414e-84e5-98209ec56e9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93c34e10-6e01-4929-86d7-626ebec75e22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "84b2408e-7020-4a70-810c-60a236e57421"
            }
          }
        ]
      },
      {
        "id": "628fcbea-e970-487b-a25b-83b85632fd4d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "8d9a79b6-8125-4450-99d2-cea25989cafd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0584964c-65dc-48a9-92df-eaa479ae1f3f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "152cb255-7bc6-4e06-8308-dccb3cd09281",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890fb2ed-fec9-451d-b607-86503d0ea6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee341537-a3b7-4921-9b10-c43538a3a85d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653657e5-f9bc-4023-9494-ac44c10d6133",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa82200-fd9e-40ef-80b1-bb9f34e07c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "78baf6c8-d320-45e5-90df-f66312da006d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daf24c74-3574-422c-ae01-4737733cd000",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8fc9c68-745c-4528-9c3b-95666cfe9c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e286a32e-7322-4e00-8a1d-9898c862b95e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aec11d83-7dfc-4143-a701-dc928b5e8f65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "352e6e49-42da-4dc4-b45e-c845d8f3250e",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab992c7-be80-46fc-a920-84f0466ae828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da0060ed-eb1d-4e1c-b30d-eee4c8426750"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0880fab7-a489-4d45-9ea6-082985e24007",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed826e5f-18f5-4158-9e29-71a81425d819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e93b4134-3d88-4c38-96c5-a6221bc6831a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f1f99a-dd2f-4dff-b233-c10a2d2aed3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9fdcf4a-bb9b-4588-b2d2-f0f2175bebf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eceae9-5432-4a0c-b0d8-c7e53e850cda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "845c88ed-9011-4819-8a38-d47ba2fd4994"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6c39d293-1186-490f-ac21-1feb1641fd51",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bed49e85-180b-4d21-9e15-6dcc7460d358",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dab23cb-75e1-417b-8421-fc365c579eb5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "71967935-637b-4dcd-8c04-abcb7d51020e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7d75d29-6498-4187-8e77-93b896fa85ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "c4f1452c-032d-4e5a-8526-7746bc341664"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b091d66d-6c60-4d8f-a456-4a45d97acbac",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "10b2139b-4ec7-479f-a181-ebad2029c4ef"
            }
          }
        ]
      },
      {
        "id": "f12ead49-b6a4-44d8-905c-40f82b47bd8c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f4aa88e1-9dac-472b-804f-89e73058a78d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29008968-8661-425b-9410-6e8797162a98",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "d9ee9fce-df39-402f-a29c-785f9730bee5",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a9c372-af1c-403e-b658-f4fb069d4f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c66c30-3841-4dc0-a2ab-7320a34185ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d50497-7f38-47dc-8db8-22280505cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfc70a90-764a-458a-ac9a-2fad45215669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06989f2c-4022-4cb7-86ae-bae9385bd130",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08336be-f85f-41cf-8dcc-8e2885f758ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3e3d2e-6b83-48c7-a14d-ef0fb80d7098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abddf6ca-c8e2-43f3-95b3-2c39d7afa885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfb20c1c-a3b0-4d2a-8b09-441f85515d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b362e8-3b3b-4a26-90e2-869c30e849e4",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9c7bdf-49ac-4a84-8e3c-92b653b3a054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ed232b-6b2b-45b4-a633-64ab1016796f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c20e48a-f336-444f-816a-711a233b38fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c590b22-f6ef-4386-9b91-a794d69eeba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ab354d-a615-4e37-8ce2-7929546b9749",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71dbe957-d479-4289-ad2a-94a3d47ce9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc8d3704-ffc5-45fb-98fa-228cd8c309d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080b6960-314b-410d-adb5-fa967f187d47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c64cc91e-5fb0-4b65-89d0-6314310bdc0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b6b294-947f-4f84-bbb0-01d2cd7339de",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bab8b8-1143-446f-bc87-1da5a2da7469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb880aca-cf54-499d-886c-753834ed1f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6642e032-d2f6-465e-882a-5e655207e894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e95a86d0-881c-40ca-b4d2-11de6671b981"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44804240-9483-4c68-a7d5-6a805638b68d",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444d51f8-a0e5-4a8d-8177-252699999b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2a94fe-a18a-4ed7-9a9a-456963c3cea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "113dce80-ee62-460a-b2b6-4bd5fa33d586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64c58478-e325-4f4f-91b2-78ec44ede3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f708cdbe-1d5e-41e4-8c42-990726454be5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0082b5d5-43b0-45ec-afc1-35c9b8f5618e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b7622b-ef9b-4ea7-943d-4964e97cbd69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0bd221-0b5c-419f-88ef-4e6e3d42d491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "618dbad9-fd97-4280-91f4-a3d24e437702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46be749-4353-4428-8c44-7ecfa65a99f8",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74dc93dd-5533-4b28-b4f1-33ea00ccc229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de601edd-6aed-4b6c-9d9a-69bae0d59645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596656d6-3857-4fb6-9976-1518d5e5a1a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72300c57-f608-47ef-ab2e-2fee4160b689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1beed01f-468b-4c51-9253-3b752ceb4d40",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b559b1-f868-4211-9a9d-1e0b545fd964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c534d7a4-4948-464e-99ca-35fd895a58b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3bfac0-0a64-4007-bd48-3536b1f620d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20237d6a-20b8-43e4-a010-ea55692937c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f983eb6-3689-47a3-8533-bced2c52decf",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c481cb-3214-4fa6-97f0-d652d1bdaa9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a31feae8-9907-419a-9fd5-78c8419512f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a230e131-78f4-451a-94fb-67e2486fb952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6736449-ae79-4b63-b908-2a3ac7b47c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bbb80c-fdac-41c8-9e99-9867fdba257f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccff8185-c7b3-49f3-b698-0cb36e5d7d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff0ca156-933b-4d35-8199-1710814ae6f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be98fc12-af6c-4e66-801c-0860c3a04073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa8c0c5d-7065-40d5-bb24-a6dfe537856e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "826ee2f0-9c5b-42b1-83a0-4c73afafaddf",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cf1290-c310-4e78-bea2-96f47ac6422f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcab342c-c3d8-419c-b4b3-5dad5cf8e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b5c639-39c1-488c-8ad8-1c0e69e3bb2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd775a52-57b5-4121-8772-3d7b46a35a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdce733-eaa2-49a2-8117-74e55e2d2753",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b43ef-8030-49c6-8810-a028d2d3fa3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd508330-9bf1-43b1-a2e8-8078daf40a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0bca9c-d76d-42f4-9fa3-8469d795789d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8eba6207-234a-4f7b-a449-eebbbf10ebae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80405380-ff4e-4f94-b209-b176f7cd6020",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d5f88e-2ff2-42eb-8c6b-124d570e58d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae63e2f-8f38-41c8-ad3e-6fcb74b536a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348d727c-b35d-4c5b-b909-bbf2f6c280fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4b26d6e-ce6f-45db-9690-1b235ca1bb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1e62aa3-6fa7-44f3-8d26-ed534aaa4e19",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c139b732-3f51-40f6-9f89-00e0bfdfc61c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164d3ce2-ca48-451b-b5eb-52a295259cf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fb6117-a3f1-43f0-8f8a-e090221f4f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ee6526d-14ba-4c49-b85e-31dca6781529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12168ba3-395e-4e02-b6a6-7f077e0c166e",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ce3be1-e709-45d4-aba4-c4c9bcc71779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b52bdb-11ea-4e13-b945-ce0b0515a040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a69bcad-12a1-49a2-b13a-bf7ecdc418e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c872a938-0bef-454f-8499-5be29a001a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af1c052-f33e-482e-b877-da517ab3bd96",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7697c5-0c7e-443f-b5a2-0e5499b3e4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e1a7e42-10bd-43b7-91fa-65c43bf8dad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd521b21-f7c4-4f11-8eae-12e0beac6397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87e92611-0f98-4768-90b3-80f7aba3790d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1972c11-abfd-49c5-b39b-5718c7d79588",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "766c72a8-4fd5-4403-8001-5eab4471ac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ba93c7-2b06-44be-841e-6bf8c2240050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14572e2e-6fbd-4658-be14-742986c74142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26f99d2-af0a-4fc9-abb7-c35b59a2d27f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49dcbe34-a546-4a26-91db-c0fb0a6f6e87",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2321e506-209d-4810-9c70-56167c189dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ade6429f-2004-4752-bfe3-d4f6d46a0685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4699923-15ac-4587-8aa7-ebe397f8940e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3ea860d-935f-4cce-ae8d-5f04ef03eb3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b717807-b5ca-41d4-8d84-fe28ff68002d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d6f44e-4ab5-4a06-ae06-3ac90dcf9d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a4b729-f5ed-4529-a196-f5dc76e2dd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64dcac5-19fb-427b-9cfd-91b25d2a420a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc4ab18c-6146-4316-9cb0-f92c29a496f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15155190-5569-4fe2-b145-62b52eb59a3c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf2d0db-82e8-4355-b069-2d87c00cd00c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e8c20f-dad1-4bab-bf4a-0ea85f3b5db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee243ecd-f83e-4ad9-a0c0-9651f43b632e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "35fb11db-af3f-4513-bef9-00086eecb905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32eef90b-0e97-4ee3-9165-956949dbf234",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "011bcb0d-b6c9-4842-8414-f2ae62d00d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0e19bd-53a4-4da7-a6cd-3e33b2dfeb09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0406fd0-8202-4eea-8d42-33c6b95d4cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "132629f1-4c1f-4d35-afa5-7e9809d5de0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6bae3e-f17a-49bf-b20d-8ccc18b39c9d",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2738d4fa-0123-4af0-8a98-0c2b7a853e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e3c196a-337f-4639-87ac-0f5bb36c7754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b1f837-9fdd-443d-95d5-41b4d36fdfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "386fbfb8-32f3-4970-bb84-d49461bf1f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c54f971-0375-4dc3-b65b-9709eb953211",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0ce476-de9a-46dc-ba64-8c024c3c4635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6918d060-8961-4ac8-8cfe-33b028c67f62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6268c100-8fc6-4a36-b54e-7c642ee9f921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fdd2a42-d12c-4c07-9bf8-495775039d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a714065-1a1d-43c0-a712-f024d892683c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c1404c-1fba-471a-a564-d9edaa70afe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcdd6c0f-7216-4f67-a851-38fbfdf330c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e6ef33d-5545-4e57-9764-86014ebb3d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e0e94f6-8a4d-4023-8527-43136a5f1d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43baddc1-8b20-4a1e-8114-3353e161809b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10c47915-b9a2-4384-9e62-a97bf513916c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea0f71e5-6974-4684-997b-714fb68cde1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58831271-5427-4def-a3aa-ed00a920d45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "33999a16-7cfb-4ede-b535-16d5caa70abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96dfc267-3636-47fe-9e5d-b52ae58b2974",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbeac0f-4574-4fce-a3dc-199e81e09ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e315f1d-4f60-4673-b6b5-555f890aba32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d919b-1bec-4565-8ead-f211300f0d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "55788d20-45f4-4a05-abef-9c75980e1b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e65f97-c2eb-4b2c-be4c-5e3581ddf912",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c23ace-eac6-432e-a520-215894a462f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4dd669-88a3-4999-854f-afc005015422"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749c7a47-1d87-439f-a530-312fd6bea08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b0b40f4-1877-4bce-af39-3a1040224694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69feffba-a0bb-4632-8551-5816a7c9d38e",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf41c46-9262-4f67-9199-320c0dc0de67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f302b799-5cc4-418c-b26d-6f5f9b5767ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3195e291-48c9-4414-8392-050662754549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "121355f0-69d8-4c70-be4b-6fca978d067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47614376-35e4-456e-a623-b746d81bd7f6",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e4bc084-70a5-4564-a81a-9a7b96b47497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d72f0b0-f4e6-4f80-b9c9-2c20a8c81ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86592099-5acc-4fdf-81fb-996a6bfe31f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "12d36d7b-e4d1-4b31-8f49-bb23019b92d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b40bfe-4f42-4324-ab49-45fd32e0f06a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4770d003-c1fb-4568-bdab-acdac4505025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917ef932-48c4-4a47-b373-483544a2f6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45345e2-cd5b-445b-90df-679b1b181673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f9ad27d-455c-46c2-8e1f-2f20b835c1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8011c6-b796-4240-aec7-2d0e85bf24c2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d9904-6e49-4a49-91c7-cfb1c3e80f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e359f0f7-68d0-434c-ba29-ea7f66c39d93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e33bec-2341-4f26-88ba-459557b81e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8277b78-ad93-4fdd-86a9-856d8aa742d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d072d1b6-fb93-4f13-b71b-f522f7278ae1",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe1b6e8-c1aa-4762-bb99-e5399021353e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c818049d-1828-42ff-8504-a4585c54d103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fe7ac7-08b0-48ef-81f2-06099150831e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "73fd1690-388a-4d12-9ea6-488cae31b717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5358f44d-66ee-46cd-aed1-a39e8438fd09",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad303585-eda6-463b-bfdd-bf86fd50c9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac954d91-f4ce-4684-b742-5008f77d6df0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c534268-530a-4cf7-98e8-859d0a8be952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc51c1eb-df68-4229-8f8a-89219c18051c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114b583b-7110-415a-8e68-b5c21e3a08b1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77e3ce5c-23ab-4dd6-ad9e-94c32757e2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33e06ac2-4e23-4c87-9c0b-22a60a5fddd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba52d66-5a97-4570-a0f9-f40f021d7317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cfb9b389-c76c-48e6-9613-7c69654f639c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da87f63c-95b6-4c26-8b0e-5dc1e3ee045c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc1cf86-5f6b-4a91-9e85-5f9e5321a2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adf778ad-8ab7-43ff-9f61-db70ae2b5716"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d1ae420-0aac-475c-ad33-0f3f1dc5ee37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ffe18016-1c77-4c07-990f-fb0d1ece091f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9223615d-b2a0-430d-978b-8a24ffa2564a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f34993-48b6-4c8f-8e06-50a4aa184246",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e561c53-cad5-436a-9196-f6063b453c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a700e0-66ac-4c00-8b9d-bcd5a62c963a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9d2b63b-8e63-48b5-a16c-b2ad8d5f5820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfe08c7-27bc-47bb-b0e0-7972308f389b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f603b7-5a7b-4d51-909c-daa514c6cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feacb5e3-92ee-4a29-b818-af0a4dc4da17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acd74638-19b7-4ce2-a3da-3cdd1322de06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "632c2370-5e92-49fd-90cf-9ab871888090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7573498-2c2b-48c5-a565-766d3cf85290",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d869f854-af90-4b05-af20-f45237f42546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7137e8cc-c88e-48cc-b64b-9ae23fb4a2bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cc391b-d0a7-48d8-9628-b03844628913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f92f00-ee0d-4a34-9240-bce51ba050b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b252c7d2-e9ed-4cc0-a5be-005eca835eeb",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "734c811b-a086-4b51-bace-2141762a7ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "099d2922-b536-496b-ba6f-d30f21feee10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fd2b0d-9f37-460a-88b2-8170801a3f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b51f384-a4df-43a7-97d0-ab10364e6667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921090d2-1b4f-425f-9284-4f68893d5108",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c3ff591-2e17-401f-9575-f387063f0fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095f1168-3fd8-443d-9d18-bc85a31a649a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e5353c-4d59-43ac-975d-22e77b774a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "92b047b6-b040-4eb3-a8fd-e7375ddf34fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "408de888-1fcd-411f-8864-16a7ccb65336",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94816be4-dd14-4711-9d77-36252246e904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b179a5-2af6-4bca-ad7e-d9cbd699b8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f88c10-2db0-414d-b047-05714c3ac9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9d6d4d-efd9-4431-b04d-4b6b49df4270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70791571-3c8e-4d4b-9f92-4b87ee06b34d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fea8a39-9638-415f-8f45-d100dcf207dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40285ae7-1eeb-431f-afd5-f83772930873"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "213a3f17-a7b0-4a46-aac2-4f1e23191f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4666f2-9b2c-4829-9fe4-e2b60374c03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef37dae3-aa8e-42e2-ac71-a12b317b6340",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b21cf6-6908-4043-8465-0467f5de3681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f3c376-8010-4a12-95d2-0d801456eab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e565483b-4ac1-417b-9007-8aac5c9a892c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c87e922a-64ff-414a-aa59-09bd48ca25e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9313d9-cac3-45e3-bd84-c2dff522a73e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8178eb28-0d57-424d-8325-e72f429a90fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01a8301c-f775-4518-9ff6-8370e4911e5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b69b8f-6361-44d0-a3f0-7d9a26b64661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dfe70b8-babd-48e8-b106-fd8e7c862938"
                        }
                      }
                    ]
                  },
                  {
                    "id": "190e44e7-3dab-4c10-9740-7a76d2f4a63b",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "193c01a9-ea8b-41e3-ab21-c0605a5c6caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fdaec5e-ae0a-4740-b9b0-b3009201edf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d88dd047-beed-4710-88c7-81a51e990f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ce88c15-f7a0-492c-9614-0d27d8558910"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eff43e0-18e4-4fa0-a5ea-81392a49f728",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d088c640-19ba-4910-8f92-49008f1de9b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3591d973-0e3b-4a9a-91f6-023679de1f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2203f5bb-acd1-4749-aecb-391b88822ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c607bb6-326f-46dd-a9e6-634012685041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19372a5-d0c0-41ae-84af-44b4b1a0102f",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ff09be-744a-40e5-8322-c8fe2bc6bdd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9e5e8b-1c22-4fb4-b759-202de466f250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c1faf6-f56c-4ce7-9ecb-9c3c0e27acc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c71e08d2-cb1a-4987-8d65-8c1af145808b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d0a906-ed51-4ef3-834b-a2cea75c935b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f5571f-d95b-4d65-8c87-9327d6cd89ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c700a78-93c2-465b-90cc-9704f1fc1a81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbf4bfc-c2da-4990-8438-1e716954c63e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6a6447-0a73-41a0-bb4c-19ea9073a312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1933ceee-9b18-44d6-b9a3-51c8ef0e0864",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "839e3d9c-9c4f-4daa-a947-5eb2b1b726f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a89475-5e05-452b-8d8c-71f1e4407df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3b3a0cb-b9ef-40ad-83c4-73e9e7260c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "994710d0-3330-4f88-af49-757163338d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fb1630a-2178-4f29-b248-7ae6a42a37b9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb0ad67-f53b-477f-b428-c5ac299139f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e335c612-cef5-47e3-8afe-a9baae517dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733f3620-c468-4caa-9ec5-b7243a20b875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed6c4b62-ab22-40d5-bb21-afb9043a6a75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cf32f0-8412-45f9-b2a3-ecb2adae0463",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bc27ad-fa31-47f9-b46f-d20644d49286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24c585a0-d36c-4e20-a7ec-0f29455d4c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d47712d-bde1-44db-86c1-a1465397087c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7876bb6e-0720-428c-8432-339a41413e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8533da-7d62-4fb1-8ef7-c41ab08a888b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75ae3393-7fc3-415c-9e93-4f7f6cb371d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa52759-173d-42ed-9127-c9320fe1e233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72deb2a-d163-4185-b668-bf360d5ec43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b763a80-89eb-4005-b11a-dd4c4eee7e80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f367e0a3-cf55-419a-af6b-8d8aa67a9778",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7312e726-91ee-4108-a411-bd09bdd8bfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73b15d20-ee71-4367-8e58-34817c6eecf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e3a5e-51e1-453a-804a-1448d18f170a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ac13b8a-06df-48c8-8460-ea362b8194b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da56c36-6f44-415c-a9eb-d3fed5239519",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e50a76-b796-4139-91d5-944cd0d4687c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7456079b-005c-46f3-8af4-8f3b47917d07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1fa6c8-1318-413e-8d28-09f996221275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "883ac097-a04f-472c-a8e9-f4237d2a542a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4f7951-ae53-4f7d-984b-0baa95aeaa7c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c338a9e0-3cda-4a9b-b008-132364e65fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "642feae8-f92a-4af2-832f-d20cd68fb6f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58771fa0-3bce-41fc-ba31-b2d7758c05a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2cd3b9d1-ac24-4256-9916-9919989cf587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2cb4441-1333-4a7d-b2df-b17fac3e2bac",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a5db18-2c5f-49f7-87ed-3330be2d1953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc8da38-d1c9-4da2-8c99-7966b7310519"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6a17a3-5743-4203-a862-411810137bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "efc478ef-65bc-40d9-8a4e-35cd01ef6288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d936bd1-7f83-4a42-9e16-99f4c9a8c5b7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e32608-77d5-4f3a-9ba9-e88d6edcb2bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b9c09b1-173a-4d9a-a771-2d2ed045470f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74722ee4-5c4c-49ea-9a99-477e5686b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "57e8e8a3-1af8-4d04-87f7-9495872ad074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf6379a0-03ea-4631-ac5a-c90ea4421d3a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "381a9faf-dc8c-4b6b-85ca-e3c5bdaca72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d545ca-93c0-497d-9035-35e8e1f9497d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0870a97-1731-42e7-a5cd-01097e2fdb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fabd35a9-e89b-4cff-baa6-db68d408f9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dfe78e-9792-4c6b-af2b-4edf5c7d6afd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f71d6d0-ec70-4b91-bdbe-1f4e8a9c528e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c749d7f-0f10-4bf7-9af6-079d4ff1fd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f692445f-d6c9-409b-9a35-c605b6e505a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4416973-5e5d-4866-8807-fad7df9018c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d2c7345-ae63-4f19-94a4-740bad3f4392",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcb444e5-7ce0-4815-8767-19cb44571451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eda298c-0b6b-468b-b7c5-6bac7b89809a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eea96db-c36a-4cec-9b3b-94013eb04810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c348b9b3-6e5c-439c-b928-f42bf030be68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b6dc19-09de-44c3-94a6-890a63658193",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dbdb56e-6bb7-420a-aa16-7442a13a218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86852444-aa24-4f3d-818f-7535c70efb10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ab50bac-eb6a-412f-8d21-ed5327abce66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0c114a5-2b61-4271-b8e7-260b5acaa295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818636b4-d7a1-46be-b036-8f8197f6fff6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e7eb0f-b97e-40a5-8b6e-54483ee5fc80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ae97a-ce5a-428c-a023-387a436b2fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfbb134-c42a-4549-be46-b0a597f3038f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb3abb0-6a1a-4b22-afe7-32cdb6b12789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0f9e79-fa0a-470a-b6a2-7ead09c0823b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f32c47a-80cf-4f05-bf26-f39a79fdac8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b10d885-7187-43fd-aa1f-aa6ba533abf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72887da5-a2eb-4e98-ac7f-956e547dfd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e9c227e-46c3-46a7-9695-048a1905b465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae2fab5-f097-4d4a-8fa5-e523ec331cde",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a24aac8-1148-45e3-b6fb-c41640aab452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7cf1c5-11c8-4628-95af-a64d27fb0135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76a27d5-c8e2-4a3b-b22a-514732479b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f936c40a-b7be-412a-b599-54769a2970c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26156e9e-0f7a-401b-8a10-7c23943b60dd",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "487dcdd6-d8bc-4249-bb04-663f0c3e968f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e062134e-cb35-4185-bc64-1cef541a3ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67733b3c-7ff3-4318-a368-447612d7910a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7838d43-4cd3-41b0-b936-5023e4cc106c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2de5b0-667d-4b5b-9bc2-ae1d4390fa69",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ffd02a-3638-4b39-ada7-84d71a33394f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22e02d1c-45ab-4755-83ff-2065ff13604a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3302200-3202-4279-8b28-a7007028d6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b46ef4b6-0afd-4d01-8bdf-559b91b9e8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c7b3c4-dd1f-4a0c-847b-213ed012804a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3290bdce-3e5e-4b26-9484-d1dea54a3ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "070453af-1b43-4325-9f67-0b8ed1b33cc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f35c0e9-0329-4606-8799-2bb54ebab4cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "03616739-c40e-43c0-8edd-a4c688deb356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a79605c-f99c-407d-9f9f-f67c0fd11f2a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9274640-2e57-4966-8709-a022d5d4de49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b66f2b66-be98-46fa-b34f-2c333c8ceb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0946efe4-24c9-43e3-a1c8-7ce36a68f834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9772fd9d-97c9-4f40-9b7a-6fd9dc2e5037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116bd0d9-5037-4b3b-a1c8-29669fa422c7",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610de7ec-0dc7-4d36-b320-94b9d896d734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2493145-aa5e-46a5-ab06-2c6945003196"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bd15d6-98da-415c-9abf-49c1ae381dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "39497ee0-24d7-4e50-a620-28a7417ef651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bd8441c-8607-4d8b-a7b5-ac6ee1c910e7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7086d410-a2ee-47d8-9aca-5f4a83c1e1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5bdc24-aec7-4adf-abf8-3e40f07e0043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2588c202-6d4d-454a-be4a-d27426194de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72db569-1246-4dff-b4f4-6cf6cde6b467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68eff381-0e3c-4bbe-9ea3-23990d7f01a5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ab76fe0-c417-4e22-8210-ce89e938f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac3c948-0d66-435e-a501-97cec9d598e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fdf073-a899-40af-9741-2197c3d488e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec49ebd6-e233-432f-8b7f-4032e4ba8dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325bce45-4f1c-416e-8182-79f7330eee78",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10c100f-33be-447d-a957-892dbd8f0cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf468f0-28d1-44a3-a892-bfb005387cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "259d5b66-2588-4280-8d53-db123c5d6581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3ea5dd-73c2-4d5a-a761-435d02842734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db13391-35b1-47a5-9aa0-4a9009d11185",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f068f1-35a4-4a72-ab64-0ae8b7b0de2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57954f38-c8b3-4b7e-8297-1e45e24c069d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c7f2d8-6f2b-452d-b0af-8939a9f33964",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c61fb5-2820-4ea3-b5ca-384cc0ea63ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec15af04-292b-418b-9de1-9f7576555eb0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f111b828-26bf-491c-bd16-9885e55fcdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db0298a-3cda-47ab-ab42-5f422f473f6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5fc7335-420b-4e7e-bd86-64e912df5d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "316fe3da-3350-4f57-922d-6cda311f2f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e84c05-5edf-464c-868b-e08b8ea9996e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa66f3a-ed5d-4130-a1ae-2a8f2e918674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e30174d-f92f-4e48-b250-25a50a2eff5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9ffab4-9931-4871-a758-8e7135847150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "661881b0-6698-42a4-a22e-f91481c88a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7258d2-e48a-430b-82f3-3b93d1b513f3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870a45f3-8ddd-4836-a47d-bc6c2332ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "878b9fe3-f9a8-4a14-90b0-ecfd29ffd489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b285c1c6-27f2-4d93-87ec-d8bbab32b516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "09f095f2-2e40-4555-abc8-74962c708a53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8463be13-c6cf-4164-b39b-85deee401f80",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06add3e-727f-45e8-b66f-6cb74eb4a807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbc9e31-0a9e-43c2-b9db-db851572b23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf162f0-7413-439b-b063-1bc17c701764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "02d96c56-960b-4a58-b279-415700f6c9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ff97e2-3d58-424c-b106-e060e945c503",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ddcc90-7b1e-408b-b34c-b7b83772e496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e920c802-4f5f-47ab-b897-c86f47d103ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ca7d6e-da51-4fa5-9898-43159753a4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9431d1cf-fb1e-4702-bfd7-9dd147e7b6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ae04e3-2175-425a-aba4-4e6a37360b6c",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033be608-663b-471e-929c-84c19a07cef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25159c40-a1d6-4813-86a0-533a4833aabe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b2f055-7068-42ae-8c02-b53392b514cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "75487a2b-ca71-46fb-a29b-88a2988416b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2267fbb-7bce-4b6b-ad3d-ce5888896721",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d126a3c-815d-47ce-b728-ad473358330d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2c8748-0336-4385-9e74-ae6ae4656cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2111ad3-765e-42c3-ba69-49444fbe6fd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f14df543-45df-4185-b332-f2b7db29d7f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a8b6763-b1f9-4119-bb8a-c2144e097683",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c816df-2554-491e-b522-000f14f41e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "645d348e-4b85-416f-8ecf-62981743b0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5315f6e2-20ff-4a35-98f5-cbdcdc6e7be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "61afc2a1-6729-46d6-94d8-00476fe0cf5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e50473-7259-4b61-904a-ec737b45e47f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "018ba62c-2d21-4d12-8066-30ff3cb0224c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "426453dd-d067-410a-ac94-e6b4b207cd59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc9cb252-c5d3-4e88-a890-2673b6b839de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd1b8d6-7d08-4d51-b35a-28a796ba15e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07acb004-9775-4fa5-8aa6-9a8fb26289ca",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf0c831-502d-449c-a854-464d8a80bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0dce90-205a-4ddd-99e2-e74beb571ab0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd44b0a1-34e2-4c57-8a40-8d980768bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d51ed51c-58a3-4714-aa98-87d0f2584c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3c200a-0849-438a-932f-f834f9811d25",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93118000-b42e-4e01-923f-04c2bd079924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa05afe7-f21f-4cfe-afa3-f0f092d0cbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40e40312-5082-45ce-9073-e4871dfeb804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4deb054f-9321-4c7a-a6ea-5469c1c80dc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003273dd-a257-4ecb-ba39-d873a28f1452",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1102b67-44c5-46e3-810c-6096bc7e81a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcdeba3-eb04-4e4c-b739-ea18d99a702c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1be669-6627-46bd-9109-6a31009398ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c547a8c5-7c03-40b7-81cf-7baa41855299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4191ceb1-8d01-4745-a9b7-558717cfa727",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d81eac-0436-4f06-80cb-8267ae99959b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbcac6b-e1ac-48c4-916c-0fcb18f0d659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d075c18b-c2ba-4dc3-a7f4-552617fbdab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9dd1f1-d5ba-434d-a3f9-df7849d2ae19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86efa538-3148-47f5-adf1-db53973626bf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cdcee34-4ede-45e0-bb97-a4f6a8278486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acfd47e6-7f01-444c-afa9-8c8d208267a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932a6bb6-e535-4e4a-9249-6e56e5d1abf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f534772-729f-4dc4-ac9c-1478147c76b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc9632c-706e-4e98-ad64-e09c370654dc",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29730403-6879-40fa-8317-9485f1366497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e608a6c-4adb-4103-8826-33ebb73642f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8efcb54-2fff-4627-b343-d2b4dacdc447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae94bdd-ea65-45d2-a5f5-ad323b4576f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44dfcb7b-4ce4-4e22-bd15-12ce13c6ef23",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30288a5-b9be-4153-9381-e5bfcb82c565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537a5a6f-350f-4d20-94d5-345c8ed72525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d870109a-ff5c-422b-a736-4547b78654f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "837adfbf-eaf6-467a-9fed-51f5c912a355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a4d87-2f6b-4207-9cfb-23afa7b0be13",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7f2814-ef33-47ab-b300-3e5d801b4581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c840b17c-95ab-4c48-a9a1-341fb815feb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a83348e-20a5-4f52-a69c-0bad9d56bd1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9945044-c549-4a4c-b486-888728443907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87790db-877a-45f5-b763-bb46b51bac91",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e9085b-277a-4ead-98b8-9ab2ec4b78a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1b01f6b2-a88b-474f-92bb-4f350f45adc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c595ef14-4c87-4835-8bda-afa3cf19cd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1b22a8-f85a-447a-9ede-a683810a8775"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d09fe9b7-c2bf-418b-b8c4-0c4d97e9ed0a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bbbfcd21-6cbb-4b4a-b954-51576534e9d3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "539cce6c-e91e-46cd-91a9-50ae56450b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22de6830-4935-46fc-8370-686866d04a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54792b04-51a7-40ea-953d-16160e61fb00",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "564c7c51-c8ef-424c-a421-48b2131198a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ac2958-2fda-491b-8c99-ad84e393d75b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103b68b6-c0a3-4d3b-bf38-d18fca6d4b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59aed15d-6c59-49a0-af9e-dde01a866c86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a922672a-76d5-4566-9b0e-f19b4b0f4e2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bec230e-3dd0-4126-8350-0d5936721be5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "038d29f5-6413-4748-8a7e-29327f4d8e24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69918063-404e-4e66-9a97-a979f6ab3e2e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4be3c855-3324-45fa-9b57-746a34d17523",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d8de6607-c514-4a82-97d2-ea08a28853b5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1fff9924-13f6-422e-8267-b0cf632b3c38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f98f2786-f91b-44c9-8c1a-cbe92d84de7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7546b2d6-9279-4253-a889-9742ef56c6d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "01fa7b2a-6fb4-4efb-807b-15504cce65da"
                }
              }
            ]
          },
          {
            "id": "01d4ec1f-9645-4b5f-b5c9-e3a7be9aa9ab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fe25aad4-1d3d-42fb-92a7-6b7646b03230",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fde901c2-7134-4643-b163-70985d430433",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd0273b3-1866-410b-b4a8-ba5ea2d1e693"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e3aefb6-8112-4c35-a727-a4754ef3cbd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3d425671-3e7b-4a5d-a6da-dd095230312e"
                    }
                  }
                ]
              },
              {
                "id": "3637243e-0b0e-4f7c-bd87-5319a0816641",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "849c2e46-6011-4acf-8a94-c9d27eab31cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "23e0d94d-e7bd-4c52-ae53-df218a676dc9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d2d5d33-db39-4658-bca0-b51f309e4a95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a1376b9c-80b8-43f6-908b-b7a4af0dad8e"
                    }
                  }
                ]
              },
              {
                "id": "9ad5408d-73b2-42fb-91be-9c4bc3fa647f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "049e3b07-f95c-4f3f-9cef-49b4b9f136b5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c0b47a2-7c54-4a60-ac2b-53506bce0b52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59c17c09-4700-480f-9b62-65f600fef8be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "97e39fb7-ecf1-47ab-9e62-99d64016be78"
                    }
                  }
                ]
              },
              {
                "id": "59003ae8-3ad2-451b-87d0-d757793a8be4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fdfc6aa-82d4-4d6d-9357-1b4b76a5ea69",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a05d8d89-9a81-4052-b6e7-1f9847587c25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70729204-06d6-4f7c-b6a4-a1b53ceed4a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9a36cf8c-ed03-49ba-9c43-a7e1b06dc4cd"
                    }
                  }
                ]
              },
              {
                "id": "96b13fc9-a9bd-4f94-b0cf-604146de8025",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b63e921e-2fb2-4556-88df-6a9ffef9462b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "221b373f-7c81-4c72-ac0b-79857de4a081"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5602780-7cfc-408c-9ddc-da335c918e96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c65e44d6-a0a2-4f68-bf0c-38f06183f60e"
                    }
                  }
                ]
              },
              {
                "id": "b1c9846a-9095-46a4-acd6-f65f675d1868",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f760a7d-924f-4ec8-a7d8-525b4ec5adfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6f455afb-c90a-40e4-b34a-03835f32400e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a82bdd37-5769-4f2d-8dfc-d5a7c8bd180b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c9962b46-c948-4e0e-a102-076b43609224"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d0d5013d-225c-426b-8613-7bdf37227ae0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45f728d1-ccaf-466c-8919-081a153d8c1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "898779df-5008-4d92-9bac-7e52f04b19f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ee4044ac-a3f1-43b9-af87-794f88f02411"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "913f7d8c-01f6-4345-8e60-2a136c717f1a",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ed487654-947d-44cc-a013-ac7d9e827dfb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87b7d6e5-e255-4088-a42a-25602c2c5999",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eca36636-336b-4226-9b3b-65d34d7f2775"
            }
          }
        ]
      },
      {
        "id": "326ec3c0-88cd-4510-81e4-387d69f4618b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0a15f8a5-5573-4780-9740-9108e2e85ca5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9423a3e7-7fba-4d58-ae6a-5ead1a711b39",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7c254594-b503-46e0-b686-1bef30f1fdb3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7c5398-6ff7-458e-a138-4b79fe632f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7180ebf-54ff-4c46-b1bc-0fd7cbeeac4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "178c90b6-0f98-46f2-9e64-fcbbb8481060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbf5e96-b999-47e8-ac18-ddcfb1e33864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa9e567-0b9f-4bb5-a333-8ace4ba1e6ea",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205e61e7-9012-4407-8efa-2522c838cab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678e5bf3-8f99-447d-b83f-d566ada792f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a7fe89-66ee-41de-bcb8-ba095ac89016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7cc7e0-25a3-44ea-98ce-43bdd8395d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fc46c7f-ad31-4ae3-9e77-43c0971bb5c4",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdd6bbeb-61f7-415a-a8d4-38b10f6c09f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70364ab-e3ef-4dbe-9197-968322d2ff78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbc4272e-4b3d-4bec-ab00-1784f828adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3af459-0343-46b6-947f-afb1d63e82ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc107eee-9628-4846-83d9-8b1667fa6fd1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ad261d-8c3f-4c65-8b19-67face1058dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ca3cbe-bd69-45f5-8e47-d5b53725a580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ccea5d-421c-4134-96a9-e7ca5803f5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dc59726-abe5-4041-8858-152a39965ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe2fbfb-2190-4d68-a7b1-cd3252b46b57",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136c4ae5-f06c-48f8-96cf-8684a4d02712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ad10207-bdbb-4f41-89a9-a72bb75c069b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1a26db-14d4-4c2a-9ba9-fab7cee64199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ee965b-7539-43ed-9550-63676a13a3a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c478b8-8c1c-4506-bd1e-cc17f53de0c0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bce8e3-dcbc-4cd6-abb7-86035c3d7e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d5b621-7ee9-4a12-a519-dbc692926058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132479d1-1202-4311-957d-6237b023f87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3256423e-647e-4a53-a65c-4e81a63ca2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b58d681-6bf0-4c9e-a65b-7fc9bbbaefe2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62e23e9-0eab-4da1-b7da-5bef7c716986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccd694f-198b-404c-88c3-0ff4deb3054b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06cb245c-abcd-41b7-9e7f-082d6b8efbdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9aee6676-8c77-417d-aefd-a2b7db84dc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35d8f96a-e984-4a86-94e2-79d68eeacee9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c75d0b05-3251-4cc5-929b-d2edbe8227e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6c79088-c8e6-464b-ad2b-6fe415e02739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ef0111-cb9b-4274-b47e-d2a90e6a6a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "89cc880c-4ec3-4fba-b1bf-996f59e3acb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2102b0d-a055-47c7-bf3e-0d11b5467217",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6942dd-e229-4851-bbdd-73ae62c5c0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dcb1a9f-3940-4b20-a1c4-cd19180c4cc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cde0e9-c1f2-4fec-89f7-f9aca56a585a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e219833-7403-425b-863d-2bea558d216c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eb8a49-c8fb-454d-a7a2-bc5a03e255ef",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9352d110-33ff-49a6-8210-40fa35bf538c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28016c65-433a-4064-b3b9-6e21659d8b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f80e18a-0a1d-4ba3-b23c-681dc53a4949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f416f84a-d9c1-4879-a2ce-41b951ba636b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065e0a0c-98d6-4d6e-a274-b3235370502f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc69e65-52e8-4f17-99b7-746c8600ad22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0599ca3-0b0c-4a04-bd5c-6d52d806995d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0755c07-2f32-4f7e-83bb-d1b6e88c19d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "cc15e764-f77e-4f51-a081-bf6b6d0b7ff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf4b3af-e017-47a7-b950-265780c428ac",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272955e9-a766-4ab2-8570-90c8906b64a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c43c284-e7f3-4b9d-a9e1-68adb5e7d1c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe202c74-219f-4a8a-8050-e3213b039433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbf7a5c-6d91-4ab6-8982-45217b814ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab10f16e-123d-424e-95aa-f22ea8109dd1",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1deee68-68ed-4049-80f7-1605b98ec4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e852914d-014d-4dfc-ad18-d0c0d2bafd16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fba823e-b905-4de9-88f1-4149eda38167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "47775257-9e12-45ed-bcde-5a8a0f4fdf85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b8af8e-86c4-412c-ba54-ef1afb868134",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f89f58-fef6-4349-9013-d122baa97a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf78104-da41-4f8f-8fa9-04b8a954a906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d7dbc5a-ba96-43e0-9ce8-89178245273c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "31f8f813-f018-4d3f-8381-4755380fee1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "685b7bc5-1ddb-4559-895f-3834590a8a84",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95208a8a-5215-4eca-8299-479cdb98300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb40e25-a309-44d4-9d4e-259deef85b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ff00a1-78e0-4840-a2b3-b3dfec31a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7730556f-6600-47b5-814d-d833a1beefa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420df1bd-918f-467f-80df-981254a736c5",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2677d3-3d98-46d3-b082-51df56e31bed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17ee169f-73d2-4714-9b36-e9b1636cfa0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d62f79-7ce8-4053-9c94-54fbcdfe3130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c46eae1-ed12-4ef6-8f6f-1b115c39431f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e68ca86-2c8e-446e-ad91-66368cdb407a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca78c78-65ea-4b2c-ae60-ba68aa5a3dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1205057b-f9c5-4076-9cba-f047c87e29e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce169fcb-d3ba-4456-bac0-3afa530201ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5ba7e3-5819-4b38-bd07-697fff93d236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911c0684-7821-46b1-9e29-818802ad1f11",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff01fe5-766c-441d-b9c7-4063ac27df08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31399c39-7f6b-47f7-9574-5081e05375e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9841407e-7349-4ac0-8b61-32b5647ff169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddbcfaeb-df78-4e27-be59-9f0b893cffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b13e070-897f-4e06-91aa-ee2a6311358c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66441f13-858d-4661-803b-5e496bbc8574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "473bcef9-5803-42eb-8ac4-9aebd57ab3ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c890cb9-af34-4bf4-bb2b-772563de1362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bf695f-1371-42d7-a76a-40f54dd4badb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11d10d56-69b2-48f8-bfee-71abfc858786",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab36bcdd-2691-4831-9600-75d1dcf1e295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5e5c04b-70ad-41ae-a7df-383a5ae786c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d9cbe4-fcdb-43b2-a5d6-a9b059e3e310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b81867d1-9e10-4342-ad10-7a0c21c23ebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f68845-3310-4cf8-a8c7-9a5809a1a97f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ad0d2f-3eb5-4e2f-8416-090a45f81864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32724479-1db0-41a5-a396-475cf06bd207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be2a1cc-552b-4a66-9450-4332d3e2c729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9caad6a-d75d-4f17-83f8-c76cbde42ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98d71856-033d-4794-883c-c71e19f7056b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4f03c47-4f64-4565-9a0f-5758062f83a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "289c8053-41a4-461a-bdba-e75bd567b4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a686bd8b-bbf6-4e4b-834e-832443a04364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "804d2544-c674-4a4c-a598-1daa5931de6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecdb980-3f3b-4f58-a256-38668b2c26ab",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd0336b-c60c-4afe-84a6-debf53c1eebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9b9d3d2-139e-48cb-b168-c2a8717da3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c905786a-d7cc-40c5-b197-163cfb3bcff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0319a2d6-8550-48fc-a5ef-654b23dd98b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c06b15-9030-4590-82a9-463809715264",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd495f3-6b50-4cc6-8729-db059faa6993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd365db-48ea-44a0-9cfe-4419fdd43bcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9bedc4-496e-4bd2-805a-24c75c578445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29aff18e-a551-41c1-a504-3bace6003760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fda3ee-2514-46e9-8a13-ccf802f76bc9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0782ce1f-337d-4fad-9126-e563f4a0df59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a578e9-89b4-4640-a41c-48325f435cfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb529ac-ab96-4ff1-b682-99b7e032fdb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7adad26f-8c71-4b13-b3d7-de122341fe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7431c7ca-5267-4b52-8805-ea76ffcf5736",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fc988d2-9838-4645-93d5-e76f64da719b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2021351-90b7-4bfa-bfc1-9226624fc5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a757f1e-d513-4503-a850-b60e944c1270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b28256c-37d4-483f-ad22-83ef3edc990a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cdb04c-b45d-471d-8da4-6f2b4f354cd3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f74d29-0389-41bd-9085-d8c30585afdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181d9827-05e3-4951-98b4-81e0be9cf4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e8e9704-68fa-4fe0-b988-7658de0586a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2748e7e-0f80-48e0-b1d5-d4f11838f102"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934484ae-b5f8-4c0a-85db-2c0162d8f6d8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7040bb2f-2aa5-43a5-bc81-2d434bbbb8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e46c458-5a9f-46f6-9773-a32dd11de739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be448bce-124b-4a99-889b-184282d6e35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32006620-fa3e-4868-84d2-ffc160369448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936822db-25b0-40fc-911a-49ed4e5449c8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b13d452-5782-41a4-8e4c-b153cf4783b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd1af6f-c313-4371-b5c2-e2e3c1898cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ee1554-5e34-48e6-bc27-fca02468f3b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ae0547f-6d70-4d1e-b528-f8ae47198c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c140466-3cde-49ee-a103-c4ab50e2d712",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc1b327-0005-45c5-b501-19bc975776a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e5c3ac-1d00-4fcb-827f-c61ee2b6fc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661a7977-93c9-4562-80a6-98084e7ff753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cdb6a899-39df-4345-9350-a761cf8de1bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0254bc8-4d17-4b27-8a1d-d5556a2166b6",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1980f694-a639-42d7-ab15-1888cba91baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aafa999-55d0-47c1-bea4-4b46e9874a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517948b2-e5d6-4e0a-8fb5-c8e8558d97a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d61ffb7-3cc0-4001-b3f8-4afc2d577e2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1a9414-8f04-4bb0-aa44-e872028752ea",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "479f81df-9e25-4300-b051-5ac0687c418d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17803516-f192-42fa-a899-d9325f083c0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f1bfb7e-c75c-40b5-9546-6dba54643f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19da8a4-36c3-4b52-ab62-5e56d0d48e7e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "593b87b9-bafd-4d4c-bae4-6fc5150d8890",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22334059-38a8-467a-8740-2d7b7da0f712",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "572e19db-be00-4ce2-897a-a11ff823b627",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "52c54231-0fc6-46b0-a4ce-942abf819414"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53c9861-708d-4206-acd2-97b873665578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22405e65-5624-4b5a-acab-76fe7c062a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc0f37e-dd45-464a-a3e0-fd371d5856da",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd9a67b-71ac-4092-81c3-8162d2d01224",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c7488ef3-29af-42ee-a188-8214fd13f633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb156ef1-46d1-4d21-bf20-bed6b021c05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0998e7f4-59e5-4ff9-ad69-4181228891d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fb84f97-56f5-49b0-84fc-c6a098d72d50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4121ff8-e1cd-4a1b-b090-8604e963210e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "70febf61-d5dd-4062-bc5e-649565e3f25e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63243e36-6762-412f-8924-5bc6f6f5a6b9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db428c60-51aa-4c97-8db5-c94d6316cc49",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ba0246d0-b5cd-4bc6-b513-1b8a201b1c5b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ceb8896d-5ab2-4da9-9256-71fc333d16da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "46487ec6-646e-406d-ad08-ba40dff59802"
            }
          }
        ]
      },
      {
        "id": "7c815ae6-323b-4b79-b451-d2506b5d1f9c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "462fb0d7-bbbf-4048-9f5b-31d429fa2afa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff96a70d-af3b-4564-a208-3dbb1e9f5f7c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d698fc40-d4de-41ff-af53-88e0ba022a91",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "122be39d-c878-42e4-adf4-9ce9156739e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f52877-41ae-48db-a98b-d3fd4e76d8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ef3fc3-10f2-42bc-a431-4eada6c9fc5c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3e679e-d888-4cbd-bf7e-ea6f4bf76864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67467aa9-a145-4c44-ba9b-200b48cd0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50862090-a0a9-4b95-85de-29f86ea572e8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7f8c2d-7842-4fc6-a3b1-5ac3c2d714ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adf1211-0e21-46a1-b7a2-ea2f1388e9a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9439542-8bd8-4b14-8927-9525fd5d48e8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc88cb3e-f9a3-4568-b0ed-2990766bf29d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c542914d-d0ce-499f-bda4-665768825afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12322fb7-f7a8-48c2-ae2c-fb408139a033",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd3752be-4556-4b6d-9064-635f32452698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd9d798-7a96-463a-9fee-974a722f02a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde3996c-d536-4b8a-b5b9-1284c923409b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9c3257-366a-493f-ac7c-f0e172713260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea57e7e8-19d6-466b-92a6-b9bb7081a689"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad702f67-9d42-46a5-8375-85fd972089cc",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28f39cb4-3677-4c69-af7e-c5439ed9a173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24264819-94ec-4685-8bc6-3b3b273f3ed5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7db106-0c76-4622-9429-4c42d783d13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8dc551-faff-427a-8ef1-157ccc1cf368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b769e4-0ed7-48d3-9f9a-5d73e281e272",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771613e3-f937-4fee-a5ce-f4f555865480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d1941a-b117-4057-8484-35a35105d588"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48cee294-8dc1-4c85-bf2f-b0ad5bcabe00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6ab1c7-30b4-40ea-9104-bf4417abc363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0b86c2-7eca-4da0-8dd1-6265d53d7da9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f03cab4c-fc7d-4676-9096-df6625783461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2c15c4-5683-4ae2-aa73-949030faf5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9b4110-11d6-41c4-913b-b39ff7e9ff08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5efc8c-c268-44f9-9d04-333ec57caea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bb7fe76-5bd8-439e-b200-a641c11a282f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857c4337-4d4e-4b7e-92cf-9a918fce1de7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20071e2f-2a50-4c7b-8bf4-048744a70127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabbdfcd-921d-4b95-9c5f-57c27af424c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6456d94d-c559-4129-a829-b3078a32e443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc68941-5104-4152-ae0a-8ab0efa46963",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7da71b8-b693-434a-ad41-474f233a7e74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e4ed69-568c-46d1-8d77-81548aa5d578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43a168c-e586-44b5-9661-fb48d3033b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f8bb75-9c06-4eec-8ba7-6b3ecc759af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789f16ab-ce21-459a-bb33-be957cb7352a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fe11905-f421-449f-a5d5-8ba165e55e43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35adde60-a73e-43df-9b11-38ec457f9493"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2615184f-2d42-4f3b-843a-d371bac49949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29fef171-620f-46f3-829e-a162fb69a93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d59d240-90ed-4e91-b1bf-78466847b0b1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421cef92-bd4c-4b26-bd22-5c80f6e452e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfa25649-bd8e-442b-aab8-d7652118bf1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "523ee962-8d17-47a3-9d64-14c8309c3f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bf7114-0b38-4216-85b0-f98d4ef127c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc582d1-5053-493f-9dec-a10a8dc4ba12",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01610955-2b0c-4c9f-be39-ae39192ff396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6251ec28-6784-4fbc-9514-c5f68b214217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc8c4ec-7c49-4ea8-9cc1-67622838b578",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43d80c63-0167-442d-b988-78a33950a712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d45750-2105-4f79-8c44-0385931e0603",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab646a3-6317-4a84-971c-6f14cfb153e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cce497f1-5d45-419e-be71-b1e080700e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cfa979f-3491-41d8-b04f-1c5cdc0475d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1723a5c0-a007-490d-8e5b-c7a4c4a54fcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400058c0-c8e9-4451-b51b-78c6190c8d70",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff386620-26cd-4712-9ea5-47f9edf7b391",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdefb20b-4b07-4a99-b39a-c4b580a3e341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9d19ba-30a1-43ef-81a7-eeeba76909da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc83efe-ff8b-45c6-b5a0-536bf5f3d208"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc084791-20a2-4c27-8b92-4ab4e933c4cb",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b7fd15-63b1-4162-91ca-7207dd480ded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aecabba8-b067-4b4e-85ef-3639866a8c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89693784-e21b-43be-a15b-4b0fdb0417fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576e1939-1e9d-46c8-90a0-947badcb3d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0c5508-7cae-478b-a7d0-e19d5760562d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db39e7dd-526f-4207-801f-80fc6a2f901c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aed3e7c1-c408-4366-8932-7fa11b4de70e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d993c7-1200-4c88-979a-eb33621ced24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b118ae51-b8e8-4fd2-83a2-fd4a841c4c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146a114e-5eb7-45fe-8697-b9ce779fcbe5",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97a294b8-5d3f-4a87-92b2-6a7dbe95acf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025c70f5-4d7f-4977-9460-573fa0276985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d18cbf3-cad5-4b60-91e5-b8595643bd7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35bb7384-b514-4cae-a22b-52e52f3e2c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e353869-e47c-4a91-8349-539d0ac29d00",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f255a11-15ef-424b-af54-a53e98486089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5317d75e-d18a-4bca-89f7-719583aab0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e832d345-f73c-40bd-b26c-de7346ee03ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980585a1-f224-4099-b9e1-40680359db38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92d9ab7d-6850-42c1-a36b-c8fbd95e44cc",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e8b74d-23b3-44b1-97bc-0be88f846dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fe11739-2816-41f7-a346-a09d624c65ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf751168-04ad-4b43-9735-79055d0232c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe02bd2d-38bc-4652-ae3a-312d4014dc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d029150-24be-4112-b02e-a00232b539ae",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc48475d-a7d4-4a1c-bea3-3fa4c0c95e49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3620016-f0fd-4138-a2b0-a3446c9e058c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536ad44a-94e5-4aa9-89b1-b6ebf2c64d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb54cde1-00ae-4f57-b67e-04dac8bee086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ef68021-e8ef-4b8a-94ff-472adddd971d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be9f659-f776-4e14-bc24-a0199f88a820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "809e1ea0-a7ba-4c8c-9ffe-1790b6301a72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71cd6f8a-6708-4804-b420-7cac11b37f8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb9723f-9360-45fc-bad2-aa87e4fde4a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb09477-ed91-4fc9-bea6-a6ac56d8135a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a3c78a-dc3f-4871-8314-588dbc4e0c6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20d8332a-4fad-4518-a01a-3ddd171d0c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b427a7d0-7a40-449b-9f93-ef09ca4e8719",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d170f8-f7ce-4925-a0b5-cec69e3984f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e689be4d-84aa-47f1-a7ee-e15f39615db3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f400a87-1912-42c4-8b03-11c86f8fd569",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e4590ca-ad50-437e-82d6-aeded5de9ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e934a2-85b6-4b1f-b592-ebdbb40faa53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f51f998-30ce-4725-bdb5-8ca1af36dcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60421b38-e93b-48f8-ba7d-4d0ef05e3eef",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dcdd5ca-40cd-41d2-b939-1d6e87d5997c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14c9dab-6261-4a17-8b1b-897b6c436ce6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62be10c-a4c0-4933-a67c-660e90cee454",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4645724a-f66e-483b-9f39-190edc72063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4dcbc37-7adb-4d7d-bdd5-fa3f61ea5619",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c071ab1-62ed-4e08-8dbc-00caecb5f4f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73bf99df-e115-4340-ba00-877dc0e2c477"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e25f11-5417-4c94-8545-f260092d5db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a23f981-8a60-4713-9ff6-6fbded1c6bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46c72fca-454c-48c3-9ce0-462a8e6a807c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861ff28d-6688-4a45-9444-11871672539b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "723ebc8b-a6cf-46e7-a84d-14455f2485f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43c1d535-087c-4133-8ea5-33b602503017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bceceb-7031-4162-9a80-52279e5d5c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d167b4a3-1b94-4738-8abb-532a85757b0a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ae428d1-5f81-4838-b24a-40e1208aece3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf9919c8-77c2-4e14-8e6d-9eef616a878e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c079c850-306e-435b-a69f-deb74d30b6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640b5480-a595-4396-b55b-ff82316b2013"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c081e-048f-429e-9b56-584a3933091a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3294a7e-f957-4c71-abf9-66f63d5b8e81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14a546db-b92c-442a-a077-0024100c088f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfdc9843-7a1e-4cf8-890f-62ef81960c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55318ec0-ef84-4a2b-a3a4-0b03e75b4d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc607ed5-1fae-4bbb-aef1-b4428eb2d37d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed14a0a-c13f-4b44-bf2f-ce6d951d1a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d368cf28-6562-4ddd-9f13-63854304c4f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce6dc84-4e27-4a8b-ade5-984fafabd99f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6715c1-786b-4aeb-ad44-bc66384de769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad2dcff-784a-4ec0-80b8-64c4a3ccf71b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9279e279-b8b5-45c1-a9a2-dd6aad86b06a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a352714-e6ab-405b-aeec-46e00c537597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70348bd0-2c67-4b19-a41d-057a9e470cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6b774a-24e5-45c9-89ce-14a6a45f8020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc586dd-dce1-421d-9d98-a2702d5b58c6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c71e992-0c26-403a-bd79-4dc8ff856ff0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb049347-b237-4c2c-9cb7-24af65f3bff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5390333f-d2ac-438f-beed-fdc8fd7cb101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96424cfe-6fd4-44cb-952f-a30898c3e39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdb2ac0e-6947-45f2-8e88-7ff756ae6d9c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0051e52e-73b7-4bc5-93ec-9bd4536698df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0aad288-fa98-4eae-8091-cb232f883877"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac847f54-d93a-4fb1-b886-33d9658e5694",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7d9d8b1-ea51-4cfb-9541-c0077dfb0846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8a3c3f-937a-4bb7-9a57-a5927f2b3962",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9fe6d3-9813-4ea0-a3bd-2ca35918bd18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b34523e-df2d-4b92-841c-46be0c509ff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f64f8e6-950b-498c-89bc-9a44e4049af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb60ff0-d6a5-46b2-8ba2-d839f0df7f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccea5d93-79a3-43e1-b1b2-b1a237ef8f54",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab433605-fe80-4216-841a-9ea6cfc42994",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41519d9d-3d9d-4c3e-bc52-34172c74c5bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8466b6-e48a-4514-8423-8769705c9da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "580609f8-59bd-4ae0-bf83-670ddcf3f098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc0b0c45-6c77-4381-b18f-f0699b017d64",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b2a87-25c7-4eb5-adfd-2f27831339ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b5b9a6-ceef-4584-9c07-ee298bfc97be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68425644-1e53-42c6-bb66-5bac8936600c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bc6dee-0923-4fc2-bc33-2d83fc5b693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba53af68-a4e0-4006-a3ac-2351d76eb1b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8653399f-9e28-416a-bbc2-a03750b85696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fd9eb6-40be-4395-b207-5f561a49c22d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "334dca82-c72a-4cf4-af2f-46311a09b798",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "324115c9-c1ee-449f-81d3-fa499bc6f350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fbf91ce-8cd0-44e1-82cb-12fe9504891e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d42876-54ab-4060-8860-e839391db8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9895dbc5-13eb-4197-b499-21a74fdb16e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fffa281-639d-4e47-aa1c-efa8a337cc25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b72d7bbc-2c9b-43ee-ae8e-bdba956426b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1711aa-0138-4000-9444-061ef5c04be4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e5e37d-eb5e-43d8-8524-c575c659fcee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3e97c51-1cf8-4f16-84fa-bee993863b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d70ab10-6412-45de-9702-0a68f943f598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29cbc42-d8e1-49c5-b4ca-a0f098d9d119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8aed11f-45be-4b6e-b7aa-5bc21306402b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a284c53-06ce-4c1c-8685-6b310816e8e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "712b38e5-98fe-4e94-90f9-8df72c7f1e0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e1ddd2-280a-44da-9003-cb35a4396774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01a4519-5da4-417b-bb70-c816f21f0c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abba0f5-d10d-4d82-915e-2156dbe7690b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1854f18a-d4ec-4b09-808e-c1d76eb30466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2a5e6f-cafc-432f-83ac-0e983ce20245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f70f02-b194-4d4c-a106-444115100ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2934d42-1849-4f7e-9ec8-cadca4589f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "942e286f-bfa1-4f2a-90dd-9ca428433f2a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53ec2ee-16f0-4b10-bf11-72df749d05ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c3471ae-bf5e-4cfa-9190-20c247d274bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63e2923-73f0-466c-adf7-20cd24c7e8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e2d284b-f9dc-427f-a07c-11c5b0fc798c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d88446-20f2-4bcd-a6f1-93be73d53021",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f0a938-254a-4afd-bf50-aa7a5a547aeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "820fa865-827a-4efe-9832-e68c0ec91bd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7bfb9d-7d23-433b-99e8-a5575ae494d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99512f08-fe8a-4071-8f26-6c6afcf7c60b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72ce558-692e-42bd-82c2-7f49c191c33a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4575bc02-e664-4597-9ce8-4524a05b06c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da46fa6-09be-4e33-9981-176e1092c639"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d45cb39-ddd2-4446-9ff9-02bf434f9604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43e222e3-3e39-46e8-a343-8a86a5d4d5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63931cd3-d916-498c-9062-e64d335fb9a0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3fa2c5-8be9-4eb1-afcc-7f679659a8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387ec745-110d-40a4-8642-b0fe501ecbdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee759da3-40da-4d64-a10e-8d34de962d25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d156913-6e97-4e52-b604-bc8d4ed1d4fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aace1e89-d01a-486a-be8b-54c939bca307",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e2b004-db2a-44cb-86de-50f47d3b36f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70cca376-ebc0-4065-af6d-3e3a1108136c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cdb9d5-c0c7-415c-bde4-61ac829fc52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c53c55-5fef-4fa6-b999-60b0898d6f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c6623d-6609-4ee2-a989-876e904f96d0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6334251b-c7f4-4c66-8d22-d93f0252630d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84535df4-5c2d-4575-9aab-1407f55c6d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f086e6-0e3e-4847-be22-922c83b7dac1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3258be68-c7ab-4eba-8213-d09edc1f01f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec86d256-6a2a-477c-b0a4-3ad5ad5c68ce",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb9ebd7-cb18-4c54-bddd-02cae5a73275",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c11a5d9-3b81-4444-9397-cfb7227d27f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f80b404-6c85-45a7-b69e-048d0f37a2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56d3afcb-0c8b-4dc1-a712-80e08ad6bd90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95c8cebd-a3f3-49ce-8164-372b34b57afe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd906b2a-09de-4e65-bd62-4a7e1c55d959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e5006e-fa1b-4079-9365-3ff059b5fcee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c5441a-7db8-48dc-891f-5b7dc14ad065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757a8e70-b4e6-401c-8768-071844bca2ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b0a1753-32bf-413f-8fb6-849c2aad1b1d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a410b89c-b838-4804-8713-ee70f82b7a9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b5fd05-b6ea-4b08-a437-6478ec7b3c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca88c59-3b7f-4697-bcc2-cf3883ac2049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4c7abbb-3582-48e4-b3e8-afc1a6c05b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d021ccb0-b871-4c6d-8b6c-ec570e8f3ae0",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692f9400-0733-4318-9669-b0346c348a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad28917-a11a-4af4-9ddc-608c4b0f9afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f80d9fe-68a3-407c-8a01-c693134e0840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "014f3869-f337-40fb-8c51-a79f74d3c464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c4baca-3036-4af4-9a4e-d9f0819c5b7c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe2f0b9-5391-491f-8f61-52f644210fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f09b7a55-6210-422b-aa73-8bc10ad1d78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b37b438-da71-428d-b4d3-1fcdf2f93a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1619710-6444-4947-8519-01c46204582a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0759326-412f-4208-9395-07ad3d2c1a7d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769f5932-669d-4861-9694-e591b362da92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5789253a-d1d4-4d2e-aa46-f68acd13de9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a3eb91-114f-4f5e-8bc5-fcc69c6154e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6c4f894-454f-4406-b420-2ff85bca0aa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae63b4a-0182-4b67-b309-b46f2677732e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21534513-0e7f-4047-88c8-de2b4a5844de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db056da-db48-4355-8676-7b9241749c25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0662596d-2522-43a7-8366-3187b7f073fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2751c674-bcbf-413b-83b7-904108d65d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f1a0d2-e5ee-465e-9e22-060932245e70",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e023e0-75df-48f7-a734-85d899e90bb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8516652b-20a6-41ed-9f80-3e411420f08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be2a4a9-36c5-4897-acdf-63ca88a3fbaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965054b6-ca87-4331-b1d6-6df8aaa42230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7c6039-ad6b-476b-a8dc-090b97706d52",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d4511b-794c-489c-90f8-ff62f438e45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489ee662-8e28-4d64-8270-5cf8cfcb9289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4d1e2d-6ecd-460c-805b-59ae32f9cf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bb3cbe7-d434-4c66-9adc-d77a38df37bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c736935-cb31-415f-a0a0-88b300933400",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e21bbcd-a05b-45d8-8d0f-2f03fb129898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7382c112-8a27-4b63-84e8-e6801e6f8f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c14b175-f294-4bda-b573-b8777ae3c858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d03a0a14-d4f4-4c5f-a315-499bbc6466ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fb8e25f-b6ef-45c1-ac4d-8856a4c7863b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b5bf3d-040e-44c0-a929-3c4e240cae6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbbb2a46-f138-4883-b753-ae8b0218203f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a3c547-724c-4c2b-bcab-0b77756bf657",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f167bbd9-af53-4930-aaa7-0256a7617ec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b555ed-c234-4071-9f03-5e7d7edddd29",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06f670b-70d4-457a-ada8-2f408cfe2b3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08925a27-340f-4a5f-9b9b-0bfc3cd41b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e46f89e-58b5-4ac0-8218-b9a0f380a714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620e15ff-5bc3-4cf3-b08f-0f423c9d147a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d01326-8131-4ec1-b338-a46ac93e983f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f769ae6-f282-42df-8e4d-696558a85336",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "388b4a7a-ef3d-4019-b30e-a41b4bcf7251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12db062d-c9a5-410e-81a5-fddfdafd8877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ba366f-2e6e-406c-ad8e-4e31b1715d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81421b6d-ae44-4753-b6d6-f068eecdd4de",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71bf5a71-d640-4296-a822-56c0b398b872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c27a75e1-6759-4706-85cf-dbe15f251a5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "127845d0-37c9-43ae-bc43-37e2c5d78c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "766237d2-3ece-420e-8980-4f9c8cc3a127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fd49aa-02ec-43f3-ae42-a0246cc812cc",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14111f7c-6def-49e2-8501-3fef39a6c363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "194db0d1-22f9-4768-86e0-3e11d150ee1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e6b5e3d-ab2f-4e81-b243-c62f41c2b422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ab03092-61c9-40cc-84ec-2b53a5d0fa5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f08552-6443-4095-9e79-54e555dc1f49",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5025a3d3-22a9-47ec-91b2-155925ffb87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c437ca1b-351f-4ff6-8546-83dfd050ce72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e91e510-2efe-43f2-bf11-519a7555404b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "119c6049-3727-4859-8019-cb427f55742c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689f2549-4f9a-4e94-b710-33fb80680461",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a414c1f5-cb94-4d85-a413-aba56fcd827d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9336cefd-7844-4a3f-9f62-082c98b3ce9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6e18dae-8912-42a5-a2cb-c4294c217f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13178304-04d6-4521-804d-dff182b77198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f487f12f-d8db-4ed1-8f0b-26c9ac7c9a4f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52ef953-6d89-4653-9c29-7dd9a01d596e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32749ba6-5976-435d-8677-bb93dd6056a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429a8778-eb8c-47a1-a562-1d290699e13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307d1d73-7cce-4042-8a3b-cc12ec8b6b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7644928-7531-43fb-9ebd-8b9cf20f12ed",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2316cb4-3372-4574-9f20-c4e3d017989a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e289ed1-5ea3-4765-bf85-9a7a1e57c5f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd9764e-f7c9-4cd7-9413-6a0e7377fc08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a76400a6-9d55-418d-8b90-bd68d3f81704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98566ca-2955-42c8-86c4-ace3447e95a3",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e48dd2-be7c-4d4f-8dd2-c97d25a62696",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e056dbc-caa9-4654-8e70-60e158542c90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1042a9-8fff-4931-b6f7-24eec6f2401b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0988e65-fdcb-4bad-a312-9d5651aa3b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623ce7bd-c605-4107-b61a-34d05907f110",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73fde92f-8e4a-4e56-9fd1-92d1c99f73dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8c0357-a892-45ec-ae2a-af920cbb1761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39940196-4a06-420f-b693-f873d0c8498a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48c7b689-f914-46d7-af42-6fc84243672c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ab59b5-1398-4601-9089-4019d5e44bc7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eaf2f9-335f-40b3-9e41-3de4b7baf409",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d336a7a1-e5db-46af-a30a-ce9414055b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1a1f50-07fd-470a-b7f8-2244c8533344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30248aa-adb5-49f6-956a-ef47908e447c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae05e994-c738-445d-9db2-be3b08b21e95",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b1c6d6-825c-4a92-ae1a-04920278c19b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ae80ff6-611e-4074-a5fe-340f94ea6422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc032b48-73eb-47cd-8de3-f21ea84a39bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3112fae-18aa-4724-97de-f87273292c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec359912-2734-4f41-96c4-9c73df828e46",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71f1de1-074c-4d9e-8ab3-336175312214",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1d4b78b-3cf2-47da-9632-68c2a279540c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e79b0e-1d0c-42c9-ac7b-904606844e18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88ff3c9-ffd5-4ebe-9ea1-05ddb3969ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf1ec9c-5f3b-43f2-8076-ad13f66442be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edf9326-514d-48e8-8dd8-1e4552804e2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9120c79f-4e5a-4f7d-bc2a-987f2aa4204e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcbe8f4-eda9-483b-a20c-dcf755bbc546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6679920b-bfec-45cd-9f90-0aa67750c806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c1b2ab-e9e7-4587-adf0-a85295979885",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5079bc2f-ba55-4b9c-91a4-64943b9dead9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e409196-dca9-41ce-b36d-52bb4343d291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7170e28d-5db8-42b0-8cb7-f4a204765df7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67bbd28-3a0c-4f3a-8abe-2f6b0ca70358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a2312d0-75d6-40c9-8370-ff3465d2cc4d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "992a339b-8647-4ff6-ac2d-2ab933e913c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04eb5165-93e1-49a7-be75-0fa836012c79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73650aba-3c31-48b6-9343-c137b53dd792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "463178dc-2489-4325-bb99-26b9c67bb788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c832663-1891-4605-8bd3-30632d38d828",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b73f776-907c-4579-bcb2-d9f518a3cb36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d32ede91-959d-4d08-92b3-1cf9dbdcf9c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "292959eb-0f9d-42a4-9940-1582fa8a5f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f994d2f-64e1-4978-9e17-d512994e239f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ea1e36-311d-41a6-83c6-0fcb6a492a65",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a013309c-dd69-4c7b-bfab-776ed80efefa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b9c4831-e800-4c87-8f92-f9034cfdd846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fe28f2-8f36-4cde-a462-e35105cdaa3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da2c689-f187-490e-8cea-4d28b861e5f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209a7d73-b02c-41c7-b89d-ee86125164c9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70758cb9-f824-404f-a70a-71b3bd0e8af6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4cdb78e3-d208-4578-933e-f93e447db9df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebb2c7d-b576-4c0d-a475-b27b51b27f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bfe45e3-221f-47ae-83d7-24e1835f171b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e62fa0-469c-426b-8621-d51be76af3cc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ed1bce-c8b3-4a47-9f14-bc352d261220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d990713-216c-4f42-903e-3795fa4f4620"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25e511a-2114-44f4-9a89-208b4b20c95b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1905d1f8-a72d-4694-99f4-43cbc5840b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e165f2f-e03c-4f1b-896f-d8c10ca89bfb",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eac9e5f-970b-4d51-bd3c-e97b4e8945bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9cebc42-c419-4b03-8aae-78f61ecb857a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e06458-e735-44ef-aec6-3765f8b0bf59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56ee6242-1701-4984-8fed-dd119028e296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ca373b-1a36-4835-a026-ff88c4db6e0a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41107ea-5164-4e3d-8172-79d193f2f77a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "161c854c-4075-4f56-a850-062675c49590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91769a7b-a980-422b-bb4f-ae86ec0c9f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948c3f6c-3c57-4968-8a71-357cab85b9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5edec3f3-4c64-47aa-a017-a38d05559e64",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d1f916-a06d-4a03-b322-4ff8d3e5640f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7aeadd7-a616-4b80-8f6f-d855ae0e1ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6c7e30-1668-42eb-a434-54d6491e95a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d395ca0-c92f-453c-b1d6-3f915baf8738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab64d37-5536-42a8-9f44-6cbf10fd725b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c013047d-e326-4a33-a400-bc11f95adba3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea599da-3af8-4cd3-95bc-b24098cb3ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d822f896-296c-4b97-8038-8a4e89bbaab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01f4d5f-f4c9-478f-a8de-60abdf66dcf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69b782e-67dd-44fb-8a8e-03aa65698178",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c05b1c58-c93b-4cf8-9674-ee41c664041e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34e0b367-5c82-4e40-bdac-3111886d32b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b11552e-4b87-4b7d-a457-396cb0b55610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753387a4-755e-40f5-8545-76f3d538151b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f8edd0-b2ec-481a-b679-8255fc7bc471",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad18d4c1-acbb-4eae-9451-50cd54fcc0c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df785248-a5c0-4140-b4b3-2ab03f4b6d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a76a7-cc22-43e8-83d6-be3432a58f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2534b878-3892-4f3a-93fb-c46e2293e749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473eb371-4c42-4aec-8d33-2277de1226c5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ade7e8-63cd-4872-b63b-8ed06d6e8ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b083164-3213-48f2-84ba-0349b7b6bd1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55860c1e-56ef-460f-8643-266ad0d418b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea934d4-cdc8-4081-999e-7f9b21482d1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5fe990-d202-4e89-b509-6de6f4a21f50",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be51580c-9839-4a24-b547-967382e71627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2412dffe-e945-473b-8010-6089d16f58db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e02e30c8-e7eb-4e1f-80c5-8c22edf74b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5f8470c-dfde-4406-87fa-b78bf3f9a747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e35b7480-5afe-4283-beab-9b9475b16610",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d79643-c922-48ff-924d-1a88039ab1fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "416abdb2-82c8-4949-a3c6-6cd5b81769c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02cd1b6d-ccbd-47ce-88a1-c744791c4d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417849ea-4088-410c-aab1-c11511de4992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4226db0-b80b-43d0-93b7-738217fdf904",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ca0f475-acdf-4f8d-b262-67bd375102bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd91567c-2d22-4b42-94f5-0cf228818495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09f42aae-b9b4-4a96-8402-e0adaf5b44e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5287c3f0-f4b7-4ca4-a572-946165949600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7425056e-1512-4d6a-9d1b-ad46587024ac",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4edb3760-825c-4f6b-ba37-6926159a240d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db18828-8978-4ae2-818a-0e297ddb6760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c34830-4bf1-4a94-8891-c1f5101a7657",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccbe277e-5291-4628-a572-3926e4475072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa1d3975-456a-43fd-8341-397744d5669c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ea0ad4-f190-4779-8184-a74a6d5ba5e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4977229e-5371-4734-8bc6-186abf8395ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beacf9d-7ed0-4715-bb44-1e13ac0be866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dd6051b-7f0b-4ab3-b7c3-fd5a26d795d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05a5add9-0f8e-4b4c-8fac-0a1c23258b07",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0feeed20-0084-4ccb-b92d-7c87d4d2056a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94efb2de-7141-42e9-b74f-8afb41fa1a34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deed8fd8-b957-4314-972f-8efbfcaa7cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5717e330-c64b-469c-8156-dba48486bc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704b5aa0-16d0-4e68-847b-a01c5811a8dc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34cee2fc-33ce-44e7-89d1-29c5e8158a0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fd1ba7f-5a11-46b9-be09-dac4ae03fbd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e88d0c0-801e-44da-9a79-5cd986677edd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b122878e-6e44-43bd-80d7-4e87a2d58639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d12efe-23af-4560-9fa2-400a20b77ec5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ec15ec-91b2-418f-afdb-4d88ad621f41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89f69b4f-9053-4e32-9efd-c6ceed88772e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d619166-ac02-4fb0-9737-a1b3516c015c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d75d304-a150-452b-b4bd-d950d6378c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96d207f-98a0-4b11-abd4-9e37d23599ef",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04b3666-c975-4b97-9267-b6f6276fdc68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e77c0790-c04f-444d-b549-1d20153d5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16368df-1e8c-41ba-96cc-4abb0c9bae15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "661d8361-bec4-419c-bf97-fc77da4db656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ae515e7-5c61-48ee-9a8e-e47cfbee6234",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f821f-6468-4280-95e0-c47955631645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4091e44-9485-4023-877a-21963fe64e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a674ef3e-865c-4ea4-a776-e06f0742a121",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "493f4236-107d-489c-9503-74b749817615"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70faa54a-4090-429b-920c-51cd35adef38",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9783bfd8-9a25-4d30-a7d3-b3b0de3e2358",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e364f0bd-b633-4810-bda6-4228967c8067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1555ec0a-debc-48d6-8953-623d68883f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdd10ed2-e27b-4773-89b7-3326889aa39e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84846923-21db-4d15-a73c-8c3de7ef25d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d008cea2-dff6-43f9-ba46-262af5d93dd6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a535695-794c-481b-a96b-35e3e264d493",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "784d49d1-f1f7-4a9c-b8ac-03f93294a5cf"
                    }
                  }
                ]
              },
              {
                "id": "6a001711-6312-4586-b89e-9a726deba2c1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a367079f-d78c-4227-b21e-6238d1209f5f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea48010e-0150-441f-b432-c49704b734ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e560f616-e931-479f-876b-18cd521ddb9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa282b1-95f6-47ea-bdd3-ef9f76693b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0d3a7e1-9616-4f4e-a1ad-acf5b562e3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4126e83-d435-43e1-bb18-7ae66a5cdc8c",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3bc1c62-abb1-4667-9fdb-d763fd235a0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e89b0d8b-d7c0-42a5-a91c-1ecd3f06b000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3b272a-e7a3-4755-bab7-f22f5dc2b807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18c304f8-ef8f-4688-a083-7d2955daf849"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b3a4f47-7c00-4290-8fe2-2b7a61fb63df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222bba77-5c44-40f1-b6b7-fe174b389825"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "157770b4-6303-4de2-b8e1-68e21e85fcfb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c4b44de-1c7b-40cc-8545-1b32f50908da"
                    }
                  }
                ]
              },
              {
                "id": "a557c15b-91d5-47d7-8564-374fa40ade78",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "dfadbb85-a860-475b-a317-c2d23a2acd1b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31468da9-61d0-4ec4-beab-cce47acb4d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "2ae21463-766d-4b8f-a4f7-879eefa3a62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be4d564-ddc3-4685-b214-1ede1ab14936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29c74f61-0f27-4826-be58-49917a101daa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f53fafc3-f699-4db7-9a25-ce1ee69b3db8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d0ad34e1-a891-462c-9585-411456b44c15",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cec53357-f559-4c49-b24e-5e376dbf2a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39d6c2c4-b656-4abb-bda9-dd70ea40d20d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b91077de-39f5-4a81-b8da-5caf1afe8077",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6830791-a0a1-48bf-b0c4-eba7164bceaa"
                    }
                  }
                ]
              },
              {
                "id": "311e7830-0aff-4b6f-880d-0ee9495a977b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "05b5cf48-05d2-4692-a3d8-b6bd7af65785",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "bcff264f-1168-4640-9c24-b6fa67accc24"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48102dd5-3be7-433c-8923-b761f10e6eba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651ba087-8316-48f1-84a9-f151b6e37b4f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "986582a4-39e5-44bc-a941-28ff43217d64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1ff24800-2d64-40c4-9625-ebadcca41c1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "692303b9-6312-491f-88e5-8dfdb1737e17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d90ceaf3-561d-45b4-801f-5eb725f21d2d"
            }
          }
        ]
      },
      {
        "id": "9b47b0f3-534c-4520-8794-c4ee82cdd134",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "0ab22a18-6a6a-469c-bb26-b4d00aa9fe2f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1bfba23-e318-4891-b0c7-b5954c6f7430",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6036f68-11a9-4a7e-8e73-287698388f42",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2c9371f6-6a1f-427f-a8f9-6e3935f3a1e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6fb01c8-c910-4c6e-bde0-98322730b9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef954048-b0f4-46cc-80cc-1bb212218a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fe98301-d3f6-4c63-ad13-8f96140bf722",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cff7cbf-228b-4a3c-bbc7-0bcc13ca3a1b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "0547f547-28fd-43f2-840f-720c2d9b7dd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "445de7a4-351b-4f09-89e6-6f2dc2d53039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1544de-a9f1-49b5-8e2f-7ebe0229bd65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31f8ed99-ec04-44b6-9b23-f8e12abe4f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26d0265d-c8e0-4079-b708-8f379daaacf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "89507b11-6bfc-4137-8088-9356a4129c06",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eacd7682-06b8-4e77-a226-e7f07efc64be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a437514c-d441-4dc0-9846-2197c3f56f16",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "d02cc9d6-8247-4f0a-923c-4a5d84ffc79f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d99d7f52-9d7c-464e-97b8-3c5b2430a43b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0acd8df-df00-4477-bf15-02e19eafdc2d"
            }
          }
        ]
      },
      {
        "id": "51b609e9-d656-4768-898d-4e42985592ee",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "02dc269c-d4bf-453c-a21b-126e6623c71a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27ad254a-362f-4a1b-b4fb-bc499c392e54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8cd6847-6a48-46f7-ae7d-ac8c1160b239",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1e06be-03e2-47fd-aa76-966edc64e595",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e37b038f-62d7-47f8-b23b-e89a8968fb15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bb8a5f-cb70-4c74-9d08-7bb2eedd0bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d46563aa-4096-4613-9af1-74127733c99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41650b95-74ef-43f2-945e-b70aa60c732f",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd3145e-d092-472b-8d9c-cdf2868b75e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "79b90bd2-17c9-4d02-b94e-817b15b15ad6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1333a339-671b-4939-a498-701a3fbc6970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9708cea5-aefc-4080-ad6b-0872ca79f0d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7f6f7ac5-afd5-4060-8fbd-8c63ecba25ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07bf4bd-98df-4f42-b3b9-12badd684d50"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f7f0bfd5-5192-407d-add4-8a4a90241d20",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a347b677-ac02-473a-bd4e-8d2aa75465bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "509f3918-51f5-4af2-a88b-c9e0f90cb403",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17ca9d14-26e5-472d-ae41-139cf066f3db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f33c31cd-5730-437e-a677-ec1af554d320",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e851d34c-328a-4328-a469-01768c7e0ca6"
            }
          }
        ]
      },
      {
        "id": "c02aa8cf-bb79-408d-b217-2fadcbbd29d9",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "46834da1-ef64-40de-a78b-4d615d885743",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43184cf8-1fa6-4829-b1fe-423792d5b726",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b781a07c-8aee-43a7-9bd3-cd1f36645da7",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63202bb-3669-4082-ae11-10c3259401e8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db3fdcc7-8935-4a96-a2cd-f0067cfac9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17361fd3-2974-4fac-ab94-e37f7a4ac8fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16ac6480-bfce-42d7-86df-4d344f0ae48b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6796992e-b9be-416f-9e57-f68ddd4a891e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58da0d5-1989-4a34-8ffc-c55e583cde3e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d16f9aa7-8d62-4ece-94dc-8decd4e6ef0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b923f-534e-40de-8e1f-52c31f2eea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "285895e9-2211-4e31-b778-d0f1d4bf16cc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ede785d8-cb2f-4364-9290-e72212e0c588",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e8bf0795-c5d5-44b9-bcf6-3234fff9ac0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "177e3cac-dfb7-4001-b7a6-8d998ac4c1bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4326a222-aa03-45b8-8c60-c83b308b5cbb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fe7f507a-effc-4645-88f4-199a31316791",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "94629453-1324-4b8d-9972-7bee7094d7fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13c44d52-6884-45c4-b502-387cc57776f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51d3290c-8d98-4139-a3cf-1312f0203142"
            }
          }
        ]
      },
      {
        "id": "094752d0-2a8c-45b6-8c23-956b1b58d66d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3bdbdb9-fc0d-44e8-94ef-a5d4e850de33",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c8093813-90cb-4aef-b7c8-d02d644f92fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8dc4b762-8dec-4fed-a880-8436276f1080",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1bfdd492-fc71-4fc8-8862-262cdb86e57f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3c49267b-63c9-4209-b0a0-69e832f45570",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 19.257692307692313,
      "responseMin": 5,
      "responseMax": 456,
      "responseSd": 47.64119640263622,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681000688077,
      "completed": 1681000703465
    },
    "executions": [
      {
        "id": "bb701eab-664f-418a-8dde-af4c35aec510",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "21efe69b-7dbf-4021-80df-b2c6b5182fcd",
          "httpRequestId": "338a4206-59b4-4abc-aa36-f12787379293"
        },
        "item": {
          "id": "bb701eab-664f-418a-8dde-af4c35aec510",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "a6a28319-eaef-4a4d-a07e-37cd964ecee1",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "838964c2-6801-4d98-bd28-2c278eecc7e8",
        "cursor": {
          "ref": "a52737cc-22f3-4408-a541-57b340308a93",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7bb2fbf0-9318-4ff3-85e5-a2a075730b57"
        },
        "item": {
          "id": "838964c2-6801-4d98-bd28-2c278eecc7e8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f62e0d5a-d24e-4c9a-9347-3ce37b9b2e63",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "e1ccebde-c24c-4f9d-9740-f58ae4c6b51b",
        "cursor": {
          "ref": "7fc3de42-8c45-4f90-b83c-a34ff8c57b19",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "799c516a-c61a-4833-8205-eb07dce62428"
        },
        "item": {
          "id": "e1ccebde-c24c-4f9d-9740-f58ae4c6b51b",
          "name": "did_json"
        },
        "response": {
          "id": "d9cfd744-c89f-468c-8432-25aef28c234b",
          "status": "OK",
          "code": 200,
          "responseTime": 177,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152cb255-7bc6-4e06-8308-dccb3cd09281",
        "cursor": {
          "ref": "52fffbcc-dbf2-416c-be04-11d283e3f229",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "045f478d-df95-4fc7-a4b3-b97486f02401"
        },
        "item": {
          "id": "152cb255-7bc6-4e06-8308-dccb3cd09281",
          "name": "did:invalid"
        },
        "response": {
          "id": "dbf75db3-5d07-4f6c-8b3c-befdf42e887d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152cb255-7bc6-4e06-8308-dccb3cd09281",
        "cursor": {
          "ref": "52fffbcc-dbf2-416c-be04-11d283e3f229",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "045f478d-df95-4fc7-a4b3-b97486f02401"
        },
        "item": {
          "id": "152cb255-7bc6-4e06-8308-dccb3cd09281",
          "name": "did:invalid"
        },
        "response": {
          "id": "dbf75db3-5d07-4f6c-8b3c-befdf42e887d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653657e5-f9bc-4023-9494-ac44c10d6133",
        "cursor": {
          "ref": "838e970e-34b4-471d-8b10-c1160c32fbd9",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "00cdc2fc-df03-427e-b444-b4cf993fd59e"
        },
        "item": {
          "id": "653657e5-f9bc-4023-9494-ac44c10d6133",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "21670ff2-c912-4cb3-a94e-51fa08a24088",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daf24c74-3574-422c-ae01-4737733cd000",
        "cursor": {
          "ref": "2480d388-fb37-475d-95dc-452a3df9219d",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "03ca7eb5-8b7e-4241-91cf-30d1a698ffda"
        },
        "item": {
          "id": "daf24c74-3574-422c-ae01-4737733cd000",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "61a6d511-d4ba-44d1-a73a-0b791a23969a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "352e6e49-42da-4dc4-b45e-c845d8f3250e",
        "cursor": {
          "ref": "265b7c99-1457-4af5-af82-57bcad81a2b6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "1f33f509-4a87-44d7-ba65-2f59c78fa33e"
        },
        "item": {
          "id": "352e6e49-42da-4dc4-b45e-c845d8f3250e",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "fb21d688-bd56-4abe-ab95-e37fad474283",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93b4134-3d88-4c38-96c5-a6221bc6831a",
        "cursor": {
          "ref": "9652c184-89d4-45a0-ae52-bcef3e381edd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f981f22c-56a6-461a-b340-c9923fe87132"
        },
        "item": {
          "id": "e93b4134-3d88-4c38-96c5-a6221bc6831a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d5bc3544-6f5a-42cf-94b9-b109c87ae1c1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e93b4134-3d88-4c38-96c5-a6221bc6831a",
        "cursor": {
          "ref": "9652c184-89d4-45a0-ae52-bcef3e381edd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f981f22c-56a6-461a-b340-c9923fe87132"
        },
        "item": {
          "id": "e93b4134-3d88-4c38-96c5-a6221bc6831a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d5bc3544-6f5a-42cf-94b9-b109c87ae1c1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 10,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed49e85-180b-4d21-9e15-6dcc7460d358",
        "cursor": {
          "ref": "3411e05f-67a9-46eb-8d6a-99c0dd49cbc0",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "53efd9c7-5035-4729-a50c-d1598b0a210d"
        },
        "item": {
          "id": "bed49e85-180b-4d21-9e15-6dcc7460d358",
          "name": "identifiers"
        },
        "response": {
          "id": "776a19c8-3d07-403a-9ab3-b0d65497fbfa",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ee9fce-df39-402f-a29c-785f9730bee5",
        "cursor": {
          "ref": "82bb2503-a7f5-410d-b2be-8e3d6d5f1d60",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80a65fcb-c0be-4b72-9119-91d90ee8208c"
        },
        "item": {
          "id": "d9ee9fce-df39-402f-a29c-785f9730bee5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cff594f-9142-4f69-b2ab-5053974b7d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ee9fce-df39-402f-a29c-785f9730bee5",
        "cursor": {
          "ref": "82bb2503-a7f5-410d-b2be-8e3d6d5f1d60",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "80a65fcb-c0be-4b72-9119-91d90ee8208c"
        },
        "item": {
          "id": "d9ee9fce-df39-402f-a29c-785f9730bee5",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3cff594f-9142-4f69-b2ab-5053974b7d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06989f2c-4022-4cb7-86ae-bae9385bd130",
        "cursor": {
          "ref": "e49f9f99-6bd3-4268-af23-9c0b1e301729",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cc2604a3-275d-474e-8f66-9d5c77ee1d79"
        },
        "item": {
          "id": "06989f2c-4022-4cb7-86ae-bae9385bd130",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "33d60f5b-5484-4471-af8b-75a7994ea584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b362e8-3b3b-4a26-90e2-869c30e849e4",
        "cursor": {
          "ref": "dc30ec02-f1eb-464d-b274-17ed0efd7460",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "af974c6c-1c32-46c2-92a4-0249cede35d6"
        },
        "item": {
          "id": "d1b362e8-3b3b-4a26-90e2-869c30e849e4",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9d4b1d6c-1e3b-4177-819d-8ee68de2046c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ab354d-a615-4e37-8ce2-7929546b9749",
        "cursor": {
          "ref": "13f4c9c5-5dc7-41f7-85fd-f0f531036c3e",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "1bbf1d1f-badf-41e7-accc-67070b42b502"
        },
        "item": {
          "id": "38ab354d-a615-4e37-8ce2-7929546b9749",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7ec45dc1-a137-4c5c-8000-80495b9b7595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b6b294-947f-4f84-bbb0-01d2cd7339de",
        "cursor": {
          "ref": "a42c4d40-47b9-4dfd-9982-b3282f58e7c2",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8b62a678-5002-40d2-a16a-cb82acb1a193"
        },
        "item": {
          "id": "95b6b294-947f-4f84-bbb0-01d2cd7339de",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7e5b64e6-cd18-4dc1-8d28-1f1735d0f57b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44804240-9483-4c68-a7d5-6a805638b68d",
        "cursor": {
          "ref": "4c599529-bdf2-4637-9b5e-3d3048d601f2",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9ade2d19-0d64-42c1-b726-6301f01863a6"
        },
        "item": {
          "id": "44804240-9483-4c68-a7d5-6a805638b68d",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "78e4c291-7e05-430e-99db-b2f522dcd0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f708cdbe-1d5e-41e4-8c42-990726454be5",
        "cursor": {
          "ref": "1786c788-67fc-4b65-9fcd-8057e4b68bf6",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "cde2986d-5687-4787-8b28-0da73f36a76a"
        },
        "item": {
          "id": "f708cdbe-1d5e-41e4-8c42-990726454be5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "136b185a-1e59-4eb2-b9e3-63067bfb6f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46be749-4353-4428-8c44-7ecfa65a99f8",
        "cursor": {
          "ref": "c39c6a5c-9c20-4160-9276-b5c0f659c9a8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "bb58c2d7-8ba5-448d-b59a-c35a53b2e8cb"
        },
        "item": {
          "id": "f46be749-4353-4428-8c44-7ecfa65a99f8",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "810ffde6-278d-4a4b-8327-dc34cfcb78e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1beed01f-468b-4c51-9253-3b752ceb4d40",
        "cursor": {
          "ref": "90dc101b-8c2f-45a4-880b-85f86ba38e57",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d7c8f84a-6006-4a84-9786-cbbe3780f24e"
        },
        "item": {
          "id": "1beed01f-468b-4c51-9253-3b752ceb4d40",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d5afd1f8-2261-4a05-a57e-c5b45ede076d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f983eb6-3689-47a3-8533-bced2c52decf",
        "cursor": {
          "ref": "e3e1adca-6884-46ef-81a5-e07a27844fa4",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "3e04b26a-1b63-444c-9b9c-3f4c3980580b"
        },
        "item": {
          "id": "3f983eb6-3689-47a3-8533-bced2c52decf",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "11150c60-a231-449e-9c83-35adc8538262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bbb80c-fdac-41c8-9e99-9867fdba257f",
        "cursor": {
          "ref": "5de54397-fa4d-49c0-afd4-36387f02b202",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "43aae049-148e-4720-984b-19121151c332"
        },
        "item": {
          "id": "71bbb80c-fdac-41c8-9e99-9867fdba257f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c8900611-568e-439b-b055-347273948242",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "826ee2f0-9c5b-42b1-83a0-4c73afafaddf",
        "cursor": {
          "ref": "6d26ff1c-9156-482b-8653-94e45dffeeb3",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "90e6191e-efc8-49a2-a296-004aca769da3"
        },
        "item": {
          "id": "826ee2f0-9c5b-42b1-83a0-4c73afafaddf",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0ddec368-6a55-4afd-a1e2-3c96ce6404aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdce733-eaa2-49a2-8117-74e55e2d2753",
        "cursor": {
          "ref": "5e28506c-bdfb-497d-9e03-efe102ba87c1",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "57c2d062-be53-4080-b3fd-94a6f757a45e"
        },
        "item": {
          "id": "2fdce733-eaa2-49a2-8117-74e55e2d2753",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "07f40431-9cf6-4b60-8a91-2cbdbbdb2ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80405380-ff4e-4f94-b209-b176f7cd6020",
        "cursor": {
          "ref": "2c5d243f-2f34-4f8f-91a1-6f70a03a5bd2",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3bd4a4d2-35ea-42b5-a712-75acacbde27e"
        },
        "item": {
          "id": "80405380-ff4e-4f94-b209-b176f7cd6020",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "79290d7d-dd5a-4d6d-8b2b-2d9ed2ae286b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1e62aa3-6fa7-44f3-8d26-ed534aaa4e19",
        "cursor": {
          "ref": "b6df8a30-e8ce-4aa6-857c-328e820ca381",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6fe145f7-f21d-4165-abac-7160d85fbd6e"
        },
        "item": {
          "id": "b1e62aa3-6fa7-44f3-8d26-ed534aaa4e19",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "479322e7-9f31-4aa8-ad7e-ab434ca43f96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12168ba3-395e-4e02-b6a6-7f077e0c166e",
        "cursor": {
          "ref": "15ca235a-ec70-44f6-b748-549d2dd0a40f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5ab6a95c-bff0-438f-8c6f-eef1f869fd3b"
        },
        "item": {
          "id": "12168ba3-395e-4e02-b6a6-7f077e0c166e",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fa0a779e-c890-41a3-8fea-7130ab95ffc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af1c052-f33e-482e-b877-da517ab3bd96",
        "cursor": {
          "ref": "4284792f-3c04-4c67-a21c-357c30ebf2b4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "dce51a97-3c67-45ed-860f-42fa15bde082"
        },
        "item": {
          "id": "8af1c052-f33e-482e-b877-da517ab3bd96",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6c47e5cd-568d-4884-a909-c529440a03fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1972c11-abfd-49c5-b39b-5718c7d79588",
        "cursor": {
          "ref": "f5e93cdb-6fb4-47f6-9f39-d49890c2d547",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c5a548e7-2c6a-4244-a931-92b4f69774ea"
        },
        "item": {
          "id": "f1972c11-abfd-49c5-b39b-5718c7d79588",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5eca10ae-3877-4f89-af00-5b1bed3ff1e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49dcbe34-a546-4a26-91db-c0fb0a6f6e87",
        "cursor": {
          "ref": "e4564d09-65b6-46fd-b107-76ab98369bd4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "201aa6b8-2583-467e-89d5-0c6167ef7362"
        },
        "item": {
          "id": "49dcbe34-a546-4a26-91db-c0fb0a6f6e87",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8245a152-b600-415f-b362-a72fd54d29d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b717807-b5ca-41d4-8d84-fe28ff68002d",
        "cursor": {
          "ref": "06d07fe4-24fb-4956-bf07-c85aded36007",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d4dafc42-5ecf-427f-bbe9-704fd49c4564"
        },
        "item": {
          "id": "2b717807-b5ca-41d4-8d84-fe28ff68002d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bcba27f7-75f9-4ead-8871-155a66dbe049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15155190-5569-4fe2-b145-62b52eb59a3c",
        "cursor": {
          "ref": "c14cf13f-6cc4-4246-bcff-8a3c9dc98b49",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8ac649fa-74ec-4b76-8920-063d6c124a03"
        },
        "item": {
          "id": "15155190-5569-4fe2-b145-62b52eb59a3c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6cd13679-f741-4db1-8791-f58a0783d96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32eef90b-0e97-4ee3-9165-956949dbf234",
        "cursor": {
          "ref": "b3b721de-93bb-436d-84db-47e916e532cb",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a884081-d7ea-40cb-8a66-a1b69f3fe40c"
        },
        "item": {
          "id": "32eef90b-0e97-4ee3-9165-956949dbf234",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8ed64ecb-5c48-4b46-85ff-7c3a53c67c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6bae3e-f17a-49bf-b20d-8ccc18b39c9d",
        "cursor": {
          "ref": "a0874017-f073-4832-bbfd-1cbf39b1696a",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2f2bb9bb-8e30-451b-8a61-279d804a86bc"
        },
        "item": {
          "id": "da6bae3e-f17a-49bf-b20d-8ccc18b39c9d",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "336794ac-1c49-40c9-9518-6916cd4a6f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c54f971-0375-4dc3-b65b-9709eb953211",
        "cursor": {
          "ref": "e9cbf44c-14cb-437e-b57f-a2ebdc75b3e4",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1a90c5ed-bb9a-4421-bc42-d26de3f70e3b"
        },
        "item": {
          "id": "5c54f971-0375-4dc3-b65b-9709eb953211",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "863b8f89-5cbb-465a-8396-3d6b54f0a2fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a714065-1a1d-43c0-a712-f024d892683c",
        "cursor": {
          "ref": "d0befeee-7f02-429c-b575-02284042c2c3",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a37cb189-aa38-4309-aa20-df93ef86d249"
        },
        "item": {
          "id": "3a714065-1a1d-43c0-a712-f024d892683c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "baa34a49-ab3b-4f4c-a9be-30dee89b5ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43baddc1-8b20-4a1e-8114-3353e161809b",
        "cursor": {
          "ref": "8c4982ba-bbfa-493e-857b-96ef1f8cbda5",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "51df06ac-a0ae-4647-bd1a-b0dc9b85da21"
        },
        "item": {
          "id": "43baddc1-8b20-4a1e-8114-3353e161809b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "da756f1e-3b34-40cd-99ec-a0b5d0c741be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96dfc267-3636-47fe-9e5d-b52ae58b2974",
        "cursor": {
          "ref": "747bc7b9-cd67-4c87-9e00-e3cce38b9b5d",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "5b278bb6-5932-4d5f-99d7-2aa64cf7deef"
        },
        "item": {
          "id": "96dfc267-3636-47fe-9e5d-b52ae58b2974",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9a458c79-6c79-4584-9809-f9669647cc3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e65f97-c2eb-4b2c-be4c-5e3581ddf912",
        "cursor": {
          "ref": "3a93af29-3a89-44f0-a791-093b792ab0ee",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "4ef4bce9-45de-4460-b900-94dd3c708ce6"
        },
        "item": {
          "id": "d0e65f97-c2eb-4b2c-be4c-5e3581ddf912",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "80c87665-75ee-40ba-a217-a04b97e04084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69feffba-a0bb-4632-8551-5816a7c9d38e",
        "cursor": {
          "ref": "97e87494-4ea5-473e-80f6-8256e2386218",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c06a13b6-ff24-4d59-898b-53e1b4d1d13b"
        },
        "item": {
          "id": "69feffba-a0bb-4632-8551-5816a7c9d38e",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0e076a1e-d594-4559-bab8-0ba5f2b3f0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47614376-35e4-456e-a623-b746d81bd7f6",
        "cursor": {
          "ref": "bf121a77-c5e1-49b0-986b-b5d339aaeefe",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5e73da94-66df-4ac1-a976-b28ced810067"
        },
        "item": {
          "id": "47614376-35e4-456e-a623-b746d81bd7f6",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "40fc256d-bff8-4df6-97c6-4c17aba4ef74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b40bfe-4f42-4324-ab49-45fd32e0f06a",
        "cursor": {
          "ref": "f8f0a66d-a30f-4676-93e2-af6fc61378e3",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d267669e-6547-4b6c-94a3-6e5f1e912998"
        },
        "item": {
          "id": "b3b40bfe-4f42-4324-ab49-45fd32e0f06a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5f1d15a8-1f2a-42a3-8bb4-4c8d5cc32eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8011c6-b796-4240-aec7-2d0e85bf24c2",
        "cursor": {
          "ref": "6e029676-80fc-4f5e-b0ec-d2ad6b0082cd",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8f9f0ece-b9a4-47da-b603-97679ea35a46"
        },
        "item": {
          "id": "9c8011c6-b796-4240-aec7-2d0e85bf24c2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "6752280a-5a9f-4648-95df-9ca7eb150c30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d072d1b6-fb93-4f13-b71b-f522f7278ae1",
        "cursor": {
          "ref": "c0f6acd5-ca2b-4ddd-bd37-50475c7bf6bc",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "90133325-90a2-4b0f-be45-e8c63010723d"
        },
        "item": {
          "id": "d072d1b6-fb93-4f13-b71b-f522f7278ae1",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d93ab5a0-722c-4155-8d7d-c763e9b80682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5358f44d-66ee-46cd-aed1-a39e8438fd09",
        "cursor": {
          "ref": "92bd8e8b-3419-47bd-9f7f-93c4c2fd9788",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "40206762-241a-4123-b6e7-25aac0a83c5b"
        },
        "item": {
          "id": "5358f44d-66ee-46cd-aed1-a39e8438fd09",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "f4aa893c-95a0-46d8-b0b1-05d926beccb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114b583b-7110-415a-8e68-b5c21e3a08b1",
        "cursor": {
          "ref": "0f29071a-4aa2-450b-9a9f-660232f483da",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7909aaea-7ad9-4bdb-b404-874d9e8ce508"
        },
        "item": {
          "id": "114b583b-7110-415a-8e68-b5c21e3a08b1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2d284fae-0a92-409d-91ec-2371030d938a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da87f63c-95b6-4c26-8b0e-5dc1e3ee045c",
        "cursor": {
          "ref": "2bad0999-79cb-4e3f-84a6-0cb3dcd6698a",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "076fc8b9-27fb-4f99-be41-11b520f5b92d"
        },
        "item": {
          "id": "da87f63c-95b6-4c26-8b0e-5dc1e3ee045c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cc029b81-fa6b-415b-a6a0-1a45116338fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9223615d-b2a0-430d-978b-8a24ffa2564a",
        "cursor": {
          "ref": "99ece897-d916-40f1-9f69-8885f82a436f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4dfeed18-db90-4f40-af9f-b9d32f89b900"
        },
        "item": {
          "id": "9223615d-b2a0-430d-978b-8a24ffa2564a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "026fef1d-f8de-4c45-8ec0-789ed04b9639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfe08c7-27bc-47bb-b0e0-7972308f389b",
        "cursor": {
          "ref": "08025374-06aa-4783-9943-b7c1c76a778b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "99918c6d-c46a-4dce-8178-06e729400e3f"
        },
        "item": {
          "id": "bbfe08c7-27bc-47bb-b0e0-7972308f389b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d931c6b1-f906-4f38-b021-48e783181264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7573498-2c2b-48c5-a565-766d3cf85290",
        "cursor": {
          "ref": "76602209-4de9-4fda-8399-d8296b5c1cab",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9a30366d-db1c-4826-b06a-39ad501c04f1"
        },
        "item": {
          "id": "d7573498-2c2b-48c5-a565-766d3cf85290",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8a9e8979-b260-480a-9290-8d27a1f9dbc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b252c7d2-e9ed-4cc0-a5be-005eca835eeb",
        "cursor": {
          "ref": "abadaa1d-cdec-44f8-a74a-4fb2a327189a",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f390b006-1a26-43a3-a4ec-b7689cbc5fdb"
        },
        "item": {
          "id": "b252c7d2-e9ed-4cc0-a5be-005eca835eeb",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b0ea2702-e130-46ce-995d-20440aac3e05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921090d2-1b4f-425f-9284-4f68893d5108",
        "cursor": {
          "ref": "47e62f63-c93f-4f32-b57b-b4e97d94f9e4",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "76e031ed-fe26-45d1-9c8c-98935a89dfc8"
        },
        "item": {
          "id": "921090d2-1b4f-425f-9284-4f68893d5108",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cdbfd9ea-c4c4-480a-aeae-7aaf959f31dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "408de888-1fcd-411f-8864-16a7ccb65336",
        "cursor": {
          "ref": "ca8e1278-9dce-43f7-a458-04b75431064d",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "041a7959-8dbd-45c7-a787-454db336179b"
        },
        "item": {
          "id": "408de888-1fcd-411f-8864-16a7ccb65336",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "92ee06f1-cda3-45f8-a98c-8fd69fa22d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70791571-3c8e-4d4b-9f92-4b87ee06b34d",
        "cursor": {
          "ref": "2abc120d-f278-4b09-a1b9-f80d49152db4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "98005595-c0d8-49d8-a6ea-059a05fdd8c1"
        },
        "item": {
          "id": "70791571-3c8e-4d4b-9f92-4b87ee06b34d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "02634307-e289-4f1d-9710-a355757137a3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 18,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef37dae3-aa8e-42e2-ac71-a12b317b6340",
        "cursor": {
          "ref": "c54565e5-5609-49f8-a7fd-f0d018703163",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "2438abad-2a9c-48e1-a8e8-e445c6c0ef27"
        },
        "item": {
          "id": "ef37dae3-aa8e-42e2-ac71-a12b317b6340",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "de623c4b-c23a-4219-8692-afc4b7b77c02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9313d9-cac3-45e3-bd84-c2dff522a73e",
        "cursor": {
          "ref": "97f9a636-c2eb-473f-b7d0-0dc7c4220bed",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9e12a5c4-646d-4299-9402-e8b7513650b7"
        },
        "item": {
          "id": "4a9313d9-cac3-45e3-bd84-c2dff522a73e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f63b4067-79c9-4b34-8eee-6123a2e795af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "190e44e7-3dab-4c10-9740-7a76d2f4a63b",
        "cursor": {
          "ref": "b77c6d4c-8972-4764-bc3a-7a5b1a41bea6",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "646137f0-a82e-4267-a9bd-ffc3dd51fd79"
        },
        "item": {
          "id": "190e44e7-3dab-4c10-9740-7a76d2f4a63b",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3c9e5121-4a31-4490-8651-e576bc93f8fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eff43e0-18e4-4fa0-a5ea-81392a49f728",
        "cursor": {
          "ref": "0c27b778-730d-4039-8ebe-c021b0c04e57",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c59cd15e-9382-4795-b6f5-01de3b2f5358"
        },
        "item": {
          "id": "1eff43e0-18e4-4fa0-a5ea-81392a49f728",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b7657834-3928-4890-be43-685929eb77f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19372a5-d0c0-41ae-84af-44b4b1a0102f",
        "cursor": {
          "ref": "8c14ccb4-bbba-4f82-8e9c-ad0f4faa1678",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "776c65bf-eb8b-4d09-9f4c-8b3af3d1c740"
        },
        "item": {
          "id": "b19372a5-d0c0-41ae-84af-44b4b1a0102f",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "989da899-a9e8-4238-82f6-59423c6cc844",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d0a906-ed51-4ef3-834b-a2cea75c935b",
        "cursor": {
          "ref": "63dbc208-0a03-46c4-8f8c-b347c92f9d93",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "a49a6888-8842-48fa-81e7-91d167e9e95e"
        },
        "item": {
          "id": "91d0a906-ed51-4ef3-834b-a2cea75c935b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "8fd40388-cffd-43ca-87ee-003a1726a4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1933ceee-9b18-44d6-b9a3-51c8ef0e0864",
        "cursor": {
          "ref": "66224a47-0730-4fa9-9f21-4faf921f407e",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "71012be5-7a76-48eb-b43e-c7a89ea2562e"
        },
        "item": {
          "id": "1933ceee-9b18-44d6-b9a3-51c8ef0e0864",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "21d807c2-9442-4377-b9c5-51cbfd4271e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fb1630a-2178-4f29-b248-7ae6a42a37b9",
        "cursor": {
          "ref": "5dfda6cc-65f4-49dd-87b1-472fe094cb73",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "377c71ea-1b59-4e53-ac3e-bf98e54e6012"
        },
        "item": {
          "id": "3fb1630a-2178-4f29-b248-7ae6a42a37b9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c2f0efce-4467-48f7-955c-121a60d48624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf32f0-8412-45f9-b2a3-ecb2adae0463",
        "cursor": {
          "ref": "5b9ac822-1fef-4f50-bf2b-29c4f33af62b",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "0f8c309c-2053-4748-b292-0c42ca13e530"
        },
        "item": {
          "id": "04cf32f0-8412-45f9-b2a3-ecb2adae0463",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7978bd35-c247-4a8b-ad40-092edba441ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8533da-7d62-4fb1-8ef7-c41ab08a888b",
        "cursor": {
          "ref": "7f1bc505-3106-43ae-8ff8-c447d88358ff",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "b700810c-efc7-45cc-9d7e-cfd82897b7df"
        },
        "item": {
          "id": "ab8533da-7d62-4fb1-8ef7-c41ab08a888b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ea30610f-08de-42cf-a1ad-0ac1ba26e35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f367e0a3-cf55-419a-af6b-8d8aa67a9778",
        "cursor": {
          "ref": "172b423e-2cda-4972-ab08-bfc077aa7958",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "801cb68b-e30c-4fd5-b576-e761d253599f"
        },
        "item": {
          "id": "f367e0a3-cf55-419a-af6b-8d8aa67a9778",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "21b97089-ed87-4c56-aa7a-dff1b5eb9207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da56c36-6f44-415c-a9eb-d3fed5239519",
        "cursor": {
          "ref": "feec9c99-7566-4f8d-9373-8234f86fe77d",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "dbf89d9f-9868-4d05-8891-dba32cfe4127"
        },
        "item": {
          "id": "9da56c36-6f44-415c-a9eb-d3fed5239519",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e98c9161-c932-4df1-91e5-0fae448848a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4f7951-ae53-4f7d-984b-0baa95aeaa7c",
        "cursor": {
          "ref": "16488b4f-b2fb-442c-9d8c-178f199e2d48",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "62913474-d5bf-4e04-880b-ff84dc292c0a"
        },
        "item": {
          "id": "7f4f7951-ae53-4f7d-984b-0baa95aeaa7c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e4ee5a4c-e2b4-4fbb-b852-d9710d0510a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2cb4441-1333-4a7d-b2df-b17fac3e2bac",
        "cursor": {
          "ref": "c2f69305-5fb0-45f3-8fa6-98fc89d24796",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9c20e5ab-3bc0-4793-bac1-9948c142e421"
        },
        "item": {
          "id": "e2cb4441-1333-4a7d-b2df-b17fac3e2bac",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "152e7a01-4b91-44bd-ad56-3792dd6ef06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d936bd1-7f83-4a42-9e16-99f4c9a8c5b7",
        "cursor": {
          "ref": "22c1d92b-5537-4048-92df-36875a149f74",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0e23f97b-9b7f-4ed9-9967-b736c69f962f"
        },
        "item": {
          "id": "5d936bd1-7f83-4a42-9e16-99f4c9a8c5b7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb0738f6-8b06-415b-8bd3-637a782f1818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf6379a0-03ea-4631-ac5a-c90ea4421d3a",
        "cursor": {
          "ref": "54cc71a6-74f3-4449-ba98-117c523928af",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "034bdca6-166f-480e-b5af-49826dced22f"
        },
        "item": {
          "id": "cf6379a0-03ea-4631-ac5a-c90ea4421d3a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "d54b6130-db97-4081-857d-cfa8f70a4d85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dfe78e-9792-4c6b-af2b-4edf5c7d6afd",
        "cursor": {
          "ref": "94967727-22b8-4962-9af1-2e4193f26998",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d1b83b12-265f-4630-ac1e-4beafc77e08f"
        },
        "item": {
          "id": "39dfe78e-9792-4c6b-af2b-4edf5c7d6afd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "159ae404-1838-4e5d-83dd-c2526b5b407a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d2c7345-ae63-4f19-94a4-740bad3f4392",
        "cursor": {
          "ref": "d967f606-1e7d-4d43-9723-d6c87c47c3f5",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "379d2014-03b6-4827-a581-91cc89bf7748"
        },
        "item": {
          "id": "7d2c7345-ae63-4f19-94a4-740bad3f4392",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "694a75bd-7dc9-4b10-b3d0-5982d5382451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b6dc19-09de-44c3-94a6-890a63658193",
        "cursor": {
          "ref": "c340f14a-ce6b-4bb0-9f1e-84bf8d1cc6d0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96465bb7-ad3a-4d68-a04b-3714a2f6ee80"
        },
        "item": {
          "id": "59b6dc19-09de-44c3-94a6-890a63658193",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "37211101-6b36-44f2-9578-e1bbb997c641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818636b4-d7a1-46be-b036-8f8197f6fff6",
        "cursor": {
          "ref": "f07bc318-5c26-45cf-8d75-ea2278143c49",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "39c25ecf-f7c7-49f3-820b-4a705e7e6189"
        },
        "item": {
          "id": "818636b4-d7a1-46be-b036-8f8197f6fff6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "12d06f05-dfbe-4cc3-8b11-ccc5fbb0559d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0f9e79-fa0a-470a-b6a2-7ead09c0823b",
        "cursor": {
          "ref": "0f6b504c-f78a-40dd-b9d2-f1bf476b4612",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b1d14054-85ea-4dcc-9e34-c96c92c92af2"
        },
        "item": {
          "id": "0a0f9e79-fa0a-470a-b6a2-7ead09c0823b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "342ac8e7-9c3a-4df9-a1f8-c5b2c0a0bff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae2fab5-f097-4d4a-8fa5-e523ec331cde",
        "cursor": {
          "ref": "bdee1545-b571-4260-9086-5f743fcf9d70",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "64b4482d-27c7-44ee-8de2-3cf18eb91cf3"
        },
        "item": {
          "id": "0ae2fab5-f097-4d4a-8fa5-e523ec331cde",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "cf8e2141-6d2d-4e28-be21-89dad812b7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26156e9e-0f7a-401b-8a10-7c23943b60dd",
        "cursor": {
          "ref": "98b20f0d-966d-480f-ba49-2152eddf7568",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a9491130-812e-4a36-b534-2ee28ae290d1"
        },
        "item": {
          "id": "26156e9e-0f7a-401b-8a10-7c23943b60dd",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "5c1b02a4-2c0e-447b-8b3f-dbc2ec2b640a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2de5b0-667d-4b5b-9bc2-ae1d4390fa69",
        "cursor": {
          "ref": "d3f0f900-7bdc-4f43-a510-c29bb8483397",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "39c2ccd5-fa8f-439d-8c26-d0a49e14d97c"
        },
        "item": {
          "id": "1f2de5b0-667d-4b5b-9bc2-ae1d4390fa69",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ac04fc8e-4b2c-4148-aee2-b8c34138c1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c7b3c4-dd1f-4a0c-847b-213ed012804a",
        "cursor": {
          "ref": "853494d9-e20d-40ce-b684-fdf39dee2474",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "00876c94-7085-46d3-9185-c5826b53daae"
        },
        "item": {
          "id": "08c7b3c4-dd1f-4a0c-847b-213ed012804a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9be24afa-d4a9-4f80-b698-a6d76a3bee88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a79605c-f99c-407d-9f9f-f67c0fd11f2a",
        "cursor": {
          "ref": "72417e5c-5525-4ad2-9648-d47d049b767e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fb788914-638d-4129-ba91-c04d7f93f7a6"
        },
        "item": {
          "id": "7a79605c-f99c-407d-9f9f-f67c0fd11f2a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "7690aeca-7601-43f9-a251-383da6890d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116bd0d9-5037-4b3b-a1c8-29669fa422c7",
        "cursor": {
          "ref": "b1c0a3f9-0bf4-4522-b551-400e724cb6bf",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "84a0bc79-fdd1-4685-ac63-5a04bd3ccff1"
        },
        "item": {
          "id": "116bd0d9-5037-4b3b-a1c8-29669fa422c7",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c9dfed16-8393-4e7c-9671-a7b6bf023d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bd8441c-8607-4d8b-a7b5-ac6ee1c910e7",
        "cursor": {
          "ref": "1cd915ee-9ebe-4304-b710-d8f6c137e6e2",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "2df2be11-74d5-40a0-b412-5ad098a933fb"
        },
        "item": {
          "id": "6bd8441c-8607-4d8b-a7b5-ac6ee1c910e7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4f9450b2-4fe8-4604-b704-57fda0237da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eff381-0e3c-4bbe-9ea3-23990d7f01a5",
        "cursor": {
          "ref": "ccd2838f-fde4-4978-8f1a-c961964f00ab",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dc9e2f5b-88dc-4b45-97e7-e542f70a8329"
        },
        "item": {
          "id": "68eff381-0e3c-4bbe-9ea3-23990d7f01a5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bcc05e64-1f62-4f6d-96d5-fdd541a6676a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325bce45-4f1c-416e-8182-79f7330eee78",
        "cursor": {
          "ref": "67ab1ca3-27b5-45e8-93d8-ebaa0071320c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "c1580d27-a570-4b38-9214-baab7bfe2e9b"
        },
        "item": {
          "id": "325bce45-4f1c-416e-8182-79f7330eee78",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9ef111f1-31d2-4a86-a674-c815ac2d6db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db13391-35b1-47a5-9aa0-4a9009d11185",
        "cursor": {
          "ref": "9de56be9-e36f-43d8-b1b8-aa3f73b4133b",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bdc15b3c-8422-48d5-aded-3292fe1e24c8"
        },
        "item": {
          "id": "5db13391-35b1-47a5-9aa0-4a9009d11185",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "09428b97-db17-4b4b-b44c-6acaf29c776b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec15af04-292b-418b-9de1-9f7576555eb0",
        "cursor": {
          "ref": "6ef84061-81cd-4ddc-b3fa-d8f76c5844a8",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "12dc64ec-fc89-426d-a0c9-debd5d863a83"
        },
        "item": {
          "id": "ec15af04-292b-418b-9de1-9f7576555eb0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6eac2da3-e6df-43a9-a6a5-3555d0e9718e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e84c05-5edf-464c-868b-e08b8ea9996e",
        "cursor": {
          "ref": "d9c1dbb7-87a4-4f5a-b4bc-caa294d48cc9",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5199a875-52b6-495e-a515-c33da11e3346"
        },
        "item": {
          "id": "b3e84c05-5edf-464c-868b-e08b8ea9996e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5d7db1af-9f60-4aa0-a540-15f7138afd0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7258d2-e48a-430b-82f3-3b93d1b513f3",
        "cursor": {
          "ref": "ea5d3d62-6771-434b-95d0-d8f2d86c9392",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "20f86b66-84ea-459f-b391-d9b87d918e3e"
        },
        "item": {
          "id": "1f7258d2-e48a-430b-82f3-3b93d1b513f3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8f9f9021-674a-4b74-8070-4ded8837d3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8463be13-c6cf-4164-b39b-85deee401f80",
        "cursor": {
          "ref": "32d2af8c-9eae-4863-a95e-c11c56eb22b2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a84d0c80-a6f0-41ba-a1fd-ede913e7bd7b"
        },
        "item": {
          "id": "8463be13-c6cf-4164-b39b-85deee401f80",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a1e0fefd-e698-4d8d-97fb-349867858456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ff97e2-3d58-424c-b106-e060e945c503",
        "cursor": {
          "ref": "d77961c3-fdd5-4ecb-9fd0-5a8d624d446c",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "819079f5-a517-4d4a-bcda-13914079628a"
        },
        "item": {
          "id": "e2ff97e2-3d58-424c-b106-e060e945c503",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2bbce55b-5f7b-4d2e-a753-1091d6cbaefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ae04e3-2175-425a-aba4-4e6a37360b6c",
        "cursor": {
          "ref": "a53c17d9-6095-4c5c-8237-8d84b1358451",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "2a6e1180-5747-4289-b14b-e02073294234"
        },
        "item": {
          "id": "32ae04e3-2175-425a-aba4-4e6a37360b6c",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1c27d18b-8438-48a8-9071-54ba7a2d1520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2267fbb-7bce-4b6b-ad3d-ce5888896721",
        "cursor": {
          "ref": "053ea6e9-435d-4c20-b08e-0699b36e30ab",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "82d4acaa-64be-48cb-8edb-2525fc79bf40"
        },
        "item": {
          "id": "d2267fbb-7bce-4b6b-ad3d-ce5888896721",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "27bf1145-538d-41e1-992e-8e9e7829b444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a8b6763-b1f9-4119-bb8a-c2144e097683",
        "cursor": {
          "ref": "6878cfec-cb0f-45f9-a0ff-72afd5263c86",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "9b35f3ae-0b25-4a6c-9846-07f699e1e302"
        },
        "item": {
          "id": "5a8b6763-b1f9-4119-bb8a-c2144e097683",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2df4e22d-2fa8-45f9-97e0-410e8125e0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e50473-7259-4b61-904a-ec737b45e47f",
        "cursor": {
          "ref": "be45c8bf-0b37-455b-939e-0e3943353d73",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "f113bf5d-04e2-4f5a-b0d4-5e40db777d34"
        },
        "item": {
          "id": "e3e50473-7259-4b61-904a-ec737b45e47f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f1c8defd-cdd0-4f0d-a876-c02ae3b5fe36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07acb004-9775-4fa5-8aa6-9a8fb26289ca",
        "cursor": {
          "ref": "18810b80-77f9-4af2-88b2-cefde2b7bde7",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f6241d42-8325-45c7-9a47-d46c2fe20747"
        },
        "item": {
          "id": "07acb004-9775-4fa5-8aa6-9a8fb26289ca",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "34388edf-d900-4f5b-b7f9-b4840960b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3c200a-0849-438a-932f-f834f9811d25",
        "cursor": {
          "ref": "8db6ce0d-244e-47c7-ba44-8dc80c55b318",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "0e9f79d7-78ec-4f14-99ed-816b84ac2864"
        },
        "item": {
          "id": "ce3c200a-0849-438a-932f-f834f9811d25",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c68d6b4-f882-46fe-a350-fb5a7e41d0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003273dd-a257-4ecb-ba39-d873a28f1452",
        "cursor": {
          "ref": "8bc5e704-8b05-40e0-b28b-826ecf0dcb65",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "de302c76-cad2-44fa-bc67-800e690e2215"
        },
        "item": {
          "id": "003273dd-a257-4ecb-ba39-d873a28f1452",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "bed47c0b-7ced-465d-9bb3-8a9955aac056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4191ceb1-8d01-4745-a9b7-558717cfa727",
        "cursor": {
          "ref": "51200ec8-6f2b-4eb0-b3ed-55b43113e54d",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "419b092c-3423-431e-ad12-06aa62e54391"
        },
        "item": {
          "id": "4191ceb1-8d01-4745-a9b7-558717cfa727",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c577e9c7-751d-421f-b031-7fba5ea6d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86efa538-3148-47f5-adf1-db53973626bf",
        "cursor": {
          "ref": "757b33b9-73ab-4c7d-8225-e3a9b3d6f5c1",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "43a03f06-9de8-4867-8641-0253564e8821"
        },
        "item": {
          "id": "86efa538-3148-47f5-adf1-db53973626bf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "4acb2eae-8f5f-4289-a9df-a4b0a05a90e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc9632c-706e-4e98-ad64-e09c370654dc",
        "cursor": {
          "ref": "f4d3473e-ffd4-4a9c-a0c5-070d8c574a49",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4977707e-5e0d-4137-a0b0-9a86dbd31abb"
        },
        "item": {
          "id": "efc9632c-706e-4e98-ad64-e09c370654dc",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "c475893a-0b84-49d2-b7ec-43f3b7ebcbc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44dfcb7b-4ce4-4e22-bd15-12ce13c6ef23",
        "cursor": {
          "ref": "56d55cdf-f346-46ef-9ab2-04fe0ce20135",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "32fbe335-6d09-4ff2-a410-f28e84e67df3"
        },
        "item": {
          "id": "44dfcb7b-4ce4-4e22-bd15-12ce13c6ef23",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "cb6e2cbb-63ec-4be8-abd6-b6feed49cf40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a4d87-2f6b-4207-9cfb-23afa7b0be13",
        "cursor": {
          "ref": "5ba2e338-a80f-414c-80af-8d2dbbbaea0f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1011d434-a76b-4ce8-a50c-97b090caa3cf"
        },
        "item": {
          "id": "3d2a4d87-2f6b-4207-9cfb-23afa7b0be13",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "453271e5-fbac-4b01-9daa-31a6457a284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87790db-877a-45f5-b763-bb46b51bac91",
        "cursor": {
          "ref": "6b2ee2fd-21d3-49bf-ace6-6ff6fdacea6c",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "db4f9adc-ec0c-4853-b28a-3a1b2d5c8d3b"
        },
        "item": {
          "id": "f87790db-877a-45f5-b763-bb46b51bac91",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bc597e7a-5542-4a2c-a7a1-1ceff59eef11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbfcd21-6cbb-4b4a-b954-51576534e9d3",
        "cursor": {
          "ref": "9645078b-533e-4abf-9e33-8b6ad34e2752",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "80f7cfe5-0c0c-4462-b14e-cb0612d6893c"
        },
        "item": {
          "id": "bbbfcd21-6cbb-4b4a-b954-51576534e9d3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "b9dcf676-69f9-42f8-9447-c14f6e01484c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ac2958-2fda-491b-8c99-ad84e393d75b",
        "cursor": {
          "ref": "ef475475-b8b2-4867-b84c-024f3a6d1222",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "3a7f06d2-94b9-422d-b723-50e79bf5f3a1"
        },
        "item": {
          "id": "40ac2958-2fda-491b-8c99-ad84e393d75b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "b43ceec6-7381-4ef3-8989-554897fd220e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 24,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe25aad4-1d3d-42fb-92a7-6b7646b03230",
        "cursor": {
          "ref": "e57abe97-9773-417f-ab70-ae95f70bba36",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "3549a871-e6ab-460d-b5ef-c5e7ea019874"
        },
        "item": {
          "id": "fe25aad4-1d3d-42fb-92a7-6b7646b03230",
          "name": "credentials_issue"
        },
        "response": {
          "id": "de8fac1a-7251-465e-9140-52cea0bbd3bb",
          "status": "Created",
          "code": 201,
          "responseTime": 42,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3637243e-0b0e-4f7c-bd87-5319a0816641",
        "cursor": {
          "ref": "f0931834-6512-4a96-a591-123ec7ff769e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "52c14755-e756-4d8f-9569-99ba218d1483"
        },
        "item": {
          "id": "3637243e-0b0e-4f7c-bd87-5319a0816641",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9bde7a2e-a1af-4aab-b9ad-099eef486301",
          "status": "Created",
          "code": 201,
          "responseTime": 31,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad5408d-73b2-42fb-91be-9c4bc3fa647f",
        "cursor": {
          "ref": "78ff5f34-02a9-4d37-9491-2c0ea790e370",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "39d1ae2c-3b08-4642-aa1b-5736b97cb433"
        },
        "item": {
          "id": "9ad5408d-73b2-42fb-91be-9c4bc3fa647f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "18534651-f534-4dcd-9f72-d50bf85b30a4",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "59003ae8-3ad2-451b-87d0-d757793a8be4",
        "cursor": {
          "ref": "3623d858-f395-4c77-ad31-20102d9fa44a",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ec541d09-a781-4356-83fa-9924ad324308"
        },
        "item": {
          "id": "59003ae8-3ad2-451b-87d0-d757793a8be4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "6eb4d00e-584a-46a8-8184-3cfd01daf0d3",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b13fc9-a9bd-4f94-b0cf-604146de8025",
        "cursor": {
          "ref": "760f2d07-4113-45a8-a381-4e50d9abfaa9",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "21935b32-3b09-4fbb-af9a-161a623779d6"
        },
        "item": {
          "id": "96b13fc9-a9bd-4f94-b0cf-604146de8025",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3f2e1be1-1be8-4dea-8fa6-ed723c18dcdc",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c9846a-9095-46a4-acd6-f65f675d1868",
        "cursor": {
          "ref": "737f9017-a1e7-4201-b6f7-f016755bd634",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "5f7bd436-3c80-42b5-9d71-6aaeae8fa8fa"
        },
        "item": {
          "id": "b1c9846a-9095-46a4-acd6-f65f675d1868",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3589b0e4-d75d-486d-8d84-e5ee6d03a0d2",
          "status": "Created",
          "code": 201,
          "responseTime": 26,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c254594-b503-46e0-b686-1bef30f1fdb3",
        "cursor": {
          "ref": "3b3aa21f-cf94-4ee7-99b9-39e4bac44761",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d882e0db-c9aa-4dfc-9b22-d2834af0cd7a"
        },
        "item": {
          "id": "7c254594-b503-46e0-b686-1bef30f1fdb3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7f28107-ccd3-4e08-9942-a3fedfe0a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c254594-b503-46e0-b686-1bef30f1fdb3",
        "cursor": {
          "ref": "3b3aa21f-cf94-4ee7-99b9-39e4bac44761",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d882e0db-c9aa-4dfc-9b22-d2834af0cd7a"
        },
        "item": {
          "id": "7c254594-b503-46e0-b686-1bef30f1fdb3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a7f28107-ccd3-4e08-9942-a3fedfe0a9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa9e567-0b9f-4bb5-a333-8ace4ba1e6ea",
        "cursor": {
          "ref": "406fa61c-9336-4717-919f-de40c168086f",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "44f29cc7-e66b-488c-bcb3-421b570f46ef"
        },
        "item": {
          "id": "efa9e567-0b9f-4bb5-a333-8ace4ba1e6ea",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e2e5b640-479d-4d40-9764-0a3fd18deaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fc46c7f-ad31-4ae3-9e77-43c0971bb5c4",
        "cursor": {
          "ref": "d8df9f85-7ddc-4c90-82f0-240721c7b01e",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4a51bb62-5eef-4981-a307-37c6400a4682"
        },
        "item": {
          "id": "6fc46c7f-ad31-4ae3-9e77-43c0971bb5c4",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "21369bb5-4c58-4bd3-9543-ff3bd5396b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc107eee-9628-4846-83d9-8b1667fa6fd1",
        "cursor": {
          "ref": "e202eff4-6ac7-4843-9a46-44ed869f15f0",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "34ee8931-4cfc-4ad1-a9a1-059fc8c45e23"
        },
        "item": {
          "id": "cc107eee-9628-4846-83d9-8b1667fa6fd1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "afce0626-aa55-45b0-9c31-f153257bff7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe2fbfb-2190-4d68-a7b1-cd3252b46b57",
        "cursor": {
          "ref": "fb3811d6-a3c6-492e-b802-6b7a17f53232",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "50c0f13d-e729-4214-9d87-300c23e8acf4"
        },
        "item": {
          "id": "cfe2fbfb-2190-4d68-a7b1-cd3252b46b57",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a282ee75-a89b-40f5-92a9-b992fae41ba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c478b8-8c1c-4506-bd1e-cc17f53de0c0",
        "cursor": {
          "ref": "58d72479-0887-4b70-8dbe-0d02b9d0831a",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "46a4bca4-657d-4f34-b7f7-12e8f3529d03"
        },
        "item": {
          "id": "63c478b8-8c1c-4506-bd1e-cc17f53de0c0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "71916166-8657-4b93-8f91-cc41b4445f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b58d681-6bf0-4c9e-a65b-7fc9bbbaefe2",
        "cursor": {
          "ref": "80e2f487-42f8-4158-b1f3-e8a50d4e5f8d",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "8b600af8-5f41-49f3-9a04-ebd9960e0002"
        },
        "item": {
          "id": "7b58d681-6bf0-4c9e-a65b-7fc9bbbaefe2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b61f5291-5b5b-497e-a01f-5d9ad237132e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35d8f96a-e984-4a86-94e2-79d68eeacee9",
        "cursor": {
          "ref": "ac42e467-67bf-4b20-b714-8c3a0b5b7723",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "374f58a4-4edf-47fe-be3f-4dba30f13161"
        },
        "item": {
          "id": "35d8f96a-e984-4a86-94e2-79d68eeacee9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b364129e-939a-4f2c-a331-726395633f4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2102b0d-a055-47c7-bf3e-0d11b5467217",
        "cursor": {
          "ref": "306846bf-adae-475f-b037-ecd5ea6c4f61",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0faa569c-d332-47f3-bbdb-8eec31fc2812"
        },
        "item": {
          "id": "f2102b0d-a055-47c7-bf3e-0d11b5467217",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "fb144c4f-2b77-440b-90e6-a3398236d706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eb8a49-c8fb-454d-a7a2-bc5a03e255ef",
        "cursor": {
          "ref": "9f6b6ff5-8366-41e7-8ee5-62f733f13306",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5b3e2ae9-6b2d-45ce-bea3-6e5607949252"
        },
        "item": {
          "id": "90eb8a49-c8fb-454d-a7a2-bc5a03e255ef",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a821a0ee-9838-48b9-91fb-dc83c09739dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065e0a0c-98d6-4d6e-a274-b3235370502f",
        "cursor": {
          "ref": "158711c7-ef43-4c68-81ee-4b96d98a66cc",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "03fe1b23-89f6-460d-8667-1d3d07c46bd7"
        },
        "item": {
          "id": "065e0a0c-98d6-4d6e-a274-b3235370502f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "8f3a27fd-e2ef-412c-8d24-d8e4f5b18da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf4b3af-e017-47a7-b950-265780c428ac",
        "cursor": {
          "ref": "5eeecb4b-aa72-42b3-94e9-3fa75c9eff70",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "eadb4c0e-4458-4690-939f-035b4122890c"
        },
        "item": {
          "id": "fdf4b3af-e017-47a7-b950-265780c428ac",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "617d0a13-ce97-46d4-b6c8-e5a0259e4ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab10f16e-123d-424e-95aa-f22ea8109dd1",
        "cursor": {
          "ref": "478ad705-b05c-40a6-b2e5-fe04c49c1714",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dcf6609a-45c1-44de-bb14-5f4c3f7ce566"
        },
        "item": {
          "id": "ab10f16e-123d-424e-95aa-f22ea8109dd1",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "501a7542-9da6-4e53-b7b3-7004001625db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b8af8e-86c4-412c-ba54-ef1afb868134",
        "cursor": {
          "ref": "01914bf4-bdc5-4e3b-b43c-a58952a96ec1",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fb789cf1-3bb3-408e-993e-be7a0fc4c66f"
        },
        "item": {
          "id": "12b8af8e-86c4-412c-ba54-ef1afb868134",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "51ad0241-12d4-4258-9155-b8355882868e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685b7bc5-1ddb-4559-895f-3834590a8a84",
        "cursor": {
          "ref": "c114f87e-dc4f-4749-a6ff-34ba5ab66414",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5d3f33fb-26f9-497e-9870-34b575250ec1"
        },
        "item": {
          "id": "685b7bc5-1ddb-4559-895f-3834590a8a84",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c1a4069f-7777-42c5-ac2d-4bbe3a653d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420df1bd-918f-467f-80df-981254a736c5",
        "cursor": {
          "ref": "53cc260c-0ec8-4163-a1b5-3ca6a5054dbb",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c337fd60-5dc6-4433-8886-bb26a56abf5f"
        },
        "item": {
          "id": "420df1bd-918f-467f-80df-981254a736c5",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6d2af43d-b43b-4391-8455-8250d309b985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e68ca86-2c8e-446e-ad91-66368cdb407a",
        "cursor": {
          "ref": "9dd98186-fed6-4381-8e85-ffa238063ccf",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "b5668b09-817e-49f5-ae67-cae3bdc20e68"
        },
        "item": {
          "id": "3e68ca86-2c8e-446e-ad91-66368cdb407a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "397aea14-b9f2-4405-bac7-9fa3a7b1c381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911c0684-7821-46b1-9e29-818802ad1f11",
        "cursor": {
          "ref": "15a578d8-17de-4d68-af83-fd6b330bb86e",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "dfba5cff-a8c2-4dbf-8aa8-cb1aa541f915"
        },
        "item": {
          "id": "911c0684-7821-46b1-9e29-818802ad1f11",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65120bc6-9b49-46f0-ae4b-16512f3ae8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b13e070-897f-4e06-91aa-ee2a6311358c",
        "cursor": {
          "ref": "f1ac5a8a-ab15-4788-9188-8c6b9edd432d",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "07f31dbd-e89f-4add-baac-2fe887b43ff6"
        },
        "item": {
          "id": "1b13e070-897f-4e06-91aa-ee2a6311358c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "66c98651-f124-4c39-b692-b6276e86e9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11d10d56-69b2-48f8-bfee-71abfc858786",
        "cursor": {
          "ref": "05760a08-83c1-44fa-9bae-dbf87e6a914e",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "4dc3f861-4f0d-4ca3-a296-95f70171ac1f"
        },
        "item": {
          "id": "11d10d56-69b2-48f8-bfee-71abfc858786",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "7e1298d6-6a58-4424-8df2-c1ba012f1a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f68845-3310-4cf8-a8c7-9a5809a1a97f",
        "cursor": {
          "ref": "44e90959-c590-4363-bd00-22b26f9ce579",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e6876e3-b9d9-4562-a625-d8219b1fcedc"
        },
        "item": {
          "id": "80f68845-3310-4cf8-a8c7-9a5809a1a97f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "923e0677-7b34-41d2-85c0-84eee23d0198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98d71856-033d-4794-883c-c71e19f7056b",
        "cursor": {
          "ref": "c131dbcc-943a-4c49-943a-07268eadaa0a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "910fcba5-666e-4348-937d-7103a74a3649"
        },
        "item": {
          "id": "98d71856-033d-4794-883c-c71e19f7056b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "76d4380e-e03b-4a74-b5fb-b2365b60f86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecdb980-3f3b-4f58-a256-38668b2c26ab",
        "cursor": {
          "ref": "a419d5d3-eb87-4a3d-825b-b612fd1cbc0c",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "6024a195-73d7-45d9-9a08-71d344f44721"
        },
        "item": {
          "id": "2ecdb980-3f3b-4f58-a256-38668b2c26ab",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "47650a1e-3175-4069-95ef-adef0b1fc586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c06b15-9030-4590-82a9-463809715264",
        "cursor": {
          "ref": "cb545f58-89ff-4434-bf0f-9aa875853d6c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "138f800f-6d98-4556-a5c8-292deff8b7c2"
        },
        "item": {
          "id": "c6c06b15-9030-4590-82a9-463809715264",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f33eb48c-6cb0-4a64-a934-b67c52b0f3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fda3ee-2514-46e9-8a13-ccf802f76bc9",
        "cursor": {
          "ref": "c40a5886-4b0a-4b20-843e-20394e880eeb",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0ae548ae-4bf9-480a-b900-bb8db3e35de5"
        },
        "item": {
          "id": "78fda3ee-2514-46e9-8a13-ccf802f76bc9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "792416aa-b361-433d-8e34-085b46ea5237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7431c7ca-5267-4b52-8805-ea76ffcf5736",
        "cursor": {
          "ref": "b0c7985e-7a2e-467c-b24b-36ef0e1ad6bf",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "20c43ea5-19e6-49f5-b005-1e3f5e857c80"
        },
        "item": {
          "id": "7431c7ca-5267-4b52-8805-ea76ffcf5736",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3f7c7d0c-0ac7-4c11-9535-4f3631415520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cdb04c-b45d-471d-8da4-6f2b4f354cd3",
        "cursor": {
          "ref": "1a8a6a87-3c6e-4a98-a71d-71e8c011628a",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b17db856-d694-4f2a-92f2-a6baf7eb26af"
        },
        "item": {
          "id": "f3cdb04c-b45d-471d-8da4-6f2b4f354cd3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b6ba8794-7f0b-43dd-99a5-3a7f0e27c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934484ae-b5f8-4c0a-85db-2c0162d8f6d8",
        "cursor": {
          "ref": "b9b1f663-cb34-4c2e-938b-4ebcd408face",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "948d3efb-8665-4cb7-96d5-9fda292f96b4"
        },
        "item": {
          "id": "934484ae-b5f8-4c0a-85db-2c0162d8f6d8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "43dcb059-66e2-48c3-a023-0f2cd3e74bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936822db-25b0-40fc-911a-49ed4e5449c8",
        "cursor": {
          "ref": "f363eaf5-f673-446e-b7b0-cf6ba3f99364",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "351bd512-f847-428b-a668-9ff7c0be8dd6"
        },
        "item": {
          "id": "936822db-25b0-40fc-911a-49ed4e5449c8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "5197d143-47c9-4567-ab98-942ef0c82337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c140466-3cde-49ee-a103-c4ab50e2d712",
        "cursor": {
          "ref": "39f04579-1c7d-4ebc-8920-5caf012a55e2",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "258fddd3-ac5e-40bb-a51b-dc8b5fc127cc"
        },
        "item": {
          "id": "0c140466-3cde-49ee-a103-c4ab50e2d712",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "5595ac1e-b360-4059-bb4d-e53ecb99e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0254bc8-4d17-4b27-8a1d-d5556a2166b6",
        "cursor": {
          "ref": "bf82cd5f-4bbb-4162-b3b1-392123072ec8",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "781a950c-6892-48f6-ba2b-d7772a782701"
        },
        "item": {
          "id": "a0254bc8-4d17-4b27-8a1d-d5556a2166b6",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31e38bc7-f446-4876-a011-94bd7e7e2070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1a9414-8f04-4bb0-aa44-e872028752ea",
        "cursor": {
          "ref": "4aaff7ca-8c95-46ca-a0f1-813318f0255d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "cea9bd1a-ab47-4409-a4be-ee43607d0092"
        },
        "item": {
          "id": "ec1a9414-8f04-4bb0-aa44-e872028752ea",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "1120b1fd-be65-4448-813a-16ea01585be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22334059-38a8-467a-8740-2d7b7da0f712",
        "cursor": {
          "ref": "4394c271-14ca-49c2-bbc3-74becb40e53f",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bdd84648-786f-4028-af6c-5919109a9af2"
        },
        "item": {
          "id": "22334059-38a8-467a-8740-2d7b7da0f712",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4af0c474-68b8-4164-983a-a108dae5efb5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc0f37e-dd45-464a-a3e0-fd371d5856da",
        "cursor": {
          "ref": "7c512629-b903-41ec-b9bd-46d25a8e5ec3",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "83ab911b-3a7b-4cac-8671-2e0ba25db01d"
        },
        "item": {
          "id": "0bc0f37e-dd45-464a-a3e0-fd371d5856da",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "9b8edf4a-c9bc-45e6-921c-94d58afaad97",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698fc40-d4de-41ff-af53-88e0ba022a91",
        "cursor": {
          "ref": "99bc462b-cf3a-4fd5-ad2c-79ed8215e6fa",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "641bddf0-e808-4401-a0b0-089eb62eab22"
        },
        "item": {
          "id": "d698fc40-d4de-41ff-af53-88e0ba022a91",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3a6486f-277a-4f0e-9952-ec20f0bffd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d698fc40-d4de-41ff-af53-88e0ba022a91",
        "cursor": {
          "ref": "99bc462b-cf3a-4fd5-ad2c-79ed8215e6fa",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "641bddf0-e808-4401-a0b0-089eb62eab22"
        },
        "item": {
          "id": "d698fc40-d4de-41ff-af53-88e0ba022a91",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a3a6486f-277a-4f0e-9952-ec20f0bffd90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ef3fc3-10f2-42bc-a431-4eada6c9fc5c",
        "cursor": {
          "ref": "3c5dabb5-f0cd-4569-93a7-38b0a37a9526",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4f0c9ece-7940-4abc-8aa7-ec14b365c3ed"
        },
        "item": {
          "id": "40ef3fc3-10f2-42bc-a431-4eada6c9fc5c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "16f23398-abba-4d57-ba1c-3107fa0c5e88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50862090-a0a9-4b95-85de-29f86ea572e8",
        "cursor": {
          "ref": "d72cda2b-3e5e-49e5-8cc8-f39a437a4819",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cbc23dda-97ff-4072-b48d-3078ef814e08"
        },
        "item": {
          "id": "50862090-a0a9-4b95-85de-29f86ea572e8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "40170516-9fd5-42f6-bc70-1d9e3a4f7f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9439542-8bd8-4b14-8927-9525fd5d48e8",
        "cursor": {
          "ref": "ba337b67-c4b3-4a0d-99a8-aaa8144be076",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "cea5df7b-dd81-4fa9-8cfc-0fc2c268a4c3"
        },
        "item": {
          "id": "a9439542-8bd8-4b14-8927-9525fd5d48e8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1281a0ce-fddc-4843-9b53-954fb095f2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12322fb7-f7a8-48c2-ae2c-fb408139a033",
        "cursor": {
          "ref": "6fba2eeb-36b4-4e11-b210-5c23b7d529b6",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b2be6511-3eba-4835-80fb-d225d67ab0ef"
        },
        "item": {
          "id": "12322fb7-f7a8-48c2-ae2c-fb408139a033",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "e79f9cee-834e-4000-aec3-1ca907215b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde3996c-d536-4b8a-b5b9-1284c923409b",
        "cursor": {
          "ref": "7e6ce83b-b727-456c-bdd0-92143ed45865",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1479ef67-e036-4b90-acb4-6f903362ffcd"
        },
        "item": {
          "id": "dde3996c-d536-4b8a-b5b9-1284c923409b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f0b84f4b-caf0-4653-ac2b-490815c14e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad702f67-9d42-46a5-8375-85fd972089cc",
        "cursor": {
          "ref": "38aab8ba-dc17-4c47-9554-27335424b8a5",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "00ac6390-73d6-460a-a22b-3ff090a9bc77"
        },
        "item": {
          "id": "ad702f67-9d42-46a5-8375-85fd972089cc",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "883d765b-b0e0-4d8e-bff9-f1a6e0c70a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b769e4-0ed7-48d3-9f9a-5d73e281e272",
        "cursor": {
          "ref": "8fbc43c7-6b07-4b77-9161-0e7bcb5e78a1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f98914a7-f3ec-4e9c-aaab-a5c5e72b0cd9"
        },
        "item": {
          "id": "58b769e4-0ed7-48d3-9f9a-5d73e281e272",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "172e69dd-1d77-42d0-a654-b08879e39be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0b86c2-7eca-4da0-8dd1-6265d53d7da9",
        "cursor": {
          "ref": "ec55b4bb-b316-494a-bda2-63e2b86613a0",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "301cff8a-3819-42d3-90ce-295b787dffb3"
        },
        "item": {
          "id": "ba0b86c2-7eca-4da0-8dd1-6265d53d7da9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "da932ea1-b374-4f52-9695-9b1f3dba82be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bb7fe76-5bd8-439e-b200-a641c11a282f",
        "cursor": {
          "ref": "5fa16d3c-52b2-4d78-8d5a-bb562accf646",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4e13115a-3556-45be-8e7f-9c6b013843a5"
        },
        "item": {
          "id": "6bb7fe76-5bd8-439e-b200-a641c11a282f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "483998a1-1a1c-4684-bc1a-44ab5771a333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc68941-5104-4152-ae0a-8ab0efa46963",
        "cursor": {
          "ref": "75fd1ac9-ff84-458f-89e6-ac435154ff5b",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5fd5da14-99e8-4c2c-aff2-83e55743dae9"
        },
        "item": {
          "id": "1dc68941-5104-4152-ae0a-8ab0efa46963",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "12a727b5-63e8-492b-8bc1-21799552e657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789f16ab-ce21-459a-bb33-be957cb7352a",
        "cursor": {
          "ref": "d6309825-a892-4fb5-8243-47849c4ed3b9",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "72b5a6f3-ba7d-4b85-865e-de1440513da2"
        },
        "item": {
          "id": "789f16ab-ce21-459a-bb33-be957cb7352a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "6d535463-1cbe-4a9c-bb22-ac294b135fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d59d240-90ed-4e91-b1bf-78466847b0b1",
        "cursor": {
          "ref": "158ff4cd-0777-4176-b257-c8869c8b37e0",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "045a591e-d971-4a97-bb3e-b9f6ad6982bc"
        },
        "item": {
          "id": "2d59d240-90ed-4e91-b1bf-78466847b0b1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6919f7c9-3ee3-47b5-a218-c15ff82f4f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc582d1-5053-493f-9dec-a10a8dc4ba12",
        "cursor": {
          "ref": "f44e9645-7771-4eea-97cc-0b277e632586",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9fe11923-7b16-45fb-b31b-65c9cb2709ec"
        },
        "item": {
          "id": "6dc582d1-5053-493f-9dec-a10a8dc4ba12",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "89b71e37-5457-44b5-9c6d-f83c5163a40e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d45750-2105-4f79-8c44-0385931e0603",
        "cursor": {
          "ref": "8bf80d03-daa4-4241-a806-7ceaa8efca95",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d94efc2f-78ea-4690-ab86-ae7cc253c579"
        },
        "item": {
          "id": "e6d45750-2105-4f79-8c44-0385931e0603",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "6fdc503c-cb09-4cb3-b8cf-5704b31d2949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400058c0-c8e9-4451-b51b-78c6190c8d70",
        "cursor": {
          "ref": "4b0caa28-cf71-4291-ab99-e649801cce8d",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fc60cc69-82c6-44ab-8461-427488513d5b"
        },
        "item": {
          "id": "400058c0-c8e9-4451-b51b-78c6190c8d70",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d016602f-52af-43f3-9cf1-8b64025a3bdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc084791-20a2-4c27-8b92-4ab4e933c4cb",
        "cursor": {
          "ref": "ba780543-61da-4716-940b-c42fc589a5de",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e8ca38db-0f94-45f3-a225-24b5940e7fcd"
        },
        "item": {
          "id": "fc084791-20a2-4c27-8b92-4ab4e933c4cb",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "489f703c-8ab4-451c-944a-7c75e08f8375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0c5508-7cae-478b-a7d0-e19d5760562d",
        "cursor": {
          "ref": "2f9b4394-5e1d-4828-8d48-0ae33d1dc0b7",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e043e58f-bdfa-407e-a924-68281c0083ac"
        },
        "item": {
          "id": "eb0c5508-7cae-478b-a7d0-e19d5760562d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "91fe858a-b924-4310-9a5a-ef0680da9a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146a114e-5eb7-45fe-8697-b9ce779fcbe5",
        "cursor": {
          "ref": "47e97505-39f5-4614-85ac-e1e98523654f",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "b4a02d24-645b-474e-9284-2bdcea3506e7"
        },
        "item": {
          "id": "146a114e-5eb7-45fe-8697-b9ce779fcbe5",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c42aa323-1231-435a-a119-5becf4bf45f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e353869-e47c-4a91-8349-539d0ac29d00",
        "cursor": {
          "ref": "1bb94fda-d654-457c-86a7-6d263264690d",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "655577d6-6a48-4e2e-b65f-7d36a59ebc6a"
        },
        "item": {
          "id": "8e353869-e47c-4a91-8349-539d0ac29d00",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8d458353-4c4e-4a82-9800-216f5ea154a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92d9ab7d-6850-42c1-a36b-c8fbd95e44cc",
        "cursor": {
          "ref": "cfdc9f68-bc8c-4c9c-b648-89b4a02356db",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "14cd09f7-836d-4e5d-a49f-3d348afeae20"
        },
        "item": {
          "id": "92d9ab7d-6850-42c1-a36b-c8fbd95e44cc",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "42b9d12f-383f-473c-ae4b-4a5954f71b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d029150-24be-4112-b02e-a00232b539ae",
        "cursor": {
          "ref": "7c11b8ff-1e5c-4f1b-afba-d40bec49f718",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0a5124aa-fb6b-4f1c-8e91-9e4547b1012d"
        },
        "item": {
          "id": "7d029150-24be-4112-b02e-a00232b539ae",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "326192ed-c267-4372-8ca4-363ba4f5445c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ef68021-e8ef-4b8a-94ff-472adddd971d",
        "cursor": {
          "ref": "5a63f2bb-dfda-43bc-8e5b-2a995f6f0053",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "006b2dba-d9bb-4b99-9e8b-88a6b10c7c2b"
        },
        "item": {
          "id": "4ef68021-e8ef-4b8a-94ff-472adddd971d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "dcded2dc-d63d-4410-bfbd-00e2ee2ca744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb09477-ed91-4fc9-bea6-a6ac56d8135a",
        "cursor": {
          "ref": "0274cce0-0b48-4ff6-919c-519cced2ff45",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1e3b461b-1dae-419a-a0d1-7cfac474f9f2"
        },
        "item": {
          "id": "afb09477-ed91-4fc9-bea6-a6ac56d8135a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "949f375d-9b80-4c59-acc3-5de438c8da4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e689be4d-84aa-47f1-a7ee-e15f39615db3",
        "cursor": {
          "ref": "3fab0956-062b-48db-a714-cc7e401cfe3a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "78a56eab-892e-436d-859d-e95749de0723"
        },
        "item": {
          "id": "e689be4d-84aa-47f1-a7ee-e15f39615db3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "68a409aa-63aa-40e1-a897-093c04359bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60421b38-e93b-48f8-ba7d-4d0ef05e3eef",
        "cursor": {
          "ref": "87adccfe-78ea-4ebc-8074-8c779bf7a670",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1b74eeb4-0d7d-4e53-bfb1-a4f0a1357286"
        },
        "item": {
          "id": "60421b38-e93b-48f8-ba7d-4d0ef05e3eef",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2bc24303-0ad0-4990-a569-75b43e6b5523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4dcbc37-7adb-4d7d-bdd5-fa3f61ea5619",
        "cursor": {
          "ref": "c18d73b1-a49e-4ef1-87a7-e4c3bd7d0002",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8be66cef-e6fd-40a4-b35a-65753519ef2c"
        },
        "item": {
          "id": "c4dcbc37-7adb-4d7d-bdd5-fa3f61ea5619",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "84544abf-cf7d-417a-aa0e-91df3ff3b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46c72fca-454c-48c3-9ce0-462a8e6a807c",
        "cursor": {
          "ref": "f20f8059-d64e-454e-a57a-b87c66475062",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "88859700-3c59-4d5a-85e3-8a954f3a5f8b"
        },
        "item": {
          "id": "46c72fca-454c-48c3-9ce0-462a8e6a807c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6903e2a1-30fd-4a49-a93b-367459119901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d167b4a3-1b94-4738-8abb-532a85757b0a",
        "cursor": {
          "ref": "750dcce6-390b-45cb-8732-4f64a42315a6",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "3a4870f8-d301-4d2c-b1a3-9aac2c837063"
        },
        "item": {
          "id": "d167b4a3-1b94-4738-8abb-532a85757b0a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "7c00611b-7ada-46c3-b065-cdaa0fff6b3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c081e-048f-429e-9b56-584a3933091a",
        "cursor": {
          "ref": "ef7bb9b8-4f74-47b6-a293-64f8ee8a22b0",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ba75cc71-747b-444b-ac73-23cb440b0347"
        },
        "item": {
          "id": "c67c081e-048f-429e-9b56-584a3933091a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4bbd915e-9b14-4c82-8211-2726c566f42b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc607ed5-1fae-4bbb-aef1-b4428eb2d37d",
        "cursor": {
          "ref": "d027753b-8245-4742-bada-ba7534c14fbb",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "302ae2db-70c4-407e-a7e0-96dedef06086"
        },
        "item": {
          "id": "bc607ed5-1fae-4bbb-aef1-b4428eb2d37d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c794d14f-1f68-4cbb-99f2-4bcea9227c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad2dcff-784a-4ec0-80b8-64c4a3ccf71b",
        "cursor": {
          "ref": "60cbd791-8aa8-4903-9fe4-97128ea5a29a",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4c68feeb-1b34-41ec-8b91-6394f24ef2f9"
        },
        "item": {
          "id": "cad2dcff-784a-4ec0-80b8-64c4a3ccf71b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bfd3c4aa-91cd-4652-86ee-be2f377ac7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc586dd-dce1-421d-9d98-a2702d5b58c6",
        "cursor": {
          "ref": "916a99f8-0d2a-4585-8919-5fcd9da202b3",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "909fd8f4-580b-4afb-9a0d-e618b79dd056"
        },
        "item": {
          "id": "9cc586dd-dce1-421d-9d98-a2702d5b58c6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "e99c4d3e-3883-4741-9995-e9381f064061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdb2ac0e-6947-45f2-8e88-7ff756ae6d9c",
        "cursor": {
          "ref": "76883ae9-d550-47d2-b00d-ad8921ff430e",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "875d4395-e743-4e9b-b8eb-6af3f53375a8"
        },
        "item": {
          "id": "cdb2ac0e-6947-45f2-8e88-7ff756ae6d9c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "63f2c39e-cdf3-4167-96c7-9404a55248bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8a3c3f-937a-4bb7-9a57-a5927f2b3962",
        "cursor": {
          "ref": "4a251477-e28e-4719-99a9-5166cbc9c4e4",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7f58582b-1c9e-4b8c-ad76-89dc4d149bb2"
        },
        "item": {
          "id": "8c8a3c3f-937a-4bb7-9a57-a5927f2b3962",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e89ec4f5-1101-4bea-865e-fe554a17b629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccea5d93-79a3-43e1-b1b2-b1a237ef8f54",
        "cursor": {
          "ref": "16202c8e-7cfc-45ad-a474-05d4d763e4dd",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3f693c8a-245e-464f-ad0e-ce9dc32dd683"
        },
        "item": {
          "id": "ccea5d93-79a3-43e1-b1b2-b1a237ef8f54",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bc5341cd-8b5c-4e90-abe0-68f20b997b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc0b0c45-6c77-4381-b18f-f0699b017d64",
        "cursor": {
          "ref": "9ee88d1d-6e25-43d8-aaa3-a1549acb2c81",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "284efbaa-a550-41fa-bde0-34fcbdfc8829"
        },
        "item": {
          "id": "bc0b0c45-6c77-4381-b18f-f0699b017d64",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "54096a3f-8e6f-478f-b2a2-dec6e97aaba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba53af68-a4e0-4006-a3ac-2351d76eb1b1",
        "cursor": {
          "ref": "0cd231df-aaf4-4f45-8f22-c778eb64d55c",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "de8d806b-a032-4e20-8b48-99c3e9eb0e6c"
        },
        "item": {
          "id": "ba53af68-a4e0-4006-a3ac-2351d76eb1b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "271a27f2-1ee7-4b3b-af8b-7467a1b26ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fbf91ce-8cd0-44e1-82cb-12fe9504891e",
        "cursor": {
          "ref": "a5941df6-95cd-4918-a21e-7c0f2689f15f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9b7ee066-67b0-4214-8e4e-239dd9e5dabd"
        },
        "item": {
          "id": "3fbf91ce-8cd0-44e1-82cb-12fe9504891e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d101ce01-28d6-43a6-847e-c5a9bb30bf97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1711aa-0138-4000-9444-061ef5c04be4",
        "cursor": {
          "ref": "deff427d-5b43-4d8c-9904-ef6ee45b064b",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "679c85d1-19fc-4f4c-8c5b-4d44d8d03b9e"
        },
        "item": {
          "id": "ab1711aa-0138-4000-9444-061ef5c04be4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4f38f909-746f-4c56-bfbc-41a772cc7c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8aed11f-45be-4b6e-b7aa-5bc21306402b",
        "cursor": {
          "ref": "bd2c8162-a3e7-45e8-9022-4c86554ab406",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9d0c6530-9951-48ab-ad92-79ed95d246bd"
        },
        "item": {
          "id": "f8aed11f-45be-4b6e-b7aa-5bc21306402b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "bb6b9541-38ad-4601-a65f-f865af54b284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abba0f5-d10d-4d82-915e-2156dbe7690b",
        "cursor": {
          "ref": "1a44410f-f9bd-4ce3-b432-29cbd617d2e2",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a5c3c15f-880c-4d02-856d-3f87d1ab5632"
        },
        "item": {
          "id": "0abba0f5-d10d-4d82-915e-2156dbe7690b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "58b6c256-9f1d-4c57-86ea-c8bd269d6138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "942e286f-bfa1-4f2a-90dd-9ca428433f2a",
        "cursor": {
          "ref": "18d191dd-b164-4e7f-b13d-7b05f3494e87",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8b853724-50cd-43ba-bf07-ab2ad83485f3"
        },
        "item": {
          "id": "942e286f-bfa1-4f2a-90dd-9ca428433f2a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "90978d5f-bdb1-47f7-9b95-dda1fad91ae3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d88446-20f2-4bcd-a6f1-93be73d53021",
        "cursor": {
          "ref": "9a66e43e-ab1c-420d-ada7-c7bdc9991896",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7491aa76-6b6d-40c0-91ac-1b8fa0a1bf94"
        },
        "item": {
          "id": "33d88446-20f2-4bcd-a6f1-93be73d53021",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d1461592-8bb5-4c9d-8e0e-26899eeb0bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72ce558-692e-42bd-82c2-7f49c191c33a",
        "cursor": {
          "ref": "9a560fa3-dd97-40df-978c-d27f28eddd94",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f06593b6-da96-415f-9c22-2184e8d92547"
        },
        "item": {
          "id": "a72ce558-692e-42bd-82c2-7f49c191c33a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "55f30240-6529-4323-a043-6ec614a2e18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63931cd3-d916-498c-9062-e64d335fb9a0",
        "cursor": {
          "ref": "75142f55-4add-4bc2-8984-7b9368038cd7",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f9afdae1-2e76-4b5e-b361-34cff6dd70ad"
        },
        "item": {
          "id": "63931cd3-d916-498c-9062-e64d335fb9a0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b6caab6e-d932-4576-987d-d3056d0b9aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aace1e89-d01a-486a-be8b-54c939bca307",
        "cursor": {
          "ref": "962ff248-acb0-4ea1-a9cf-eb7a417ab30a",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a2bcba2a-da3c-4196-9f7b-4c6c1294bf50"
        },
        "item": {
          "id": "aace1e89-d01a-486a-be8b-54c939bca307",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "025e9f34-ebc2-4dfb-9d7b-a6f54a936c00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c6623d-6609-4ee2-a989-876e904f96d0",
        "cursor": {
          "ref": "da3afc24-6227-4bb1-a1da-33a6838868c8",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c3e1a900-6ce0-4786-830c-b6b44d1f9b85"
        },
        "item": {
          "id": "90c6623d-6609-4ee2-a989-876e904f96d0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8e4291ea-3f03-48f1-91e7-c6adafde9a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec86d256-6a2a-477c-b0a4-3ad5ad5c68ce",
        "cursor": {
          "ref": "48b21480-8154-4259-be02-46ffd2bd119e",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9a2e43e8-ab5b-4a85-8fd0-8fbd8aeb64a4"
        },
        "item": {
          "id": "ec86d256-6a2a-477c-b0a4-3ad5ad5c68ce",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "d2470778-7bf2-4965-a46b-4fda08ae8a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c8cebd-a3f3-49ce-8164-372b34b57afe",
        "cursor": {
          "ref": "c9f87f54-ac71-4ac3-9d3f-6f7898f707ce",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "01806e4d-2ec5-4b9b-b085-c60f13d0c486"
        },
        "item": {
          "id": "95c8cebd-a3f3-49ce-8164-372b34b57afe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a6daf248-7164-4197-b186-e2b8d9afe7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b0a1753-32bf-413f-8fb6-849c2aad1b1d",
        "cursor": {
          "ref": "2df6427d-86c9-4512-be64-26927645ffec",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f3bd2efe-880b-403f-bf0b-1aa9d27df8a8"
        },
        "item": {
          "id": "4b0a1753-32bf-413f-8fb6-849c2aad1b1d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4e6a240c-31e6-4972-822d-6bc9d3a27c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d021ccb0-b871-4c6d-8b6c-ec570e8f3ae0",
        "cursor": {
          "ref": "5fa1fff6-056c-4337-96ca-e3914d747142",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d0b4acea-f794-4c38-a4b2-9ba17a1150c4"
        },
        "item": {
          "id": "d021ccb0-b871-4c6d-8b6c-ec570e8f3ae0",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "7158dac3-fddb-42ef-8dbb-3d1c980692c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c4baca-3036-4af4-9a4e-d9f0819c5b7c",
        "cursor": {
          "ref": "e09c242b-09be-40ed-91e0-d955dd139e32",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4d30667c-6c66-4c0a-82f1-548af050ebba"
        },
        "item": {
          "id": "04c4baca-3036-4af4-9a4e-d9f0819c5b7c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4809365f-e57d-40a0-b4fb-b8f7598388b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0759326-412f-4208-9395-07ad3d2c1a7d",
        "cursor": {
          "ref": "287b2094-62cc-4453-bd6d-f2328e5a18ce",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "23c9f227-ac24-46c1-b5f4-2699fd73ea10"
        },
        "item": {
          "id": "f0759326-412f-4208-9395-07ad3d2c1a7d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "53583fa9-a4fb-43e3-819b-216000940dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae63b4a-0182-4b67-b309-b46f2677732e",
        "cursor": {
          "ref": "ab90301e-0831-4909-a7f5-d9881aa2d78a",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a55a48e-1f6c-4a40-92fa-fa511251d79a"
        },
        "item": {
          "id": "8ae63b4a-0182-4b67-b309-b46f2677732e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9bc8085e-8720-4cac-821e-48fbfa0d45ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f1a0d2-e5ee-465e-9e22-060932245e70",
        "cursor": {
          "ref": "46f80b1c-25fd-4b2a-94a1-4389acefd5b7",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b62d83fe-e786-469a-808d-53e8fc2befc9"
        },
        "item": {
          "id": "a2f1a0d2-e5ee-465e-9e22-060932245e70",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2a9a0663-73ce-44f1-a3c3-dd7c9b1c79c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7c6039-ad6b-476b-a8dc-090b97706d52",
        "cursor": {
          "ref": "c42ebf42-03eb-4f44-aca9-6fb1dc8175fd",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "90cda03c-c0d3-4002-8ade-47fbc17ac1ce"
        },
        "item": {
          "id": "3d7c6039-ad6b-476b-a8dc-090b97706d52",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "05d4eb44-e800-4ed0-b213-ca54fe44c1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c736935-cb31-415f-a0a0-88b300933400",
        "cursor": {
          "ref": "95784c52-ce7f-4510-9b14-6a0c31824b32",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "902fe374-76f5-409f-b707-8758359900b3"
        },
        "item": {
          "id": "4c736935-cb31-415f-a0a0-88b300933400",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "42c09a00-595d-458e-b942-b91ee5401eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fb8e25f-b6ef-45c1-ac4d-8856a4c7863b",
        "cursor": {
          "ref": "aac72362-c9c8-4e82-af44-bce747b11ecf",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b4c80ec4-f4f8-4ad6-b909-28c1a2484130"
        },
        "item": {
          "id": "7fb8e25f-b6ef-45c1-ac4d-8856a4c7863b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b7913d70-5317-40e8-9467-ada76465e9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b555ed-c234-4071-9f03-5e7d7edddd29",
        "cursor": {
          "ref": "9437b3b2-c58a-4d65-a0fb-5e357e24e546",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7cde1a2e-dc35-43f0-a4c7-41e7892b8490"
        },
        "item": {
          "id": "a2b555ed-c234-4071-9f03-5e7d7edddd29",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1077e100-eee5-4811-a053-34864c1bf218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d01326-8131-4ec1-b338-a46ac93e983f",
        "cursor": {
          "ref": "7aeffc2d-3be2-4b3f-a368-aec608b6edab",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a262fe80-62e5-44f8-9555-c8807033eab3"
        },
        "item": {
          "id": "f7d01326-8131-4ec1-b338-a46ac93e983f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7c685491-04ec-479b-84f2-720ebf94e39a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81421b6d-ae44-4753-b6d6-f068eecdd4de",
        "cursor": {
          "ref": "391a8686-ce1e-44fc-9081-ed35301079de",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "0dc29267-d990-46d1-9978-3845566b2087"
        },
        "item": {
          "id": "81421b6d-ae44-4753-b6d6-f068eecdd4de",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1170871d-84e0-4a82-964c-bb108ef03e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fd49aa-02ec-43f3-ae42-a0246cc812cc",
        "cursor": {
          "ref": "2dc279c6-5e46-415d-b5a3-ac8670e21223",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8c73b2ec-9b47-4f4d-962f-0a805591b868"
        },
        "item": {
          "id": "69fd49aa-02ec-43f3-ae42-a0246cc812cc",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "11efa34a-8f6c-4a86-9815-d4d6a3ad99ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f08552-6443-4095-9e79-54e555dc1f49",
        "cursor": {
          "ref": "3b3cb49b-a703-4384-aca5-eb4a27363d53",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d5fb6eac-cfe7-403a-8683-4dddd6e3b9d3"
        },
        "item": {
          "id": "83f08552-6443-4095-9e79-54e555dc1f49",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "97ab5730-c008-4b9a-9754-cda98da20f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689f2549-4f9a-4e94-b710-33fb80680461",
        "cursor": {
          "ref": "89c47621-4f10-471b-9465-abce225cdff2",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "432fd8a7-be7b-49f1-9776-0d63d8b961c5"
        },
        "item": {
          "id": "689f2549-4f9a-4e94-b710-33fb80680461",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "98b00fb0-79df-4695-9197-f884e8df7567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f487f12f-d8db-4ed1-8f0b-26c9ac7c9a4f",
        "cursor": {
          "ref": "35964897-dfa3-4ff4-96d2-c597aec55205",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c923e0b5-419c-47af-adae-f29f8451e932"
        },
        "item": {
          "id": "f487f12f-d8db-4ed1-8f0b-26c9ac7c9a4f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4d6dcf73-b41a-45b0-99b0-6522a573296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7644928-7531-43fb-9ebd-8b9cf20f12ed",
        "cursor": {
          "ref": "8b22af0b-27e1-471e-b9f4-ac2da2bba596",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ceabe55-b9b8-4a86-be32-46b8724e2710"
        },
        "item": {
          "id": "e7644928-7531-43fb-9ebd-8b9cf20f12ed",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e738a2c8-27fa-4649-ab67-c0d3e1c39435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98566ca-2955-42c8-86c4-ace3447e95a3",
        "cursor": {
          "ref": "d50b9c06-26bb-430f-ad66-d80b9db320a1",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9d8bdcb8-a383-4f75-af6e-f122998bb5d7"
        },
        "item": {
          "id": "e98566ca-2955-42c8-86c4-ace3447e95a3",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "841eb8e4-d28e-4c45-9431-6706471ca743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623ce7bd-c605-4107-b61a-34d05907f110",
        "cursor": {
          "ref": "b3f6fa32-d8a4-4d5c-b2e8-68796ca86a28",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4466d99e-a929-453c-b8a6-b404726bdeb0"
        },
        "item": {
          "id": "623ce7bd-c605-4107-b61a-34d05907f110",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9514e12e-55a7-4cbc-90e2-3058e509a955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ab59b5-1398-4601-9089-4019d5e44bc7",
        "cursor": {
          "ref": "799b42b7-309f-4e81-8081-6d90c5f23ab9",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bc209b73-20e8-4863-a921-3e06a5d1f64a"
        },
        "item": {
          "id": "a7ab59b5-1398-4601-9089-4019d5e44bc7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4fc7e014-5675-4bd5-8769-e211341b9f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae05e994-c738-445d-9db2-be3b08b21e95",
        "cursor": {
          "ref": "ca945b11-241e-45c2-9147-d3e4633e67cf",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "97987c11-c707-4ae4-a817-348ada846ac3"
        },
        "item": {
          "id": "ae05e994-c738-445d-9db2-be3b08b21e95",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "64c46ab5-8c0b-486e-b74d-278e51af5ddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec359912-2734-4f41-96c4-9c73df828e46",
        "cursor": {
          "ref": "e0968af3-07a8-4d17-a994-7dd131d3100d",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "058ad4ee-650b-4e3f-bd9f-69dc9ab0a792"
        },
        "item": {
          "id": "ec359912-2734-4f41-96c4-9c73df828e46",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "329421ac-1c6e-4f7a-8ed3-398131f86bca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf1ec9c-5f3b-43f2-8076-ad13f66442be",
        "cursor": {
          "ref": "07b03674-66b6-4e88-bfc8-abc1e4ddb850",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "54959baf-c7e0-4968-a45d-9ca53b6f16b4"
        },
        "item": {
          "id": "ecf1ec9c-5f3b-43f2-8076-ad13f66442be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "a500f7a7-ec78-4841-b2b5-3f63e20a0110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c1b2ab-e9e7-4587-adf0-a85295979885",
        "cursor": {
          "ref": "f8c2b5bc-c44c-497a-ab68-1c5154e1e4cc",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "0b6b4306-007b-495b-9239-34ce0644b6e5"
        },
        "item": {
          "id": "c1c1b2ab-e9e7-4587-adf0-a85295979885",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c5667142-3fe1-4233-bbf6-f694b8c4f492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a2312d0-75d6-40c9-8370-ff3465d2cc4d",
        "cursor": {
          "ref": "4f3acaa1-f53c-4d68-929c-8959ea0cb5b7",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53164da7-77b3-4dc0-b1b1-b4c4ce10c22a"
        },
        "item": {
          "id": "9a2312d0-75d6-40c9-8370-ff3465d2cc4d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bf2ab871-8c4e-45dd-8791-ed8e6a7a0278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c832663-1891-4605-8bd3-30632d38d828",
        "cursor": {
          "ref": "5a6dba85-57a0-43c4-9405-59b7e514b9f3",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2ec1cf8f-e3c2-49e3-b49c-a4c683eb5552"
        },
        "item": {
          "id": "5c832663-1891-4605-8bd3-30632d38d828",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a34b7816-c014-4d2c-b406-7f759fd5e882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ea1e36-311d-41a6-83c6-0fcb6a492a65",
        "cursor": {
          "ref": "bff747e9-028c-45a8-bf50-f736417d3a51",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1b9bc258-e025-41f9-8638-b25cfc96defd"
        },
        "item": {
          "id": "e4ea1e36-311d-41a6-83c6-0fcb6a492a65",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "59a31c6d-9c5c-4fc2-b249-65ee9f510a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209a7d73-b02c-41c7-b89d-ee86125164c9",
        "cursor": {
          "ref": "4f337313-89c1-4a6c-9ccb-260a45df740d",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ec5c7b00-5ba7-4558-9d74-2b0f640a253c"
        },
        "item": {
          "id": "209a7d73-b02c-41c7-b89d-ee86125164c9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "629c1130-79cf-4a06-9c9c-5ed620c72b76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e62fa0-469c-426b-8621-d51be76af3cc",
        "cursor": {
          "ref": "15c19739-5856-4d9c-a326-eb68bbf444ab",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "01f597b2-9c4a-4164-8c3f-69e0c0b4fbc0"
        },
        "item": {
          "id": "c8e62fa0-469c-426b-8621-d51be76af3cc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "03e2c508-9036-4797-baa8-7da0c4dccf84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e165f2f-e03c-4f1b-896f-d8c10ca89bfb",
        "cursor": {
          "ref": "6ad1c156-048d-4dec-993d-809d1ec29e2e",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "75cb6b28-55b2-4de7-9b8a-2f3566423fab"
        },
        "item": {
          "id": "5e165f2f-e03c-4f1b-896f-d8c10ca89bfb",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c8a4f790-5399-4cc0-a644-e4db114cb9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ca373b-1a36-4835-a026-ff88c4db6e0a",
        "cursor": {
          "ref": "fb8dc268-8bd6-4c9b-90d0-68c129e44c0d",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ecf3fa80-3fb6-41b9-a992-f476bfa9ab44"
        },
        "item": {
          "id": "e2ca373b-1a36-4835-a026-ff88c4db6e0a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4f694573-b8a3-444b-a6b2-145c1dccefd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5edec3f3-4c64-47aa-a017-a38d05559e64",
        "cursor": {
          "ref": "07bebe0e-8911-4e5e-837f-0ce1e9c003d1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "9ba6a9e1-e437-4201-bd2c-a4ecdf2a4fbd"
        },
        "item": {
          "id": "5edec3f3-4c64-47aa-a017-a38d05559e64",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c9f5a58e-3836-4117-b3d7-114479fe5fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab64d37-5536-42a8-9f44-6cbf10fd725b",
        "cursor": {
          "ref": "89bf742d-0fe8-4a60-a5d2-9b7f23e6f867",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6be7ebf8-7ecc-4fef-89e9-f357cdb6f6ca"
        },
        "item": {
          "id": "aab64d37-5536-42a8-9f44-6cbf10fd725b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "75428c56-4eaf-4ff5-8fd8-b2576a641ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69b782e-67dd-44fb-8a8e-03aa65698178",
        "cursor": {
          "ref": "1f15c362-d6c0-4828-ad47-99106b7a0aac",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f0a4e57e-b894-4431-a3a5-499f0900f623"
        },
        "item": {
          "id": "c69b782e-67dd-44fb-8a8e-03aa65698178",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1664e2cd-6abb-47e3-83e7-7d767c2fc9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f8edd0-b2ec-481a-b679-8255fc7bc471",
        "cursor": {
          "ref": "58592b4d-cbef-4b43-858d-d70f8a7ee35a",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7d049da7-14ad-4a32-9a85-17aca8617482"
        },
        "item": {
          "id": "91f8edd0-b2ec-481a-b679-8255fc7bc471",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f5d7edf6-865b-4643-855a-7de0c9302a6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473eb371-4c42-4aec-8d33-2277de1226c5",
        "cursor": {
          "ref": "f7cd3f1f-20ea-4409-8f2f-a3dfa8deee64",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "19a45c28-c6bd-45ea-9558-029faa1877da"
        },
        "item": {
          "id": "473eb371-4c42-4aec-8d33-2277de1226c5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "047c4033-f190-4e67-8d99-19df08bf5fb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5fe990-d202-4e89-b509-6de6f4a21f50",
        "cursor": {
          "ref": "20d5d325-1de6-4ec5-9c20-871d47dd52ba",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6834388a-498e-457c-b314-d23568e9a7be"
        },
        "item": {
          "id": "1a5fe990-d202-4e89-b509-6de6f4a21f50",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "9cb7e985-6901-4057-9f6d-6b1d4b8bc487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e35b7480-5afe-4283-beab-9b9475b16610",
        "cursor": {
          "ref": "e48f015a-a944-432e-8d33-b79371d3ff9a",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "3100abe4-53a0-4d97-b0cf-e80fe7309b07"
        },
        "item": {
          "id": "e35b7480-5afe-4283-beab-9b9475b16610",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "816cf56d-2348-4d5d-b359-72d264762cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4226db0-b80b-43d0-93b7-738217fdf904",
        "cursor": {
          "ref": "f748c848-f53f-4f5a-b409-2a7c0b5c2e34",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2d63847c-feca-4044-89be-9b8a760fc4f1"
        },
        "item": {
          "id": "d4226db0-b80b-43d0-93b7-738217fdf904",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a47fe679-a179-4158-b998-b608728686b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7425056e-1512-4d6a-9d1b-ad46587024ac",
        "cursor": {
          "ref": "9b546750-33e5-4212-bf14-2c27a8411585",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6fc0ed5f-6ac8-4a06-8004-620b220532e2"
        },
        "item": {
          "id": "7425056e-1512-4d6a-9d1b-ad46587024ac",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "fcb585eb-8016-4436-a1ed-78659e38a2eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1d3975-456a-43fd-8341-397744d5669c",
        "cursor": {
          "ref": "2fbb3bef-8c74-4e0d-b9b7-272dc6aa1f0c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "791b83e5-5d44-4381-91cf-4f0b64d04a09"
        },
        "item": {
          "id": "aa1d3975-456a-43fd-8341-397744d5669c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "0e60c96e-df26-4048-b5e9-8774af1ec7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05a5add9-0f8e-4b4c-8fac-0a1c23258b07",
        "cursor": {
          "ref": "c9c18273-4ea0-481e-ac78-cabdc6c1d3d7",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "85be7da7-9a80-41e4-b614-c6256628ed13"
        },
        "item": {
          "id": "05a5add9-0f8e-4b4c-8fac-0a1c23258b07",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6ebaf47-2a94-4dfc-9cb7-2cd887813aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704b5aa0-16d0-4e68-847b-a01c5811a8dc",
        "cursor": {
          "ref": "409d2e0f-a877-4253-99b8-fabcda660d54",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d69aaa2f-621c-4e87-8ec5-ead21f358a5d"
        },
        "item": {
          "id": "704b5aa0-16d0-4e68-847b-a01c5811a8dc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fcc92b29-0f58-43ce-93d3-7cd2a6224c80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d12efe-23af-4560-9fa2-400a20b77ec5",
        "cursor": {
          "ref": "6e1d3fa6-54b7-4378-ae11-e0e8f03b7695",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1207bcbf-fae9-4678-b3c6-2a2b0d5321fe"
        },
        "item": {
          "id": "b6d12efe-23af-4560-9fa2-400a20b77ec5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "695f8b2a-3eb5-4462-a8b8-67675965ea3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96d207f-98a0-4b11-abd4-9e37d23599ef",
        "cursor": {
          "ref": "9283bafc-4729-4b79-a26c-146427c871af",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d5f24670-a1d4-4119-bcbd-f7c27aaafc1a"
        },
        "item": {
          "id": "a96d207f-98a0-4b11-abd4-9e37d23599ef",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f6178dce-0476-4c75-a559-85f6eeee9e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae515e7-5c61-48ee-9a8e-e47cfbee6234",
        "cursor": {
          "ref": "04fb07bf-e7c1-4402-b254-3314ae83fa9d",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e619743-ccb3-4b2e-9516-c45907bcd7c0"
        },
        "item": {
          "id": "3ae515e7-5c61-48ee-9a8e-e47cfbee6234",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "864ed400-0b52-4bdf-87a2-4d4b95f5e3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70faa54a-4090-429b-920c-51cd35adef38",
        "cursor": {
          "ref": "b7afe74a-337f-4e29-affa-70122d1225ff",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "06208247-f9be-49b8-98a5-015a8cb5f233"
        },
        "item": {
          "id": "70faa54a-4090-429b-920c-51cd35adef38",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6943a8c3-6c99-43bd-add4-49ee9f1172ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a367079f-d78c-4227-b21e-6238d1209f5f",
        "cursor": {
          "ref": "4b5ab3e2-df8d-4e40-8ac0-bdbe197a4d1d",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ba5c7386-c499-408f-b8df-6a19332b31fa"
        },
        "item": {
          "id": "a367079f-d78c-4227-b21e-6238d1209f5f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8ad12bf9-85ba-4211-b308-8ca3c0fd0e0c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4126e83-d435-43e1-bb18-7ae66a5cdc8c",
        "cursor": {
          "ref": "03258542-91e1-448e-8bab-66c2aa001f19",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15815f9c-65ac-4880-b717-4040f4b5286e"
        },
        "item": {
          "id": "d4126e83-d435-43e1-bb18-7ae66a5cdc8c",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "01307500-1a4f-4cd7-bc8c-11f45f916710",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadbb85-a860-475b-a317-c2d23a2acd1b",
        "cursor": {
          "ref": "089dc9e8-022b-4f9e-bda3-da32c26c7a81",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a259a15e-9d32-46b3-923f-d337801f0042"
        },
        "item": {
          "id": "dfadbb85-a860-475b-a317-c2d23a2acd1b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "870d7168-dcf7-4c2d-8723-e514b4d444d2",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ad34e1-a891-462c-9585-411456b44c15",
        "cursor": {
          "ref": "1824fb52-b822-4ddf-89af-8417f909784b",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "18ffd1f9-79cf-4193-834a-4811236e147c"
        },
        "item": {
          "id": "d0ad34e1-a891-462c-9585-411456b44c15",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ecd054c4-0f18-49ea-a0d6-266731050ea5",
          "status": "OK",
          "code": 200,
          "responseTime": 33,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "311e7830-0aff-4b6f-880d-0ee9495a977b",
        "cursor": {
          "ref": "7467ac45-39c1-49a8-b126-7ea1d38868a2",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0b065686-348e-4d42-844d-84c1f4be8d82"
        },
        "item": {
          "id": "311e7830-0aff-4b6f-880d-0ee9495a977b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cd3a2c80-200a-46ff-a1da-d9c57b2ae14f",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
        "cursor": {
          "ref": "495af584-8f68-455f-80d4-572368ddf646",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "baea350f-4213-4254-b888-4b7c6bde872d"
        },
        "item": {
          "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e85d805-7236-4942-8887-de89a5b4e375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
        "cursor": {
          "ref": "495af584-8f68-455f-80d4-572368ddf646",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "baea350f-4213-4254-b888-4b7c6bde872d"
        },
        "item": {
          "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e85d805-7236-4942-8887-de89a5b4e375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
        "cursor": {
          "ref": "495af584-8f68-455f-80d4-572368ddf646",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "baea350f-4213-4254-b888-4b7c6bde872d"
        },
        "item": {
          "id": "bebc1357-28e4-4ab9-a2bd-b3fbc6d59776",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "1e85d805-7236-4942-8887-de89a5b4e375",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fe98301-d3f6-4c63-ad13-8f96140bf722",
        "cursor": {
          "ref": "50070249-99be-4b25-b173-43c63c442ef9",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ce2b6b07-afd7-4e77-a24c-5efd29948208"
        },
        "item": {
          "id": "1fe98301-d3f6-4c63-ad13-8f96140bf722",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "da395047-54dd-4bfa-b455-ec83a6ac0d1a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd6847-6a48-46f7-ae7d-ac8c1160b239",
        "cursor": {
          "ref": "40cf148f-d8c3-450e-9319-4a027d6bd2b2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "56bed372-9f5f-487a-8eea-1522d7be68dc"
        },
        "item": {
          "id": "e8cd6847-6a48-46f7-ae7d-ac8c1160b239",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0ad75eef-1abd-4f43-92ce-b620c12efc61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cd6847-6a48-46f7-ae7d-ac8c1160b239",
        "cursor": {
          "ref": "40cf148f-d8c3-450e-9319-4a027d6bd2b2",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "56bed372-9f5f-487a-8eea-1522d7be68dc"
        },
        "item": {
          "id": "e8cd6847-6a48-46f7-ae7d-ac8c1160b239",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "0ad75eef-1abd-4f43-92ce-b620c12efc61",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41650b95-74ef-43f2-945e-b70aa60c732f",
        "cursor": {
          "ref": "cfd52494-40d4-4f4d-b675-43422777694c",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f04ecb07-1372-454d-be90-28a02496324a"
        },
        "item": {
          "id": "41650b95-74ef-43f2-945e-b70aa60c732f",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "bbfd42d1-fc45-4580-a8b6-47ea932f2c1b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 8,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b781a07c-8aee-43a7-9bd3-cd1f36645da7",
        "cursor": {
          "ref": "7233b87b-523d-4a24-9a87-408de8025f80",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00030d16-9881-4e80-a98a-29602087677d"
        },
        "item": {
          "id": "b781a07c-8aee-43a7-9bd3-cd1f36645da7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cf7cb2f3-d0b0-46e2-afb6-5b25104b7684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b781a07c-8aee-43a7-9bd3-cd1f36645da7",
        "cursor": {
          "ref": "7233b87b-523d-4a24-9a87-408de8025f80",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "00030d16-9881-4e80-a98a-29602087677d"
        },
        "item": {
          "id": "b781a07c-8aee-43a7-9bd3-cd1f36645da7",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cf7cb2f3-d0b0-46e2-afb6-5b25104b7684",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6796992e-b9be-416f-9e57-f68ddd4a891e",
        "cursor": {
          "ref": "107e286d-27ea-4e39-805b-562f75c39ca9",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "2f7e5b04-f091-456c-b8cc-e9fae82a498a"
        },
        "item": {
          "id": "6796992e-b9be-416f-9e57-f68ddd4a891e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "e90276dc-fd79-499f-940d-e98e27d70abe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 9,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}