{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c775abee-1355-4bc2-b65b-b83d4ea56f42",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d776c6d0-e9b6-4982-9756-044d0ff4cf13",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "242e6998-f5cb-447f-a18b-23bbde6ad9cb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96d3aab3-27c3-4737-8e42-37d1de9577fc"
                }
              }
            ]
          },
          {
            "id": "173721b3-f217-4fb2-a3a3-ffab97bf20e4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b460d696-cb35-4232-bf43-383a9c4daba9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "6b112ca3-56ce-444e-adb3-8e3b095a8590"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "55b7cf08-24bc-48b6-9da1-c450c396f6e1",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "77228283-fd40-4a7c-9468-217f19271f7f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "deceb27c-ded1-48d2-b695-211ea6e9a890",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc92ad10-11c5-4995-a035-3634e1b162bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3dcc70b5-0604-416b-8b8e-fb9764d83fc6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "78938f27-49ab-4f7e-adc5-418ef73a4f38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f915d9f4-f0ca-4e95-b30a-919b5ec139b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "47f975b5-893e-41a8-9ed1-cb72253493b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1c4801a-af76-4701-be01-e2fd67408a49"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b53c71f4-5bdc-49cd-89cc-a09af868bdea",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "521b38d3-4a57-4e97-aa5d-a5b1b6acfdee"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "22215ebc-2a82-4b12-b6bb-dedce20c670e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "915654dd-4944-491b-becf-f32597a679c2"
            }
          }
        ]
      },
      {
        "id": "8ebed361-60ab-424a-a007-dade03b7d9a9",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "017306cb-507e-483a-af72-bac579cb12e6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "01148466-0caa-4673-a801-cb4046930fbe",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "39f50bbf-8997-4efb-883f-06a06b1e167c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3afa42de-cbf6-49a1-a03f-e3eb2058048a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04d47dd0-2da1-41cc-b832-b1e2d3998ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797257b6-5243-4e73-a1d9-ca7d6713ac7f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d500d-056e-4f12-9fcf-13715d12e019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a0db9c-a010-4485-bc5c-6c3db554455a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af768690-482b-4101-8370-ef7d53030b63",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0be6edc-a557-45d5-a1ef-d2aa58b35eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5075961b-f75c-4888-9bd6-8c32266ccb24"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "872845b9-bb12-412f-be2b-6f411b1594de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "17f2a534-7d5e-4b9b-b82a-a40583c53a6a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec91da5-f35a-4a3b-ba46-19d72afc3103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca9b7f81-549e-4a4d-881b-fbaefbcc2e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd29a1a-7f7f-4556-a4cd-9affc575c950",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf4afdf-1b6d-43a3-9eb5-b6675804e88b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fa576f40-b077-437a-8036-4bbbc647f854",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bddba329-fd2c-49c0-acca-117f466f645b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79aedeb8-bf24-446c-ae05-fe245bd61e83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "cce77841-6614-46e9-9292-ce7e3519f4d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1ab0beea-b738-4716-a787-6a684f2abcd2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6d022915-53dc-4423-846b-593139b47656"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a1d91fd1-bf5c-47af-8849-ab4dced739bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dd1e817-e292-432d-b3ca-d1fae2f033dd"
            }
          }
        ]
      },
      {
        "id": "67222776-4153-4ef9-9faf-622f45485eae",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9687523a-9b2d-46f6-8c57-1e788c50b49d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "83fac9fe-62e9-4ecb-bdaa-4800f49265c2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "8fdd5b72-dcde-4209-a981-9fc84da17a76",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabfd2a5-8fd3-48ff-afa0-f66db45aa445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c1cc400-e09d-4b72-a625-5147c419466e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455d4e53-cc14-49d8-9aee-19bbd6f143bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b056e5e5-d3b7-4851-8ba6-baf14c79980b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc226e15-2e59-485d-8b19-f20952f20990",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42db2ca1-e1a1-4859-8dc9-6a7b296a92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12123c3c-707c-4efe-ba72-e3873771f3bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18500702-3c5f-4e59-8923-b27b4a6ae390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e263cd-74e1-4e7e-859c-6a6383c86946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c088aae-d761-4e37-977b-876a32a4c40b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e59e56-192b-45de-bc7c-39d14711e854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1801a782-abe2-4d54-8966-6fec6b46300b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3c13a6-0643-46bc-993c-f06e6b5b1cc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f1a6c14-5ec9-4d86-8055-b603c968b65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12acc4f-18e4-4157-8f2d-403ac1bac21e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f93c1eb-843e-4cc1-851d-f18e7f856f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c4e580-b3e4-4063-8d7d-633d6286be00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae9d9961-dfda-452d-a6f5-cf90af4a7cb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83426377-1bc0-4e6b-a465-c160cbe93a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f9bfcf-e026-4d40-99aa-1c84ce7f8d8e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7477f365-f33e-45e3-bf47-f9a6374ab1f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf07fc3a-9f6f-4c14-a6ef-dce09541cbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d3585d-c1be-481b-8d57-8c258684101f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d1a0f95-515e-42e5-b216-b368e2280bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aa143ec-5223-4cd0-a211-193fa4c85e8b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "054b5217-ef1d-4813-a3b9-62751b744617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5a62e4-6c6d-4995-8a9e-e5914bc39539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4873fb-78d9-4e23-aa12-c7cdd1aa6fc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb9da28-4fd4-4654-9edc-6827c51d7017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708aae01-6e77-4d32-98f3-ccea5de66217",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfba514-d132-4b11-977f-3b077fdfc366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5148df8f-6944-46b0-bf00-752b935dda9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb67ca1-759a-464e-adb1-560a10d857bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96b12d6a-07b5-4afe-85ed-e9dc45eeb6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b57e88-fda2-4192-8024-57d6e05e18f0",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79be219-f8f0-4624-ae60-932ec66fa54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aca0fe5-b1f5-4d04-ba96-57ec2bf9e9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29195b3-4dbf-4a99-ba31-006be351485b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e42f89f-05a7-4885-b13b-ea241a2ff383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c3b0eb-2f74-4852-a9fd-d0a8289feacb",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3f1f7c-968d-4046-9ed7-14be3b1d042d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5db8bb32-63d2-4c5e-9421-249a06333b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c4a61a-9bb5-4f51-86aa-1708d2a2fc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "768524b5-34e9-48fc-82df-531a78efa199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c56c8d6-b806-4cd1-add2-56f77ad80857",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dda02f-7b24-4818-a86d-38ed0d9976d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b65c6f16-3d61-4f0c-aca9-d46a41605c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12eaee24-d726-4c6c-8dbc-204e2ffbb809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ef4441-5c88-4694-8618-ec4065842a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c6b238-8ab6-42b9-b68f-e36f7147083f",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd81e16-17dc-4a32-9d97-873ce36a1cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33dd4d74-598e-481c-8654-12c3cb45e510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce22e2c-ec4b-4a93-9de7-6e69af4fb9f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ceabde2-d64f-4def-b013-f06d31b45326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e102e143-4cc6-4235-887f-b432c2994a21",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cca6d40-315a-416c-8a55-73a7664db731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "974bd173-91e2-4b1b-852b-af378d7610be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5464ce4d-6cef-47d9-acf7-0f7865e8fc2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32ca471a-4c9f-4b77-9ae9-307610c71e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ce017e8-64f4-45a3-bc1c-4ddebb6c96c9",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef1e16b-394b-49ff-b8e4-432609c14669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f37143-3ea1-4a0a-afd2-3b8af92fed18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea2890ed-3aec-4537-9d0a-16050962594d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1400db9c-8a41-4038-9400-3171e68853ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8e4fd5-05dc-4327-9cfe-cde0001f61e3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7382b070-8fdf-4bd5-8110-3584e5a8547f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19eca29a-578e-4e95-99f3-94ca3b4e9b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da38d2-c14c-47cf-896e-9989e41edf85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1d53ee7-9248-4f6a-a4fe-f7bd722b2478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73aee14d-981b-44dc-9e22-7786106b622f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd364b1b-86f8-4c6f-be89-ab11cf285b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "698a7a75-ee71-4265-ab1a-e517ecea4224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e9547b-b7b9-4279-9933-3ca27249fa17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f902ddb8-94cc-4b88-b5f2-2cd8c78c1dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3011b898-780f-4ffb-9033-d9d7c4818043",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0958dde-6060-4bf6-a166-363238a5d9cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c894767d-4c34-4ad2-afa4-acf1c59fb171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d061e636-addc-466a-b732-8ba1192ebdd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf776b11-7703-46b7-baa7-1177409eeb3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "165f5dbc-d787-4218-8467-c06790b2ec3b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8962ca2-7d42-4a04-a741-dc03244449a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07570fcc-aae1-45c1-8315-3874e51f7b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30f39a4-b1f4-422a-b107-ec0e60b12db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a54ba51-d493-4975-9001-5cd2d5b85fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3f8ea7-4d40-48d1-a96d-b570b7de8ea8",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c818b5-d128-4a8a-8370-e797e5a1b0d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9737403a-a6b0-40bb-9d50-beff305a242b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36b70d5-3422-49fb-bd21-f05b5ac506ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "85c43239-8c9c-4051-b039-45f1ce5c3018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34351696-e981-4ec8-964e-aa6915747954",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f576704b-9393-4077-b29e-9ef85c39be86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f41ae6-f575-42ba-a2f3-ee7f19d8d634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482daf87-c0cd-45c1-9e64-811393970658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a5c783-cf1a-4289-9559-9761f5bfc2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4077edc8-c7e0-4c0e-b88c-311793e23114",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58738ff-6085-4ab1-82ab-f7e6bcfed3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93496da1-296f-4902-bccc-324b8b582386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd12aab-3534-494e-9910-a7d05db7678e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fce20e2-9739-4fd8-8a27-481ca21e7d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b571173e-7fce-4b01-af36-3e0eec3088be",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daa3a6a-8442-41b1-a871-6ae5da0513b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115c9769-14e9-4905-ad15-42cb49c20ad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa4f53e7-16bd-42fa-b0f1-e301a8fe06d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a065426-88b9-444a-9eb0-a660d7cce502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9110fb2f-c4cb-4679-8ecb-a02d1a7757a9",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5b1489d-65b9-418d-8179-a6bfd7d57a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e20a71a-c1be-4891-b2ef-d910df946b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce73cd50-775e-4406-a43d-09d9d9f22b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85584101-44db-4cd6-a670-1cbd4b6f6947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c484c72-698e-4239-90e8-1e3b3761a6e8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f351ecd0-df1e-4c5c-8e96-6b03a7cdba94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f71ee29-3457-4f93-85f0-7da75992f9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df72be75-f5d9-4577-a631-febf07e5347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a89c78ec-f404-4628-a897-2a33888d26a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2028f8-aaa2-4c0e-b0ee-d4f7cb6bca52",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c10d3b5b-4dd6-4f0d-9894-70d8be2a9607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fad37da-f589-4351-8e27-9dca20ca031e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa782e52-3ae7-46d1-ac8e-7a0d269f4477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "975b456f-5709-4b69-bcd1-11b6e875f373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9be36f-0057-4d08-a6cb-e74cf981c93e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662420dd-96cc-4b2f-8a6e-eb77207515a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e4f587-434c-4cb4-a2ea-6c98bc89084a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519026d5-e732-42d1-8277-864c54e0e097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6190935-f08a-4502-a8c2-bc33f12795ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cb036fe-e2f3-4e81-8961-d3899b473bbd",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e211efe-b3e6-4c9d-ba32-fec06718d372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3a3165-8345-4df3-b99d-384e671ea015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b11bf5-a0db-41aa-99c1-f9524f360541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b09d439-c10f-4b94-8de3-85eaa00f2cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2057bd2-0f55-42cb-b0a3-8a1d60fb5011",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd4a13c-ddcc-43e5-989a-84fe0732d25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a9fbeb-8a65-4d87-b791-d8afa95d6a63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e404258-09ac-452b-9c48-e7e466577eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf32289-426b-4526-979b-461b873467f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6cb5be-860f-464b-8d46-0d5f74265226",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76745dec-b5f0-420c-acf7-e0324bef0ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0cc328-8a35-4587-9eb2-61e84f4ec97d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8416e694-4b64-4e25-8ab6-355201f308d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0bc16580-aad7-4d82-aab8-8479018ef339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2a3136-3b3d-4303-9c1f-b5e8c373a764",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c1af27a-d359-48ed-bdfc-6299334cb7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c9eed6-53fb-48e2-94c7-454e76b6a2eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aabbaf4-da86-427e-a9cd-166485afc6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6cc10f-5130-41c4-8db0-9b6e52c5b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a026f9c0-f46b-4c8f-a5d7-b86d729d9c53",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89105378-6bca-4b5b-a73e-0b3661506064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79b5d1f-9030-43f9-9461-9a1c2074bc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8787a98-fe58-4a8f-a109-893a49d690f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "678a27a9-e1a9-44d2-923a-53ebf0e443ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b49a7d-ae5d-432a-8fec-27d4f65ea0aa",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e123a46-30bc-4f98-b539-c43e5865df6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed6c42d-c42a-4bda-bc37-5570b2678c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3071922-b0fa-4d51-a5dc-af426b348431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "237cc140-60d1-4849-853e-b59369d5b9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5af70557-d36d-41b3-8d75-8cb8f66d4425",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b0e94c-b84f-4207-be4b-013ab3a283d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0423ba10-1855-4789-8599-c780c66dfce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28deb470-0fbf-478a-8c28-858c773778ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9605791-c76d-4c73-89d6-4461442b3430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "926c86e1-08e1-47c7-a19f-7aeb84b72559",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5b32b5-46cf-49eb-ac1c-b385c26ab45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b33e5d9-fb93-49f2-b1cb-1ea643a1b044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebef3fb4-5bde-4eee-adf8-90ac5f40f4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d1538b9-4609-4974-96ec-2c85c4961fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96703c50-11bc-430d-8eb7-29f93b7e79af",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7298f0fb-f307-429e-95dd-548c1566ed44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5b6f5c-9315-4072-9f5b-9d89ca0ba1bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a18b113f-953b-4902-9fd9-59ae62d1cc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b7729fe-814a-4815-bf92-3ba5a28c60d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63ccc78-13f4-4e7c-81ce-d2ab1efac0b1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cb51f3-0042-4d8e-91e7-38607f8a15f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb663739-7ec1-4369-9ea2-cdc68a85c1b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5265d79f-7e3f-435a-9781-af11cb753c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e1b2fa6d-92aa-4a0b-b285-2cc9240ef514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9ca38f-2c0b-48e7-9ceb-6f5b0a9ba843",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537586f6-ede6-49a6-b90e-4b514859363b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb1f4be3-4f46-4cf2-bf1f-93d210183094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceae5c22-8ae7-460b-8287-de31af49b791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e35f1833-beff-4e6b-b33d-250a7ec73306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f555f9ca-a994-4b4c-b815-c93f229adf75",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89fb4d98-358a-4829-8e12-ebf23f26f815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45823693-7dbd-495e-b60b-1b5860e7969b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfffd421-9d4e-4871-a2a3-04d4cbecb4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "89e4d9c8-0bdb-4570-97d9-2b8931ced92a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b87d888-fa94-4c51-b99f-3af815eb0c78",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4948904-a94d-405f-b75e-c29a799fbdc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29539e8f-6064-4196-b85e-d046e5cdd9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed0b7e-87c8-424f-8b09-89afbefdc2a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0ca7729-0a48-4b0d-a9ff-05c598bf444f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2df0f7-7991-44d2-86e8-7358130ddff3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbebda3-949c-47ff-be5a-99ed969e9266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08caedaa-40b9-4c93-8227-691d1a920f68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48cbd9d-09fa-4711-b98c-fed8a33cbcbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e489ec10-7223-4762-979d-ec5fca779f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c269950a-bd63-4d93-94ee-92e8b75a4d57",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e21054-94f0-449c-8132-2695649c591f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "832f4da5-0bbb-43a8-a132-53d0d6657bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872128e2-0585-4c0a-b8ff-430d0a6753df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f3ff11-e454-4cb7-b544-936de59b9838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be279699-498a-4a16-808f-6f515e2a9eea",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ed99c6-d3ce-4d3d-8cbe-aecced4b7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984f5337-2987-49ff-ae69-d947f80f0ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066125da-bd2f-4312-8e08-5df4d34776d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c08eaa-1056-451f-9f61-1aa2eef77810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e8d359-4247-4f48-9bd9-251cc035e45d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d55747fc-5f4c-4038-a67d-0c880a44d752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5931605b-9c52-426f-9527-f25492f7b832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f8c757-865c-4067-8e56-5bc1c6c86e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "4acd8238-8c04-4791-b015-eb3bd8924c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfc844c-1cdb-44b9-86fc-cdccfbfe2a43",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c99254d9-a0fb-4187-8d70-96a69d403b01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f37505-fa4a-486c-9149-542ceef9ceb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8704ef00-e1d8-4b04-ac4d-3fdce35e69f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a54f4f21-3e55-4747-8748-e5f8ef5b9cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1583ee7-a4d6-4471-9537-4912b749badb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc874e5-2599-4a50-91a3-255118b2331a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24916e38-79d6-4fa4-99b1-32a8bae06747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e297b24b-6da8-49ba-981a-14ef2f25343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e35a446-0056-4ae3-880f-469cd310c671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a813d954-77d1-43c9-99c5-38870105c791",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc1eda4-9723-4fa9-b0bd-4c8bb661f85f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e173336f-ea77-4b2d-8780-72c7e931260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bd4ba3-ab28-4b95-a9bc-35cd11794a31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5509fd6c-c330-4d0b-adbd-1389be620b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5128b013-ef94-4184-8d36-e9f24948d949",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc6e84fe-ebf8-4d97-9fa4-16e4949d72cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bbdabe-a420-4189-bd65-7164c150be68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bdf540-5bf4-467d-8e19-e909d885db95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7f777b-3816-4c91-b81a-baef140a476d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f088b54a-98fb-46cb-b604-11596efdcccc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202da3eb-999c-4e48-a58e-9ac60eda3e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eeef988-6759-4ff0-a3f5-02fd77b7ea96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65540026-5860-40dc-b24b-7b67efac158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be83cbd4-353e-4005-bf0f-77eb10d9e03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d9460a2-e3df-4f00-becc-dcfd8f58d448",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55532256-dda7-4f7c-b6fd-a78fa5b2c19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee322f31-a6d7-466a-80c0-6b17a89bba57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba643cf-7975-4c22-bb15-9d8944214ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "28c00c94-bc82-4b78-81ca-7cdc6f4585c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd4ed3e-0bd8-470e-abb6-d309bab81533",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a7047c-998c-4f2a-bebd-9f23e7e3273d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2751a8-a2ec-4c30-b46a-1c721849d952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df11854-24df-4a42-86bf-174e3532bb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4a9a7e4-7808-4a8a-a14c-edb8af95c473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747bbffa-7f33-4310-9b32-2ae430579f02",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0364a9-0edd-410b-927d-7630a9032bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254b5c9a-aa6e-446d-8a0a-19defc5d6bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcae8e53-3e1d-40c5-b70e-9699b072c120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cb299881-5e92-465b-a556-a1d0bacf0d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90693a4-f6bc-4f0e-a29f-540f9b16e6b6",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58733137-bbac-4449-b065-df274106a6a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356b1475-e1d9-4c22-bc2d-ff69b3d473b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f54cc7-d1fb-43bf-9c53-c192a52a27e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b38924fc-f496-4760-8c3c-f6c927d27f17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c0af41-b269-441e-ad31-981f45fcd8a8",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dde9d1c-aa6c-485b-85ab-22caed2fbc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a47b28-298f-4772-abdd-c346b2b693f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb7b206-55f0-4347-95c6-b9b9cd6c0aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c18e42ed-8563-4e11-858f-056e9ee3bd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b75955a-868d-458f-a378-2c9fcf864e4d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b56840-c3ca-458e-9c03-6c2389393197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22050fb1-50c8-4e6c-996c-7967d8f7ef15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a49169-dc3f-47d7-816e-8a8d7d2eb883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e1528e8-7b8d-4e71-869d-96ccb7441c6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497ca32a-ed1d-4052-be3a-72aa885aed60",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ff1b9a-2b94-4030-b8ec-076eae30c578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cae8352-e87a-4bb0-9639-7685ff9ce4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "469bf0af-07c8-45b4-b5aa-673eb3e7019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca769537-e2a8-415f-a119-c2b6b0fdfedb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4723226-34c7-4b55-9863-45022485d54a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22a133eb-5172-49df-aac6-a93ad6b1b396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525ad975-17cf-4596-b153-2f7acd229d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c8e3c4-fc28-414b-ae2e-21e36f53117a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb17e06-d6ea-46d5-93e7-656b716b118d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd026b1-13ee-4436-9791-e2ebc15b8f1e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f5513ae-101b-4d61-a422-0a6627905b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7668fd54-ac22-4612-b46e-e3af7ef905d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71418bea-19b0-462f-9d22-f18e9636a315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "a8cce289-258c-4ff5-bd5a-e0e845109c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "def62762-d974-4bc2-8f00-516bae7202a5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19eb02b-1daa-4115-b9df-47e8a87e4b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8e213b-e74e-473e-b318-6af267e7204d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69c0d0f-896b-426c-949e-2c8040aaa8a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7847b66f-2083-461a-b868-0c599cec83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aa9b8dd-1781-4dde-ba7a-989f72fbc02f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b80909-7990-409e-ad60-b1e234a1ef1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce2a1ad-8111-4a89-b88a-0d2336311037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d579a64-8e87-499a-89d0-cc3e9e2642d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba0a62d4-0673-4d70-9039-09d09948be77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e2abf3-e10d-4158-8bf2-8cbf649ece6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b62c318-cb81-4ff3-8f22-6cfb8eb04e05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95557816-919f-4bbb-aae3-6f36161900a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b996975-068a-40f6-b277-90968ac77978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "218e3ae0-f512-4d35-9880-18be64ba0e7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "258a3cfc-05dd-4a11-89a8-c8575e053571",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd63444-588c-428f-b22f-d1a84d6cfc6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb6167d-e60b-4cc0-8858-ad4667d027eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187d4310-9653-426e-99d5-fa8b4ea77036",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "98e92f04-6b87-481e-8c59-46b9f3a3028f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9533d84-83b0-4af4-b1f9-9150435324e1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6884de13-11c6-4436-9c25-8eee45db4bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c341b66-e20a-4557-8896-5a22a934e041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039ff5f8-886b-40dd-a64f-3c90468c476d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "712c73d3-a54f-455a-b0bc-dba803be7ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6bbb527-049a-40ec-8e2b-3969e5fd1ad7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f762aecc-ffb9-4815-a1de-470bd62c13f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abbd11c7-a2aa-4a5a-914c-fd5a50e2710c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2184af-fb58-427d-9a97-5bd55b4a4c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8ffa19-2516-46ab-9ea5-51d6dd856f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce601f6-ac5d-43d0-8aed-a32667261cc8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a63b82-2785-44ce-9da4-d695776ea962",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d5538d-66bc-41c0-ae16-94f9029ee0df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1b0eb34-7546-44b8-a272-35ee8f5ded01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e2812c-c6ee-4aa9-85a4-ef49c9edfd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb3f1ba-69f9-438c-af82-8647bee118d2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0e6f05-faa3-41a0-ae32-8e0fdb2ffe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d98e901-2b93-4c1b-9b2b-2721aba9b6e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4f256c-ccf3-4af3-9df6-a24d72466a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b523e9af-57cc-4c9c-93a6-3d55545857ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d90f5421-16ba-4647-840a-fee3fcc7ec18",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bfe129-cdd7-4857-96ba-75ce2371d815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55119e98-2933-41bf-95c6-8172d5478b9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "358f2a90-384f-44e0-b9c9-e3e374a822e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "638ef120-05a2-4faa-8704-ee9fd07c4534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17e6424-29e8-4c4d-b0ec-76b1f626f009",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f028ea-0805-4ee8-b91f-2e6b67e90a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7812b63b-95de-40f9-a91d-589d91bdfb92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "392e2e26-bc4a-4568-8a54-116aa90565cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "99354773-97f6-4acf-9a76-c38404ab004f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097fa068-6f1d-4ff5-97a4-b1951f4881ba",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ad88f3-5d70-41c2-b22d-e0c7f08006ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d61a43f-650a-4640-b722-90ba2b4ca235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ae0be1-e59e-43a8-87a8-f40e8b1514f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd38c1e-12be-4f01-9924-e7a4fb9879eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae08c88-e679-4366-98bd-63e90a7b3a0b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa29f6aa-ad27-4891-b9f8-c0557058d359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be07239c-cecf-49fe-a59b-234eb7e6c525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaee44f1-44e7-462d-a7ce-4d69b829dc1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "60950256-120f-4c82-b4ec-8d8236134ee1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11df2faf-7225-4a0c-b6f1-5c0f7e1125f8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a38b011e-e634-482b-8965-df58a2780b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7544018-5643-4888-95dc-d1d1bd838def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65136c1-f7ff-4dd8-82ee-68764c962122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c664cf92-cd24-4752-b771-c583f1e8061b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbcbc7ce-b058-44e6-a067-58f768ffd5aa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f394af9-5644-4713-801e-8bb28d5c0e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e646180c-da82-4e15-ae79-9e37238b33f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02632b9-dc74-4d11-80cb-9619a537f588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c38068ca-609f-4852-b813-2e0f2ed9e5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6a69ab-9f70-4a47-bb6d-eb315520b4b9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "151c0f13-a7a4-4d07-9ec3-c1ec1a96eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39426b37-3892-4774-b4f1-f7dfdcd34418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b5464a-c993-4c52-af1f-9c8cb14855b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8dae2fc4-3b93-4d65-a4cb-9d9f291243c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59728ec9-c940-4c6e-a3ea-c6f256560fb3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34c5b9e-2472-42db-bc1a-31e1836a97cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc941372-eeea-49a9-b9b2-8829e873560a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3597aaee-de56-40b1-af8b-8792e4260d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e43969b-3154-4fed-a1fb-b24f6116d6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4cab32-1e8e-46be-9beb-999c956ad6ca",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1b125a7-c41b-49aa-9ab4-4e35f87d7d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf71dcb-0fcf-4798-8b81-d4dcadf9fe71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5ebbdd3-df6e-45dc-9d12-aba41226a1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60a2e956-1ecf-46c8-82d4-ccb8ba201478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3087ec54-310e-43a0-afcd-c7a2d02b75e4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66527701-ee07-4729-b6ca-4cf5a7020794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509b7a49-b8f5-4ef3-9216-3cf591ef3470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "234d633c-0e79-4d2e-bcc9-82e799de8bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "669d7908-7441-4be4-8f86-d94f8d818fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86dd14ed-0afe-46f4-9541-e1724e82e847",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a4cc199-66be-4d65-ac92-b7d1063222a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dc2f69-b77d-4131-a709-c645273da7f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50a60bb-7f12-4bf9-8903-ae36ca7c31e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd3a603-de01-45d9-8618-fe1562803ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b59394-b35f-439f-b8d8-4aca24c038d7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b227c9d-4365-4451-a2ff-5d4fdd1269d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9aa374a9-e202-4288-b845-85cbbc62afe6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e1362d-e728-49cf-a962-1707b123262a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f589bdf6-bc86-4bd1-880a-f3fd94e22d54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36bdfe2-0c72-43c1-a6c4-f62f65d304de",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fa170a-832c-4765-a2aa-1a34117c8988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725ae729-f76d-435a-81bc-7cf68e6d4d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "700219ca-eaf6-4027-ae2e-1caf001fa1ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16ca35e7-0f6d-4b24-ae01-f54e15cf03e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25455787-4b09-4254-b221-c2543658fb7e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5220100-f558-4f15-b968-986eb77293b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f57dc962-8543-442e-a0cb-ef6b86cdcbd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4d52d1-c06a-4a2a-8329-2332ed6b7cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b82b66e-e4e8-42a4-b94d-42391c3cabe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d235b7f-fdc1-473f-ae2f-aeadbd40c91e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51773cb-6e0d-482e-a589-3ed44fe8352b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2047125-d0a6-416d-8c84-bab53d78327c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6bcdf9-69aa-4954-925b-1bc2af973b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94fe9315-2b8b-48fc-8d39-efdf517b6d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b616dabe-215b-4f79-9d32-c765ab9d3368",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84da9957-fd16-40d6-8bc1-fe3fcbfd3818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345e8b43-6077-4063-b52f-e9f1286fe622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c90a978-5d1a-47b9-a069-0f1a5270de08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6553145c-016e-4c4b-84e8-be7de1769481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf20f47-9be5-46bd-9d90-b3aee26e72e4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd5c064-37d1-4d14-bb86-65f04968c165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22831771-a229-4df0-b058-5038dd255e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d9fac7-3674-41e9-ac2d-230b09a1a536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c487e8dc-a05c-4639-97b9-de06c867f68b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc9e8fa-35be-49aa-9e32-ceb78cd05702",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5dede2-71c9-4a32-8890-950c35ea621d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82262358-d562-45b1-9639-db30ad2159cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5c71b8-697b-4b15-ac67-e5c5f61d38ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d7daac-9571-4cb6-905e-d0faab4c8519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb231981-cadf-4026-9771-9aa572584641",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af1b83ad-7949-4ec0-9725-aebc00a355d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc6db32f-42b0-4ef5-b28e-9879c5b95f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dea3c9f3-9f26-4a05-89a7-8423b7280eeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0408e70a-8f4b-4a98-8a1c-45d749548dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520fe35e-abf1-4e41-8aa5-1f01561ce3a6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2511bc53-de4c-4a1e-87be-02c928cff233",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a198b1ee-ee7d-49e2-b086-71653e85c1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68a5eae-01bb-4dbc-8e2a-ffeb91c86434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a04467c0-2f42-4796-be2e-261827e8fcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10527033-52af-4909-9449-c29bf42a19f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1fa38e-e03a-49e6-8783-966883ee69bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81189fc0-c09a-47ae-8273-b369ba9a63be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1cc611-ccd5-4451-ba75-b63c653b9b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a464f658-60d0-4d47-adbb-dbab29b23425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44875c5-53a7-48bb-a82f-f97b06f1e0f4",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8115fe3d-c08e-4d0e-a5bd-81ba4898faad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136d1811-d36d-4892-9042-df13a24ce650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fdf7927-75fa-4a50-b488-da0b2fcd174f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1d0a56-2730-4a1a-9c61-bb6027bce686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9014ff6-356c-4783-a317-476d3bcca4fd",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d4721d-55dd-4b0e-ad23-44a0ec885e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6850e76e-91ed-40d2-a9d4-6ea828042539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e90de3-312e-4f60-8c4b-7feaeb9baa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "233909d0-83ac-442b-9df3-da363ecde145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc4a6e3-021e-48be-ac36-49ecf89f8dc9",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68e3ef5-7a87-40ca-aad7-89752a637db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d06c39d6-4163-4c34-9d52-182d5a41292d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81323200-69e0-4ca4-a58f-45290d5e5dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "262cd663-a9a6-4050-ba18-cb53f75ccde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32880d64-b7b5-4c39-bc6d-9da0a428a782",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51554b4c-1a7d-45ba-984c-79904c9c18a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f700a0f-5f2a-4753-a49c-10d38fbd449f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de3a3ae-8624-47c5-84c3-2b8f3516d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55329cb1-4cd0-4e29-b638-8233bfc9e633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cf6818-41fc-43fb-8998-7a7309958004",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30c697c-9197-4cab-b041-fa1fb513ae6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eaaeb2f-a7fe-481b-8f3c-f2b2f9467899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f266f32-b0db-4bee-97ca-cf6794b31b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2d98847-8384-475b-b61e-93a6b672fda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7b04d9d-84e0-444c-ba28-ab3beafc0351",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05241202-fdf1-4638-a47b-11dc9b501512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d689388-1d2f-4301-b304-352bdd083034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e52e6dd1-069d-4e96-83c2-bb16f7285248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1226cd24-6d59-4cb5-806e-82e34bda51d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c2aa3-c885-46d5-8409-d6d97018683b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a23614-a7db-4abd-8941-d802778c00ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ed69138e-1ff1-4524-bea6-45b2030a96d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6795eb8c-25cc-4b52-b97a-a60fd73ca917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6c127c-dd07-4f88-aa58-92c18a1e8c1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b002ffc1-625f-46a3-9371-372629381eab",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "88946058-9c2a-4c05-8d21-e9eba21ba3ee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db81ab63-4460-4c01-8830-8c0ae54bc0cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aeb49319-fb22-4e54-b335-afbce9cd5732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f0be1-6c2d-402f-84ed-428ef9514869",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "837236aa-45b8-47dd-b1f2-9506f24d0675"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "326e8159-c10a-4a8f-926c-ba4276f9dc71",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c4c024a-6bf0-4705-9f5b-2b66639cb72b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c8035d0-4a66-4d6f-9e23-5a64f1d6bfda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aef29ef2-a797-4730-93bd-b1cabdded60b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ee0fcd80-c4cf-4b85-8715-f28e7a931a0f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c51a5bd3-17a8-406d-8dad-995ae34e5d97"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e6e8bbf-56a3-4ba7-830c-09c92553f33c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "186f1279-7ffb-4e73-8303-3123a7df769f"
                }
              }
            ]
          },
          {
            "id": "2a140ed4-438c-4896-aeb2-b5c32643cac7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb686773-6415-4b99-95c9-4ca262120500",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "0f477f7b-18b8-499e-935c-cbfde85f46d9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66bca2d6-a4c0-4fdc-822f-76cc6793df39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2bdeda91-d2cc-4e2f-8cc2-0a5ded9af8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdd4ca1e-ca49-4a1f-8a41-e9b507da7f24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "210d92f2-969a-4731-99b4-195925efc563"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69ae34e3-2dcd-4c34-8ae4-1669a6444296",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a2ba2733-9c9f-4b44-85e6-a9953a8be915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eaf4db78-fcb0-4570-b378-be0675c1d7db"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a55ed4b8-18ee-45b4-8692-0878e79467f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2575df93-bc5e-4885-ac4e-38e5728d86c4"
                    }
                  }
                ]
              },
              {
                "id": "23e3ce87-ab59-49eb-8399-c83e070ed23d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49c69918-da92-4635-840d-3a473f206cad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64fc8893-e14e-4cb6-a260-edba68c9f707"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fca2f235-45b9-4e6d-9d53-49f343480080",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7376b9cf-b3fd-4794-8790-ec63f93c9c9a"
                    }
                  }
                ]
              },
              {
                "id": "f75b9a06-fb96-4a20-ba06-af2b96e3ef6d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46b34276-8e2d-428e-85da-9b6503c69f43",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "405c5532-01bf-4279-9a41-64f061141fdb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1c82c93-6b48-4754-b004-f27a2622f116",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ca4862fe-2332-4071-898a-b9de6c10ffc9"
                    }
                  }
                ]
              },
              {
                "id": "00a7f5da-cc17-41e4-8f5c-68f0daced64f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88581f96-1a4b-4243-b6dc-1c0bcd6ae6fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6ae586a-3a03-494a-bfee-bd8e01e35dca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0704a733-6e18-4c6b-9f1e-d992e9936c5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c0695645-f963-4ff8-a7ad-63606ce9d100"
                    }
                  }
                ]
              },
              {
                "id": "f5c8d697-44a3-4b23-9d3a-7c830aff1c17",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e91650d3-8074-4357-ac1f-5c4fae8f239a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f176446-2871-41d0-9989-f9d88daeefa1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "780fc111-b5cd-43bd-b87e-c4534dbbc00f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b7b06b15-1117-4b56-b5e3-78d087eb195b"
                    }
                  }
                ]
              },
              {
                "id": "3303eb1c-429e-45f0-8442-a95548f7efe3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8520327-4240-4c29-a45f-39bf1169e90f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8cb63cd3-a6b2-418c-b77a-e52e3e961c25"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "157b42b9-6911-4b86-be64-76f0b22a64a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "93bad42a-1ee9-4bb3-b66b-ed3999089861"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ff94e7c-d75e-4497-bc69-db88a4c0d6f9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39edac57-bc32-4950-a692-3e9acbf841cd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3556b4d-87fb-4ae9-be68-9f30bdb61888",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63b9b33a-f28c-40b9-988b-4dc757b3e00f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cda898f-c785-4f5b-89ca-e55f50eb3329",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "c22fdab0-b2d9-41f8-b618-95f95ae711c8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43607a24-efb7-4e04-adec-00d1ceb0a146",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fbb0bf5-5046-42d5-9c05-53e04a0f0084"
            }
          }
        ]
      },
      {
        "id": "640eb0b9-d031-4c8d-a418-390f848dc6bb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8a0cfb16-8f65-467e-a1a3-2aac8c7720cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f9c56dbf-2737-4f59-9437-e627ca48bf93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5ed4b701-e28a-4be3-a599-a22223cbdba3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d423e316-c53d-4f0b-a9f6-549ec1ccbce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a8cc804-5f74-44a6-a375-2faabd85c3d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bfa55b-8f37-4365-ba9f-ad400d81f224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1e4b12-6a86-4667-9f6d-360a344a3a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cff1cb4-6736-49d2-a627-cd099705864f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e0d8329-e80f-47c0-8ada-e57698467217",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7725a8e4-8b9d-43d5-953e-342c626b0198"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c4d4c8-d8fd-407f-b4ad-101c46aafe38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "28f77503-4b9b-440a-a89e-9c3a377a8852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023abf15-cbe2-47df-8385-85fb0bfb1b49",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f80bc1-17fe-4c72-ae03-99e69b2f3625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60304153-c5d0-4cd5-a6b6-39bcfdb84999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312fb655-4180-425c-9eb3-1df5bae8e62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba48e40-cfd6-473e-9499-b2204307fc12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67ff01e-a76d-4720-ab7a-59c21f619ed3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac252b3-f475-47a0-b9d4-5226b44f1b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77d7f2b-f838-420d-b95f-d9bce8973ac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fd627d7-e0b0-4496-a01d-e925a9950c5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8025afb5-8402-43f1-b4ea-01e5ab419323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c73e5e-5cab-431b-b343-336c8db56777",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ec1c34-3786-4cef-89db-d787fc6e2d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8105aa2f-01ef-4f82-97d8-783fd939f51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e931628-c98a-4b2c-b1a9-c677f57aef07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34e843a-f0fa-4817-98a8-978ad9263bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d6a5725-586e-4bc0-85ec-649f512bd711",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c049ef-8335-45d8-a561-d54e96d7a066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff515647-a1d4-42cf-ad06-5201473701e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b628d3-17c4-4079-a982-f491a337ec7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2144c0a-ea9c-4473-add1-e02e750be369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c5eb94b-0c51-4ddb-8a17-35e28232208e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5875bf2-3971-4257-a9ba-b0ea2412cb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f9a219c-2f55-4099-90d1-66c4fa8a673e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f03e05c-54af-4b75-a36b-a4df0fe3d97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d04fd9d0-6177-43d6-8e7b-f676b4ff39be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5240dd48-6f78-42c1-807d-5fa4b0886559",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cee2174-73d6-4813-9634-0e298801895f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a009348b-f8f2-4c9d-a0d4-e6164ebacdb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c7c901-e6e9-4676-adb4-3206f4519641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2920d81-c06a-4614-878c-21f0475e51d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286efb0b-a699-4e6b-846b-c08980d37ead",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c548a207-3379-4004-b51b-e8d11135fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91b1fc9d-243d-4ec3-907d-1877a9361029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f47048-5f30-47f7-88dd-d7e6f8569dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68968f23-3086-49e8-aa8e-203261bdc161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4bd292e-dfae-4f36-8ae9-c0a03b2c0260",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c11f228-a49f-41bb-8f94-cf5fc7c2fefd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bd05c7-a013-4e90-a430-3f8fe296fcce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2123baf-2295-4b0a-a1c6-e66306a44c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5babd965-b769-4442-8a88-78ddae0deb2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f139ab5f-7ff8-4636-8289-f57210921997",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75247cb-b031-4cad-a005-652eefd1b1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5542f4d-2783-450f-bb99-53a4b9a5ed02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105cd29a-3c62-4b2a-aec0-efb896108bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc65596-3595-4cc7-904e-b02e9a44e135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e986e1c-3868-40cc-99a4-70511e8f0219",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5784baa6-3561-4a46-96bf-f4bf572e225d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "981e7014-3613-4eea-b369-f33a27ac805b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c56a54-e9b4-4a5a-b38c-7accc1182076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "47bf7e9a-d66b-42b3-926c-4bfbbf9d08ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ad6bd6d-1ed7-41b3-8d05-564bd22f939d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce448549-3c5c-455d-b3ca-9c447af1eef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869cb5ab-8732-4a92-828e-130a93de610d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01b46a3f-5869-4f59-b42c-47c977159d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f884bed3-1df8-4d7c-89b8-bd706c231965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34cdfca1-e98e-408b-967a-e24950f5e5cf",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae17307-02c3-4940-b836-dbdafd03652c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef17697-2afe-46e4-b39e-a56ed80cb80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b3d67f6-322c-4472-b62c-9a46a0e77713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfa04e01-b81c-44bb-b97a-0b172cb45105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0aaa0199-78a6-471c-a5eb-43037137e5a3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c868243-e085-4992-9e28-3512b9a1500f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20480b55-3ea2-4f38-9bae-0b200dec69b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e37a9b-2750-4ff1-96bd-09f6fcdda3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d9bd23b-248b-487b-9f6d-b1eacdeaad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d753d1-b061-4144-a74b-8a2b1825aeb6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fd87aa-d22d-4869-9d06-3de82c807f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71bb333d-0a06-45a9-8e00-b991c686f373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c08dd9-1212-46ff-8741-75add506eb60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c280538-12b8-4836-99d0-aa4969feec4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc44438b-7739-4203-aa34-929e6ca922d7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e3cb7c-6e11-4f08-8faa-f9c5b2267ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28dd0733-0ad7-4668-b32b-a353b4a83a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c245afbb-25b7-4086-bdd7-6aa233ad8512",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a2d47bf-3bd1-4838-bd72-0f5870cc85fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dad3db2-bdc3-45b7-a56c-b13fb02c50d1",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83c534c-6e7b-4330-a57e-494ea47c996a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bab9a70-1b5f-4253-96b9-be525cfa8a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f6fd3a-df4b-4f87-8d27-ee074b9d9849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c888fa78-205f-4a71-9975-ba5c73b2919f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8985f99f-4a70-4670-898a-2ba37b47ccee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58968ba-933e-41a4-a5d2-5c0b6fc922a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475ff85d-3344-4192-a78b-ec717eebd5f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805d2e02-1a48-48c9-8ef1-846539151c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fa733eda-5ca3-4aab-87b6-489729f982c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97ba5ba-c1bc-4cfa-93e7-aec1b1a62b22",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca75b89c-89d0-4c2d-bf69-b30e9c015356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5888d0bf-0c42-45fd-9181-e66835e7afb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92d50fc3-7fa1-4bae-9e33-cd03542bc523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ae7530-b065-4435-9d11-efd7014c504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cd5b8b-8c64-4a7a-a80a-ba42bcf1ebdb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b7a9a01-9d8f-4a9d-989a-e7e7429a67c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a5ca15c-e6f8-4826-adf1-f14ef08dfa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a1a4b23-d005-461a-b1d8-31e3e5580c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f476a57c-0636-4f98-9f7e-16d80ff4b621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d10e10bd-cb33-4335-9010-adb3293afa0c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474deea8-5048-4ba8-b8d6-7949243bd027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5486dda-cf3b-4c8e-b708-ca56ed163332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c1197e-e85f-4cee-8f08-358700db733b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f496ee-c394-4e0b-9b98-121c3c04e8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01c776b-9c75-4fa0-a30a-c64ec382b372",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84148a27-33e2-4c17-8ea2-387c2bd9713d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541a8a69-0568-4af3-af81-1324b3cb56a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4d73db-f7cc-4592-b04b-0c616ea28a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "722428c5-3100-4ec7-b3f5-6eb8fd18bce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d34b050-dd96-41c0-90ea-809306af2522",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ad5b6-ae81-4115-8ea3-698424d89231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd09ede-d6fa-4443-ab7a-7fcfaa6d3eef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e71d84a-5a35-4f30-87a5-4af6a2fdc9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8828fa9-093a-47c6-87d8-65a9c64a8a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b974b0eb-8591-499c-a7ec-d6447ef844ff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a6e60-2d00-43bc-afd2-629487609ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496a5752-fcc9-44f3-a23b-5e423efd0968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf66570-229f-4720-805d-22191978c2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f2b5c4e-9823-4308-b2d3-7d3cb798a836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e95d9de-c890-4c1d-8315-dbf714a66b2d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42f3c2ba-c5d2-4a8f-b095-46637dc163b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a2ccbb-05c8-496d-b66d-7b1e4ca7f3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a28cb5d2-45a1-4b2f-9650-00ecfc29a273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66327b10-493a-414b-819b-c812c2348005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48098b38-a2c8-4c3f-9b98-ee8e6836d112",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf9afd09-0410-4311-aa5e-1e503ba13e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3c25edc-6fa9-4cbf-b0fa-a318f680fb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9a2a5f-3ccf-4820-af7e-666dbbe68be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d3a55d-83c5-4e0d-9f3e-9c2105af14c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7581aad-3c96-4578-bf95-65b2882bfbfc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e670f7ad-19a8-4f2c-a1f0-565a67889d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8416266c-0dba-47bb-a191-1c2186b5749c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdcc973f-99ef-47ca-a85e-867e87f51f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8eb9ce30-4a15-4940-b61d-915a864afbde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c813a4-d397-4da3-8e61-ecc1c78d3b26",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c19aeb-7dd2-40a4-b24b-1fe0bc874894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf56f86-4603-4642-ad06-4776bc2f20cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae1c08f-6e33-40c9-876f-165da57ad67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "723a899f-cba1-4d58-8341-e187612191a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b411ca4c-c822-4616-b005-71e81ff7bdbc",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a1b0cfb-6162-4d0b-b2f0-e6e9c64d9ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b428344-cd92-4b3b-a06a-64814a2fb17d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd652d65-9560-4479-b2b3-92ae66f59bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2bc9d2a-24be-4958-af14-616349563ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe66d5d-2027-4139-be48-537fc4bed6af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d052b61-51fc-4d7c-8787-dd2c70a696f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a39dfd82-6bbc-487a-849c-143e4212eae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37704e86-c331-4ecf-9e91-1cf87312b5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5fc6619-9d08-4104-9080-dcdbed87f97c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c2e9ce-a293-4e2c-896a-9c0e58ddb6e2",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ef7ec1-a566-41c1-aedf-16c01341c3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c0cffbc-04d0-43a0-9dc4-e902e0ea80f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43f72193-a6f0-458c-a1e9-79e5e4c17918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbb617f4-1a95-4e7d-8edb-a56305c80965"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ca980770-134f-41a2-b095-cad7c06af189",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5316c87a-4a0a-407e-9fee-fb4d79ff9880",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7b005b-26e9-4aea-a2a2-99466edacdda",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "088957e3-f27f-49dc-a1b3-b32c9d9de910"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07b10e17-5d2f-45b3-9912-abe1d63ae0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41a064e0-67d3-442c-a590-74b2a3416f90"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa804628-c3bf-4ca6-ac0a-146a9011f608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69f59ff8-a835-4742-b145-af8e17d355b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d212db2-094d-4dbb-a504-2dcec985e5c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d13d758-9817-44f5-8d6c-4f14b5b2b7f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2dc030f0-efc6-42fe-9a5d-068b36dee11d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "96e28aeb-e063-4989-a3cd-6f9466ad7802"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5a63311-f95a-4f11-9267-b6c30fc3b726",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1bdd351e-390f-44ee-8e01-88c55e40fd08"
            }
          }
        ]
      },
      {
        "id": "fec22838-e812-4615-95a8-af85277fc9fd",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3d6ce883-4590-451d-b532-e0db0def1b66",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a07d60e0-4284-4a50-ac67-b437524c3428",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9599819f-cbdb-4ead-947f-faaab848872d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ae8b5f-19d6-403d-88d6-af2226ef41ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c2534e-a866-4d7e-8cb5-7b0fe155a488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4919ec-b45a-4568-9c70-e9f7fd2cde08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64a4ac71-8258-41f9-b844-35edd83fe5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e89c1f-1c9e-4680-ac3b-8fd0ecf7c741",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1848770-b02a-4cc5-a491-75b3c69f84aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c05648c-28d1-48f6-a372-5530483d1359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcfdda4-95b2-4cce-b634-17a1b9f0b783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a8ae45-d3bb-43fe-9947-1a73f6699181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601c1fc4-e4e7-4bbd-8e2a-34300caa28da",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5a8d32-f621-4239-97c7-5c8a7690a94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e33c6e-84ff-452d-a0c0-3bb9e121c16c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c057876-6e26-4eec-9ba2-f3a5eed35881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a8f478a-3035-4474-bcc0-b79908722460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc5f8f6-9536-4927-a9e2-3492dc62d10e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a199597d-4f7b-4059-a793-3c9e3ba70e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f39f82f6-dcd6-480f-8ced-aa2a6e6c9a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6454285-c348-4936-b571-7c7ab16145a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "298f54c6-b17f-40fe-a090-fbea1322654d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e31865-a49c-4119-8645-ef771e2518b1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89930d8e-e365-4d3b-af5c-31c54a9da955",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e31df7-9d39-4d68-b2e9-aff0f05924c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2303ef-d9c9-4578-8bc0-d4bac8e6fe9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "32dd6447-3e5f-4ff5-9344-8e5ff3424cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a21b642-6876-42c5-85e4-85e690c278ea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e8cdc3-4f3c-49c2-9b7f-1775193240aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dccdf04c-7ab2-4205-9022-94a96f7b06b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1362d7-98d7-47b5-90fb-359e5acbb349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc122258-30c6-4422-aa1c-dddc83706a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1b6dae-6c35-45f1-b8e6-33447b385209",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15fa183-3521-4422-930e-20842431896d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbc62108-f601-4c50-9bef-bfbff2a3cab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "465b99a3-eb57-43a4-8878-8ab47255310f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8da4666-c55e-4735-b191-08cbddd5de83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db81ad0-6233-4e37-a3ec-b0332423b42a",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220b35fa-997a-4476-93ed-21f3013742d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bcf656-57fb-43a4-98ee-8d56e5d11bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abefcc18-1111-4768-aee0-6d368481598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97e1566a-df52-4e9e-8f8a-beea58e7cf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bf83f8-e1b7-4091-88eb-e5af53c64175",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c45305ad-22e3-4570-8d3a-0cb9136a2d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a018cb3-96aa-4586-bf26-bf555798147b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adb68f5-7e60-4e7b-9977-eb6471eef6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "29282c3d-1afe-4f07-9511-f5d547f32d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81e18aa-0af5-4d8d-a81b-c6d025423d0b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce21d8c-ec39-4196-b1f6-48a10394d133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c69aa32-81f0-46b9-8533-f90001303b20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2e2a43-1670-4f2a-b175-aefff5e9b120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e917a27-9588-4a75-abc2-9f303a09abb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b161c3ca-0f11-4c8b-97d1-4bb75d026458",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf6723b-c843-4513-bf18-cb033b697ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ea8ef18-8f3b-456a-bb28-406ada93ea94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b431bc25-967b-43e3-9760-4c671137e4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "335ad018-55a9-4e57-b37a-3fa4985f326e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e766c2-0034-4f30-aa0a-a7435440607b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2227e91c-ac18-4e45-9272-9428a77ab4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a666c8-6baf-4164-8ee1-ebc13726952a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c48adc-5da8-4629-9c3b-7a7438e0c1ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1674327f-cce0-45af-b924-2d3c663ea5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f157a01-97b8-4ccb-b077-52ebd1db5ac6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1fb7f-b3f7-45bd-8411-289140300a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f78b78-80b8-4d64-84d0-6c9187baf987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdef567-362f-491c-bf68-ca62b16f99a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4bfb5b-82b3-4f5f-b423-59bcf78aa159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f89b4ce-b752-4962-8b23-a578e6253a8e",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d9287a-ce76-4bd8-9833-016800a01243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359801b6-4a89-4546-a097-7c9177a103db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7b9420-327a-4a66-ac9d-94331f8623dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "596e85f3-eff7-4bd5-b4f2-a57be69cda4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6813a7e5-e1f1-49d0-873a-f824a39c096c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86113b31-9dd0-486c-adb8-728bacdade3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32eda06c-8a69-4dc0-b0b8-4c78f17606d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca39974-a385-49e6-9458-7207d411ef5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "15c3510d-edcc-44d1-82d9-9bf8269bcc1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356aad7c-9121-412c-90de-f568be0842a7",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7bd47c0-c67c-49cc-b498-31fbe5abef62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976954ae-39ab-4caa-a923-f4aef305db47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2503d46-3a0c-4aba-a736-5ed2a84ca222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "733033fe-e2fb-48e1-adc6-4d8d84636de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bdc5048-613c-477f-bc6a-42396f56d49c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efb40df-3d21-4af3-8aab-6c14cfc1c11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98bb6b90-5346-4e84-9f5c-3b3eb408873c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e1783f-3d3f-4a80-8e61-f9b3d3c616ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9545c28b-a01b-4619-9b91-40bc290c7306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c6560c-2cc5-4d5f-9d65-43b2d7a832a6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85049437-220a-495a-b8ff-530452a8718b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27aaba94-9eb5-4e6f-9fce-314145ae5926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5261b2-470f-4545-9cc0-564788f3ee6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8140e576-145a-42a5-b638-a4c13bc0a51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a08468-f62d-43df-8bcf-7b2c0decc460",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c9b466-81b0-4c93-b537-91057ac101c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c62312f-61e2-4cdf-8ab7-e6fa68d74754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37e3280-1068-47e5-9dc3-d78913b45e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "de74452d-9801-46bf-965c-738a93e35126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "741dcdf5-1bf1-4e0a-b007-1f7b0e381c30",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ab323a6-3204-4729-901a-73bb4315e612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a785975a-6420-4b41-9150-b4e16cf63e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9361a2f9-5e4b-4448-bb82-2364aa79dc07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ace3c90a-381f-4bbd-aa90-800f30bd5f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6196fb21-6c57-46b0-b185-119387db0393",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc736ff-725f-4494-928b-41448f7f6e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f5f000d-72b9-4474-ac75-8f207fed81bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ab685a-fc9b-4ea8-8868-1741c95ed96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4f62609-1960-4ab1-bd8f-c25b56b4e5f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9119203c-2f6b-4d72-ae7b-19d47a0c7750",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e544c05b-c002-43dd-92ff-d69b7f52263e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d94982e1-0a18-4a3e-84fc-790f83460f1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6caac7c4-9183-4618-89eb-f2896c4ad57b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "027de0c4-0927-4f82-aba3-2ec46b477041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16548a5-77a7-425d-8920-c1435d82b6f4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13512cb7-4f18-441c-bc06-31198583d390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f2062b1-f704-4297-86af-3c4a45fe66c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8809be7-d06f-4b32-a2cc-e7e81624a6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "23833395-0dd6-4390-9f6f-be09133bb026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f3503c-74d8-438e-a1b6-099e4cc16ef6",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965a444d-22c1-4a0d-a3b9-d753a0bb3686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8fe8d71-9fca-435a-a00a-7d5f572edab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c502f01-86ae-4c8a-b3cc-772e32aef1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "98665287-b177-43ec-b3e4-bd25a60165ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169e66a8-6839-49dc-ae44-34294ef28c63",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a830e812-4e27-4cb6-919e-69143bdcc1de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "641670a7-d711-4020-966b-1d0f80bce08a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a45bf427-2ca7-4e76-9dd4-4c74cab5e890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7a7c26-847f-46d0-a72c-7d525b58ea9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5837dc5-5718-4271-bc13-b736122a74de",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75b4066c-3213-45e3-bc17-9ff90474486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6093e3-95d8-40de-a93b-e2974cb27b36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebd7938-f137-438b-bc28-9cb9d748526d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c7d5253-45d1-42b9-aa05-0542b6da7ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89916a00-4577-400c-9c46-10c3f8f4b333",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e573056a-6589-4454-962b-52b023842627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137e4b04-bb39-478a-b780-103656512e39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ff1b3b-d1b3-4915-bd73-71acd8fbf4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9b1658-f269-4ab5-b280-916df5530c96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a868fd1a-fb5b-4e5b-b263-12bf21581fc9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c59f0b7b-7fca-4be8-a65b-60b079efc11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13726d18-222a-4347-a9eb-5559142c49a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb659afb-83e8-4a87-ac73-ea13bf6dbcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8796bc0-8504-4193-ba7d-aff95d3e8364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5fad579-cb5a-442e-b942-77c47c72a266",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e19b3743-a44f-4fef-98ea-7e5f66b8a14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7c2718-b3d2-407b-9e50-fd2d1aeb33e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0e31c65-59e1-4b98-8692-4ef5cc8cc779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9be01b3-f695-4ea9-bc4a-54d1ebf2445e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7581acb-899c-4c98-b4ff-b08084a9319d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f01535a-d5c8-4712-81cb-b1fd235b7a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e762538-7ec3-45c8-8e66-5aed5f89856c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71df3e7d-5722-4187-8f4c-8763e19833ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1faa2c41-bfa7-4369-9bea-687730de232b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80972bf9-f0ac-4c66-9bc6-bab6445afa76",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95375cf8-644b-4470-8ca8-6819f09a2276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8024a9d4-cb31-4676-b799-bed318ab332e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc523a1-49f0-4581-b9e6-380ebd812a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14faedc-5748-4371-9020-acb04910f65d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6754670-b479-47b2-b0fe-b9e4766c6e5b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c09e5c1-1a42-410a-b4f5-770d383046e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9316cfe5-1f4f-4a91-b456-75faa978977c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0809c441-9633-4938-a8c7-5f78240dcb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef6a212-c75a-4afc-a050-d726b0ebe67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21314a66-525e-40d7-98f1-9d2bce1d5724",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26265d61-9573-47f9-b26b-63972bff3a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f2adc4-54c8-4624-a02b-318d7b81a7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7fab44-90ce-41ae-a3d8-0e46a3bdf8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60539639-45d3-4efb-a458-124bb92d6e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a404d89-a1ad-43f5-a213-c7a340c187c0",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7615f76a-9046-4238-a1df-03025935075d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92e1b313-2e1a-417d-a64e-d6d63f5bdd5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0224f824-14ab-424a-9545-2c64251a2882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "445755a9-8bb3-430d-98cc-dbb37df9fcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f5fade-7407-4e03-bee3-01bc98ab7bf4",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f324cc1-f9ae-44f1-bdd8-69149b8428bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd432fa-daac-4a9d-be78-1a53c250474c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c5d5f4-c38c-4f93-9b86-cff685e85033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcfb5fca-3bc5-4cc6-b654-2f480b9ff040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a425fe0-306b-41db-969d-c83cb70be6de",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b892fd6-ccb3-4a2b-80f4-4f37dceed648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ca15956-5401-40c8-b2c4-e68ad19ce819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f2c8d7-4fe0-4dcd-aa32-b171f6a061da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6928dfc2-9d0a-4e86-b697-ecbe934ddcce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6837aa97-08d5-40f4-9bde-3db59eded5a4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1991b4d-1ef0-43dc-bda4-bcd95ad3ab74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71b65c40-08c3-4c23-a51a-315dfb07fc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ad5293-0609-44b3-85b2-ddc10f1475f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "452d7dc9-636f-48eb-a529-c9b947851459"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b0b563c7-1e54-4fed-b0f6-9207f2f97a30",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "597aace5-7fb9-4f1d-9d8e-3488c5a2bc35",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82294282-3549-4f2d-880e-b6bd9f7f57e0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "65fad878-9cc4-4b33-92b4-2db6794dd4b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "353578b6-9452-4539-b564-1f3847e2bf98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f0c8212-274b-49bf-85e0-2873901c02a5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be1053eb-6534-49de-8879-4437fe85d1a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b31ad382-dfe9-40e3-87b1-95b0b8653ded"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43fb813f-86d4-4a69-8b23-2a88bd2a8f3b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "794ae721-4ae2-4038-88dd-a6a93b8a90f6"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c3867ccc-5c06-4096-9d05-11b5e46dc38f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d8d9704d-0b3f-4f49-b369-22d94b947605"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7e029e01-a79f-44b7-879d-4e51bb1193d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5a1ff4c-c198-49f4-9510-2471ce0dedad"
            }
          }
        ]
      },
      {
        "id": "9b0281cc-ad90-492e-ae2a-2727d3b65626",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "cac7d0f5-742b-4492-ad9b-67bf095ccc46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e032531-c7e8-4baf-8e7d-b54c82792e06",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "264bc883-4c8d-4970-9dd0-f7cfbe53bf64",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95df92a0-6bb4-4edc-a24c-84c274eae48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29a7947-3930-4d5f-9ac3-bcc290832f84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1286714e-72e9-4719-b567-21ce3ee3cd62",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cedd11-5ffc-45fb-9149-7cca71f17d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0413a3fa-082f-493b-8ace-f22ef695e93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852ad09f-c844-4a9e-8830-7c4b2908b072",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75263371-dec0-4fcc-adcd-8f9c6b17c825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac690b20-0ff0-48b2-b6ec-598df951e717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c9b7d5-80b3-4ac6-9ad0-5987927e47b0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f60283a-8ad3-4689-b88f-b9ee70e6d065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2d3485-56ea-4d9b-9068-6fe9a78f0f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4712f22a-85e7-4a0c-be0a-0693ddbd91ba",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ccf428-d066-43c4-bc1b-7d2db36fd889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95d71e25-6dba-4f6d-82e6-5e1aad6f0ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7f50ed-4911-4345-95be-05aa54d4034a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4893d46e-a847-4e12-b399-282123682977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffedf48-511f-4d1c-8666-8e61a2b349cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78861bda-2974-416d-b6ef-e3865165993f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b09ccc-ef0c-4231-b769-c276134799fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0877affd-f36f-4169-a0da-3f58a23255d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87990f05-e7d2-4f63-810f-d32c03a024e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b1ac08-e4c1-44e5-be7b-3662eeab5e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0f992e-a87e-4bb4-9977-03c0d1baf19b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72dc0159-c6d0-44ce-aee4-04221cf1712a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de1cc9b6-5052-4834-9b01-266fb046afc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4511203d-2b93-4919-a89a-b020ad40d768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50df5c96-adf2-458f-b8c2-b769c03caf31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "905496e2-835d-4bed-bd66-7956e5cf3289",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9ebd67-3c2d-4a85-b511-d9172d845914",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b2eaa31-92f9-4f1a-b470-4e63b6692d5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2095b4ea-0f3c-4fa8-9233-e68b28c89241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d829bb1b-f240-4837-bfcc-71766e968a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e21114-9a79-4581-a88f-b0ea22c19cd0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf813cb-aa89-44ef-820a-1cf4ff98f008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea819fb1-0fa5-473b-b2db-bc9fb84df00a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fdb2c9-8648-4c15-b533-da7d02b352f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b39933-ffe6-46bb-bd02-55437192010a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1588da2-f643-4291-9da0-e23ad1d7bf74",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74521dd6-bd34-40be-84a6-7c77f86b32fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af2e1407-659e-4c68-9abf-2274c3b5692f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fe69a7f-a09e-4a00-b46d-773124443874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f53ad24-c99b-41f3-82ec-06731056e8d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0106ad-b7ca-45d0-85ba-eaae924aa897",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9191120f-575b-4018-83ca-aa04dd05a671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720bd997-b47c-41ac-939a-355d521b21f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d46b668-951d-4898-9e7a-df991015770f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613eb6d1-542e-4034-bc88-944763760043"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d79a7da-b61e-4a19-a11d-c1941f65a714",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b484f1fe-ccd6-47bf-88ed-4f046563f1fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d42b4a72-2c36-4ad6-acd7-d89ec7c9b408"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ba6f3cf-b118-499b-84f8-920d5f0cbbb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f9893e-ca00-4c6e-a9a8-50db6f006b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a1484b-a5f3-4fda-b2ab-59263ce0078c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ea3511-34d9-4596-a613-3538b4b2a87c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c351035b-9e57-41e9-812a-c903c948f7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ac146e-5a92-4683-bfed-142d6ebbd8a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28e3f88b-eb9b-49cd-90c7-5263bce8d103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aae44ec-2778-4423-bc47-a7b8e34a89ae",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cf5619-3534-42c7-8845-420987f9f8b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05314466-6782-41a1-9666-437f99413936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033c4f4c-cbac-4779-bfd3-0252a210bdaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0a55529-7354-4901-a832-1081b9b43653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d9ed8f-0997-4fdc-8833-48e7a01b7c0a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9908b9-80fb-4a60-a276-825053a894ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14aa342d-9a7d-4167-9c4d-b4acf8baddee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919d9235-b242-49e4-89e7-8868bf4c5065",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8f1301f-6cbc-47db-a078-249e64e8e0e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37cd0a3a-3319-4c81-8a09-49c05bdcf205",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63bc8b91-97bf-4684-b39f-d5aeeeb0fdf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1379335-834b-4d66-b9b7-08d33821046c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7620873-e60a-45a7-ac64-b76b2150352d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac1bdf5-5a3c-4c68-a20b-fa231d39682c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fec686-4303-4f19-ae2b-3e1e8d002f8c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d19696-ea1c-4a42-878b-1e049c30fca7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e9ff25-787d-4c6a-ac86-1b57effd88e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece10589-0661-41c7-a1c8-f800621dc4d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b0baa93-352c-42d0-95a6-f16fc772de69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7050833-2314-4c6d-a0c8-0ca52d397d8d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de2d15c3-1b99-4f65-98fb-6b7dac2734a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23cdd6c1-758b-4dbe-89aa-456a3eee6a1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624ae01b-ef6c-491a-bec0-bf26120561a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e5df0a-b52c-419b-9739-b2f5af350054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e342d97a-a6ff-4858-9c8f-f15c412f2061",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd5cf23-9bf5-448b-95f2-879f66149c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa82a6f-0fd4-4eae-8501-7eaecd61dccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd208e9c-514e-479c-aedb-5ff42830a922",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fbc248-3e06-478f-aed3-f17d0bcc0837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af0ade15-9c3c-4e60-b860-71f4e8ba8049",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc63f27b-51fd-4065-9849-0c7f2585422e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14e2fd8b-017c-447d-9394-3450814d13df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2843428e-1d04-486d-812a-e4a142289bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9db6a83-67ad-46cd-988b-6301804cddeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5b47401-0e5b-43e4-85f4-ebf87b4971bd",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0628715b-f436-4385-8e4d-bfdec4429409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf01839-e8f6-4ed5-9295-65f453321eee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98075f02-b847-43b9-b7f0-36902f8cd6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2e587fa-b38e-4dec-ad8b-1c70798c7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbff426-2d74-4770-a81b-b7492374491d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c92a838-5d8b-47ec-8f85-404666705f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6fedfe-d081-4a54-8a99-4cf011b19dd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da1008c5-dd91-4782-9ece-652ee695f022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb50e4a-d4dc-4653-bcb8-608b2546b642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21665ee-3a1a-4fcc-b8ac-30c1fa2dbcf1",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e09b917-29f8-4bea-9e70-8f4439380a75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16844076-552d-489f-aa1f-c3991166e5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4f3178-1464-4cb3-a74b-e65e419bd3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ba9abf8-edaf-46f5-922c-1ee9932cebca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491aa69d-51bf-4e64-b5ee-40ee8c596316",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3496063a-fec2-47ae-af7d-bdcd7146503b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42c06357-ad63-4a44-88ff-467c81361fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "887adc92-be35-46f4-a46f-848f7e07da74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00a15f88-92c3-4134-a610-831b0b713452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd2324b-6a8b-44e4-a3b0-2968e967a695",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f99115c9-c639-41a4-b965-bd6949339094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da230208-5d01-4c3b-a3cb-1a5ba9f75115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cf71a2-b27d-4a31-9efa-59ad7b392df0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8fc2ebd-03b9-4c08-acd5-f90b78084e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62660cb7-23ff-47dd-97c7-9ba1e5d5be11",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd508b29-4ba7-486b-a60a-8c9a51fc3b9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ad1f256-4a14-4457-ac9d-4406cc0efdaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1777b768-b43c-45dd-a0f8-459fbc3fe1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7004d384-5612-49b3-8186-66baeafa1578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e0aa8d4-7563-41ab-a9d2-1809829c80d4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb17677-a274-48cf-bf56-7f27a0170e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80068ecd-3a4f-4ee5-a64f-abacdd2459e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88631179-f5a8-4fbb-a879-06388070981c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e220ece-ba15-4b53-92bf-1085968793ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147a422f-4080-48b8-9e8b-c6a8c047e610",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14aaa7f0-da90-43bb-9e21-997cb0462210",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e4d694-c929-4427-a45f-3a27a70a1f9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40690e93-779b-4cf2-9fbf-8b4490cf93da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b97245-95dd-4345-8836-35c7e88a7890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7052a8ea-5f1b-4ff5-8f54-6c81b0ff42f7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f832a97-f598-4872-bb59-7aaae79774da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e4a5e47-0680-48c3-9fdc-3de64bd1935f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "030b4776-19e4-4c7f-82f6-258279d903d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12afa861-4806-409b-b2ec-8403ec2b4d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d224bad3-57fe-4b15-94d2-7b62349065d2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e38f18-2a8c-4b4c-b99b-da37f10b5b48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b396fc7-4e0b-453d-9c28-0f38b082c765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b71cb4-33d3-4d1b-82c5-100dd288109e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "954a03e8-3572-42a5-ae85-e24aca285570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4880ca29-dff9-47ea-ba14-52707002f45a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e72e86-5082-4bac-a7d5-d95dc269ee88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7332460d-af75-4427-acff-59e996cfc262"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b670f04a-370e-4795-9d36-92a848f9bd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "258deba3-b77a-4c06-aa9e-cdd584c33c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72af00e-fa0f-4572-8245-4816657795c8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0407c1ce-e0d3-4062-b73e-5173d6a5fc5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ebcc119-ca18-4894-a2ac-b15f1f9c69d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "264ab355-79d8-4c6d-b790-ab465cc2bb07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a5e0f8-0021-405c-ad02-a04202d34204"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20be2efa-84ce-4c62-ade7-7d84f2828b51",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99ba212-cd08-498c-9514-ad4f44129e0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "599fd949-19f6-4e85-b5c3-98dfe21be886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19695aac-181c-40fd-a926-4d55b833d69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b10f97-b4f8-4b26-9543-01ae7443771f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e05d82f3-04a6-4bb0-bf39-dcfbb48de814",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24311a5f-a842-4d03-abbd-0f7b09cdc487",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3885728-9dc0-47a1-86f1-8e5032a925d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16db6543-1605-4ec7-8195-b8c6540c73e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872d740a-fd8f-497f-9f5a-53c559b7da95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5528bc2-822b-4a1c-8b1d-3688319433d6",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa809928-79e1-4940-8109-a21b351da8fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b5b930-7804-4a7c-b3d5-01860ff9ab1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41ab6d5-8c34-48ad-83c6-2e6429baac24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10e2bd8-f738-4f7a-9896-2850fbc139fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947606d5-cfe3-48b3-a09d-9236e9bc3e4e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8cc1ab-35ea-4437-aafc-baf9200d3c52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c999e6-5eb1-4e05-b23d-edd0c99883a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2ef5ed-7d98-4c3e-b4a4-601ead61f406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab01ddb-5efd-423d-a561-10b1382ebec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30281ba-1d0b-4980-b7a4-6ca8708e9f3b",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e314bf8a-ffc6-4e7e-a679-f53710aa1cfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "834a0791-9c4b-4835-905f-c1c248cc44a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1da779-129f-4e54-88be-385fb3d342ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e57a610-7daa-4cce-a822-32fb5953f9eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90928e32-1d23-403d-90d0-c8040bf89b1f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8d32aa5-d269-443b-b8d2-bb9ae8eabe16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2162c9dc-addb-4b61-ba54-f8fd3431f422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b58fd6-46fb-4e33-a67c-eaaaf11c7da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad7fa1c4-8c8d-4d64-84ff-642293c457fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48482e55-4194-4182-ad93-a7c3ced22695",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f751c167-4cf5-4d52-9ab9-8fb35837edad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d61e722d-75ba-41aa-89e9-98b073276e6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83412c9-e169-498b-96ab-98576e49f795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f2902f-b002-4efa-9942-be034317bef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a454edf-e9c7-41fa-ae7d-1b926c8eac46",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c13cab2-26ae-4009-99bf-07400f680da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4b1391f-27d7-4c84-bd83-d9f7122c5f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "986e3e74-9699-4292-9e89-3278825cfa4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617c08c5-dd34-4b15-bf32-0668064e978a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7a39f57-b482-4ff4-83d7-eea619d8a802",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6118ea7f-cb80-4d06-b2b4-b176ba82f68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001f4ef4-6b42-4c1c-9e89-435981f34a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477d79c1-c47a-47c5-b3ad-6c398f402dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861b5970-c837-48bc-9769-841f215e2b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a78f8290-5df8-4f64-b1d5-2398049f5e39",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03db95d3-4349-43d9-8310-36e1521a14c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48504198-571c-4c82-987f-2861946a17ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a14edf2-dcb9-49de-8dc8-cad8523b7f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86f5125-5807-4da9-91c1-c064afe82c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5a9f03-44cb-432f-a954-7640cac16d66",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d0a8ad-9f1a-4b14-9f85-409d2f8d0f8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df9bca0-f124-42f0-9694-c3d8dd4eb3f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f88951-c0f7-4b61-ba09-387cb488333e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29bdbc5-ac3d-47cb-b954-b5ffc142a90d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2a5e3a-bc9f-40ff-9293-9e7c0e4bff1d",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3227afbb-611e-4655-a1cb-000232c8dcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37740362-c060-4dcc-b5fc-e02a697bbe2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c20e7a6-972f-4a36-b8bd-006c6e8ee546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ff5e19-a423-4c3f-81a5-276d09b66c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a9ef3d-b0c9-4958-bd0d-7488d38b717d",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a62ab06-235b-4eea-a7c5-8a392be33fb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9542218c-9c66-4bd3-bd39-6dcc7801ee2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9426f97d-461a-4b8f-88b4-9ff76e645661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acbb6a1e-eeea-4b4b-b207-d02db79c6404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282a758d-a877-463f-9460-578b9d124768",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddce6533-99f7-44a7-ac6c-2c1d5cfb9104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf8faac-5987-45df-aba6-b84186d7e045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e50961b-4315-485b-a5ac-05cf58e7f686",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4c46b46-1a0f-4ae6-8ae2-6ca0f68dcdc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600be996-c593-4cf1-8973-ac324071abf8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92336aba-99ac-4bcc-99e6-7545ac7acfda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5817cdd3-3ea0-4441-910d-15ca7665624f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07f06f49-8481-47f3-b930-b51957ed852b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f659c5ac-f043-4640-a557-7ae46ac92541"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c9360b-a71f-476f-8bba-11c785d616cf",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beda444-b12b-463c-9e31-ef6568409f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a35e8c7-1d8e-4371-abd0-cdb8491f23a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c791256b-1fce-49f0-9637-a99ea2d5d77c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b8152d4-a8e5-44d5-be20-a8c31874bd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb08569-8b82-4d80-94ff-eb2f45581bb9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702fb296-de61-4a97-ba77-cd0171bdd1ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0003fca-934c-4ec4-831a-3344c49b8403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0329ff5c-0756-4f5a-9e52-a1b01ff644df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7138d189-ee5f-43cf-bb25-176ea89edf24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17be738-8ace-4ced-b9d5-3f48edce00dc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4474d13e-ac5a-4f63-a19f-5f3fd9640fa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc1b98ab-0458-4d12-8f09-59a387cead48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4cda661-da2a-4708-9a90-289e95b12b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd72594-79e1-49bb-9979-130f7dec3782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ed6e2-8102-4174-a601-0f3e3cf7befb",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668472dd-aa0f-42c5-9b47-64c1fb4f4d92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cd3c55e-5c45-4be6-8670-4326b3773bdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6a12f2-0a2a-4d15-a748-8dc398c15355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85570d78-b03a-43bf-82a8-f4bec87ac5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d41b6e9-a058-4dea-93d3-853b2b007151",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da670be-f2b1-49a2-8aad-66c61b88b493",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "447e3865-c6f1-45ba-b8e1-143a7c409f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8f2b03-7279-42af-a1cb-5657f8b744ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "910e7ef8-9a82-4229-8855-ace92a9c947b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a0d028-2407-4cac-9cf4-2becb40aa0e3",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5024716c-da68-4dc7-ac23-5b213898ff58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c5f5998-d038-4b57-b81d-d15e77fff891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf4528e5-5089-4be1-b9f3-7acf5f35cc4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d51cd911-5459-4109-8911-a8df14aa8b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a249b0a-0fe2-4288-a84f-2baae3f77480",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37611ebf-be03-4a93-b57e-05644408632c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0879b8f3-62cd-468e-bb5e-a06934cc3842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736d4601-6056-4327-945c-7b87ab51b86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d6d7460-022a-4ed6-9199-0ba6260882a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a58630bc-0643-4b53-b039-da8a50c5bcda",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2512a74-3609-4879-b3ba-bed19a3bef02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "849f3dff-60f0-4367-81ee-244bd7279f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7d6ce1-a692-440d-a3a1-eae75f2acf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3386cfb0-e3e0-4e5d-87b1-4bd458191f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2cffca6-0494-44b0-8422-7ae19f7198d4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84880a57-ce8f-4beb-9cde-d4a8429e5a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e9cc22-d503-4402-a613-7e1a8b8b37db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4668c50f-565e-4422-bedb-06170654aece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8ece53-70c0-42de-927c-6b0441dc7642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bc8eda-1300-4e81-b27a-7a40ae4fff66",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7aa67e-4424-459f-a1d5-713db4fe3a44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf568bb-2d2d-4b4e-9b46-0790c06fe160"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e11788e-3d99-4bd7-870f-53f0836dfbc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a684d7d-0c67-46e3-8cbb-df6f440e9890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7177bd5e-1a79-4297-ade4-822b96ae0ee8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25df126f-3b08-4140-8c21-fc3de5231944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c2b236-6f1a-4d46-9f7e-632af1813b0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6ba92e-3ed7-46af-ae7e-4f5c4ce7e680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617965cb-a047-4c4e-b023-d34efaab1bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e9e32f-cc30-490c-8b5b-2ad2fcc8b42d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1acc5175-30f3-453f-b599-8ba495b711d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd5d48d-dc50-4010-81ef-4ccddc61ca24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca242c3-1bdc-4567-943e-4d246255f3ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249a174b-5c46-4ca1-b8ec-2251e3b162cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fdec95c-7b38-4ef6-9231-b27d053a0324",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9bf9fd8-202b-41d1-8a26-c6133663e0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb593dab-87c5-4abb-9d99-8d2341d6fed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e057a1be-70cf-4578-a8b0-222a31c37aab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db023227-a28a-4bf9-9911-8e679f9a4b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89f70ab-37e0-49a9-89c7-11d04cf23520",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e88807a9-3e99-4613-a53b-853eb1590cea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb773601-c64c-4907-8340-270436285e4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be991f30-cf0b-42f6-84a2-6b178267d546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "861fdd34-35e6-40c8-9f5a-ec3c23adc403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c811b08-2e8c-4f0b-938b-b5566c0e9867",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a98a55c-d989-46f3-9e3c-d95f8ab87a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc969f2-2e09-4b77-94e0-d32d527a11c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af75a826-6f7a-48c6-b613-c4dc7bbf6fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95fa05c4-003d-4a36-ba6d-b17e4a7df7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1f1708-86bc-4b3a-b09a-aefb8ffc9d81",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54e7889-3bb8-4f09-96f7-918cb53047e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bd533bf-e96d-469e-b2ba-705095b560c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "085721e2-638b-4443-a225-44c367a47239",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58ad6d98-1946-49a2-ba98-df741c284403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab47322d-5643-48b4-b719-18553544ed6b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b274d0c-660a-41c2-a1ff-c9916f76b38a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396d9da0-df01-4baa-b4ce-268c5841ea1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38b55343-f577-4fee-8537-c7e84c3da069",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e499ac51-e79f-4eb3-9b6e-22fd402da5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513b1fbd-ef00-486e-a67c-4fac3938f1d8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53fd6f9-e179-4ebb-88f8-0a06d3268007",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfaef07e-dc8a-4dfc-8a38-313e9ba33bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd4deae-fc62-4b07-bf90-786890208ddf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e801383a-fefb-4242-beb6-6407d45f0440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99d78b92-acfa-421c-88a9-01b80fd5ea46",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1616f37-3abd-4124-a307-f77174618f53",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2415d48-5813-458d-be8a-37931db7cceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87b3744-08b7-4e93-a8eb-c8bce8b6cfb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026f7b47-d13e-4c85-80c1-87b81c63d833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9dfd8d-791c-4a8b-a548-c13e04979a01",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6848f57-d5fb-423f-b448-edd54a736d00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "057b7921-d2e8-44f9-b3a4-6735a7a5254c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110e4762-50d8-42a3-81b2-443fbbc9789a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab1f114-c95c-40f2-b5c0-49373180645d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b52fd94-dd5f-462f-aaea-a3d2a6df67b1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1259ab7-8906-4a8a-9b4b-56e2dfed375a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b52b028c-479d-4f1e-a5a7-62e8b4e7768d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae1f387c-acaf-43d9-a6d7-ead507cefd95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0601d968-803f-4dcd-9005-bd76b9c61e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ce0cab-a758-4586-8868-c642b9701465",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d427fa18-d8b4-453a-baa9-b6663af87a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0e50bb-3a3c-4ddd-8690-dc95d55b8d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aed4b57-18b1-4812-8601-00b747ad26b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fffe1444-579c-40e9-9b68-b87dc05442c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c992eb21-5df3-4241-abd7-16626235132a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17828bda-2340-4847-86a1-c484a8a73139",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0817f557-88b0-4aa0-9d21-fa8478a3211d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3a7966-af1c-4baf-8791-ddfd76fa625b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae74c0f9-392b-493b-9c08-3d6711982ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91db6b93-9ebd-42a2-af74-019425355484",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380a1fae-e89f-45d5-8270-e008d3186854",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d51569f1-56d7-484a-b0fb-61e0eaa2bbef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe676c4-0b6f-4de4-a070-461eb0af3b46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f9f5cf4-3c06-4a7b-9fba-7e34b95bb364"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e93df8c-b196-46e2-a1a9-a90c0726d43d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "852c2ad0-932d-461e-8843-6fcb1785a9f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f08b9c56-2d4d-4b0c-baa3-1bd7ef0c20b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961873af-8f65-4d65-9693-c7b375109350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d751d0c7-4231-46ee-81cc-23a5e1621002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4636c4-fccf-46c0-b1a7-4c8ea5b4f7c0",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01cabc4c-3163-427c-a194-11f5ad9a9665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9928ee73-8027-4aac-9f6d-f719cf0ecb0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f616c31-487f-499c-9861-0b1cc2b702f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54363df-b850-4e28-a2f0-f71fe5b8b978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97402e9d-7332-47e8-a3d1-38ba75b94226",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5c5342-1ad2-41fe-b073-def6fabd4da0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22e42fd9-21e2-4945-a732-feddcbcc4dcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20bbd2b-abee-407a-bd90-7f964c13d2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c925ff09-4f06-4b5f-b126-40854300ed81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc313dd-fb56-4ece-b4d1-18d3b811501b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be8dc8b-75d5-4e52-901f-c8a80271e012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f681ec9-253d-429c-a1c4-bef24e106b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c572a19-6aa9-49d4-8d39-bc4115c1dc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35fe934e-dc6c-477c-8602-887c082e2305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cad14035-f212-4cd4-bdfb-10faab21bffc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065aa86c-e538-4bc1-b136-32b42288dc5a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58049c07-4092-41e3-8caf-93f329bbb470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d2867e-8700-4c33-a2d6-a5526c922756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5764855-acd4-4987-ae0d-de8a1fadd16a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636338db-2a04-44f5-b3b0-51373b8c3a92",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9ed686-102c-4f53-bb85-ccb163a47d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f6b27c-776e-472b-97df-e57b1cc184b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eabff879-b2aa-4292-80a7-150e0e45d531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c878a1a2-623f-4d99-ae3f-1fcea0cc363c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dcd94cf-39a6-4ef2-89ac-00fd399dd789",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ae03656-4122-4983-91c6-2257a8653309",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c72a977-bbef-472d-bb3c-0c884bfdc45e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "158dff5f-5575-4b39-b674-024554b0522c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4383c34-1e68-4552-b31e-993b6f22c2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d538cb3b-0b31-404b-80be-17ff3d8f18cc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4559755b-04f7-440d-a2f0-bf00e2d29e71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a00a1b2-a853-455a-a87f-39b58f716ff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "479126fb-352c-471b-b4ec-db3c3d935ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36202ee2-785f-4402-a3a7-406f0a251e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5252efc-88de-4caa-9cc2-c21edd96aab9",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c93bbee-51e9-4808-bb8a-9bdbc84f46c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2769627-c07a-489e-a57c-8721753a1d18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce599aff-044b-4a34-921e-3aaf4782342c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77ca3966-30bc-4ac7-953e-c762b74e5b83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c20178-bfbe-4d60-a0eb-fed69f58d98f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd986d1e-bfee-4863-bb1f-20ef572efd55",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b570aa6-12ab-4af4-9832-bdf2611ffb2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b094c24-36c8-4b1b-8930-49775e15598d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a383004-ac32-4341-ba29-fe73e69884e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14a7b420-f8cf-4c00-bd87-89f3d4ad89b8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c63a51-e9a6-4d5b-97d8-c0f6a77314b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4de00bde-ea35-4486-a106-61b8eba6a558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22e4281-ea49-4c5e-9e29-715469d3a4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34468287-9a03-4a18-b74e-df53adb607e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cb559a-6552-483d-986c-7152545fd958",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dd19af9-4454-45be-8d0b-3cb5c83ffe7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7165dcb2-e276-4920-8bc4-61afe5f4e7d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6ce40c-8aab-47eb-b42d-08ad80f68174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe475c7-7aa0-4718-9ea7-0c33df49cbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14abae09-e920-4619-912b-e29fe03e08ad",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8330a84-66f5-4e67-bda2-1966eebc152a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc3a907c-7217-4efa-88da-944a769fb6c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9921f677-4638-404e-8d13-a5e7b20ea114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162ea9f7-79de-4574-b7cf-15c7ebb19127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc385686-50a3-4a3a-9dda-426e9cbd12c8",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a525ab27-111d-4d11-9431-fbc81a9a11f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ba298cf-33e3-4e04-a4b0-45230c3841c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcaf6977-a7ba-473a-b301-bf2b7b3406d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5f544d9-ef92-4a2a-9a3f-b7962b2a6dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c77d11b-7abe-4b53-b0eb-8c53a2d7a5f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772278f9-8396-46aa-badb-af34a9bba6a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "396a381c-0439-4828-83e3-15bcd2293191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a713bc28-843e-4169-b24e-f51c9c7ffff4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3e5fd7-b8c1-4567-8de1-ccb92a70e86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9b03c4-3b7e-4160-9f17-f1fdcc2435d8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0056fa79-fb96-4baf-b3a4-43ee21bafcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02807b14-5375-4f8c-8031-9e76090fd38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c8e5d6e-f7a9-458a-baa1-3a52cab8c4a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21cc2c03-0b67-4ce5-8dd9-56ab47a0001e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a1bdeb-0ed5-406e-86ff-c19ffc6ea980",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561a6a5b-29e5-422c-9d07-ae10a3d95a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1759f545-b973-4c70-9d61-e2f22546851c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9e251d-6acb-4f69-89c1-5ef7f5130d48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c1856cc-7cab-4c3b-b035-1db2de837daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d9954b-21ce-442b-b14e-55240992b750",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1930dfd9-8b3c-48ad-85a6-149031bacbad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17e78885-d085-490e-99ed-937de734fa02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cc6682-0a89-4779-aa6b-1d50a4465509",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee63012-3026-4c9b-ab3d-21c38b5d438b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bf8081-3a9f-4ebc-90ec-55e5cef6c494",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc378bb0-f8f3-4691-a5f2-2fd3f02664eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08516f9-7c03-46eb-a997-8a1fa7c35867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09634e1-c371-429b-803a-a092590578bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc75af4b-3dfa-4bd0-a1b0-37df282c01e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8d4da4-7744-4b91-b9c4-fee57285fdfb",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "733eae84-b4d6-4802-8a72-97f0703fee51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259e9313-e04d-45bd-9dea-ba79fd2cfc1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4760d94b-2aca-4b22-ac00-f989827c0b98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325d7c02-5e6c-49d9-b0d4-b45753c0e8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a348aca2-12e9-405c-b87c-b1db10a99d04",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a8e6e6-01a8-43ae-a7dc-b2bdc38a0771",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dab869aa-4c05-4364-967e-e5abcd6f30b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ddf1b3-856d-4e4c-87de-788f4624bb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80432b48-15cd-4fe3-86aa-f4aa3479cb36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897cc91f-aea0-4aab-85ff-a36b80853964",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c1665c-0f7e-4ff7-9895-eb12f2ffdb85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd40f8a-e1c8-41f9-9b74-b1c13e90e459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd79dbc-5113-4fdf-8935-51bc23d8a616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233e31b4-8c98-4113-a70c-f21eb7a46640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e687c19d-0889-4640-97b9-7834ccf64132",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11799dd9-7920-46ec-9305-184e3626be2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2db1f27-3070-4bb0-83f0-daa478aa33e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3edd57-7a9d-4267-be4b-074da45c9f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c08de0-a032-4e88-999e-cac662bcdc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398c19e1-7405-4fca-9c30-b62f5ac65244",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "603ef458-dca7-4895-9016-eb534f018488",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9c95bea-c63b-4595-bd47-e78a4d979b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff6213c-a9d8-4151-ab73-739e848c7ec6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41396e2d-2a56-45b6-a60a-ab518cda6e8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "752d3172-6981-4591-afca-3a31515839aa",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec139f1-ff65-4b70-bcfb-a4b970b482fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f552da6-1387-4324-851f-824c1c5d37c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4f0af1-c559-4cc4-9fe8-fb6075eef399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcefc00b-59bb-4340-8c51-7e6fe3fd216a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2aeb435a-2b5b-4325-b6e8-23e1d98bfdbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b238ed78-78c4-421b-bd5e-a71afe80a93c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8ad8de6-0d87-4021-965a-c138ae3c5fb9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7ec65e16-b578-4771-8f7d-b16d7b793c8a"
                    }
                  }
                ]
              },
              {
                "id": "cc7c1984-2469-4018-bee9-eb1b544754b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c9787158-472b-4d7a-a17d-7b5cb7e22486",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e78ce9-85bf-44a3-9023-fb9b273dc6eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3958893f-0a32-412d-815a-3a78f5a8e518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e14c3a1-76b4-44d4-a5ad-7002d5a89d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86f3fb22-e9a4-41ea-8fc2-e88c6a051d98"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3c7bfb49-6b75-4fed-ba0e-ae85282a5cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "725c024e-35dd-4da2-86fc-8576f18643da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "99de78d7-a021-419e-bc9a-7f05d04b7a97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67a9c20f-ecee-4f84-ac2a-96c212ccbdec"
                    }
                  }
                ]
              },
              {
                "id": "19661d3d-3f2f-413f-85de-15ec50633f49",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6f1b32cb-831a-4172-9e9e-b657805f98a8",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02efbabc-a232-4a28-84ca-78a986fc76d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "08ec855e-8fdf-481d-af6c-050a3f5d02b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e59877-c3b5-4978-b289-e0601dca1dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05208afb-e946-4b3e-85ae-f781bc3b497d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7e2768c-5a88-4c8f-8dd2-75bf7a001048",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5a2cf6c9-4e58-4157-a8ee-ca87e744022c",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d1248a1e-05a4-4f13-8241-62e8774ddc0f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "48ce2ceb-2e11-4751-9c11-402cf9eb24a0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b284dec9-985e-4262-9173-72d1c40e33cd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef05fbfb-b6a6-40af-b7dc-e23a67cf7548"
                    }
                  }
                ]
              },
              {
                "id": "b4aa9e48-916c-42c5-b597-944ecc121322",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fc3bfed-f998-45b8-84f8-e88d7b26e9cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2eab26c6-c58e-464e-b60c-c37dfe3a9315"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "776d945a-62db-4fd8-b56d-f9a18e07ce5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc40ada4-4b30-42b4-8373-bc1a8fab1180"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99c4d293-e55e-4d39-bf2a-4e71aa0d69e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "93a322c9-e9d6-4af5-a801-318f756fde3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "561d96ca-ce36-47e6-a569-9f020eeff657",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b32471b3-3ca0-4f7e-8575-1b098d73b0ea"
            }
          }
        ]
      },
      {
        "id": "8361dcba-d4c4-4151-80d1-18693c6f1a0d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b2f99222-317b-411c-87e6-69eff9db209f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4038bec-ac7f-4247-8785-6e4b4e648c3d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f52a588-9b36-49d2-9db4-335e41adc939",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8fa85a-12ca-49da-8912-0f7bcf9ee3d2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7e865a91-c143-4efb-8870-a44f2bd8277d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b691e9b7-7117-4d66-acc3-823cdab7c1ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d69c4833-e4c6-4e74-ae93-72c966cb3659"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c22a9f9-8c65-4260-85fe-2a9ba7dbabc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a0ae716a-11fc-4e67-97c5-4576d373e34b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7343e08a-3741-4d3c-ae42-1fc3c9d016cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12557b5e-c178-45a4-ac94-c47a8c903603"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58ce77e6-9353-427e-8a9f-be0fb715cf48",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4f25fcbd-0853-47da-b99f-1baaae65e1e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b1179b9-04cf-4586-8b75-899083930bc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87a39d1d-98f9-492f-b34e-c9618441ea9d"
            }
          }
        ]
      },
      {
        "id": "080f1628-8576-47c6-9050-52673d1bd847",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0770b79a-b461-40cc-b908-4a1d2804ac18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "69b7ab41-1bec-4999-a2ce-ced50bbea63f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3761896d-87ee-423e-8193-1eb9f2caf16b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718d4562-d9ea-4729-a549-d1db4c5d980f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca499a12-75e3-48ae-9409-41b324598f60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b75e0df-0a20-4b6b-84d1-a90eee47b7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dac07d9f-3a01-4dff-9464-d3f7f0a97a00"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bddfcf7-352b-4723-8818-41b1a224c9e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1f4c0769-e269-40e7-8bde-d6b2f78e91c5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "019d664b-f8a1-4385-a197-d774d0e62f9f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6015555-c614-45b3-bb8e-797da8316ccf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "94b64457-59d7-4796-9dc6-597a56142151",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4b8f5299-8be2-42de-ba3c-500259dc44af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7419ca83-70e7-41bc-9eff-3017ee52ae3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37b24b3c-dbba-4132-b0b2-e5399f70fa51"
            }
          }
        ]
      },
      {
        "id": "01c46b4a-fb19-4d10-855a-f8aa5903fc3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "f01c0bda-8398-43b2-83f3-df5fc6e2e3e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1e69720-c746-489d-9b20-6edd69b60c05",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7e20391f-5a9c-4d12-944d-4936ffb65252",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88be5707-f786-46fc-8279-ec6e1bd4aee3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d439596d-66fc-4de4-914f-6e1d80133cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5188246d-c450-4bfe-b018-7161e41c2f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46784cd2-a25f-4b82-9dd4-70a32d4d764f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecbfbb6b-730a-4917-aeea-ac622cb53a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fb3ccbc-3790-49a3-98c8-79f56b243db3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b3c8e4e-04b2-4cbf-96e0-6800cc027561",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6940bd8f-a0a9-4e03-8b77-75e5a1572b9c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83f5241b-7b3a-4ab9-90b7-4eecd972fec6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d71e1f47-17b3-480f-867f-0b9aaaaa1255"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4e1426cd-c904-4ffa-a686-baf9ed926a89",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dd7c97b5-cff2-40af-a36f-7be9c953d20a"
            }
          }
        ]
      },
      {
        "id": "4a09995e-39ea-47c5-aa3d-aa8a26730819",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "69deef14-1508-4385-a555-d203eb699f91",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4fda85ce-e7a9-4f9e-948a-fa25da900fd8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3bf54571-a3f8-40d3-af8a-2db6abcb5c06",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "efa79056-3c6a-4ca2-b816-ab56a6fa44d4",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faf6e5c1-3ce0-4193-aaa8-6081001dca3a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 115.94385964912281,
      "responseMin": 9,
      "responseMax": 10059,
      "responseSd": 647.501040036432,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701218161474,
      "completed": 1701218203802
    },
    "executions": [
      {
        "id": "d776c6d0-e9b6-4982-9756-044d0ff4cf13",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0c8acdd7-0492-4c19-99bb-b33635e67c73",
          "httpRequestId": "3d3491ed-4ca4-444c-b0f2-9c5300006903"
        },
        "item": {
          "id": "d776c6d0-e9b6-4982-9756-044d0ff4cf13",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "4f5bbc0d-a1f2-42f8-82ff-b0e9fae3c311",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "173721b3-f217-4fb2-a3a3-ffab97bf20e4",
        "cursor": {
          "ref": "97d2f8a1-aeed-4eb2-b0ce-58abacf13600",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8120040a-888a-4b1f-ba68-dd925c904b38"
        },
        "item": {
          "id": "173721b3-f217-4fb2-a3a3-ffab97bf20e4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "410c1a5a-b8f4-4e77-94a6-cade0c152148",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "deceb27c-ded1-48d2-b695-211ea6e9a890",
        "cursor": {
          "ref": "09cdd1f8-66fd-4dc3-987b-19daf141f3de",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f8c48c92-cf23-4a39-8cdc-b45e7036638a"
        },
        "item": {
          "id": "deceb27c-ded1-48d2-b695-211ea6e9a890",
          "name": "did_json"
        },
        "response": {
          "id": "a3587322-9801-4900-9578-43a836e3f8f7",
          "status": "OK",
          "code": 200,
          "responseTime": 350,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f50bbf-8997-4efb-883f-06a06b1e167c",
        "cursor": {
          "ref": "d58d8277-f8ca-4ace-a63f-a2bbc84c452a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2640dc6-f9f3-4d43-9b47-4ba10c6151c9"
        },
        "item": {
          "id": "39f50bbf-8997-4efb-883f-06a06b1e167c",
          "name": "did:invalid"
        },
        "response": {
          "id": "02b3eb46-e876-407a-87ed-a266185e6fe3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 895,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f50bbf-8997-4efb-883f-06a06b1e167c",
        "cursor": {
          "ref": "d58d8277-f8ca-4ace-a63f-a2bbc84c452a",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b2640dc6-f9f3-4d43-9b47-4ba10c6151c9"
        },
        "item": {
          "id": "39f50bbf-8997-4efb-883f-06a06b1e167c",
          "name": "did:invalid"
        },
        "response": {
          "id": "02b3eb46-e876-407a-87ed-a266185e6fe3",
          "status": "Not Found",
          "code": 404,
          "responseTime": 895,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797257b6-5243-4e73-a1d9-ca7d6713ac7f",
        "cursor": {
          "ref": "bd1d54d7-33c1-4784-8317-40c4b62c48f5",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ba2ac078-b3ca-4032-a3fc-d0eebdca6e05"
        },
        "item": {
          "id": "797257b6-5243-4e73-a1d9-ca7d6713ac7f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "cb6aa900-4bd4-4d31-a75c-a1e4a72289a1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 828,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af768690-482b-4101-8370-ef7d53030b63",
        "cursor": {
          "ref": "dc877876-eb1c-4c54-9380-6d241dd9ca98",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "13610202-a2f5-4ada-a49a-93a7515233e5"
        },
        "item": {
          "id": "af768690-482b-4101-8370-ef7d53030b63",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98b4e09b-c981-4a6f-84c7-1ab61e98c535",
          "status": "Not Found",
          "code": 404,
          "responseTime": 44,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f2a534-7d5e-4b9b-b82a-a40583c53a6a",
        "cursor": {
          "ref": "902c6e22-1101-40ea-ad71-4f3f9e299578",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2d486b8a-b06f-4c59-abfd-896dbd6f7016"
        },
        "item": {
          "id": "17f2a534-7d5e-4b9b-b82a-a40583c53a6a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b9d40752-0644-4d86-af33-c40b7c72c210",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bddba329-fd2c-49c0-acca-117f466f645b",
        "cursor": {
          "ref": "3752b358-c5c1-4f46-9309-d56fa801cee5",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "09f16ab7-c9e2-4506-847b-f0f37a27a06a"
        },
        "item": {
          "id": "bddba329-fd2c-49c0-acca-117f466f645b",
          "name": "identifiers"
        },
        "response": {
          "id": "2e8b5475-5a44-4554-930d-488871dd1ca2",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdd5b72-dcde-4209-a981-9fc84da17a76",
        "cursor": {
          "ref": "36a6d538-b2bf-4cfb-b71c-187f1bf97eac",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ed1a2381-9668-4d02-908e-68c2b99512f1"
        },
        "item": {
          "id": "8fdd5b72-dcde-4209-a981-9fc84da17a76",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "24317d87-24b5-4233-84fc-8f2dc4fd6abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc226e15-2e59-485d-8b19-f20952f20990",
        "cursor": {
          "ref": "fa9cf70d-ee60-4128-88db-c02d4dd63e77",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7b02cac1-0d13-444f-9392-99d8bcd78a3e"
        },
        "item": {
          "id": "cc226e15-2e59-485d-8b19-f20952f20990",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aa4833c8-802c-4bd1-8e1a-786d15a2f4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c088aae-d761-4e37-977b-876a32a4c40b",
        "cursor": {
          "ref": "c7a32e82-d847-40af-961a-28b8d2e3c51b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "f50dc62e-8164-4279-b270-56a9a19876eb"
        },
        "item": {
          "id": "1c088aae-d761-4e37-977b-876a32a4c40b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1169f129-5893-48e2-9ce4-04f001bb64f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12acc4f-18e4-4157-8f2d-403ac1bac21e",
        "cursor": {
          "ref": "71b7582b-27d8-4c7f-b6a1-e83697b3f50c",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d5411c09-c149-4ecf-8cd6-c51d4177488c"
        },
        "item": {
          "id": "e12acc4f-18e4-4157-8f2d-403ac1bac21e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "c57379a4-72b3-4879-ba9d-30960a152ece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f9bfcf-e026-4d40-99aa-1c84ce7f8d8e",
        "cursor": {
          "ref": "2c937bd8-05a9-4ee8-8a96-86f9fa411198",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4b7bea84-0bc1-483c-8381-835a2c85b714"
        },
        "item": {
          "id": "d3f9bfcf-e026-4d40-99aa-1c84ce7f8d8e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c02f984f-6dcc-4867-b874-0dcd62ab91ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aa143ec-5223-4cd0-a211-193fa4c85e8b",
        "cursor": {
          "ref": "de1495c7-00ca-4a3f-bf23-04ca61af7697",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "851cf464-796b-4447-ab5b-8df7229e1e84"
        },
        "item": {
          "id": "6aa143ec-5223-4cd0-a211-193fa4c85e8b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "e13cc568-2de9-44ee-8837-f8bfb0e163b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708aae01-6e77-4d32-98f3-ccea5de66217",
        "cursor": {
          "ref": "bfe0e581-1d76-43c9-bd5e-99f090ed88d9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "57173f46-2519-46ee-942b-9de9a0c4b25f"
        },
        "item": {
          "id": "708aae01-6e77-4d32-98f3-ccea5de66217",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "69608398-5ec4-4c45-a4e7-7333c188221d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b57e88-fda2-4192-8024-57d6e05e18f0",
        "cursor": {
          "ref": "85c3e247-7562-4e54-ac3b-07e134e24055",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "e4260ab1-c99a-4d1b-9854-eca32d108993"
        },
        "item": {
          "id": "34b57e88-fda2-4192-8024-57d6e05e18f0",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d4494f92-e94e-4606-8e80-ca8deecd41d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c3b0eb-2f74-4852-a9fd-d0a8289feacb",
        "cursor": {
          "ref": "75da9d6b-7a39-4463-8941-693137409f83",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "7878cedd-94c9-45f5-8a33-d693c7a8fee9"
        },
        "item": {
          "id": "a9c3b0eb-2f74-4852-a9fd-d0a8289feacb",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "051928e3-902a-49af-81b4-718cd1b45d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c56c8d6-b806-4cd1-add2-56f77ad80857",
        "cursor": {
          "ref": "5f07816b-33d6-4856-a46e-49b46cc400ba",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "87c9c528-bce0-4d49-8e1c-a3e10cafae97"
        },
        "item": {
          "id": "3c56c8d6-b806-4cd1-add2-56f77ad80857",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "9243bfb0-98c0-46a1-9bea-258547a9eaa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c6b238-8ab6-42b9-b68f-e36f7147083f",
        "cursor": {
          "ref": "aa40e23c-7cd4-44e3-a1b0-436db1406b8b",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "ea3df326-9af8-484f-b07e-047297ae306d"
        },
        "item": {
          "id": "28c6b238-8ab6-42b9-b68f-e36f7147083f",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "7c2cba88-658e-4e72-84d2-af608491631b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e102e143-4cc6-4235-887f-b432c2994a21",
        "cursor": {
          "ref": "5e2ee433-bf3f-4292-bab6-96e5cf18adee",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9a56b8a7-e4b3-480a-b56f-14222be440ff"
        },
        "item": {
          "id": "e102e143-4cc6-4235-887f-b432c2994a21",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a7a18595-638e-478b-93d1-fd2971ab0abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ce017e8-64f4-45a3-bc1c-4ddebb6c96c9",
        "cursor": {
          "ref": "8b13064f-88ca-4ce3-9fb3-4b13cced8258",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "685b0c32-4c2e-4e5e-8d0e-b4b2a578d2df"
        },
        "item": {
          "id": "0ce017e8-64f4-45a3-bc1c-4ddebb6c96c9",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ceba29e9-9290-4f55-999e-9c1c7dfc0d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8e4fd5-05dc-4327-9cfe-cde0001f61e3",
        "cursor": {
          "ref": "f7bd8edd-ff47-4408-8cdd-e6ef02c4d5d8",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f2918bae-275e-405e-8c71-4fdfd5c86eb6"
        },
        "item": {
          "id": "3a8e4fd5-05dc-4327-9cfe-cde0001f61e3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "79958512-b7fd-4b3b-9f2e-15d9beec582c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73aee14d-981b-44dc-9e22-7786106b622f",
        "cursor": {
          "ref": "1d24d1aa-51df-4ece-866e-99bc541595fe",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "20d3b3c0-8d75-4082-a7a1-e255607f7c09"
        },
        "item": {
          "id": "73aee14d-981b-44dc-9e22-7786106b622f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "05788949-b41a-438a-8228-bba243ac2c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3011b898-780f-4ffb-9033-d9d7c4818043",
        "cursor": {
          "ref": "e8822e79-8859-4c62-8526-5a33193ea5e7",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c159721a-3381-4629-9058-3fd64a925055"
        },
        "item": {
          "id": "3011b898-780f-4ffb-9033-d9d7c4818043",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "12df9da9-27e1-4b09-8864-0ce66518d866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "165f5dbc-d787-4218-8467-c06790b2ec3b",
        "cursor": {
          "ref": "1ac4f0f9-4dcf-4ae8-86fb-72ab7ab1bbb2",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "d2696cee-8b8a-42a3-85ca-0d3f9d416112"
        },
        "item": {
          "id": "165f5dbc-d787-4218-8467-c06790b2ec3b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "41fe1475-b0aa-457e-b9d7-1a63aea5d631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3f8ea7-4d40-48d1-a96d-b570b7de8ea8",
        "cursor": {
          "ref": "3c49ec82-a3f6-4cbb-8b6c-5a211353ecd0",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1f9b8474-a0f7-4193-a592-e5172d4281d1"
        },
        "item": {
          "id": "ed3f8ea7-4d40-48d1-a96d-b570b7de8ea8",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ea28077a-625c-488c-9399-2037b7ba23a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34351696-e981-4ec8-964e-aa6915747954",
        "cursor": {
          "ref": "6aaabcc7-9e07-4b2f-8909-bc5c3b2eb39f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "356a9dd4-4985-441b-9f71-c4b67437d2a2"
        },
        "item": {
          "id": "34351696-e981-4ec8-964e-aa6915747954",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d6afdd3e-2500-4dcb-9cfc-225f3c9c10f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4077edc8-c7e0-4c0e-b88c-311793e23114",
        "cursor": {
          "ref": "bfc8e42e-498d-460c-b070-504370b46025",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "af4f0994-31f5-4bba-a48d-0580b3fc51fb"
        },
        "item": {
          "id": "4077edc8-c7e0-4c0e-b88c-311793e23114",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "11446279-cfe7-499a-a11b-378c58cdc751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b571173e-7fce-4b01-af36-3e0eec3088be",
        "cursor": {
          "ref": "95b5ee2e-a1b1-4fa6-9d45-5f2e6ca39bb2",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e43f0503-4a09-4e37-b958-1009df85c445"
        },
        "item": {
          "id": "b571173e-7fce-4b01-af36-3e0eec3088be",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c44d8e5-d302-4b58-96db-1c405f0eb55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9110fb2f-c4cb-4679-8ecb-a02d1a7757a9",
        "cursor": {
          "ref": "1afacc72-64fb-4f80-bc6b-8df609efb220",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "511f219c-5c69-4b48-84cf-17be85e1a010"
        },
        "item": {
          "id": "9110fb2f-c4cb-4679-8ecb-a02d1a7757a9",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "da756f70-9ce5-4d28-83ef-f077ceaa8f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c484c72-698e-4239-90e8-1e3b3761a6e8",
        "cursor": {
          "ref": "17d450f7-56ab-4cd3-8344-3ecfcb58ab0c",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "35f69bef-30a2-4b6b-9e3a-137416cfdf93"
        },
        "item": {
          "id": "5c484c72-698e-4239-90e8-1e3b3761a6e8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7457b690-aee8-4739-b7d9-d3accaffcf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2028f8-aaa2-4c0e-b0ee-d4f7cb6bca52",
        "cursor": {
          "ref": "eb4120f0-7463-4a3e-bdbd-5143314f2039",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "534e5aef-90b1-4e53-bb5d-af7187a2b531"
        },
        "item": {
          "id": "0c2028f8-aaa2-4c0e-b0ee-d4f7cb6bca52",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f70d7f7b-683d-49ed-8cd4-a0201dc60037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9be36f-0057-4d08-a6cb-e74cf981c93e",
        "cursor": {
          "ref": "19c468a4-339c-435b-bdb5-bedaedb9bd24",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6d15d33a-c613-44d2-9773-3e947dab6a62"
        },
        "item": {
          "id": "9a9be36f-0057-4d08-a6cb-e74cf981c93e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a3ecfe2d-1764-4bdf-a42a-8a7f904a66da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb036fe-e2f3-4e81-8961-d3899b473bbd",
        "cursor": {
          "ref": "9828503e-397a-4a13-a0ce-16729d9dd0dd",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e25c856e-fd7b-493c-8752-70eb8b8ecdd0"
        },
        "item": {
          "id": "3cb036fe-e2f3-4e81-8961-d3899b473bbd",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5be066f7-c460-45e1-9a08-7e034967cf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2057bd2-0f55-42cb-b0a3-8a1d60fb5011",
        "cursor": {
          "ref": "f672b280-6a62-4960-bbe2-b8d1f9b40c4b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bc780260-99bc-4988-b2c8-9c6d94640be3"
        },
        "item": {
          "id": "d2057bd2-0f55-42cb-b0a3-8a1d60fb5011",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "edf6bdea-457d-4b85-9909-5ebcfdb40e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6cb5be-860f-464b-8d46-0d5f74265226",
        "cursor": {
          "ref": "c99d6120-b7f7-4a2f-b10d-9a02d2c8965a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "27b949cd-c801-4b6f-9125-7dea55163d56"
        },
        "item": {
          "id": "bd6cb5be-860f-464b-8d46-0d5f74265226",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d61839ab-ebb1-4056-932a-12cc101b1ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2a3136-3b3d-4303-9c1f-b5e8c373a764",
        "cursor": {
          "ref": "1b808f95-6343-4788-826a-0a2b7e510bdf",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "6d74a4bc-8ba5-4afb-9710-dfede4ede8f8"
        },
        "item": {
          "id": "db2a3136-3b3d-4303-9c1f-b5e8c373a764",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2157f6f8-8559-461b-bad0-f6efb5cb636c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a026f9c0-f46b-4c8f-a5d7-b86d729d9c53",
        "cursor": {
          "ref": "9f857654-ffcb-4eb9-ae07-ac0fe37599c5",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "101107fb-33f3-4cc9-9979-23afe509a0e0"
        },
        "item": {
          "id": "a026f9c0-f46b-4c8f-a5d7-b86d729d9c53",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d443905f-82f9-43e7-a9bd-a827e99ee8d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b49a7d-ae5d-432a-8fec-27d4f65ea0aa",
        "cursor": {
          "ref": "617cd704-c20f-4d47-85f6-57d4403241a0",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "482ff3e6-cdc5-4f6e-b334-1e1552e4dd1f"
        },
        "item": {
          "id": "a9b49a7d-ae5d-432a-8fec-27d4f65ea0aa",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "61dd80bb-f1b0-4002-8427-ceb7a15df55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5af70557-d36d-41b3-8d75-8cb8f66d4425",
        "cursor": {
          "ref": "1b3de07b-a666-434e-9134-58e42c24900a",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7a457791-bd3d-4c46-9fb2-5bc322cf64d6"
        },
        "item": {
          "id": "5af70557-d36d-41b3-8d75-8cb8f66d4425",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a16930f2-ab5b-4db7-a6fd-c53907d2e5a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "926c86e1-08e1-47c7-a19f-7aeb84b72559",
        "cursor": {
          "ref": "dc8e2d2d-f13c-42b9-b4ae-45cf9d3c2d0f",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ab2af048-c2b1-470b-a98d-7f810a0ce4ba"
        },
        "item": {
          "id": "926c86e1-08e1-47c7-a19f-7aeb84b72559",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "e86252ae-1ae9-4510-8bf7-7508b128561d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96703c50-11bc-430d-8eb7-29f93b7e79af",
        "cursor": {
          "ref": "e463b906-4b99-4561-8562-3d8db1cbe4f7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a5d2df6b-3247-4dbd-b1c1-eb6bb0380a99"
        },
        "item": {
          "id": "96703c50-11bc-430d-8eb7-29f93b7e79af",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d8940fbf-f5a3-4dee-b08a-282a18aea7d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63ccc78-13f4-4e7c-81ce-d2ab1efac0b1",
        "cursor": {
          "ref": "2c2148d0-c41f-4662-86d4-dfb1c56f6a36",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "434333ee-6477-4fd9-9270-d7682c4e4bb9"
        },
        "item": {
          "id": "a63ccc78-13f4-4e7c-81ce-d2ab1efac0b1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9a6ef1b0-ba22-41c4-9fd7-2108f6183f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9ca38f-2c0b-48e7-9ceb-6f5b0a9ba843",
        "cursor": {
          "ref": "27c667e5-b963-417f-93e2-d5db97b41a4d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b5e62d4a-d344-4639-ae91-a789b3641795"
        },
        "item": {
          "id": "6d9ca38f-2c0b-48e7-9ceb-6f5b0a9ba843",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "7e888aa7-4cad-4859-b2ec-30c5a86cf2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f555f9ca-a994-4b4c-b815-c93f229adf75",
        "cursor": {
          "ref": "7a3dc120-7400-43ea-9ec7-35afc2b5ddd8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "27ecfb96-963c-41ec-84c3-e66aeb4e74b1"
        },
        "item": {
          "id": "f555f9ca-a994-4b4c-b815-c93f229adf75",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "644e5990-dad9-48e3-88f4-a47f23a52d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b87d888-fa94-4c51-b99f-3af815eb0c78",
        "cursor": {
          "ref": "6ca0f705-a2e7-4c63-8bb5-63bb30dbe861",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f00bb8de-14e1-407e-bf63-2f8c132ef01d"
        },
        "item": {
          "id": "5b87d888-fa94-4c51-b99f-3af815eb0c78",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "96b7675b-2075-4bd7-a490-4d46434b6cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2df0f7-7991-44d2-86e8-7358130ddff3",
        "cursor": {
          "ref": "dacc63c4-89f0-4722-95b9-1cdae19eca2b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "06a46faa-c85e-4448-b97a-995cf82fff36"
        },
        "item": {
          "id": "ce2df0f7-7991-44d2-86e8-7358130ddff3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "7e2862e5-be67-45dc-a7ca-3212b97b166b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c269950a-bd63-4d93-94ee-92e8b75a4d57",
        "cursor": {
          "ref": "a57f3acb-263d-4343-bcac-fc62c3edab07",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4d029445-3f3b-40d9-a8ce-c39316efe7ad"
        },
        "item": {
          "id": "c269950a-bd63-4d93-94ee-92e8b75a4d57",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4a0b5e9-8cda-4725-ae3d-55c561cdf5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be279699-498a-4a16-808f-6f515e2a9eea",
        "cursor": {
          "ref": "40baf4d4-6544-435d-aaeb-f046b89ddb8b",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "83ec2d21-5027-4157-b99b-4c5e8870e85f"
        },
        "item": {
          "id": "be279699-498a-4a16-808f-6f515e2a9eea",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "67f6eb59-71c7-4c27-a91d-a84dbaebf665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e8d359-4247-4f48-9bd9-251cc035e45d",
        "cursor": {
          "ref": "c73e9163-40b0-4654-aadb-ece58f77e5fa",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4a2495c7-7f39-4695-95ac-a372d60b492d"
        },
        "item": {
          "id": "52e8d359-4247-4f48-9bd9-251cc035e45d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "5d2a8ffe-6928-45cd-bd63-6be5544d6af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfc844c-1cdb-44b9-86fc-cdccfbfe2a43",
        "cursor": {
          "ref": "2b7c35e6-989d-4cab-8553-0104904c4374",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "879eff80-66b0-40b1-99a8-9c4f5d96bbbf"
        },
        "item": {
          "id": "1cfc844c-1cdb-44b9-86fc-cdccfbfe2a43",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "7f27e71b-e7c7-46d7-b554-c409211e3318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1583ee7-a4d6-4471-9537-4912b749badb",
        "cursor": {
          "ref": "b3b519bd-8613-4c5c-a35d-d87a2fff6855",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2e2358c0-5018-4d1c-9a9d-d8ec77579108"
        },
        "item": {
          "id": "a1583ee7-a4d6-4471-9537-4912b749badb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "cbbcf593-219e-4622-ba8a-af3a9423a8c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a813d954-77d1-43c9-99c5-38870105c791",
        "cursor": {
          "ref": "a29cff47-6bb1-4585-a374-7b2f93d1fe86",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "139e0e2a-7bb4-4b2d-bfd8-e317c8b47372"
        },
        "item": {
          "id": "a813d954-77d1-43c9-99c5-38870105c791",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "c27a0c0f-8775-4383-b1e6-36a8a8bf0b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5128b013-ef94-4184-8d36-e9f24948d949",
        "cursor": {
          "ref": "1b7c05c3-a53a-4859-8b78-3c2cce7aa9db",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6b1d86fc-a901-4338-9e78-43f23529b1b0"
        },
        "item": {
          "id": "5128b013-ef94-4184-8d36-e9f24948d949",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0b955b1f-12c7-438c-abec-131bcd46f31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f088b54a-98fb-46cb-b604-11596efdcccc",
        "cursor": {
          "ref": "9ca9a05f-d501-4da1-bfc2-350b743f50f4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "09aaf754-cde8-4dcf-864e-a0de2f6b74b2"
        },
        "item": {
          "id": "f088b54a-98fb-46cb-b604-11596efdcccc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2404957e-b0c3-448b-84d4-50a2ca0c7493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d9460a2-e3df-4f00-becc-dcfd8f58d448",
        "cursor": {
          "ref": "0297d100-3961-4ae2-878d-b8d53dd07522",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9a7704ce-653a-4cfa-9c32-c8b21fa0a09c"
        },
        "item": {
          "id": "2d9460a2-e3df-4f00-becc-dcfd8f58d448",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "376a6ef8-22e3-419d-af53-cdd1b1189479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd4ed3e-0bd8-470e-abb6-d309bab81533",
        "cursor": {
          "ref": "c2da52dc-7805-4735-b2c9-369bea4d0d91",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d739248f-2a5e-4a3b-b708-8516a9569ad8"
        },
        "item": {
          "id": "3cd4ed3e-0bd8-470e-abb6-d309bab81533",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "75c3ad8c-32fe-4c57-8387-39e5ced16a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747bbffa-7f33-4310-9b32-2ae430579f02",
        "cursor": {
          "ref": "5e362464-5125-434a-993b-100b7cbdbcbc",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9d7a7205-76e9-443d-9640-ca97cf3721c2"
        },
        "item": {
          "id": "747bbffa-7f33-4310-9b32-2ae430579f02",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "12f275d9-9878-4e82-b5b2-1d89497a7d08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90693a4-f6bc-4f0e-a29f-540f9b16e6b6",
        "cursor": {
          "ref": "5b443ec0-5959-42f6-a580-69eb6e271b7c",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97cde04d-4cc5-405f-807b-4a9e6d3fa51d"
        },
        "item": {
          "id": "f90693a4-f6bc-4f0e-a29f-540f9b16e6b6",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "657bafad-ba67-4639-a3e2-ff024888a4a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c0af41-b269-441e-ad31-981f45fcd8a8",
        "cursor": {
          "ref": "a2032f37-2d95-4f37-b645-2db144944260",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "048eebb2-8df6-461b-9565-fe2948037e28"
        },
        "item": {
          "id": "61c0af41-b269-441e-ad31-981f45fcd8a8",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7b1a6d60-0496-4cee-a2f8-caedc685f144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b75955a-868d-458f-a378-2c9fcf864e4d",
        "cursor": {
          "ref": "d76b969d-2e30-4b76-9224-fd1d2e1f87be",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "082ea53d-00e1-424b-9ed4-cbf5f8e0ebb0"
        },
        "item": {
          "id": "9b75955a-868d-458f-a378-2c9fcf864e4d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7997cae9-a94a-42d1-9c13-fe01e94266e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497ca32a-ed1d-4052-be3a-72aa885aed60",
        "cursor": {
          "ref": "88c37cd1-2c74-4f28-b573-bed269e5db08",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d8806854-cdaa-4a21-bcbf-860dc5329a52"
        },
        "item": {
          "id": "497ca32a-ed1d-4052-be3a-72aa885aed60",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8b4ae274-772f-4cd3-8fd4-28fae256fa08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4723226-34c7-4b55-9863-45022485d54a",
        "cursor": {
          "ref": "60306c82-adc4-44d7-82fb-4cca60a9650b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "b5f9abe3-2284-4d9c-8e7f-cadeab278598"
        },
        "item": {
          "id": "a4723226-34c7-4b55-9863-45022485d54a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f2d76520-f84c-42a8-a8cc-f594af684abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd026b1-13ee-4436-9791-e2ebc15b8f1e",
        "cursor": {
          "ref": "03b1fa92-78d0-4e71-b910-2294922ca575",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "149f68ae-40c1-4e7b-abfd-ab9fd01aab74"
        },
        "item": {
          "id": "fdd026b1-13ee-4436-9791-e2ebc15b8f1e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "67cc9cdf-9ee6-4bf2-bae2-c3084727ba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "def62762-d974-4bc2-8f00-516bae7202a5",
        "cursor": {
          "ref": "2435ab67-5de6-40b6-b187-078642a8b245",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "55fb9063-ed7c-4a46-bbda-fd0232905671"
        },
        "item": {
          "id": "def62762-d974-4bc2-8f00-516bae7202a5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d3a7c09-4f4a-4a3a-8cbf-79da92e50409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aa9b8dd-1781-4dde-ba7a-989f72fbc02f",
        "cursor": {
          "ref": "2c647f7a-2851-4b6d-a09d-91385369e028",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "012e826f-a1c3-46bc-bd09-7bb19849bfbf"
        },
        "item": {
          "id": "3aa9b8dd-1781-4dde-ba7a-989f72fbc02f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f2768296-0da7-4de9-a203-a0791c4d5bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e2abf3-e10d-4158-8bf2-8cbf649ece6c",
        "cursor": {
          "ref": "e57bc557-91bc-4a50-bb91-e3755cc4ac48",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ae8b83c1-e7ec-4e59-ab7a-1b92a893dcd2"
        },
        "item": {
          "id": "a3e2abf3-e10d-4158-8bf2-8cbf649ece6c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9d5cddeb-4bc4-41c9-8fca-4ead4d791c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "258a3cfc-05dd-4a11-89a8-c8575e053571",
        "cursor": {
          "ref": "77b27296-185f-4d53-8fc9-514df657bf4e",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "433e020a-2f0a-483b-843a-ca2d71561ef2"
        },
        "item": {
          "id": "258a3cfc-05dd-4a11-89a8-c8575e053571",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "79b057cb-1e22-4739-a702-6fdd323de39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9533d84-83b0-4af4-b1f9-9150435324e1",
        "cursor": {
          "ref": "0fda60b2-9881-43c0-8599-dc53a822f346",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9af4d5e1-d795-4bd7-888e-6b24a2351494"
        },
        "item": {
          "id": "b9533d84-83b0-4af4-b1f9-9150435324e1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "20e54874-2fb4-49d6-8029-bc52a0d6bd6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6bbb527-049a-40ec-8e2b-3969e5fd1ad7",
        "cursor": {
          "ref": "317826c4-1e12-4b1e-961d-0411475f2470",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "23b8da4f-9604-4fed-a910-59a186df4731"
        },
        "item": {
          "id": "c6bbb527-049a-40ec-8e2b-3969e5fd1ad7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4906d121-a468-43fd-a80a-eb6582f8b44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce601f6-ac5d-43d0-8aed-a32667261cc8",
        "cursor": {
          "ref": "325be73b-58e9-48ec-bf47-28f4a1771144",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "89f0756d-8ddf-495d-a3a6-30e1d9bd8b55"
        },
        "item": {
          "id": "8ce601f6-ac5d-43d0-8aed-a32667261cc8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5d1d3aaa-2ea9-41f2-96dd-8a56bc2a1f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb3f1ba-69f9-438c-af82-8647bee118d2",
        "cursor": {
          "ref": "ad27753b-86a8-4c24-a182-980f5d512254",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "740d0f1c-e42a-4b43-a7a2-2aca2b70648e"
        },
        "item": {
          "id": "acb3f1ba-69f9-438c-af82-8647bee118d2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "0442e97b-5e17-4a37-9750-7fbeccfec1a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d90f5421-16ba-4647-840a-fee3fcc7ec18",
        "cursor": {
          "ref": "14c61b0e-b0bc-4144-9d5e-024bb86fe311",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3bc5de2b-43d9-4bcd-8353-7d87c52b3043"
        },
        "item": {
          "id": "d90f5421-16ba-4647-840a-fee3fcc7ec18",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "da6a9b8d-e54c-4fe2-bc05-1e4de3baf8fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17e6424-29e8-4c4d-b0ec-76b1f626f009",
        "cursor": {
          "ref": "6ff09cbe-458d-4abc-89e9-f4231595b288",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "366f1069-614a-446e-9d37-188cd230f662"
        },
        "item": {
          "id": "f17e6424-29e8-4c4d-b0ec-76b1f626f009",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9365add6-ab82-47cb-93e8-7f5ac9064867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097fa068-6f1d-4ff5-97a4-b1951f4881ba",
        "cursor": {
          "ref": "311a5be1-7787-426f-b916-5f1d8816a0e9",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c6ad9982-5fa8-45e8-b533-d75f3223bf60"
        },
        "item": {
          "id": "097fa068-6f1d-4ff5-97a4-b1951f4881ba",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b1317aa5-29c4-4612-8ccd-b99fa36e9688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae08c88-e679-4366-98bd-63e90a7b3a0b",
        "cursor": {
          "ref": "284f0b15-2ce4-493c-94a7-c06cdbd6449a",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b891ebef-d4a4-4f7a-b876-6dfc019bfe92"
        },
        "item": {
          "id": "6ae08c88-e679-4366-98bd-63e90a7b3a0b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d63d3c2f-9289-4a5f-a340-cc03ba390d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11df2faf-7225-4a0c-b6f1-5c0f7e1125f8",
        "cursor": {
          "ref": "3dd7d013-e064-4803-9403-85bbc1492dad",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d0b4d958-9d91-4623-8155-e40ce982d297"
        },
        "item": {
          "id": "11df2faf-7225-4a0c-b6f1-5c0f7e1125f8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1ec0f07b-929d-44eb-a011-7eee2a3cfc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbcbc7ce-b058-44e6-a067-58f768ffd5aa",
        "cursor": {
          "ref": "66bec325-a4d0-4475-9d57-c776e3e9a668",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "eb6161f3-2727-44ab-91d3-b3955b1ca07a"
        },
        "item": {
          "id": "dbcbc7ce-b058-44e6-a067-58f768ffd5aa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "60fc0dd8-5c48-46f5-a06d-05a89c3f57fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6a69ab-9f70-4a47-bb6d-eb315520b4b9",
        "cursor": {
          "ref": "82c8d707-40bf-4fb1-93b0-1594faa485d2",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9c2a632c-5ddd-410b-a0d4-963eb620cedd"
        },
        "item": {
          "id": "fd6a69ab-9f70-4a47-bb6d-eb315520b4b9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "90f784d3-824d-4517-bbff-875b9ae5a042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59728ec9-c940-4c6e-a3ea-c6f256560fb3",
        "cursor": {
          "ref": "a93741ea-e0ac-47b1-92a5-eecffb991b55",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e11caf7a-d684-4f86-adda-27095018dfce"
        },
        "item": {
          "id": "59728ec9-c940-4c6e-a3ea-c6f256560fb3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "366b6d61-13db-4b8b-8877-bf5b6f282d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4cab32-1e8e-46be-9beb-999c956ad6ca",
        "cursor": {
          "ref": "68b0b2c1-a421-4218-94d1-1411d546179c",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d6bce245-7b13-4c2a-869c-d532c6ed8c2c"
        },
        "item": {
          "id": "cb4cab32-1e8e-46be-9beb-999c956ad6ca",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "65cdb83d-2d44-4341-9e49-10397c77ff2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3087ec54-310e-43a0-afcd-c7a2d02b75e4",
        "cursor": {
          "ref": "3ef5b5b2-23b1-46dc-9d1a-d745eb49fd28",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1ae17582-2b84-469a-82f1-048508c12c1f"
        },
        "item": {
          "id": "3087ec54-310e-43a0-afcd-c7a2d02b75e4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2ad9cc9f-decc-48ef-bf1a-0164961d258a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86dd14ed-0afe-46f4-9541-e1724e82e847",
        "cursor": {
          "ref": "50e0a208-7576-46cc-b435-8b8b9a762890",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "03af1233-f46f-44ee-991f-00c92980936a"
        },
        "item": {
          "id": "86dd14ed-0afe-46f4-9541-e1724e82e847",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "033512e0-1df0-48a6-b6d0-5dd5b4e41858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b59394-b35f-439f-b8d8-4aca24c038d7",
        "cursor": {
          "ref": "6156d3b2-ccaa-4749-b841-8a18c34453e0",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "21b161cd-fc30-4735-875b-347ad908e7ef"
        },
        "item": {
          "id": "e1b59394-b35f-439f-b8d8-4aca24c038d7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ecc75c66-8840-457b-b426-7711318bb2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36bdfe2-0c72-43c1-a6c4-f62f65d304de",
        "cursor": {
          "ref": "6b5995c4-4ce9-42d9-b81b-77e5c85f5b17",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a0367ffe-fdfb-494e-bf20-78894c0f96e8"
        },
        "item": {
          "id": "a36bdfe2-0c72-43c1-a6c4-f62f65d304de",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6674daff-81fc-4d07-a2e4-dc665097880e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25455787-4b09-4254-b221-c2543658fb7e",
        "cursor": {
          "ref": "c9656f77-73bf-4239-9213-4b6bc89e3d81",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "b9bf499f-421e-44e5-8f5f-93f9f04e40fb"
        },
        "item": {
          "id": "25455787-4b09-4254-b221-c2543658fb7e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f5f933bf-f84a-4c33-9e07-f8b2ee516243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d235b7f-fdc1-473f-ae2f-aeadbd40c91e",
        "cursor": {
          "ref": "564da092-bfe5-47d6-88f2-d192e3f14e8c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6e98a8d4-b396-4170-98dd-5b8cefb74f31"
        },
        "item": {
          "id": "4d235b7f-fdc1-473f-ae2f-aeadbd40c91e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4bb8a5b6-f424-461c-afa9-4546b0ed0f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b616dabe-215b-4f79-9d32-c765ab9d3368",
        "cursor": {
          "ref": "61da93bc-65b7-4965-9a39-7e2b7edee14e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e709aee3-388d-4c07-bac4-d3826ca8852f"
        },
        "item": {
          "id": "b616dabe-215b-4f79-9d32-c765ab9d3368",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "36d62dcb-fd3a-45b7-8386-3833660ada7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf20f47-9be5-46bd-9d90-b3aee26e72e4",
        "cursor": {
          "ref": "26d939e9-b13d-4b8a-b5f7-8ef9c332439d",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7d050e48-469f-47ea-a6aa-25ec9dcfa096"
        },
        "item": {
          "id": "6cf20f47-9be5-46bd-9d90-b3aee26e72e4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "4cc29504-2d7d-4d2c-bee5-bd3002ede356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc9e8fa-35be-49aa-9e32-ceb78cd05702",
        "cursor": {
          "ref": "e507eabf-60a0-4190-9089-0b327949bb0e",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e1e3c88e-51f7-4fea-ad85-b90f84094dd5"
        },
        "item": {
          "id": "8cc9e8fa-35be-49aa-9e32-ceb78cd05702",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a389dd51-d0b0-4c82-8ff2-9b9c3902edd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb231981-cadf-4026-9771-9aa572584641",
        "cursor": {
          "ref": "63521baa-8416-4f98-8e28-ae394c863e2a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "db11174b-a9dc-460f-a323-6c82e07698a7"
        },
        "item": {
          "id": "bb231981-cadf-4026-9771-9aa572584641",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0fe1f78e-0084-4177-96e0-c4be618f72d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520fe35e-abf1-4e41-8aa5-1f01561ce3a6",
        "cursor": {
          "ref": "287b1ac1-a2b0-4264-a64b-d4fadd09b071",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "06a7bf36-0a67-4556-a67d-bf292e2b8d51"
        },
        "item": {
          "id": "520fe35e-abf1-4e41-8aa5-1f01561ce3a6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d279e683-2bdf-4610-a85d-1ff90a7d3e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10527033-52af-4909-9449-c29bf42a19f8",
        "cursor": {
          "ref": "cc53dcd4-139e-40a1-ba9e-4ae210e19ccc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5b23ac69-4c1d-4070-b88e-252ca7f3cbd6"
        },
        "item": {
          "id": "10527033-52af-4909-9449-c29bf42a19f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a772767d-1ad6-465c-9362-42705f221c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44875c5-53a7-48bb-a82f-f97b06f1e0f4",
        "cursor": {
          "ref": "f7b9581b-ae87-4baf-ad31-e8f35cd2e741",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9e5f3e3b-4a85-4a86-82b3-2f85eeca883f"
        },
        "item": {
          "id": "e44875c5-53a7-48bb-a82f-f97b06f1e0f4",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cf7a4afd-a1df-480a-881d-d6264ac628f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9014ff6-356c-4783-a317-476d3bcca4fd",
        "cursor": {
          "ref": "ecd3c607-3fb9-49b6-a6a7-413675a2ce05",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "507bb3ec-b910-4acb-8bae-e8002c06d17a"
        },
        "item": {
          "id": "d9014ff6-356c-4783-a317-476d3bcca4fd",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "546a1804-8344-4809-a5ee-3d19e5506ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc4a6e3-021e-48be-ac36-49ecf89f8dc9",
        "cursor": {
          "ref": "feac3094-1f4e-4138-80e3-3354d4b6df81",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f2ae6657-2dec-4129-974d-1e1dc677b823"
        },
        "item": {
          "id": "1dc4a6e3-021e-48be-ac36-49ecf89f8dc9",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "31e24c01-f340-4ca7-82c0-362bc6095b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32880d64-b7b5-4c39-bc6d-9da0a428a782",
        "cursor": {
          "ref": "7524b954-4106-45da-aa65-fa0638da778b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f1881142-e034-458b-8fe1-0464750858dd"
        },
        "item": {
          "id": "32880d64-b7b5-4c39-bc6d-9da0a428a782",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d4fc79d6-1b5e-4cc3-b0be-d6e4f45241d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cf6818-41fc-43fb-8998-7a7309958004",
        "cursor": {
          "ref": "53981eab-63c2-42ce-bf3d-f1cecea6a9fb",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "fa36fc99-c7c0-4a83-9a4d-09d8b89921e1"
        },
        "item": {
          "id": "b0cf6818-41fc-43fb-8998-7a7309958004",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "59002d81-fc39-4367-8f67-acdae172f9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7b04d9d-84e0-444c-ba28-ab3beafc0351",
        "cursor": {
          "ref": "ee09c2b7-e4b4-4a5c-9521-dd91f4610a1a",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "25809262-e1bc-4ee9-944a-e19235b58c0c"
        },
        "item": {
          "id": "b7b04d9d-84e0-444c-ba28-ab3beafc0351",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7890446f-6ac4-45ec-865d-742595cf80e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c2aa3-c885-46d5-8409-d6d97018683b",
        "cursor": {
          "ref": "daf17215-6090-42ba-8b56-c9c8d67e8869",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "09db63a9-71e3-44ab-a1ab-e48034bb7766"
        },
        "item": {
          "id": "952c2aa3-c885-46d5-8409-d6d97018683b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "547002a2-3322-4d78-94d2-172b85b49dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88946058-9c2a-4c05-8d21-e9eba21ba3ee",
        "cursor": {
          "ref": "8962dbd5-8f76-438e-8d37-f5909573c33c",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "fb3011c7-ea3a-46ba-b3f9-2aa217e6a94d"
        },
        "item": {
          "id": "88946058-9c2a-4c05-8d21-e9eba21ba3ee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "3f712c81-fdd3-4e4d-ba4c-7f3ace631bb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f477f7b-18b8-499e-935c-cbfde85f46d9",
        "cursor": {
          "ref": "c8d62621-f499-4efa-91fe-7287660be37f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "510153f9-536e-4bcd-9402-2f57565fdce4"
        },
        "item": {
          "id": "0f477f7b-18b8-499e-935c-cbfde85f46d9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "fb86d171-d3b3-4328-9467-d9528366d6b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "69ae34e3-2dcd-4c34-8ae4-1669a6444296",
        "cursor": {
          "ref": "ba59176a-c06b-4199-a4a9-23bf8753a5d1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d68b9c3f-d853-4f3c-b8f1-e4d9ba2721ec"
        },
        "item": {
          "id": "69ae34e3-2dcd-4c34-8ae4-1669a6444296",
          "name": "credentials_issue"
        },
        "response": {
          "id": "48ca2980-d06f-4e77-91a3-1f715d10cc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "23e3ce87-ab59-49eb-8399-c83e070ed23d",
        "cursor": {
          "ref": "544a4085-1479-439c-a9d6-5e430acf6eab",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "405fb33f-6ba8-4dfb-ae83-938cf49a7e4c"
        },
        "item": {
          "id": "23e3ce87-ab59-49eb-8399-c83e070ed23d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "0121c92b-3c6a-4983-95d8-d8aa892bab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f75b9a06-fb96-4a20-ba06-af2b96e3ef6d",
        "cursor": {
          "ref": "5214280d-7972-42e2-b630-6a16a43539ec",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e9199fde-d8ff-4644-8803-730f1228cc45"
        },
        "item": {
          "id": "f75b9a06-fb96-4a20-ba06-af2b96e3ef6d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "58d1984e-6621-4553-ad2b-906931d252e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "00a7f5da-cc17-41e4-8f5c-68f0daced64f",
        "cursor": {
          "ref": "4c7a15bc-fd34-42c6-8800-ccd93274b287",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fe2e950d-2f4c-4361-9b0b-7e326ce79834"
        },
        "item": {
          "id": "00a7f5da-cc17-41e4-8f5c-68f0daced64f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "edecc640-0471-4b7e-86ad-bd496ad553a6",
          "status": "Created",
          "code": 201,
          "responseTime": 10059,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c8d697-44a3-4b23-9d3a-7c830aff1c17",
        "cursor": {
          "ref": "6dfe6ee2-a592-42b7-aa37-4a9999ea3f0f",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "19014c96-2ff6-46ee-bb8e-63e319a308a2"
        },
        "item": {
          "id": "f5c8d697-44a3-4b23-9d3a-7c830aff1c17",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "10512b66-10b2-4fdf-8e71-d1afba795ae5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3303eb1c-429e-45f0-8442-a95548f7efe3",
        "cursor": {
          "ref": "78ca9d32-0d0b-4ce6-9e42-deb3473b2513",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "9f718fbf-31da-4c40-9b21-5ae3c5253a42"
        },
        "item": {
          "id": "3303eb1c-429e-45f0-8442-a95548f7efe3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8adeac9d-9b4e-4cf1-ad1c-9fd9d6cc87ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5ed4b701-e28a-4be3-a599-a22223cbdba3",
        "cursor": {
          "ref": "8ebcbc5c-4898-4709-902d-bf41b5fb2cc4",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "694b946a-dd9c-4538-b9e4-61ea0f20bc0c"
        },
        "item": {
          "id": "5ed4b701-e28a-4be3-a599-a22223cbdba3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "523daf32-9b76-45fa-86aa-02038fc38289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cff1cb4-6736-49d2-a627-cd099705864f",
        "cursor": {
          "ref": "da94fd4a-f831-4e57-852a-2d762e62fe38",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3b3763ae-92f6-4c9e-803c-474972cfb919"
        },
        "item": {
          "id": "9cff1cb4-6736-49d2-a627-cd099705864f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "ce0b3748-e30a-4594-8366-647f515e3132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023abf15-cbe2-47df-8385-85fb0bfb1b49",
        "cursor": {
          "ref": "f0bf85d3-76f9-4e50-91ef-d9f14a7b4363",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a36a510a-09f7-4a13-b04d-2f96ff750b6a"
        },
        "item": {
          "id": "023abf15-cbe2-47df-8385-85fb0bfb1b49",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "cbfea4d2-b906-4dc6-a571-f0084edae793",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67ff01e-a76d-4720-ab7a-59c21f619ed3",
        "cursor": {
          "ref": "e5f90945-c6da-447e-8768-4dccd396367a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9011e9dd-f170-4267-bd62-d204bdc215a8"
        },
        "item": {
          "id": "c67ff01e-a76d-4720-ab7a-59c21f619ed3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b70c99ad-95e6-41e3-b7fc-c01db77efc38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c73e5e-5cab-431b-b343-336c8db56777",
        "cursor": {
          "ref": "1346d757-8d1f-4af6-a4c9-1ed0caac3dd7",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "bb09712d-5628-4962-ae34-3e1a072042b8"
        },
        "item": {
          "id": "a9c73e5e-5cab-431b-b343-336c8db56777",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce2ea64c-e56b-46e9-a38c-2e7082ab31cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d6a5725-586e-4bc0-85ec-649f512bd711",
        "cursor": {
          "ref": "b643332d-8e2f-4554-a8ad-bb591bae5cd1",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2c7f1611-c587-4627-be1a-ab94399dee4d"
        },
        "item": {
          "id": "2d6a5725-586e-4bc0-85ec-649f512bd711",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f21efa02-9d99-4757-8c58-5b0ec54985ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c5eb94b-0c51-4ddb-8a17-35e28232208e",
        "cursor": {
          "ref": "ddf5f05c-542b-48ed-917d-b3c1fb5cd5b0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "c90f5035-4b0e-4383-877c-de7c189da1eb"
        },
        "item": {
          "id": "2c5eb94b-0c51-4ddb-8a17-35e28232208e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fa3aa17b-6a35-429c-bb28-954bf2e9413b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5240dd48-6f78-42c1-807d-5fa4b0886559",
        "cursor": {
          "ref": "e943bc85-e97f-4831-93da-ca3f85867d2b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1d7ab884-e73e-4691-a7ec-63001d6cd183"
        },
        "item": {
          "id": "5240dd48-6f78-42c1-807d-5fa4b0886559",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ec106d07-d02a-421e-a4fc-e6a0b56eaf25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286efb0b-a699-4e6b-846b-c08980d37ead",
        "cursor": {
          "ref": "b524892c-1a54-4049-b463-452aa877d040",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d455f83e-4f9f-4a17-a9ae-f987788ab3f5"
        },
        "item": {
          "id": "286efb0b-a699-4e6b-846b-c08980d37ead",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ad3d2d3b-4103-488a-a6ec-18c372ced085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4bd292e-dfae-4f36-8ae9-c0a03b2c0260",
        "cursor": {
          "ref": "f0d4fe0a-951d-47ac-8e67-85be95505e33",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "8db1d9d5-9156-4bc3-8a4e-07f1eabbeb0c"
        },
        "item": {
          "id": "d4bd292e-dfae-4f36-8ae9-c0a03b2c0260",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4565a898-3357-4f8f-aeed-23138f7a4ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f139ab5f-7ff8-4636-8289-f57210921997",
        "cursor": {
          "ref": "0cf0547b-07e9-411e-8fb6-9aededa3782f",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f7e22630-3480-4aef-9ea4-7c92c702c629"
        },
        "item": {
          "id": "f139ab5f-7ff8-4636-8289-f57210921997",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4390725c-5abe-46bb-acca-e46026b3dcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e986e1c-3868-40cc-99a4-70511e8f0219",
        "cursor": {
          "ref": "3d2157d0-721c-4ff5-9830-532f01477018",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f833d04c-5785-47ba-b971-d569e6ecbd86"
        },
        "item": {
          "id": "4e986e1c-3868-40cc-99a4-70511e8f0219",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b6ecb576-2c74-4700-a2f6-960f8f4b83f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ad6bd6d-1ed7-41b3-8d05-564bd22f939d",
        "cursor": {
          "ref": "3ed9f378-c697-43d7-a870-912f4cd83c62",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "696aa0e9-b82e-44d1-bc98-75001123d52c"
        },
        "item": {
          "id": "9ad6bd6d-1ed7-41b3-8d05-564bd22f939d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "59d6f3e6-cd84-473f-905a-40b5d283cafc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34cdfca1-e98e-408b-967a-e24950f5e5cf",
        "cursor": {
          "ref": "234d6e55-e354-4a27-bf03-5304028783d5",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "671a530a-43f2-41c4-8e16-f187a7a0f69d"
        },
        "item": {
          "id": "34cdfca1-e98e-408b-967a-e24950f5e5cf",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f44c0bc7-ea74-475c-af64-ad67f6b72a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0aaa0199-78a6-471c-a5eb-43037137e5a3",
        "cursor": {
          "ref": "41599c8b-2920-4726-a4db-90ec23ed8feb",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d5f2f120-7828-4938-a524-99619473d4a6"
        },
        "item": {
          "id": "0aaa0199-78a6-471c-a5eb-43037137e5a3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5298c6b1-118f-4bba-897d-a0222cab058a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d753d1-b061-4144-a74b-8a2b1825aeb6",
        "cursor": {
          "ref": "c4b98e07-3534-42bf-b2a7-a7a2fa2dab48",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e0a5be18-3aa1-4d58-af6c-359ac2499e50"
        },
        "item": {
          "id": "44d753d1-b061-4144-a74b-8a2b1825aeb6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9847739a-aea7-4e03-9351-d240a7ef78d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc44438b-7739-4203-aa34-929e6ca922d7",
        "cursor": {
          "ref": "fdb40457-8faf-473c-8bb0-9b4bdb13e080",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ab132f5e-f8a8-4110-b735-8442a7699961"
        },
        "item": {
          "id": "dc44438b-7739-4203-aa34-929e6ca922d7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "91404a32-8e12-499c-81b5-5616c58de2e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dad3db2-bdc3-45b7-a56c-b13fb02c50d1",
        "cursor": {
          "ref": "c5cdd33d-c651-428e-bd0f-918c70346881",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d28899c1-d095-431b-9b7d-68845f825b2c"
        },
        "item": {
          "id": "8dad3db2-bdc3-45b7-a56c-b13fb02c50d1",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "78407580-f729-4b5f-849f-dd99f45914d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8985f99f-4a70-4670-898a-2ba37b47ccee",
        "cursor": {
          "ref": "160203ec-9800-4af7-8129-bb489599adb2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e5de0bd3-8d11-4c03-8cd1-6b4c810293b5"
        },
        "item": {
          "id": "8985f99f-4a70-4670-898a-2ba37b47ccee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "485b89b9-434b-4c40-b430-aae31778cd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97ba5ba-c1bc-4cfa-93e7-aec1b1a62b22",
        "cursor": {
          "ref": "aed706ce-9ee2-416e-ac22-81d4f0408a60",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c8b0aa64-47ed-4d63-952c-d06c25183662"
        },
        "item": {
          "id": "b97ba5ba-c1bc-4cfa-93e7-aec1b1a62b22",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "37efa98f-35b1-489d-9cb0-09a2c9e2f3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cd5b8b-8c64-4a7a-a80a-ba42bcf1ebdb",
        "cursor": {
          "ref": "e73b7d1c-a4de-4b53-b105-52125b98bf7d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "942bba21-ab44-4e26-92ee-6736e7557517"
        },
        "item": {
          "id": "f2cd5b8b-8c64-4a7a-a80a-ba42bcf1ebdb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e3d8fa6e-55bb-4a61-a417-2cd7b86d6f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d10e10bd-cb33-4335-9010-adb3293afa0c",
        "cursor": {
          "ref": "15253dc4-3bca-4ebb-99ae-cc0465c90e2c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b80c098-409e-4422-a52d-1a78539ec341"
        },
        "item": {
          "id": "d10e10bd-cb33-4335-9010-adb3293afa0c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "324ff25e-0fc8-4883-bce5-c4082f554dd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01c776b-9c75-4fa0-a30a-c64ec382b372",
        "cursor": {
          "ref": "9a732f49-df08-4000-a533-970c1b104cbf",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a1a5f58e-a4f5-4a2e-89fd-9d8d0b33d47a"
        },
        "item": {
          "id": "b01c776b-9c75-4fa0-a30a-c64ec382b372",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9225b868-ec9d-4eb7-ab70-28baa7b75ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d34b050-dd96-41c0-90ea-809306af2522",
        "cursor": {
          "ref": "50ad6bae-c62a-4f66-b009-9ae4c31d3fa2",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4555cd4d-51cc-4d6a-ad21-087a0d97d39e"
        },
        "item": {
          "id": "0d34b050-dd96-41c0-90ea-809306af2522",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ef569f37-be9f-4382-9ab7-ab9705ad3a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b974b0eb-8591-499c-a7ec-d6447ef844ff",
        "cursor": {
          "ref": "6d88d3e7-b504-4299-bb67-26ab1d5c042f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "cc4a63fd-7e19-4622-abbf-b76ec0f7b1aa"
        },
        "item": {
          "id": "b974b0eb-8591-499c-a7ec-d6447ef844ff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8816f17d-70e0-4f0b-b66d-305ef9e1e994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e95d9de-c890-4c1d-8315-dbf714a66b2d",
        "cursor": {
          "ref": "f2b8aba3-f9ba-4527-9e7a-4a81eb6d8a6c",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9bf3ec84-522b-4410-8bcf-b5d25deb6647"
        },
        "item": {
          "id": "5e95d9de-c890-4c1d-8315-dbf714a66b2d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "51fbf626-c077-44b0-85bd-d516146d62fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48098b38-a2c8-4c3f-9b98-ee8e6836d112",
        "cursor": {
          "ref": "a9f60dff-2abe-4186-80c6-39fa578e08cd",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "13212148-439b-45ac-8fc6-f8fed767c3a4"
        },
        "item": {
          "id": "48098b38-a2c8-4c3f-9b98-ee8e6836d112",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "242e1b78-8150-4ce8-872d-32d0ec1d2ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7581aad-3c96-4578-bf95-65b2882bfbfc",
        "cursor": {
          "ref": "0e425981-6868-463d-9ce8-c6c17bafdfdb",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "56f15ed9-5a22-4dd9-a373-98fd497dfb5f"
        },
        "item": {
          "id": "d7581aad-3c96-4578-bf95-65b2882bfbfc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "82c53c5e-b8c5-4125-ad91-5b0c33f74da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c813a4-d397-4da3-8e61-ecc1c78d3b26",
        "cursor": {
          "ref": "cacdfa4e-35b3-4ff4-bba1-da019a0893fe",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b6ef9e21-dbce-4230-81b7-5a54406ab36e"
        },
        "item": {
          "id": "d7c813a4-d397-4da3-8e61-ecc1c78d3b26",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "37c03f5c-1b6a-4489-bafa-fb3e1f0564dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b411ca4c-c822-4616-b005-71e81ff7bdbc",
        "cursor": {
          "ref": "244009ab-d9cc-46e8-9bdb-8d8e7a0721ed",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "257920e8-2bcc-4e66-b6c0-85b55340e612"
        },
        "item": {
          "id": "b411ca4c-c822-4616-b005-71e81ff7bdbc",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9351157c-1bba-4b23-869a-25d958cb786f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe66d5d-2027-4139-be48-537fc4bed6af",
        "cursor": {
          "ref": "42c4c7f9-bf91-44ee-9404-f117b835f59c",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a741076c-fb48-44ba-8cbd-09e93fb16577"
        },
        "item": {
          "id": "cfe66d5d-2027-4139-be48-537fc4bed6af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a946d514-53e0-4f31-a136-2d49e50c740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c2e9ce-a293-4e2c-896a-9c0e58ddb6e2",
        "cursor": {
          "ref": "a499a596-d0bb-4ecc-b3cb-b8fe97a357a4",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f7b46f4e-1ada-442c-b9a4-ba4fc201c10f"
        },
        "item": {
          "id": "e7c2e9ce-a293-4e2c-896a-9c0e58ddb6e2",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "78de266c-47f7-44a6-afde-636c4fac46a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5316c87a-4a0a-407e-9fee-fb4d79ff9880",
        "cursor": {
          "ref": "decf93c7-1b5a-4b7d-83e8-afc1654a27db",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "76ede97e-7ba7-44d5-b07c-0ad65c3c4c8c"
        },
        "item": {
          "id": "5316c87a-4a0a-407e-9fee-fb4d79ff9880",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a6a13a63-f9d6-4257-b7a5-411d485af884",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9599819f-cbdb-4ead-947f-faaab848872d",
        "cursor": {
          "ref": "def56800-634e-449e-8174-7fa31706cd32",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0db38964-0e4a-44d4-9929-7c1ab6959f8a"
        },
        "item": {
          "id": "9599819f-cbdb-4ead-947f-faaab848872d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "12c6fc96-4059-4486-baf2-671be96e749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2e89c1f-1c9e-4680-ac3b-8fd0ecf7c741",
        "cursor": {
          "ref": "44b91e1c-23cb-4088-8d3b-5620769929bb",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "e35c2754-ed1d-4230-a296-baefa2640d5e"
        },
        "item": {
          "id": "e2e89c1f-1c9e-4680-ac3b-8fd0ecf7c741",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d4ae0275-bafe-4c02-9040-456ba2a880da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601c1fc4-e4e7-4bbd-8e2a-34300caa28da",
        "cursor": {
          "ref": "b9a5f4a6-c4a3-4ac1-ba3c-aa53b685d2bd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5522520c-1578-497c-bf7f-10f8e5606db8"
        },
        "item": {
          "id": "601c1fc4-e4e7-4bbd-8e2a-34300caa28da",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b917cbc3-836e-400f-89ef-469ff3a98274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc5f8f6-9536-4927-a9e2-3492dc62d10e",
        "cursor": {
          "ref": "7877eefa-f3f7-4c2c-b0ed-ee1f9ce9fb9b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d034f9a8-3827-49dc-827f-bfaa233c7a2b"
        },
        "item": {
          "id": "fbc5f8f6-9536-4927-a9e2-3492dc62d10e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "deb61184-f15c-47fb-a122-6fcc51e3abd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e31865-a49c-4119-8645-ef771e2518b1",
        "cursor": {
          "ref": "571ff87d-c42b-4d45-9f6d-96adf49b9e96",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ac306105-047c-4700-b8a4-1590c1f9b1ea"
        },
        "item": {
          "id": "90e31865-a49c-4119-8645-ef771e2518b1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "85bbe117-c3c5-4930-ab40-730f5aecec79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a21b642-6876-42c5-85e4-85e690c278ea",
        "cursor": {
          "ref": "b660eb55-fea3-4114-b157-7920930e0bea",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8141bcbf-704c-47cc-84c9-4ab50e5d396f"
        },
        "item": {
          "id": "4a21b642-6876-42c5-85e4-85e690c278ea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b5ac0cd-7ebd-470e-a6d6-e9c977a08ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1b6dae-6c35-45f1-b8e6-33447b385209",
        "cursor": {
          "ref": "b2245868-8150-4b60-8f2e-3620da787540",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8f8ceb95-5378-4b91-aded-3fa16859c7a3"
        },
        "item": {
          "id": "de1b6dae-6c35-45f1-b8e6-33447b385209",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0c26a578-6a85-4a7a-b8a9-6c04a669fb11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db81ad0-6233-4e37-a3ec-b0332423b42a",
        "cursor": {
          "ref": "4748a50c-5fae-4d27-94aa-0d88de07273e",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f1ce39bf-c66d-44d7-965d-6e5fab1940a6"
        },
        "item": {
          "id": "2db81ad0-6233-4e37-a3ec-b0332423b42a",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a59776db-367f-48e6-9a3b-40c867cbccf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bf83f8-e1b7-4091-88eb-e5af53c64175",
        "cursor": {
          "ref": "5c3a707b-12ef-4037-9f49-f6133244c845",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "74407b8c-94eb-44ba-b185-6137771efbff"
        },
        "item": {
          "id": "20bf83f8-e1b7-4091-88eb-e5af53c64175",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "112f9027-6f27-4b98-a081-aeb82bd0bc13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81e18aa-0af5-4d8d-a81b-c6d025423d0b",
        "cursor": {
          "ref": "3da310bd-8edd-491d-99bf-329b4c46aab2",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "61e844ac-41ba-40ac-a4f1-ec292d928171"
        },
        "item": {
          "id": "d81e18aa-0af5-4d8d-a81b-c6d025423d0b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "41ab7ad8-c808-41e9-b269-ee0e61ef1906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b161c3ca-0f11-4c8b-97d1-4bb75d026458",
        "cursor": {
          "ref": "20f17b62-4b43-419e-94cd-9ecaa29b9b8a",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "12c30153-1905-4f41-8f82-0e0ef1cefe90"
        },
        "item": {
          "id": "b161c3ca-0f11-4c8b-97d1-4bb75d026458",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c185fb19-5f4a-467d-b301-2cf5616f47e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e766c2-0034-4f30-aa0a-a7435440607b",
        "cursor": {
          "ref": "93c685a2-93d8-4ba3-80ae-62d21c8bd6c3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4241e23a-6f00-4d53-90c5-49590c216ead"
        },
        "item": {
          "id": "68e766c2-0034-4f30-aa0a-a7435440607b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "397829b6-e6a8-4f52-b0a5-c14704beefee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f157a01-97b8-4ccb-b077-52ebd1db5ac6",
        "cursor": {
          "ref": "f510378a-49ed-491f-8a62-3b183a076383",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "bc66348f-4dfc-412e-a770-dd26e5673daa"
        },
        "item": {
          "id": "9f157a01-97b8-4ccb-b077-52ebd1db5ac6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c152561b-071a-4f55-b2d0-f89260374879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f89b4ce-b752-4962-8b23-a578e6253a8e",
        "cursor": {
          "ref": "f9ce64f9-9a3b-4c4b-bc33-9ef4f0bb8095",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "11651119-c3e2-4330-ab27-dd2a3f638205"
        },
        "item": {
          "id": "6f89b4ce-b752-4962-8b23-a578e6253a8e",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "efca4f1a-f837-42e3-b571-fc931983da2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6813a7e5-e1f1-49d0-873a-f824a39c096c",
        "cursor": {
          "ref": "ad0b913b-77aa-4e2c-8e98-5837116a221f",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "a7a7a107-e514-4f47-b4ee-43a6a8636941"
        },
        "item": {
          "id": "6813a7e5-e1f1-49d0-873a-f824a39c096c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "888b9f6b-6743-42f5-918e-674d8d698193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356aad7c-9121-412c-90de-f568be0842a7",
        "cursor": {
          "ref": "b7c21a9d-a4e1-4740-ab39-f872c3ae7d77",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cc408891-682e-43fc-b6cd-54cac8b32c5b"
        },
        "item": {
          "id": "356aad7c-9121-412c-90de-f568be0842a7",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4eb477ee-dbbd-40ff-abc6-74094dbe47ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bdc5048-613c-477f-bc6a-42396f56d49c",
        "cursor": {
          "ref": "25b1685c-fca4-453e-ae25-c2623b6c926d",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "469219d4-ca58-42ae-9e96-4191772d858b"
        },
        "item": {
          "id": "0bdc5048-613c-477f-bc6a-42396f56d49c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ecbf32c6-ebba-4736-a740-f3244f2a4856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c6560c-2cc5-4d5f-9d65-43b2d7a832a6",
        "cursor": {
          "ref": "4f28422d-eae7-4ef5-94ba-b8b82adb904c",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "30b20d19-279a-48d6-ae9d-4ade2ef1daa3"
        },
        "item": {
          "id": "93c6560c-2cc5-4d5f-9d65-43b2d7a832a6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8eabb42b-a61f-4104-a050-4d49c01e358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a08468-f62d-43df-8bcf-7b2c0decc460",
        "cursor": {
          "ref": "bd1b70ee-1bf8-4a88-b0ad-25bbf39f1836",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "61d55d85-a035-47f0-b3ac-88b83dc00f5b"
        },
        "item": {
          "id": "56a08468-f62d-43df-8bcf-7b2c0decc460",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4bdd9e34-7371-4bb0-adba-7c21bb1d9ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "741dcdf5-1bf1-4e0a-b007-1f7b0e381c30",
        "cursor": {
          "ref": "10622095-60e9-4a0d-9a13-a950e4716b68",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4c23f6f2-8989-4747-aab9-5192b8b397c9"
        },
        "item": {
          "id": "741dcdf5-1bf1-4e0a-b007-1f7b0e381c30",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3aedb632-426f-4f66-bf4c-0a0402880955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6196fb21-6c57-46b0-b185-119387db0393",
        "cursor": {
          "ref": "fdca5c29-8401-44b1-aa16-ecf638bcdf82",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e39882e1-9588-4639-9d3b-98392706458f"
        },
        "item": {
          "id": "6196fb21-6c57-46b0-b185-119387db0393",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "02c02168-b93f-4178-8b72-6f75ea8c9c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9119203c-2f6b-4d72-ae7b-19d47a0c7750",
        "cursor": {
          "ref": "d9799921-4f41-4f15-a974-8410b265b121",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8eb67dba-307f-4550-9b11-8ba04cfb27c2"
        },
        "item": {
          "id": "9119203c-2f6b-4d72-ae7b-19d47a0c7750",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b898c00-56a3-4b21-9542-23d37959cbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16548a5-77a7-425d-8920-c1435d82b6f4",
        "cursor": {
          "ref": "e66a540b-f2c5-4424-9ceb-6fa78eb904a1",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "360b65be-d606-43c1-b8c6-6768ca37559f"
        },
        "item": {
          "id": "e16548a5-77a7-425d-8920-c1435d82b6f4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ded397f8-9f92-4e0a-a0e0-8e7a030e276a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f3503c-74d8-438e-a1b6-099e4cc16ef6",
        "cursor": {
          "ref": "6e0b60a5-d35d-4493-b17c-e7f65f0cd318",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c86ed823-7e2e-4799-82a8-ab9b8c477ecb"
        },
        "item": {
          "id": "82f3503c-74d8-438e-a1b6-099e4cc16ef6",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3fb88d3-06d3-4872-b2ab-baca17518c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169e66a8-6839-49dc-ae44-34294ef28c63",
        "cursor": {
          "ref": "bd4f5b9b-2ed2-4f6b-8c9f-7c22c23c9036",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d2520246-64d8-4f04-9ac8-55c34d5d71d3"
        },
        "item": {
          "id": "169e66a8-6839-49dc-ae44-34294ef28c63",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "3d998a0b-8c80-4490-89b3-c8daa058b1f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5837dc5-5718-4271-bc13-b736122a74de",
        "cursor": {
          "ref": "92055933-b480-486a-b959-873f20d85106",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "5d79b846-490b-4004-8de9-abb37e6e81fe"
        },
        "item": {
          "id": "f5837dc5-5718-4271-bc13-b736122a74de",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "260b42a4-3825-45e1-a879-2f9cf4988712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89916a00-4577-400c-9c46-10c3f8f4b333",
        "cursor": {
          "ref": "7c8efbe6-18bd-466c-8dc1-4a13816e9d48",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f5ee2a9b-97c2-434b-9b47-3f8a6d1cf5b7"
        },
        "item": {
          "id": "89916a00-4577-400c-9c46-10c3f8f4b333",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "953db107-a060-4065-b338-b715f961cca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a868fd1a-fb5b-4e5b-b263-12bf21581fc9",
        "cursor": {
          "ref": "5dc70ddf-eaf5-4d14-804b-ac46d2823333",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "99c85628-63c6-4977-ba6d-34902ae753b0"
        },
        "item": {
          "id": "a868fd1a-fb5b-4e5b-b263-12bf21581fc9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d3f19ef3-a79e-4527-aebd-a4a9faf1fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5fad579-cb5a-442e-b942-77c47c72a266",
        "cursor": {
          "ref": "b495045a-2651-42c7-acb8-0d53b177df3d",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8bced29d-4162-45b1-8b06-8906ab3d8e63"
        },
        "item": {
          "id": "c5fad579-cb5a-442e-b942-77c47c72a266",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8294d64c-e4a1-4b87-a8a4-45b0ff5285f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7581acb-899c-4c98-b4ff-b08084a9319d",
        "cursor": {
          "ref": "54a918ae-f1d2-43c1-860a-2df4633ed371",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "fb0e6346-a448-40b8-a4dc-6d385a496166"
        },
        "item": {
          "id": "b7581acb-899c-4c98-b4ff-b08084a9319d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e7da15af-20d9-49fc-86e2-46a4365e88b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80972bf9-f0ac-4c66-9bc6-bab6445afa76",
        "cursor": {
          "ref": "6e6fffc8-91f7-4072-9e1b-28bf24faee7d",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "8668a513-e871-4802-9411-086167866dc6"
        },
        "item": {
          "id": "80972bf9-f0ac-4c66-9bc6-bab6445afa76",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8458360c-201a-481d-a686-ed8c3604d7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6754670-b479-47b2-b0fe-b9e4766c6e5b",
        "cursor": {
          "ref": "aca47688-648f-485d-a26f-55e85142ca0c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "834e4fec-1ff6-4e5a-905c-f1fb6438245d"
        },
        "item": {
          "id": "d6754670-b479-47b2-b0fe-b9e4766c6e5b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "61a0625f-5abf-4214-814c-e501ba576ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21314a66-525e-40d7-98f1-9d2bce1d5724",
        "cursor": {
          "ref": "cbb0ebb1-5d81-43dc-b376-6b202adc0275",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ce397042-63f7-47fd-8e92-3290a7e42374"
        },
        "item": {
          "id": "21314a66-525e-40d7-98f1-9d2bce1d5724",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "5f218277-0271-4aaf-a35b-1536af7a7af7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a404d89-a1ad-43f5-a213-c7a340c187c0",
        "cursor": {
          "ref": "b8c03a6f-f76a-4a1b-ba7e-490714cec92e",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8fa81c0c-2c92-4433-88f2-8e2cc8264791"
        },
        "item": {
          "id": "4a404d89-a1ad-43f5-a213-c7a340c187c0",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e89a037f-3a93-4f44-9038-7dd043de8972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f5fade-7407-4e03-bee3-01bc98ab7bf4",
        "cursor": {
          "ref": "8891b3cf-cc34-4b01-88d2-5f72ee4f2fcf",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "af2771d6-c557-4a08-947a-faaed8dc4aa5"
        },
        "item": {
          "id": "a7f5fade-7407-4e03-bee3-01bc98ab7bf4",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "759a5c6c-4f02-46c3-888d-9afe825612df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a425fe0-306b-41db-969d-c83cb70be6de",
        "cursor": {
          "ref": "eb187627-67ce-4580-b9d0-980d70b0aacd",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9c05c49b-6144-4785-b2c6-0b912603b4c0"
        },
        "item": {
          "id": "6a425fe0-306b-41db-969d-c83cb70be6de",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "68b9db66-6078-4609-8025-a27eadcd4a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6837aa97-08d5-40f4-9bde-3db59eded5a4",
        "cursor": {
          "ref": "5b4721d4-a026-4f0d-8393-7152b70dc0c9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "996a347e-931d-453e-9729-b9c96e3c14ec"
        },
        "item": {
          "id": "6837aa97-08d5-40f4-9bde-3db59eded5a4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8971157b-ed01-4b42-8f57-0340c19f938b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "597aace5-7fb9-4f1d-9d8e-3488c5a2bc35",
        "cursor": {
          "ref": "3fd7c0ae-ee67-4b3c-b522-ba0cd71e3edf",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a57766da-ae35-40c7-b299-b7986ab18ef0"
        },
        "item": {
          "id": "597aace5-7fb9-4f1d-9d8e-3488c5a2bc35",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5d46852c-c9fe-4087-8ca4-4e459eea95c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264bc883-4c8d-4970-9dd0-f7cfbe53bf64",
        "cursor": {
          "ref": "a4b944aa-3778-42d6-a154-5e2f1bc87851",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "3dcc3395-dc78-44f0-8e5a-3822205673d3"
        },
        "item": {
          "id": "264bc883-4c8d-4970-9dd0-f7cfbe53bf64",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "516e7b47-cd61-4464-b9a2-77336df9314f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1286714e-72e9-4719-b567-21ce3ee3cd62",
        "cursor": {
          "ref": "1ffd986f-d6d2-4683-86d0-eca2dfec46e2",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "752b3681-1955-4369-b9e9-fb397e633c31"
        },
        "item": {
          "id": "1286714e-72e9-4719-b567-21ce3ee3cd62",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e2130865-3918-4bff-b99b-67dc2e8456a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852ad09f-c844-4a9e-8830-7c4b2908b072",
        "cursor": {
          "ref": "4b3d2a34-9e4b-45e4-a4db-f7d41b566857",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "d2e64e68-2d3d-46ee-bee0-02884f043f94"
        },
        "item": {
          "id": "852ad09f-c844-4a9e-8830-7c4b2908b072",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "377a0498-f0e0-4520-9f8c-e635f26d53be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c9b7d5-80b3-4ac6-9ad0-5987927e47b0",
        "cursor": {
          "ref": "088710b5-b23e-4211-a1cf-f1c31632e201",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "dd509bb5-93b2-4d76-af12-0619677f98bb"
        },
        "item": {
          "id": "d7c9b7d5-80b3-4ac6-9ad0-5987927e47b0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "54195cc5-19a5-403e-95c0-b046d08abf21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4712f22a-85e7-4a0c-be0a-0693ddbd91ba",
        "cursor": {
          "ref": "3b793488-fece-4179-aa47-91e4196ae3af",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "eb52a0ae-c392-461f-aca3-c9b924690e98"
        },
        "item": {
          "id": "4712f22a-85e7-4a0c-be0a-0693ddbd91ba",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "fa24bdca-772d-4ae7-9067-c578b7586628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7f50ed-4911-4345-95be-05aa54d4034a",
        "cursor": {
          "ref": "042b0e6b-3b81-4c00-93aa-506e566b45d4",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "892cf550-7388-48d2-abc9-a524f27adcd0"
        },
        "item": {
          "id": "4a7f50ed-4911-4345-95be-05aa54d4034a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c1834d83-5617-471b-934a-c76b92287e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78861bda-2974-416d-b6ef-e3865165993f",
        "cursor": {
          "ref": "b27b39f9-b327-48a2-b88d-44fb7bb0cf61",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "610029a3-4dae-447a-834d-c797561ef19f"
        },
        "item": {
          "id": "78861bda-2974-416d-b6ef-e3865165993f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6d0d6797-c39d-400d-9c56-eab980689099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0f992e-a87e-4bb4-9977-03c0d1baf19b",
        "cursor": {
          "ref": "e6181ebe-7d03-48bf-a219-4c1541f8c104",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ed6d8c9b-1809-43ff-be63-394a23fd23bb"
        },
        "item": {
          "id": "7c0f992e-a87e-4bb4-9977-03c0d1baf19b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "959938f7-e00b-4078-8394-90d2a824bf63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "905496e2-835d-4bed-bd66-7956e5cf3289",
        "cursor": {
          "ref": "feca3cfa-6f8a-4766-b90a-c28399042462",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "1661ab94-d514-48e1-8850-65ff111b643a"
        },
        "item": {
          "id": "905496e2-835d-4bed-bd66-7956e5cf3289",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "407c2901-dad0-4903-98be-d44d53e5cb22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e21114-9a79-4581-a88f-b0ea22c19cd0",
        "cursor": {
          "ref": "2a46959c-edb0-4947-8620-a901fc04e303",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "b56cd2a3-a7b9-409f-a156-4d9dc5d84dde"
        },
        "item": {
          "id": "17e21114-9a79-4581-a88f-b0ea22c19cd0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "746db386-ea71-446c-8c24-1e7c9ce8b157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1588da2-f643-4291-9da0-e23ad1d7bf74",
        "cursor": {
          "ref": "bc7f4b9d-7452-4aa1-be61-ead361c0658e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "3cf81556-9166-424c-9242-8c627b00a11f"
        },
        "item": {
          "id": "a1588da2-f643-4291-9da0-e23ad1d7bf74",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ab6061cb-cb76-4371-9f2c-db4165b1f14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0106ad-b7ca-45d0-85ba-eaae924aa897",
        "cursor": {
          "ref": "04f8af26-143d-4c97-993d-6b286254779a",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "285504a7-f0c0-4ad0-a534-bd9411b8baf7"
        },
        "item": {
          "id": "6d0106ad-b7ca-45d0-85ba-eaae924aa897",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "73990953-65d9-481e-9145-6570624b61b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d79a7da-b61e-4a19-a11d-c1941f65a714",
        "cursor": {
          "ref": "74556398-d502-453b-96b9-2d45d43cf5ab",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a8dcf173-2f22-4ddc-91cc-a33bdac2779e"
        },
        "item": {
          "id": "6d79a7da-b61e-4a19-a11d-c1941f65a714",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f6669eeb-81e4-4a50-a1d8-ec7aa3c1f86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a1484b-a5f3-4fda-b2ab-59263ce0078c",
        "cursor": {
          "ref": "164ae34d-4533-4059-9d5f-c702d15921bf",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e4b36799-088e-4571-82fb-4707bf4ad3a3"
        },
        "item": {
          "id": "c7a1484b-a5f3-4fda-b2ab-59263ce0078c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "63be0236-ed56-4aac-9ac4-cfbad520dc8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aae44ec-2778-4423-bc47-a7b8e34a89ae",
        "cursor": {
          "ref": "691abab2-183e-4f20-99e5-0e8ac86a56b4",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "07e1d667-c0db-4714-b472-232ac9dfb6ce"
        },
        "item": {
          "id": "2aae44ec-2778-4423-bc47-a7b8e34a89ae",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "69e33c86-bbda-43ca-923e-d2e355ae8cb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d9ed8f-0997-4fdc-8833-48e7a01b7c0a",
        "cursor": {
          "ref": "d1e76175-71bc-4058-9107-8a93cf8340bc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5410fdaa-1aa3-4a1c-97a1-0afe8d0a1adb"
        },
        "item": {
          "id": "78d9ed8f-0997-4fdc-8833-48e7a01b7c0a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "718956fa-425e-4649-bade-3fdf2541b7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37cd0a3a-3319-4c81-8a09-49c05bdcf205",
        "cursor": {
          "ref": "f064a813-6c8b-47b8-86e1-fa05cd780ff4",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "05a8f0cd-13dc-4adf-8c25-6279ff6096a4"
        },
        "item": {
          "id": "37cd0a3a-3319-4c81-8a09-49c05bdcf205",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "796aa4f7-2e83-4127-a468-4ff4fb7cf661",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "74fec686-4303-4f19-ae2b-3e1e8d002f8c",
        "cursor": {
          "ref": "87d1d01e-ac2b-41ad-a109-4c68402d38b4",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e786be28-8b9f-4a01-9288-2f11480c4221"
        },
        "item": {
          "id": "74fec686-4303-4f19-ae2b-3e1e8d002f8c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c584b55a-7c37-4dac-9777-7de266cbf0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7050833-2314-4c6d-a0c8-0ca52d397d8d",
        "cursor": {
          "ref": "eca3640f-f40a-4427-8bdd-a1a1ddd9ac70",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "13e839b1-ce02-49c8-b06a-2f9819534cb1"
        },
        "item": {
          "id": "d7050833-2314-4c6d-a0c8-0ca52d397d8d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "921c0564-f4a1-4282-9fbe-6e108399d682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e342d97a-a6ff-4858-9c8f-f15c412f2061",
        "cursor": {
          "ref": "76d62547-5535-4d28-ad7e-d839193ac4d7",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8c354014-bfcf-46eb-9d4e-19d95baae78c"
        },
        "item": {
          "id": "e342d97a-a6ff-4858-9c8f-f15c412f2061",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bd5d7688-74fe-4cbd-8192-0e39cc6ac95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af0ade15-9c3c-4e60-b860-71f4e8ba8049",
        "cursor": {
          "ref": "0e61e1f1-6461-4674-b1de-8b263cbe01a9",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "801a398c-c9cf-4e1f-85a1-206d8a0c32bd"
        },
        "item": {
          "id": "af0ade15-9c3c-4e60-b860-71f4e8ba8049",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "03d94539-fad0-475c-a647-ccf40db3176e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5b47401-0e5b-43e4-85f4-ebf87b4971bd",
        "cursor": {
          "ref": "cf9dc3c7-1a55-46ec-8307-8da42718d204",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3b487662-1dd9-4904-b5ee-e7bd0a269940"
        },
        "item": {
          "id": "e5b47401-0e5b-43e4-85f4-ebf87b4971bd",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "efa217fa-e298-4780-aa0a-dc1d84dfb5e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbff426-2d74-4770-a81b-b7492374491d",
        "cursor": {
          "ref": "983bfa2f-c6d2-4cf4-8fc0-56f2f065bdbb",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b2161648-afed-4b11-9d74-abd1d1c4fa5f"
        },
        "item": {
          "id": "cfbff426-2d74-4770-a81b-b7492374491d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "41951ab9-d261-46d8-b5d4-4cece708eef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21665ee-3a1a-4fcc-b8ac-30c1fa2dbcf1",
        "cursor": {
          "ref": "ec840ddf-b982-40ff-a05c-7dabf787b808",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "daf99611-946e-40b7-bf25-79b2d4b532c6"
        },
        "item": {
          "id": "f21665ee-3a1a-4fcc-b8ac-30c1fa2dbcf1",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3d3d7b1f-ce3b-4b5b-af70-a0ed891d5200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491aa69d-51bf-4e64-b5ee-40ee8c596316",
        "cursor": {
          "ref": "99197d36-e072-490a-9cc4-14d6be17762b",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e086f4c3-17b1-4487-b336-b75cf7aa8c70"
        },
        "item": {
          "id": "491aa69d-51bf-4e64-b5ee-40ee8c596316",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4298b3f5-7da4-4fe8-bd4d-7480af7c5107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd2324b-6a8b-44e4-a3b0-2968e967a695",
        "cursor": {
          "ref": "f2dd8a7c-ebf0-47f8-a5f6-b5e0c2642ff5",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b154e00-98c5-4315-9061-7100201a534f"
        },
        "item": {
          "id": "9fd2324b-6a8b-44e4-a3b0-2968e967a695",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "e7fd73fe-cbf9-4740-8926-87569470c3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62660cb7-23ff-47dd-97c7-9ba1e5d5be11",
        "cursor": {
          "ref": "795244e5-d39d-4810-949c-4f28af72c1e5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d2f93529-7304-4a72-84ae-1f64db972b96"
        },
        "item": {
          "id": "62660cb7-23ff-47dd-97c7-9ba1e5d5be11",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a9045e1c-dd13-4439-866e-bc99510580d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e0aa8d4-7563-41ab-a9d2-1809829c80d4",
        "cursor": {
          "ref": "edba3d92-dcb5-4cac-8c3f-3436f29a5700",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7740d698-3dd3-440b-a234-a9edbab274c2"
        },
        "item": {
          "id": "7e0aa8d4-7563-41ab-a9d2-1809829c80d4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "15b8ebe0-449f-4a5f-a9af-258d488fa922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147a422f-4080-48b8-9e8b-c6a8c047e610",
        "cursor": {
          "ref": "2f709539-345e-4139-b36a-632c7137ba01",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "84ba037a-8523-420f-8ed5-504526cb9d1b"
        },
        "item": {
          "id": "147a422f-4080-48b8-9e8b-c6a8c047e610",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ab7561e7-392e-4ff4-b2c3-f9c8e094271f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7052a8ea-5f1b-4ff5-8f54-6c81b0ff42f7",
        "cursor": {
          "ref": "f43e4e70-9b68-44d6-aebc-9f7a8664c364",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ac9fc831-8a35-4751-a0ad-ab8d348fbe1d"
        },
        "item": {
          "id": "7052a8ea-5f1b-4ff5-8f54-6c81b0ff42f7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "0b9a4dcc-2951-4b15-b0be-72c49192c87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d224bad3-57fe-4b15-94d2-7b62349065d2",
        "cursor": {
          "ref": "93f798f4-353e-4d86-abf1-8ecf852b2b54",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "33e9f0b7-b2f0-4def-96f5-6c9487154de0"
        },
        "item": {
          "id": "d224bad3-57fe-4b15-94d2-7b62349065d2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3b7f14ad-af2c-4429-83a9-9970e2833abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4880ca29-dff9-47ea-ba14-52707002f45a",
        "cursor": {
          "ref": "7cb2372e-17bb-4bd0-8b3b-1b3f0a02e337",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "72fbc360-ed7e-4e6c-ab6d-a44a4f96eecd"
        },
        "item": {
          "id": "4880ca29-dff9-47ea-ba14-52707002f45a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4837387f-391f-4843-aac3-f81f48016e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72af00e-fa0f-4572-8245-4816657795c8",
        "cursor": {
          "ref": "c5cd78f4-cfb8-4159-87d5-cb3239c7a8c8",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "58066401-1c03-47c4-9aa8-f8c0847f4307"
        },
        "item": {
          "id": "e72af00e-fa0f-4572-8245-4816657795c8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1c291e6b-1f99-455b-ba69-aefa6680dcaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20be2efa-84ce-4c62-ade7-7d84f2828b51",
        "cursor": {
          "ref": "b954e20a-21a4-4814-95f8-53a432b24c84",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b4ee97f0-7213-4358-8cbe-aabdf254a8be"
        },
        "item": {
          "id": "20be2efa-84ce-4c62-ade7-7d84f2828b51",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b82c43d5-b4ed-4db1-9cdd-9e21e92a7c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e05d82f3-04a6-4bb0-bf39-dcfbb48de814",
        "cursor": {
          "ref": "4caac1ec-30ff-4a91-9088-1b02627830cf",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "12ebc638-cde6-4da0-8339-a971d68eda75"
        },
        "item": {
          "id": "e05d82f3-04a6-4bb0-bf39-dcfbb48de814",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c6a784e4-d85d-4be7-b605-6c1b976b52fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5528bc2-822b-4a1c-8b1d-3688319433d6",
        "cursor": {
          "ref": "c68ccbf1-ac40-477e-a9ff-68c87a40c2ad",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "7f413ee5-f0e0-41cd-9e0a-a5bca7512b15"
        },
        "item": {
          "id": "e5528bc2-822b-4a1c-8b1d-3688319433d6",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9497264d-b24b-4e92-8bba-c8c1b11f0f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947606d5-cfe3-48b3-a09d-9236e9bc3e4e",
        "cursor": {
          "ref": "83fcd3de-6b2f-4817-9683-82f70a5abca0",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "320cbad0-cbe9-4e76-b18d-98f64b788b72"
        },
        "item": {
          "id": "947606d5-cfe3-48b3-a09d-9236e9bc3e4e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "1538e8a1-cd0a-4936-bdf5-81d11f1ca3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30281ba-1d0b-4980-b7a4-6ca8708e9f3b",
        "cursor": {
          "ref": "22eb6ad5-333a-4bf6-9afc-8eb8ae21d3c0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1629c2f-fd17-47d9-9943-5b683f52740f"
        },
        "item": {
          "id": "b30281ba-1d0b-4980-b7a4-6ca8708e9f3b",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "9c0a5939-1d32-4680-b100-b831386df926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90928e32-1d23-403d-90d0-c8040bf89b1f",
        "cursor": {
          "ref": "9c544a10-639c-42f4-921d-0f18719038fa",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "cc9584ca-9b49-4497-8949-763b9065f809"
        },
        "item": {
          "id": "90928e32-1d23-403d-90d0-c8040bf89b1f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "371518eb-c9e7-4284-9df7-2eeef4dbb9be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48482e55-4194-4182-ad93-a7c3ced22695",
        "cursor": {
          "ref": "951fa9b2-57c9-43e5-86a1-c9bea56bd885",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0644dff8-a398-4163-9332-f1fdb8edaf99"
        },
        "item": {
          "id": "48482e55-4194-4182-ad93-a7c3ced22695",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "71b2857c-21a4-4b2c-9cdb-f1e5b2e02af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a454edf-e9c7-41fa-ae7d-1b926c8eac46",
        "cursor": {
          "ref": "f0c48d60-0b5c-4d9e-b222-8908aad036e3",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc76a10b-a0e0-46a0-8e71-baf890873ee0"
        },
        "item": {
          "id": "7a454edf-e9c7-41fa-ae7d-1b926c8eac46",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8c5a2854-6a77-4240-b0f7-e1b981493360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7a39f57-b482-4ff4-83d7-eea619d8a802",
        "cursor": {
          "ref": "615dd907-22b6-4bcb-9b46-d1177a186128",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "d334f488-1e72-40a1-bbab-fcbb78bd36ae"
        },
        "item": {
          "id": "b7a39f57-b482-4ff4-83d7-eea619d8a802",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7e559beb-e97c-4b8d-b931-f49641b3ec9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a78f8290-5df8-4f64-b1d5-2398049f5e39",
        "cursor": {
          "ref": "1a848b37-fa69-48e4-8902-f9b8f3b8a646",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0100ab8a-ace1-44f8-bda4-19677cb2791a"
        },
        "item": {
          "id": "a78f8290-5df8-4f64-b1d5-2398049f5e39",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3b85ff4-06eb-446a-9d1a-7bcb215a977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5a9f03-44cb-432f-a954-7640cac16d66",
        "cursor": {
          "ref": "02cf40ad-b2f5-4ec8-8c45-b698c87dc01e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "99b324c1-1faa-4517-818c-f0e5092dd1be"
        },
        "item": {
          "id": "6e5a9f03-44cb-432f-a954-7640cac16d66",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2c7448a4-7cc3-4ac5-a140-903bd5774984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2a5e3a-bc9f-40ff-9293-9e7c0e4bff1d",
        "cursor": {
          "ref": "9c2bc633-a76c-4b20-933b-6dc67d21b0bd",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b2e4280d-53f3-4da0-be2e-ce1434a48f7f"
        },
        "item": {
          "id": "5e2a5e3a-bc9f-40ff-9293-9e7c0e4bff1d",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "30040f13-8f33-4791-90b9-4fd9d468c30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a9ef3d-b0c9-4958-bd0d-7488d38b717d",
        "cursor": {
          "ref": "066860db-e3da-44eb-abff-0b7813e83431",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "27ed27f0-5da1-4553-b8c0-59189c2aba35"
        },
        "item": {
          "id": "f4a9ef3d-b0c9-4958-bd0d-7488d38b717d",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "dab4b92c-900b-49a4-a7f0-11e18eccbc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282a758d-a877-463f-9460-578b9d124768",
        "cursor": {
          "ref": "30b59913-8f90-4193-868b-81526ae43fbd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1138e1aa-c638-42de-afc1-c9e0ac1bf7a7"
        },
        "item": {
          "id": "282a758d-a877-463f-9460-578b9d124768",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "6fcedc1b-1ce3-4b5d-8476-abfc6ca1e2cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600be996-c593-4cf1-8973-ac324071abf8",
        "cursor": {
          "ref": "25cd154b-4bde-4eff-b89d-e79484ca80a5",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "eabd94b6-916d-4676-81df-033d97d5ed85"
        },
        "item": {
          "id": "600be996-c593-4cf1-8973-ac324071abf8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "201ae422-4ab6-4404-9ffb-d5d947599417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c9360b-a71f-476f-8bba-11c785d616cf",
        "cursor": {
          "ref": "224e94f1-1317-4321-b181-de47ac6663dd",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c846cc29-0bda-4341-993c-11c9d7095e2c"
        },
        "item": {
          "id": "98c9360b-a71f-476f-8bba-11c785d616cf",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ffd3b172-5716-4e59-9e34-4a0a8c3902c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb08569-8b82-4d80-94ff-eb2f45581bb9",
        "cursor": {
          "ref": "a7524153-363a-4dd1-a025-0487660ce61a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aaaa1cc1-b648-4e01-845f-0fd022b15187"
        },
        "item": {
          "id": "2fb08569-8b82-4d80-94ff-eb2f45581bb9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0c54140b-b4be-4391-8df0-e07c8ff58f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17be738-8ace-4ced-b9d5-3f48edce00dc",
        "cursor": {
          "ref": "60af8e33-a6f1-47b8-b7ca-4179dbb57e2e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8aeaa141-9a69-45bf-ada9-074923029183"
        },
        "item": {
          "id": "d17be738-8ace-4ced-b9d5-3f48edce00dc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "75f9eaa5-0f25-471e-9142-e9ef14b99664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ed6e2-8102-4174-a601-0f3e3cf7befb",
        "cursor": {
          "ref": "f45c110d-698e-4ee5-bf38-736f074d5485",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ef39abaa-3441-4566-8365-b0376848bb8b"
        },
        "item": {
          "id": "6e0ed6e2-8102-4174-a601-0f3e3cf7befb",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e5aaf0d8-7c5a-471d-8125-c2259a511e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d41b6e9-a058-4dea-93d3-853b2b007151",
        "cursor": {
          "ref": "4be4882b-3659-488c-8d4e-00ea551fd396",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "51587d79-e9ed-4d44-89e9-6ae63dd49e98"
        },
        "item": {
          "id": "4d41b6e9-a058-4dea-93d3-853b2b007151",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "557a0f6d-4973-4e37-8ae5-c9cd08079484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a0d028-2407-4cac-9cf4-2becb40aa0e3",
        "cursor": {
          "ref": "0fc5985f-302d-4be0-ab30-20061827ef71",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7cf51e54-db05-4fbe-8975-dfd8b151ddb2"
        },
        "item": {
          "id": "c9a0d028-2407-4cac-9cf4-2becb40aa0e3",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "b2d3892e-180a-4a10-86f4-b69f8b20c27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a249b0a-0fe2-4288-a84f-2baae3f77480",
        "cursor": {
          "ref": "bad765ad-c9f1-4fa0-a9de-3bb9fde7ff3f",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8c1c3b2f-b5d2-4e4f-aa03-847c1197c97a"
        },
        "item": {
          "id": "0a249b0a-0fe2-4288-a84f-2baae3f77480",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ce43b931-1b1f-4dc6-bfb1-7d49f600ac27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a58630bc-0643-4b53-b039-da8a50c5bcda",
        "cursor": {
          "ref": "a96d57e2-e6f1-4959-8328-c6399a4fd9ed",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7b1d9ef-270e-4e83-9325-565cb8407f08"
        },
        "item": {
          "id": "a58630bc-0643-4b53-b039-da8a50c5bcda",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7772f3ef-2304-4449-bc32-a3ed3135454c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2cffca6-0494-44b0-8422-7ae19f7198d4",
        "cursor": {
          "ref": "37a6bd81-6d8f-4915-8fd3-20897d09aade",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "22740987-d4d2-4da5-87ff-6a7c610158d4"
        },
        "item": {
          "id": "b2cffca6-0494-44b0-8422-7ae19f7198d4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "23039bec-a044-4509-813f-1ed2a79677aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bc8eda-1300-4e81-b27a-7a40ae4fff66",
        "cursor": {
          "ref": "aa6c3c7f-267d-4ace-8c07-e37aaef79999",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "90139d36-51ad-4c2b-a854-4fed975dffca"
        },
        "item": {
          "id": "b7bc8eda-1300-4e81-b27a-7a40ae4fff66",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0403b8d7-c475-423e-aad9-22057881601f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7177bd5e-1a79-4297-ade4-822b96ae0ee8",
        "cursor": {
          "ref": "85a0d270-0e99-4de4-ba18-c3ffd4af5789",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "99c10caf-3392-4713-a768-132403276136"
        },
        "item": {
          "id": "7177bd5e-1a79-4297-ade4-822b96ae0ee8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "aad8d96c-276f-410c-9de6-b668031a2d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e9e32f-cc30-490c-8b5b-2ad2fcc8b42d",
        "cursor": {
          "ref": "e05f6d0c-232d-4750-b31e-3b03956ac87c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "be39d2c7-3e80-4125-8e1f-13c6c0194011"
        },
        "item": {
          "id": "72e9e32f-cc30-490c-8b5b-2ad2fcc8b42d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2b1a6a84-7974-44a5-a1ab-e6762aed8d16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fdec95c-7b38-4ef6-9231-b27d053a0324",
        "cursor": {
          "ref": "335ea39d-6932-416e-855d-1f506f32eec8",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "67721edf-18c6-4365-8d69-41cc657b103a"
        },
        "item": {
          "id": "8fdec95c-7b38-4ef6-9231-b27d053a0324",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3f191522-7f1f-4851-acf4-9269723fbc7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89f70ab-37e0-49a9-89c7-11d04cf23520",
        "cursor": {
          "ref": "abc58b6b-ab36-40a1-926e-7508f0af73e3",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "b9de8acf-7d1c-4e45-87cf-a9bc983e7bf9"
        },
        "item": {
          "id": "d89f70ab-37e0-49a9-89c7-11d04cf23520",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "968044c9-edca-4533-b721-db93be0ac7a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c811b08-2e8c-4f0b-938b-b5566c0e9867",
        "cursor": {
          "ref": "35c4f741-c481-4ec2-84d2-92d44211cfc9",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d8485f4-489a-4921-b3ee-052e772503f1"
        },
        "item": {
          "id": "6c811b08-2e8c-4f0b-938b-b5566c0e9867",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d361c8bb-7337-4922-ac1a-37e4435c08b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1f1708-86bc-4b3a-b09a-aefb8ffc9d81",
        "cursor": {
          "ref": "45d02557-a5ba-4ff1-96fb-2fa749f47109",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1c78a23b-698e-4603-8575-094c6876eee1"
        },
        "item": {
          "id": "cf1f1708-86bc-4b3a-b09a-aefb8ffc9d81",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "1ea3740c-37da-4e92-812e-5c28b72f6b0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab47322d-5643-48b4-b719-18553544ed6b",
        "cursor": {
          "ref": "a82a3d5a-6d9e-44fd-8006-254bb9982431",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "10fd2534-00a6-4e05-aed0-4068af02f4ab"
        },
        "item": {
          "id": "ab47322d-5643-48b4-b719-18553544ed6b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "57379d56-f9d1-4c7a-be5c-fb6eb1f33112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513b1fbd-ef00-486e-a67c-4fac3938f1d8",
        "cursor": {
          "ref": "18bf3534-7d80-49b3-b5e0-7ddcd09f4160",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "3312b08b-19ac-4fc8-ab9e-fbef2ff41aa5"
        },
        "item": {
          "id": "513b1fbd-ef00-486e-a67c-4fac3938f1d8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2bab5753-7ef8-4612-868a-64ecce63568e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99d78b92-acfa-421c-88a9-01b80fd5ea46",
        "cursor": {
          "ref": "8a6a0942-488a-4421-8698-a179264ff43a",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "51fbe408-806b-4c2f-b6f1-62943e4c57c6"
        },
        "item": {
          "id": "99d78b92-acfa-421c-88a9-01b80fd5ea46",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "98b40970-b69b-4381-ae70-2f9aa2f96dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9dfd8d-791c-4a8b-a548-c13e04979a01",
        "cursor": {
          "ref": "b747b4bb-6b32-4035-a6d4-0c8e8fe5ee15",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9931b9c7-5dc9-4e51-8f7f-17da51488eef"
        },
        "item": {
          "id": "ee9dfd8d-791c-4a8b-a548-c13e04979a01",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "82f4142c-3ee0-4f09-a217-8e9c29ccb677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b52fd94-dd5f-462f-aaea-a3d2a6df67b1",
        "cursor": {
          "ref": "19935316-72f0-43dc-a65c-02937064c58d",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "0b8a7266-10b0-4b8a-b63d-cfe87208ed88"
        },
        "item": {
          "id": "2b52fd94-dd5f-462f-aaea-a3d2a6df67b1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "197867ae-ebea-46b3-9f59-6c4fe4130bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ce0cab-a758-4586-8868-c642b9701465",
        "cursor": {
          "ref": "8e53b82e-666c-4760-95ff-e366fb4a585f",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "95f23173-2c28-491d-8705-8dd28a9f8690"
        },
        "item": {
          "id": "07ce0cab-a758-4586-8868-c642b9701465",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d2277c2e-7f52-419b-a183-52775d8fbdd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c992eb21-5df3-4241-abd7-16626235132a",
        "cursor": {
          "ref": "0f3c142a-0358-488c-921a-d311f23ab195",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5eb1b61b-2cc9-462a-bc85-2b0ae6236b97"
        },
        "item": {
          "id": "c992eb21-5df3-4241-abd7-16626235132a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "55f90424-a240-4b7e-85bb-8558a0e608aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91db6b93-9ebd-42a2-af74-019425355484",
        "cursor": {
          "ref": "7c7d3f16-30e5-4d50-9ae7-ed5098ac0907",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "91cad7ab-1fdc-465b-ab64-9515b4839682"
        },
        "item": {
          "id": "91db6b93-9ebd-42a2-af74-019425355484",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2c9f55a6-d960-46a8-a937-ea1192fbb64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e93df8c-b196-46e2-a1a9-a90c0726d43d",
        "cursor": {
          "ref": "1d0e4088-dd2c-4d88-9e87-cd55f1beb999",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2b11e6e0-830f-4516-bbd2-73b599e10e5e"
        },
        "item": {
          "id": "4e93df8c-b196-46e2-a1a9-a90c0726d43d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f4581b46-3e63-4dab-a3df-cb38be49a901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4636c4-fccf-46c0-b1a7-4c8ea5b4f7c0",
        "cursor": {
          "ref": "534ea538-c8ba-43a9-b561-27125182273a",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "32cdad9c-2052-43ec-8dcd-cdc72e2ab4ab"
        },
        "item": {
          "id": "ec4636c4-fccf-46c0-b1a7-4c8ea5b4f7c0",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f580afcf-57eb-44bc-989b-5677cfdbdc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97402e9d-7332-47e8-a3d1-38ba75b94226",
        "cursor": {
          "ref": "9c451546-b373-4bb2-8716-4a04e8b912d7",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "c1c4d7f3-6164-448b-8e10-108a4086cc10"
        },
        "item": {
          "id": "97402e9d-7332-47e8-a3d1-38ba75b94226",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8cbff7e5-28fd-4860-ad19-ab50e3c7e700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc313dd-fb56-4ece-b4d1-18d3b811501b",
        "cursor": {
          "ref": "78dd9161-8183-40e5-8b7d-fe6b732724b7",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "900e99b3-d1e7-4ce7-9281-77b786bf1992"
        },
        "item": {
          "id": "9bc313dd-fb56-4ece-b4d1-18d3b811501b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2fa5cb6d-f9af-4930-8f21-3994c4859567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cad14035-f212-4cd4-bdfb-10faab21bffc",
        "cursor": {
          "ref": "2b7ab295-a0a2-4f7a-a73f-d0a422c23993",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "c7c141dd-ce3c-4335-90c2-6560c9fb8148"
        },
        "item": {
          "id": "cad14035-f212-4cd4-bdfb-10faab21bffc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b31b3dbd-46de-4b65-b226-530dda107664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636338db-2a04-44f5-b3b0-51373b8c3a92",
        "cursor": {
          "ref": "19cfc391-c0f4-44c9-96c0-7d2d9132284c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f41cef8b-ccef-476d-a017-57708488876a"
        },
        "item": {
          "id": "636338db-2a04-44f5-b3b0-51373b8c3a92",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2627e246-9fc4-471f-8e04-2c15cb3423c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dcd94cf-39a6-4ef2-89ac-00fd399dd789",
        "cursor": {
          "ref": "8c5d81e1-8b7c-498e-9747-7e676281902a",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "348307da-5eea-4970-9283-45c3e39e324b"
        },
        "item": {
          "id": "9dcd94cf-39a6-4ef2-89ac-00fd399dd789",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "73ea934c-e5ac-4f97-bbbb-9ecbaf8e9990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d538cb3b-0b31-404b-80be-17ff3d8f18cc",
        "cursor": {
          "ref": "d2b4fbfc-2c65-406c-aa9d-b3150fb41980",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "937fd12b-6ac9-4de0-820b-902a65bd693d"
        },
        "item": {
          "id": "d538cb3b-0b31-404b-80be-17ff3d8f18cc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3e3ede79-4e6a-4de7-abea-de414e4ab9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5252efc-88de-4caa-9cc2-c21edd96aab9",
        "cursor": {
          "ref": "448531e0-d057-44c0-a861-cada60e59fa5",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "065f19ba-ab44-49a7-9359-cea760d78326"
        },
        "item": {
          "id": "e5252efc-88de-4caa-9cc2-c21edd96aab9",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "9aff7220-a05f-45ff-b0b3-d0e7e19d3427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c20178-bfbe-4d60-a0eb-fed69f58d98f",
        "cursor": {
          "ref": "342aa617-8fb7-46e0-8e54-746b6972c2d0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "693602a7-a810-491b-9214-29934fd7cefa"
        },
        "item": {
          "id": "04c20178-bfbe-4d60-a0eb-fed69f58d98f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "205a4478-e01f-4e40-9bc0-409a76cb1b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14a7b420-f8cf-4c00-bd87-89f3d4ad89b8",
        "cursor": {
          "ref": "6813807b-b86c-4918-ba07-cf9c41a28835",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cc0f1104-a2d1-4d5d-8037-403f872fb14b"
        },
        "item": {
          "id": "14a7b420-f8cf-4c00-bd87-89f3d4ad89b8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "bc9734f3-28d9-4010-aced-ad8a0336e358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cb559a-6552-483d-986c-7152545fd958",
        "cursor": {
          "ref": "48807dbc-1bfa-4c24-9083-b71625969341",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e43df547-5a3d-4eba-b503-a9becfe9c4fa"
        },
        "item": {
          "id": "36cb559a-6552-483d-986c-7152545fd958",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "74ad13e5-9396-4213-9ae2-d0160250e33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14abae09-e920-4619-912b-e29fe03e08ad",
        "cursor": {
          "ref": "7aa908ea-435d-490d-bc1f-44d16da5150d",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8a2bb0c7-bd75-42a9-83ec-ae26517784c0"
        },
        "item": {
          "id": "14abae09-e920-4619-912b-e29fe03e08ad",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a606520a-07ad-4d69-89cb-d5ce22d9517d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc385686-50a3-4a3a-9dda-426e9cbd12c8",
        "cursor": {
          "ref": "5aaa5980-0003-4a47-88cb-1299f873eb2c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "883c8ae2-79b6-458b-9428-fdd6737666a8"
        },
        "item": {
          "id": "fc385686-50a3-4a3a-9dda-426e9cbd12c8",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a39fb11e-de08-4989-83d4-92d5427e120e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c77d11b-7abe-4b53-b0eb-8c53a2d7a5f7",
        "cursor": {
          "ref": "7357910e-1e28-478b-b60d-f8eda4387546",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e7aa4503-eaab-4ff6-bc24-16d883c08515"
        },
        "item": {
          "id": "6c77d11b-7abe-4b53-b0eb-8c53a2d7a5f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "29ceecd0-574f-4a83-a3b5-8a102a613cec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9b03c4-3b7e-4160-9f17-f1fdcc2435d8",
        "cursor": {
          "ref": "24e16ce1-07e5-4ea0-accc-e13fdfa97010",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4825d793-b0fb-4b82-977e-31d2df2a1d7a"
        },
        "item": {
          "id": "5b9b03c4-3b7e-4160-9f17-f1fdcc2435d8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ae2cdde9-b03d-4567-97c3-eed3aebae292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a1bdeb-0ed5-406e-86ff-c19ffc6ea980",
        "cursor": {
          "ref": "f4484a39-b15c-4624-8849-1b07d9171219",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "766be033-3a82-4c12-8f43-b8335c7cb943"
        },
        "item": {
          "id": "77a1bdeb-0ed5-406e-86ff-c19ffc6ea980",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ceac72f5-f988-45a1-bac2-705b4cc0aea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d9954b-21ce-442b-b14e-55240992b750",
        "cursor": {
          "ref": "6920af9f-e4a2-4c3f-990c-1fe51d2fda49",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e0a04203-5d8a-4cab-b7fe-ceebe8390522"
        },
        "item": {
          "id": "75d9954b-21ce-442b-b14e-55240992b750",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3724a30b-e916-45da-bfc4-c471d6d232f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bf8081-3a9f-4ebc-90ec-55e5cef6c494",
        "cursor": {
          "ref": "915294af-9ec5-4c0e-b6d3-81f0cc50becb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "61235bd8-ec85-4e28-84e1-c4cfff25f77e"
        },
        "item": {
          "id": "27bf8081-3a9f-4ebc-90ec-55e5cef6c494",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b3a5b150-1da3-4227-938c-8030c501f58b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8d4da4-7744-4b91-b9c4-fee57285fdfb",
        "cursor": {
          "ref": "88ab0f6f-41a6-419e-90c6-2ecd2b3ba77b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "9d537222-5bca-4186-a689-fa1ff4ca50f1"
        },
        "item": {
          "id": "9d8d4da4-7744-4b91-b9c4-fee57285fdfb",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0f49cbe0-65a7-44be-99e1-fdbbe7c522c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a348aca2-12e9-405c-b87c-b1db10a99d04",
        "cursor": {
          "ref": "17fd2407-bb14-49b9-b6f3-b51131e4f44c",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fcc3bea0-bc58-481b-92a1-9331cf75aa9b"
        },
        "item": {
          "id": "a348aca2-12e9-405c-b87c-b1db10a99d04",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4d14a1d1-0481-4393-a328-68306f4f6057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897cc91f-aea0-4aab-85ff-a36b80853964",
        "cursor": {
          "ref": "098153ee-15d5-4911-b41d-a47d2fb3ca06",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2223d942-6d5d-46ca-a68c-f423434c48ee"
        },
        "item": {
          "id": "897cc91f-aea0-4aab-85ff-a36b80853964",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "d16300b7-2fa0-455a-9a78-62729cc1d30a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e687c19d-0889-4640-97b9-7834ccf64132",
        "cursor": {
          "ref": "2f53cbd6-f157-41d4-9b9a-e8319780ee6d",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "d3ccfc27-7bfe-40b0-adb9-116003192d2a"
        },
        "item": {
          "id": "e687c19d-0889-4640-97b9-7834ccf64132",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3c0a7ae5-aec8-4164-8170-f5c75fd7c42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398c19e1-7405-4fca-9c30-b62f5ac65244",
        "cursor": {
          "ref": "64fd0ac4-1f85-4235-95fd-99a38a1d4802",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "e2f3621f-1088-4c66-8c2b-2a616cfc5374"
        },
        "item": {
          "id": "398c19e1-7405-4fca-9c30-b62f5ac65244",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c43e4f23-8148-4d06-8208-475c09e9eefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "752d3172-6981-4591-afca-3a31515839aa",
        "cursor": {
          "ref": "9404d940-a180-4fd6-b3a6-f636d6f1831c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bdbb5398-3f48-4fb9-b936-02a8a0b53ac4"
        },
        "item": {
          "id": "752d3172-6981-4591-afca-3a31515839aa",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "18343db6-41b6-4913-b10f-8b20b83c8c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9787158-472b-4d7a-a17d-7b5cb7e22486",
        "cursor": {
          "ref": "250d4d40-932b-43ea-9fc1-97c12aadf2c4",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d0e271e1-088b-4a99-98b6-d22cc5de46d3"
        },
        "item": {
          "id": "c9787158-472b-4d7a-a17d-7b5cb7e22486",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4e5058d3-64e9-4a52-b422-a5ad425a5bd6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f1b32cb-831a-4172-9e9e-b657805f98a8",
        "cursor": {
          "ref": "96cae415-e9c8-412a-a80d-e0c3f3818094",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "36ca9f37-39ce-4ba8-9bab-8cd33779772e"
        },
        "item": {
          "id": "6f1b32cb-831a-4172-9e9e-b657805f98a8",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "85794408-dcb1-4a88-8344-ba9d5025f8a7",
          "status": "OK",
          "code": 200,
          "responseTime": 116,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2cf6c9-4e58-4157-a8ee-ca87e744022c",
        "cursor": {
          "ref": "243376c3-87aa-4bcf-aae3-8acf01228468",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "ce99e193-b02b-42a7-8eb1-36d1879ae8c6"
        },
        "item": {
          "id": "5a2cf6c9-4e58-4157-a8ee-ca87e744022c",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2d3b4f64-1092-4fb4-8f48-c852db05ce5b",
          "status": "OK",
          "code": 200,
          "responseTime": 3368,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aa9e48-916c-42c5-b597-944ecc121322",
        "cursor": {
          "ref": "af537059-1255-4825-a186-9a158a346d02",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "159c6e53-f680-4554-9239-a60f7322d929"
        },
        "item": {
          "id": "b4aa9e48-916c-42c5-b597-944ecc121322",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8f5af416-102f-4caf-ac51-3c120ddf6272",
          "status": "OK",
          "code": 200,
          "responseTime": 2308,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f52a588-9b36-49d2-9db4-335e41adc939",
        "cursor": {
          "ref": "7845c1fa-089d-4252-8f68-131b10b69771",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5d8f186f-29cc-4970-b06d-3eb8c7db51fb"
        },
        "item": {
          "id": "8f52a588-9b36-49d2-9db4-335e41adc939",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c353aa52-061c-4995-bca8-016fe057f17a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f52a588-9b36-49d2-9db4-335e41adc939",
        "cursor": {
          "ref": "7845c1fa-089d-4252-8f68-131b10b69771",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "5d8f186f-29cc-4970-b06d-3eb8c7db51fb"
        },
        "item": {
          "id": "8f52a588-9b36-49d2-9db4-335e41adc939",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c353aa52-061c-4995-bca8-016fe057f17a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3761896d-87ee-423e-8193-1eb9f2caf16b",
        "cursor": {
          "ref": "6a22008c-80e9-44a3-97f8-c44bfd72c29f",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "5076797a-647f-48ca-b05d-01744bf93a4e"
        },
        "item": {
          "id": "3761896d-87ee-423e-8193-1eb9f2caf16b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ef4595d5-75bd-4e56-b872-efe9374ff122",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e20391f-5a9c-4d12-944d-4936ffb65252",
        "cursor": {
          "ref": "734d8924-c58d-43e0-92ba-62c4151d061a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "375caa0e-a6ff-4880-b961-97e0d183a009"
        },
        "item": {
          "id": "7e20391f-5a9c-4d12-944d-4936ffb65252",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7084e584-e6ea-41ea-b219-1c17c906f1c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}